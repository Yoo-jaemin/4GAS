Version 3.2 HI-TECH Software Intermediate Code
"31 bsp/TES0902.h
[s S3 `Quc -> 2 `i `uc 1 `uc 1 `Quc -> 8 `i `Quc -> 2 `i ]
[n S3 . sync cmd len data crc ]
"46 .\board.h
[u S4 `i 1 `ui 1 `Quc -> 2 `i ]
[n S4 . i16_data u16_data u8_Data ]
"51 bsp/TES0902.h
[v _Calculate_CRC16 `(ui ~T0 @X0 0 ef2`*uc`i ]
"38 bsp/usart.h
[v _usart_writeBytes `(v ~T0 @X0 0 ef2`*Cuc`Cuc ]
[; ;xc8\pic\include\__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;buffer.h: 6: typedef struct buff_queue
[; ;buffer.h: 7: {
[; ;buffer.h: 8: uint8_t size;
[; ;buffer.h: 9: int8_t read_pos;
[; ;buffer.h: 10: int8_t write_pos;
[; ;buffer.h: 11: uint8_t buffer[64];
[; ;buffer.h: 12: } s_Queue;
[; ;buffer.h: 18: void buffer_init(s_Queue* queue);
[; ;buffer.h: 19: void buffer_en_queue(s_Queue* queue, uint8_t ch);
[; ;buffer.h: 20: uint8_t buffer_de_queue(s_Queue* queue);
[; ;buffer.h: 21: bool buffer_de_queue_bool(s_Queue* queue, uint8_t* ch);
[; ;_string.h: 10: unsigned _strcpy(char* dest, const char* source);
[; ;_string.h: 11: void _strncpy(char *_to, const char *_from, int _n);
[; ;_string.h: 12: unsigned _strlen(const char* source);
[; ;_string.h: 13: void _strcat(char* dest, const char* source);
[; ;_string.h: 15: unsigned char _strncmp(const char* src1, const char* src2, int n, int i);
[; ;_string.h: 16: void _strclr(char* dest, int n);
[; ;_string.h: 18: unsigned char _isdigit(const char* src, int n);
[; ;usart.h: 32: void usart_init(uint32_t baudrate);
[; ;usart.h: 33: bool usart_tx_empty(void);
[; ;usart.h: 34: void usart_putc(uint8_t);
[; ;usart.h: 35: bool usart_rx_ready(void);
[; ;usart.h: 36: uint8_t usart_getc(void);
[; ;usart.h: 38: void usart_writeBytes(const uint8_t* wrptr, const uint8_t len);
[; ;usart.h: 39: bool usart_readByte(uint8_t* byte);
[; ;usart.h: 40: bool usart_readChar(char* ch);
[; ;usart.h: 43: void uart_getBuffer(void);
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;TES0902.h: 31: typedef struct {
[; ;TES0902.h: 32: __pack uint8_t sync[2];
[; ;TES0902.h: 33: uint8_t cmd;
[; ;TES0902.h: 34: uint8_t len;
[; ;TES0902.h: 35: __pack uint8_t data[8];
[; ;TES0902.h: 36: __pack uint8_t crc[2];
[; ;TES0902.h: 37: } s_Tes0902_frame;
[; ;TES0902.h: 44: void CMD_get_ppm(void);
[; ;TES0902.h: 45: void CMD_manual_cal(void);
[; ;TES0902.h: 46: void CMD_set_ABC_on(uint8_t value);
[; ;TES0902.h: 48: void CMD_get_version(void);
[; ;TES0902.h: 49: void CMD_get_serialNumber(void);
[; ;TES0902.h: 51: uint16_t Calculate_CRC16(uint8_t *crc, int crc_length);
[; ;TES0902.h: 52: bool CRC_check(void);
[; ;TES0902.h: 54: void tes0902_polling_mode(void);
[; ;TES0902.h: 55: void tes0902_ABC_OFF(uint8_t status);
[; ;board.h: 46: typedef union {
[; ;board.h: 47: int16_t i16_data;
[; ;board.h: 48: uint16_t u16_data;
[; ;board.h: 49: __pack uint8_t u8_Data[2];
[; ;board.h: 50: } u_2byte_Conv;
[; ;board.h: 52: enum {
[; ;board.h: 53: CELSIUS,
[; ;board.h: 54: FAHRENHEIT
[; ;board.h: 55: };
[; ;board.h: 57: enum {
[; ;board.h: 58: RAW_MODE,
[; ;board.h: 59: FIL_MODE
[; ;board.h: 60: };
[; ;board.h: 62: enum {
[; ;board.h: 63: GAS_CH0,
[; ;board.h: 64: GAS_CH1,
[; ;board.h: 65: GAS_CH2,
[; ;board.h: 66: GAS_CH3
[; ;board.h: 67: };
[; ;board.h: 69: enum {
[; ;board.h: 70: USB_NONE,
[; ;board.h: 71: USB_DETACHED,
[; ;board.h: 72: USB_ATTACHED
[; ;board.h: 73: };
[; ;board.h: 75: enum {
[; ;board.h: 76: TEMP_CMP_OFF,
[; ;board.h: 77: TEMP_CMP_ON
[; ;board.h: 78: };
[; ;board.h: 80: enum {
[; ;board.h: 81: OFF,
[; ;board.h: 82: ON
[; ;board.h: 83: };
[; ;board.h: 143: void write_command(const uint8_t* buff);
[; ;board.h: 144: uint16_t* get_product_desc();
"20 bsp/TES0902.c
[v _g_rDataFormat `S3 ~T0 @X0 1 e ]
[; ;TES0902.c: 20: s_Tes0902_frame g_rDataFormat;
"21
[v _g_Wbuff `uc ~T0 @X0 -> 8 `i e ]
[; ;TES0902.c: 21: uint8_t g_Wbuff[8];
"22
[v _convData `S4 ~T0 @X0 1 e ]
[; ;TES0902.c: 22: u_2byte_Conv convData;
"24
[v _b `uc ~T0 @X0 -> 64 `i e ]
[; ;TES0902.c: 24: uint8_t b[64];
"27
[v _CMD_get_ppm `(v ~T0 @X0 1 ef ]
"28
{
[; ;TES0902.c: 27: void CMD_get_ppm(void)
[; ;TES0902.c: 28: {
[e :U _CMD_get_ppm ]
[f ]
"29
[v _len `uc ~T0 @X0 1 a ]
[; ;TES0902.c: 29: uint8_t len = 0;
[e = _len -> -> 0 `i `uc ]
[; ;TES0902.c: 30: g_Wbuff[len++] = 0xAA;
"30
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 170 `i `uc ]
[; ;TES0902.c: 31: g_Wbuff[len++] = 0x55;
"31
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 85 `i `uc ]
[; ;TES0902.c: 32: g_Wbuff[len++] = 0x14;
"32
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 20 `i `uc ]
[; ;TES0902.c: 33: g_Wbuff[len++] = 0x00;
"33
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 0 `i `uc ]
[; ;TES0902.c: 34: convData.u16_data = Calculate_CRC16(g_Wbuff, len);
"34
[e = . _convData 1 ( _Calculate_CRC16 (2 , &U _g_Wbuff -> _len `i ]
[; ;TES0902.c: 35: g_Wbuff[len++] = convData.u8_Data[0];
"35
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 36: g_Wbuff[len++] = convData.u8_Data[1];
"36
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 38: usart_writeBytes(g_Wbuff, len);
"38
[e ( _usart_writeBytes (2 , -> &U _g_Wbuff `*Cuc _len ]
[; ;TES0902.c: 41: }
"41
[e :UE 5 ]
}
"43
[v _CMD_manual_cal `(v ~T0 @X0 1 ef ]
"44
{
[; ;TES0902.c: 43: void CMD_manual_cal(void)
[; ;TES0902.c: 44: {
[e :U _CMD_manual_cal ]
[f ]
"45
[v _len `uc ~T0 @X0 1 a ]
[; ;TES0902.c: 45: uint8_t len = 0;
[e = _len -> -> 0 `i `uc ]
[; ;TES0902.c: 46: g_Wbuff[len++] = 0xAA;
"46
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 170 `i `uc ]
[; ;TES0902.c: 47: g_Wbuff[len++] = 0x55;
"47
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 85 `i `uc ]
[; ;TES0902.c: 48: g_Wbuff[len++] = 0x4C;
"48
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 76 `i `uc ]
[; ;TES0902.c: 49: g_Wbuff[len++] = 0x00;
"49
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 0 `i `uc ]
[; ;TES0902.c: 50: convData.u16_data = Calculate_CRC16(g_Wbuff, len);
"50
[e = . _convData 1 ( _Calculate_CRC16 (2 , &U _g_Wbuff -> _len `i ]
[; ;TES0902.c: 51: g_Wbuff[len++] = convData.u8_Data[0];
"51
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 52: g_Wbuff[len++] = convData.u8_Data[1];
"52
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 54: usart_writeBytes(g_Wbuff, len);
"54
[e ( _usart_writeBytes (2 , -> &U _g_Wbuff `*Cuc _len ]
[; ;TES0902.c: 57: }
"57
[e :UE 6 ]
}
"59
[v _CMD_set_ABC_on `(v ~T0 @X0 1 ef1`uc ]
"60
{
[; ;TES0902.c: 59: void CMD_set_ABC_on(uint8_t value)
[; ;TES0902.c: 60: {
[e :U _CMD_set_ABC_on ]
"59
[v _value `uc ~T0 @X0 1 r1 ]
"60
[f ]
"61
[v _len `uc ~T0 @X0 1 a ]
[; ;TES0902.c: 61: uint8_t len = 0;
[e = _len -> -> 0 `i `uc ]
[; ;TES0902.c: 62: g_Wbuff[len++] = 0xAA;
"62
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 170 `i `uc ]
[; ;TES0902.c: 63: g_Wbuff[len++] = 0x55;
"63
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 85 `i `uc ]
[; ;TES0902.c: 64: g_Wbuff[len++] = 0x22;
"64
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 34 `i `uc ]
[; ;TES0902.c: 65: g_Wbuff[len++] = 0x02;
"65
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 2 `i `uc ]
[; ;TES0902.c: 66: g_Wbuff[len++] = 0x00;
"66
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 0 `i `uc ]
[; ;TES0902.c: 67: g_Wbuff[len++] = value;
"67
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux _value ]
[; ;TES0902.c: 68: convData.u16_data = Calculate_CRC16(g_Wbuff, len);
"68
[e = . _convData 1 ( _Calculate_CRC16 (2 , &U _g_Wbuff -> _len `i ]
[; ;TES0902.c: 69: g_Wbuff[len++] = convData.u8_Data[0];
"69
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 70: g_Wbuff[len++] = convData.u8_Data[1];
"70
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 71: usart_writeBytes(g_Wbuff, len);
"71
[e ( _usart_writeBytes (2 , -> &U _g_Wbuff `*Cuc _len ]
[; ;TES0902.c: 75: }
"75
[e :UE 7 ]
}
"77
[v _CMD_get_version `(v ~T0 @X0 1 ef ]
"78
{
[; ;TES0902.c: 77: void CMD_get_version(void)
[; ;TES0902.c: 78: {
[e :U _CMD_get_version ]
[f ]
"79
[v _len `uc ~T0 @X0 1 a ]
[; ;TES0902.c: 79: uint8_t len = 0;
[e = _len -> -> 0 `i `uc ]
[; ;TES0902.c: 80: g_Wbuff[len++] = 0xAA;
"80
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 170 `i `uc ]
[; ;TES0902.c: 81: g_Wbuff[len++] = 0x55;
"81
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 85 `i `uc ]
[; ;TES0902.c: 82: g_Wbuff[len++] = 0x10;
"82
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 16 `i `uc ]
[; ;TES0902.c: 83: g_Wbuff[len++] = 0x00;
"83
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 0 `i `uc ]
[; ;TES0902.c: 84: convData.u16_data = Calculate_CRC16(g_Wbuff, len);
"84
[e = . _convData 1 ( _Calculate_CRC16 (2 , &U _g_Wbuff -> _len `i ]
[; ;TES0902.c: 85: g_Wbuff[len++] = convData.u8_Data[0];
"85
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 86: g_Wbuff[len++] = convData.u8_Data[1];
"86
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 88: usart_writeBytes(g_Wbuff, len);
"88
[e ( _usart_writeBytes (2 , -> &U _g_Wbuff `*Cuc _len ]
[; ;TES0902.c: 91: }
"91
[e :UE 8 ]
}
"93
[v _CMD_get_serialNumber `(v ~T0 @X0 1 ef ]
"94
{
[; ;TES0902.c: 93: void CMD_get_serialNumber(void)
[; ;TES0902.c: 94: {
[e :U _CMD_get_serialNumber ]
[f ]
"95
[v _len `uc ~T0 @X0 1 a ]
[; ;TES0902.c: 95: uint8_t len = 0;
[e = _len -> -> 0 `i `uc ]
[; ;TES0902.c: 96: g_Wbuff[len++] = 0xAA;
"96
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 170 `i `uc ]
[; ;TES0902.c: 97: g_Wbuff[len++] = 0x55;
"97
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 85 `i `uc ]
[; ;TES0902.c: 98: g_Wbuff[len++] = 0x12;
"98
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 18 `i `uc ]
[; ;TES0902.c: 99: g_Wbuff[len++] = 0x00;
"99
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux -> -> 0 `i `uc ]
[; ;TES0902.c: 100: convData.u16_data = Calculate_CRC16(g_Wbuff, len);
"100
[e = . _convData 1 ( _Calculate_CRC16 (2 , &U _g_Wbuff -> _len `i ]
[; ;TES0902.c: 101: g_Wbuff[len++] = convData.u8_Data[0];
"101
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 102: g_Wbuff[len++] = convData.u8_Data[1];
"102
[e = *U + &U _g_Wbuff * -> ++ _len -> -> 1 `i `uc `ux -> -> # *U &U _g_Wbuff `ui `ux *U + &U . _convData 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux ]
[; ;TES0902.c: 104: usart_writeBytes(g_Wbuff, len);
"104
[e ( _usart_writeBytes (2 , -> &U _g_Wbuff `*Cuc _len ]
[; ;TES0902.c: 107: }
"107
[e :UE 9 ]
}
"109
[v _Calculate_CRC16 `(ui ~T0 @X0 1 ef2`*uc`i ]
"110
{
[; ;TES0902.c: 109: uint16_t Calculate_CRC16 (uint8_t *crc, int crc_length)
[; ;TES0902.c: 110: {
[e :U _Calculate_CRC16 ]
"109
[v _crc `*uc ~T0 @X0 1 r1 ]
[v _crc_length `i ~T0 @X0 1 r2 ]
"110
[f ]
"111
[v _ret `ui ~T0 @X0 1 a ]
[; ;TES0902.c: 111: uint16_t ret = 0xffff, polynomial = 0xA001;
[e = _ret -> 65535 `ui ]
[v _polynomial `ui ~T0 @X0 1 a ]
[e = _polynomial -> 40961 `ui ]
"112
[v _shift `i ~T0 @X0 1 a ]
[; ;TES0902.c: 112: int shift = 0x0;
[e = _shift -> 0 `i ]
[; ;TES0902.c: 113: for (int i= crc_length -1; i >= 0; i--)
"113
{
[v _i `i ~T0 @X0 1 a ]
[e = _i - _crc_length -> 1 `i ]
[e $ >= _i -> 0 `i 11  ]
[e $U 12  ]
"114
[e :U 11 ]
[; ;TES0902.c: 114: {
{
"115
[v _code `ui ~T0 @X0 1 a ]
[; ;TES0902.c: 115: uint16_t code = (uint16_t)(crc[crc_length -1 -i] & 0xff);
[e = _code -> & -> *U + _crc * -> - - _crc_length -> 1 `i _i `x -> -> # *U _crc `i `x `i -> 255 `i `ui ]
[; ;TES0902.c: 116: ret = ret ^ code ;
"116
[e = _ret ^ _ret _code ]
[; ;TES0902.c: 117: shift = 0x0;
"117
[e = _shift -> 0 `i ]
[; ;TES0902.c: 118: while (shift <= 7)
"118
[e $U 14  ]
[e :U 15 ]
[; ;TES0902.c: 119: {
"119
{
[; ;TES0902.c: 120: if (ret & 0x1) {
"120
[e $ ! != & _ret -> -> 1 `i `ui -> -> 0 `i `ui 17  ]
{
[; ;TES0902.c: 121: ret = ret >> 1;
"121
[e = _ret >> _ret -> 1 `i ]
[; ;TES0902.c: 122: ret = ret ^ polynomial;
"122
[e = _ret ^ _ret _polynomial ]
"123
}
[; ;TES0902.c: 123: } else
[e $U 18  ]
[e :U 17 ]
[; ;TES0902.c: 124: ret = ret >> 1;
"124
[e = _ret >> _ret -> 1 `i ]
[e :U 18 ]
[; ;TES0902.c: 125: shift++;
"125
[e ++ _shift -> 1 `i ]
"126
}
[e :U 14 ]
"118
[e $ <= _shift -> 7 `i 15  ]
[e :U 16 ]
"127
}
"113
[e -- _i -> 1 `i ]
[e $ >= _i -> 0 `i 11  ]
[e :U 12 ]
"127
}
[; ;TES0902.c: 126: }
[; ;TES0902.c: 127: }
[; ;TES0902.c: 128: return ret;
"128
[e ) _ret ]
[e $UE 10  ]
[; ;TES0902.c: 129: }
"129
[e :UE 10 ]
}
"131
[v _CRC_check `(uc ~T0 @X0 1 ef ]
"132
{
[; ;TES0902.c: 131: bool CRC_check(void)
[; ;TES0902.c: 132: {
[e :U _CRC_check ]
[f ]
"133
[v _crcLen `uc ~T0 @X0 1 a ]
"134
[v _crc `uc ~T0 @X0 + -> 8 `i -> 4 `i a ]
[; ;TES0902.c: 133: uint8_t crcLen;
[; ;TES0902.c: 134: uint8_t crc[8 +4];
[; ;TES0902.c: 135: crcLen = g_rDataFormat.len +4;
"135
[e = _crcLen -> + -> . _g_rDataFormat 2 `i -> 4 `i `uc ]
[; ;TES0902.c: 137: crc[0] = g_rDataFormat.sync[0];
"137
[e = *U + &U _crc * -> -> -> 0 `i `ui `ux -> -> # *U &U _crc `ui `ux *U + &U . _g_rDataFormat 0 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _g_rDataFormat 0 `ui `ux ]
[; ;TES0902.c: 138: crc[1] = g_rDataFormat.sync[1];
"138
[e = *U + &U _crc * -> -> -> 1 `i `ui `ux -> -> # *U &U _crc `ui `ux *U + &U . _g_rDataFormat 0 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _g_rDataFormat 0 `ui `ux ]
[; ;TES0902.c: 139: crc[2] = g_rDataFormat.cmd;
"139
[e = *U + &U _crc * -> -> -> 2 `i `ui `ux -> -> # *U &U _crc `ui `ux . _g_rDataFormat 1 ]
[; ;TES0902.c: 140: crc[3] = g_rDataFormat.len;
"140
[e = *U + &U _crc * -> -> -> 3 `i `ui `ux -> -> # *U &U _crc `ui `ux . _g_rDataFormat 2 ]
[; ;TES0902.c: 142: if (crcLen > 4) {
"142
[e $ ! > -> _crcLen `i -> 4 `i 20  ]
{
[; ;TES0902.c: 143: for (uint8_t i = 0; i < g_rDataFormat.len; i++)
"143
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $U 24  ]
"144
[e :U 21 ]
[; ;TES0902.c: 144: crc[4+i] = g_rDataFormat.data[i];
[e = *U + &U _crc * -> -> + -> 4 `i -> _i `i `ui `ux -> -> # *U &U _crc `ui `ux *U + &U . _g_rDataFormat 3 * -> _i `ux -> -> # *U &U . _g_rDataFormat 3 `ui `ux ]
"143
[e ++ _i -> -> 1 `i `uc ]
[e :U 24 ]
[e $ < -> _i `i -> . _g_rDataFormat 2 `i 21  ]
[e :U 22 ]
"144
}
"145
}
[e :U 20 ]
[; ;TES0902.c: 145: }
[; ;TES0902.c: 147: convData.u16_data = Calculate_CRC16(crc, crcLen);
"147
[e = . _convData 1 ( _Calculate_CRC16 (2 , &U _crc -> _crcLen `i ]
[; ;TES0902.c: 149: if (g_rDataFormat.crc[0] == convData.u8_Data[0] && g_rDataFormat.crc[1] == convData.u8_Data[1])
"149
[e $ ! && == -> *U + &U . _g_rDataFormat 4 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _g_rDataFormat 4 `ui `ux `i -> *U + &U . _convData 2 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux `i == -> *U + &U . _g_rDataFormat 4 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _g_rDataFormat 4 `ui `ux `i -> *U + &U . _convData 2 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _convData 2 `ui `ux `i 25  ]
[; ;TES0902.c: 150: return 1;
"150
[e ) -> -> 1 `i `uc ]
[e $UE 19  ]
[e :U 25 ]
[; ;TES0902.c: 151: return 0;
"151
[e ) -> -> 0 `i `uc ]
[e $UE 19  ]
[; ;TES0902.c: 152: }
"152
[e :UE 19 ]
}
"154
[v _tes0902_polling_mode `(v ~T0 @X0 1 ef ]
"155
{
[; ;TES0902.c: 154: void tes0902_polling_mode(void)
[; ;TES0902.c: 155: {
[e :U _tes0902_polling_mode ]
[f ]
[; ;TES0902.c: 156: CMD_get_ppm();
"156
[e ( _CMD_get_ppm ..  ]
[; ;TES0902.c: 157: }
"157
[e :UE 26 ]
}
"159
[v _tes0902_ABC_OFF `(v ~T0 @X0 1 ef1`uc ]
"160
{
[; ;TES0902.c: 159: void tes0902_ABC_OFF(uint8_t status)
[; ;TES0902.c: 160: {
[e :U _tes0902_ABC_OFF ]
"159
[v _status `uc ~T0 @X0 1 r1 ]
"160
[f ]
[; ;TES0902.c: 161: CMD_set_ABC_on(status);
"161
[e ( _CMD_set_ABC_on (1 _status ]
[; ;TES0902.c: 162: }
"162
[e :UE 27 ]
}
