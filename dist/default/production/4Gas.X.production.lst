

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Feb 02 10:03:59 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26J50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	_FlashSignatureWord_const,global,ovrld,reloc=2,class=CODE,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=2
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1,group=2
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=3
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=2
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=3
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=3
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1,group=2
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1,group=2
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1,group=3
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1,group=2
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=2
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=2
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=2
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1,group=2
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1,group=2
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=3
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1,group=3
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=3
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=2
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=3
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1,group=2
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=2
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=3
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=2
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   223                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   224                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   225                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   226                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   227                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   228                           	dabs	1,0x400,48,_BDT
   229                           	dabs	1,0x438,8,_CtrlTrfData
   230                           	dabs	1,0x430,8,_SetupPkt
   231  0000                     
   232                           ; Version 2.32
   233                           ; Generated 23/11/2020 GMT
   234                           ; 
   235                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   236                           ; All rights reserved.
   237                           ; 
   238                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   239                           ; 
   240                           ; Redistribution and use in source and binary forms, with or without modification, are
   241                           ; permitted provided that the following conditions are met:
   242                           ; 
   243                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   244                           ;        conditions and the following disclaimer.
   245                           ; 
   246                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   247                           ;        of conditions and the following disclaimer in the documentation and/or other
   248                           ;        materials provided with the distribution. Publication is not required when
   249                           ;        this file is used in an embedded application.
   250                           ; 
   251                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   252                           ;        software without specific prior written permission.
   253                           ; 
   254                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   255                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   256                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   257                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   258                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   259                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   260                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   261                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   262                           ; 
   263                           ; 
   264                           ; Code-generator required, PIC18F26J50 Definitions
   265                           ; 
   266                           ; SFR Addresses
   267  0000                     
   268                           	psect	idataBANK1
   269  00F1A2                     __pidataBANK1:
   270                           	callstack 0
   271                           
   272                           ;initializer for ads1115_SetUp@F158
   273  00F1A2  00                 	db	0
   274  00F1A3  03                 	db	3
   275  00F1A4  00                 	db	0
   276                           
   277                           ;initializer for _ADS1115_I2C_ADDRESS
   278  00F1A5  94                 	db	148
   279  00F1A6  94                 	db	148
   280  00F1A7  96                 	db	150
   281                           
   282                           	psect	idataBANK4
   283  00EC12                     __pidataBANK4:
   284                           	callstack 0
   285                           
   286                           ;initializer for _sd002
   287  00EC12  34                 	db	52
   288  00EC13  03                 	db	3
   289  00EC14  0055               	dw	85
   290  00EC16  0041               	dw	65
   291  00EC18  005F               	dw	95
   292  00EC1A  0053               	dw	83
   293  00EC1C  0045               	dw	69
   294  00EC1E  0052               	dw	82
   295  00EC20  0049               	dw	73
   296  00EC22  0045               	dw	69
   297  00EC24  0053               	dw	83
   298  00EC26  005F               	dw	95
   299  00EC28  005F               	dw	95
   300  00EC2A  00FF               	dw	255
   301  00EC2C  00FF               	dw	255
   302  00EC2E  00FF               	dw	255
   303  00EC30  00FF               	dw	255
   304  00EC32  00FF               	dw	255
   305  00EC34  00FF               	dw	255
   306  00EC36  00FF               	dw	255
   307  00EC38  00FF               	dw	255
   308  00EC3A  0000               	dw	0
   309  00EC3C  00                 	db	0
   310  00EC3D  00                 	db	0
   311  00EC3E  00                 	db	0
   312  00EC3F  00                 	db	0
   313  00EC40  00                 	db	0
   314  00EC41  00                 	db	0
   315  00EC42  00                 	db	0
   316  00EC43  00                 	db	0
   317  00EC44  00                 	db	0
   318  00EC45  00                 	db	0
   319                           
   320                           	psect	mediumconst
   321  002084                     __pmediumconst:
   322                           	callstack 0
   323  002084  00                 	db	0
   324  002085                     __powers_:
   325                           	callstack 0
   326  002085  0000               	dw	0
   327  002087  3F80               	dw	16256
   328  002089  0000               	dw	0
   329  00208B  4120               	dw	16672
   330  00208D  0000               	dw	0
   331  00208F  42C8               	dw	17096
   332  002091  0000               	dw	0
   333  002093  447A               	dw	17530
   334  002095  4000               	dw	16384
   335  002097  461C               	dw	17948
   336  002099  5000               	dw	20480
   337  00209B  47C3               	dw	18371
   338  00209D  2400               	dw	9216
   339  00209F  4974               	dw	18804
   340  0020A1  9680               	dw	38528
   341  0020A3  4B18               	dw	19224
   342  0020A5  BC20               	dw	48160
   343  0020A7  4CBE               	dw	19646
   344  0020A9  6B28               	dw	27432
   345  0020AB  4E6E               	dw	20078
   346  0020AD  02F9               	dw	761
   347  0020AF  5015               	dw	20501
   348  0020B1  78EC               	dw	30956
   349  0020B3  60AD               	dw	24749
   350  0020B5  F2CA               	dw	62154
   351  0020B7  7149               	dw	29001
   352  0020B9                     __end_of__powers_:
   353                           	callstack 0
   354  0020B9                     __npowers_:
   355                           	callstack 0
   356  0020B9  0000               	dw	0
   357  0020BB  3F80               	dw	16256
   358  0020BD  CCCD               	dw	52429
   359  0020BF  3DCC               	dw	15820
   360  0020C1  D70A               	dw	55050
   361  0020C3  3C23               	dw	15395
   362  0020C5  126F               	dw	4719
   363  0020C7  3A83               	dw	14979
   364  0020C9  B717               	dw	46871
   365  0020CB  38D1               	dw	14545
   366  0020CD  C5AC               	dw	50604
   367  0020CF  3727               	dw	14119
   368  0020D1  37BD               	dw	14269
   369  0020D3  3586               	dw	13702
   370  0020D5  BF95               	dw	49045
   371  0020D7  33D6               	dw	13270
   372  0020D9  CC77               	dw	52343
   373  0020DB  322B               	dw	12843
   374  0020DD  705F               	dw	28767
   375  0020DF  3089               	dw	12425
   376  0020E1  E6FF               	dw	59135
   377  0020E3  2EDB               	dw	11995
   378  0020E5  E508               	dw	58632
   379  0020E7  1E3C               	dw	7740
   380  0020E9  4260               	dw	16992
   381  0020EB  0DA2               	dw	3490
   382  0020ED                     __end_of__npowers_:
   383                           	callstack 0
   384  0020ED                     _USB_SD_Ptr:
   385                           	callstack 0
   386  0020ED  44                 	db	low _sd000
   387  0020EE  23                 	db	high _sd000
   388  0020EF  8A                 	db	low _sd001
   389  0020F0  22                 	db	high _sd001
   390  0020F1  C3                 	db	low _sd002
   391  0020F2  04                 	db	high _sd002
   392  0020F3                     __end_of_USB_SD_Ptr:
   393                           	callstack 0
   394  0020F3                     _USB_CD_Ptr:
   395                           	callstack 0
   396  0020F3  47                 	db	low _configDescriptor1
   397  0020F4  22                 	db	high _configDescriptor1
   398  0020F5                     __end_of_USB_CD_Ptr:
   399                           	callstack 0
   400  0000                     _FlashSignatureWord_absconstaddr	set	8198
   401  0020F5                     _atcommand_type:
   402                           	callstack 0
   403  0020F5  01                 	db	1
   404  0020F6  41                 	db	65
   405  0020F7  54                 	db	84
   406  0020F8  43                 	db	67
   407  0020F9  5A                 	db	90
   408  0020FA  00                 	db	0
   409  0020FB  00                 	db	0
   410  0020FC  00                 	db	0
   411  0020FD  00                 	db	0
   412  0020FE  00                 	db	0
   413  0020FF  00                 	db	0
   414  002100  00                 	db	0
   415  002101  00                 	db	0
   416  002102  05                 	db	5
   417  002103  41                 	db	65
   418  002104  54                 	db	84
   419  002105  43                 	db	67
   420  002106  44                 	db	68
   421  002107  00                 	db	0
   422  002108  00                 	db	0
   423  002109  00                 	db	0
   424  00210A  00                 	db	0
   425  00210B  00                 	db	0
   426  00210C  00                 	db	0
   427  00210D  00                 	db	0
   428  00210E  00                 	db	0
   429  00210F  06                 	db	6
   430  002110  41                 	db	65
   431  002111  54                 	db	84
   432  002112  43                 	db	67
   433  002113  51                 	db	81
   434  002114  00                 	db	0
   435  002115  00                 	db	0
   436  002116  00                 	db	0
   437  002117  00                 	db	0
   438  002118  00                 	db	0
   439  002119  00                 	db	0
   440  00211A  00                 	db	0
   441  00211B  00                 	db	0
   442  00211C  07                 	db	7
   443  00211D  41                 	db	65
   444  00211E  54                 	db	84
   445  00211F  43                 	db	67
   446  002120  48                 	db	72
   447  002121  00                 	db	0
   448  002122  00                 	db	0
   449  002123  00                 	db	0
   450  002124  00                 	db	0
   451  002125  00                 	db	0
   452  002126  00                 	db	0
   453  002127  00                 	db	0
   454  002128  00                 	db	0
   455  002129  08                 	db	8
   456  00212A  41                 	db	65
   457  00212B  54                 	db	84
   458  00212C  43                 	db	67
   459  00212D  55                 	db	85
   460  00212E  56                 	db	86
   461  00212F  00                 	db	0
   462  002130  00                 	db	0
   463  002131  00                 	db	0
   464  002132  00                 	db	0
   465  002133  00                 	db	0
   466  002134  00                 	db	0
   467  002135  00                 	db	0
   468  002136  02                 	db	2
   469  002137  41                 	db	65
   470  002138  54                 	db	84
   471  002139  43                 	db	67
   472  00213A  56                 	db	86
   473  00213B  45                 	db	69
   474  00213C  52                 	db	82
   475  00213D  00                 	db	0
   476  00213E  00                 	db	0
   477  00213F  00                 	db	0
   478  002140  00                 	db	0
   479  002141  00                 	db	0
   480  002142  00                 	db	0
   481  002143  03                 	db	3
   482  002144  41                 	db	65
   483  002145  54                 	db	84
   484  002146  43                 	db	67
   485  002147  52                 	db	82
   486  002148  53                 	db	83
   487  002149  54                 	db	84
   488  00214A  00                 	db	0
   489  00214B  00                 	db	0
   490  00214C  00                 	db	0
   491  00214D  00                 	db	0
   492  00214E  00                 	db	0
   493  00214F  01                 	db	1
   494  002150  04                 	db	4
   495  002151  41                 	db	65
   496  002152  54                 	db	84
   497  002153  43                 	db	67
   498  002154  42                 	db	66
   499  002155  4C                 	db	76
   500  002156  52                 	db	82
   501  002157  53                 	db	83
   502  002158  54                 	db	84
   503  002159  00                 	db	0
   504  00215A  00                 	db	0
   505  00215B  00                 	db	0
   506  00215C  01                 	db	1
   507  00215D  09                 	db	9
   508  00215E  41                 	db	65
   509  00215F  54                 	db	84
   510  002160  43                 	db	67
   511  002161  4D                 	db	77
   512  002162  4F                 	db	79
   513  002163  44                 	db	68
   514  002164  45                 	db	69
   515  002165  4C                 	db	76
   516  002166  00                 	db	0
   517  002167  00                 	db	0
   518  002168  00                 	db	0
   519  002169  00                 	db	0
   520  00216A  0A                 	db	10
   521  00216B  41                 	db	65
   522  00216C  54                 	db	84
   523  00216D  43                 	db	67
   524  00216E  53                 	db	83
   525  00216F  4D                 	db	77
   526  002170  4F                 	db	79
   527  002171  44                 	db	68
   528  002172  45                 	db	69
   529  002173  4C                 	db	76
   530  002174  00                 	db	0
   531  002175  00                 	db	0
   532  002176  01                 	db	1
   533  002177  0D                 	db	13
   534  002178  41                 	db	65
   535  002179  54                 	db	84
   536  00217A  43                 	db	67
   537  00217B  46                 	db	70
   538  00217C  00                 	db	0
   539  00217D  00                 	db	0
   540  00217E  00                 	db	0
   541  00217F  00                 	db	0
   542  002180  00                 	db	0
   543  002181  00                 	db	0
   544  002182  00                 	db	0
   545  002183  01                 	db	1
   546  002184  0C                 	db	12
   547  002185  41                 	db	65
   548  002186  54                 	db	84
   549  002187  43                 	db	67
   550  002188  43                 	db	67
   551  002189  00                 	db	0
   552  00218A  00                 	db	0
   553  00218B  00                 	db	0
   554  00218C  00                 	db	0
   555  00218D  00                 	db	0
   556  00218E  00                 	db	0
   557  00218F  00                 	db	0
   558  002190  01                 	db	1
   559  002191  0E                 	db	14
   560  002192  41                 	db	65
   561  002193  54                 	db	84
   562  002194  43                 	db	67
   563  002195  43                 	db	67
   564  002196  41                 	db	65
   565  002197  4C                 	db	76
   566  002198  25                 	db	37
   567  002199  00                 	db	0
   568  00219A  00                 	db	0
   569  00219B  00                 	db	0
   570  00219C  00                 	db	0
   571  00219D  01                 	db	1
   572  00219E  0F                 	db	15
   573  00219F  41                 	db	65
   574  0021A0  54                 	db	84
   575  0021A1  43                 	db	67
   576  0021A2  5A                 	db	90
   577  0021A3  43                 	db	67
   578  0021A4  41                 	db	65
   579  0021A5  4C                 	db	76
   580  0021A6  00                 	db	0
   581  0021A7  00                 	db	0
   582  0021A8  00                 	db	0
   583  0021A9  00                 	db	0
   584  0021AA  01                 	db	1
   585  0021AB  10                 	db	16
   586  0021AC  41                 	db	65
   587  0021AD  54                 	db	84
   588  0021AE  43                 	db	67
   589  0021AF  43                 	db	67
   590  0021B0  5A                 	db	90
   591  0021B1  52                 	db	82
   592  0021B2  41                 	db	65
   593  0021B3  00                 	db	0
   594  0021B4  00                 	db	0
   595  0021B5  00                 	db	0
   596  0021B6  00                 	db	0
   597  0021B7  01                 	db	1
   598  0021B8  11                 	db	17
   599  0021B9  41                 	db	65
   600  0021BA  54                 	db	84
   601  0021BB  43                 	db	67
   602  0021BC  43                 	db	67
   603  0021BD  5A                 	db	90
   604  0021BE  52                 	db	82
   605  0021BF  25                 	db	37
   606  0021C0  00                 	db	0
   607  0021C1  00                 	db	0
   608  0021C2  00                 	db	0
   609  0021C3  00                 	db	0
   610  0021C4  01                 	db	1
   611  0021C5  12                 	db	18
   612  0021C6  41                 	db	65
   613  0021C7  54                 	db	84
   614  0021C8  43                 	db	67
   615  0021C9  43                 	db	67
   616  0021CA  53                 	db	83
   617  0021CB  50                 	db	80
   618  0021CC  25                 	db	37
   619  0021CD  00                 	db	0
   620  0021CE  00                 	db	0
   621  0021CF  00                 	db	0
   622  0021D0  00                 	db	0
   623  0021D1  02                 	db	2
   624  0021D2  13                 	db	19
   625  0021D3  41                 	db	65
   626  0021D4  54                 	db	84
   627  0021D5  43                 	db	67
   628  0021D6  4F                 	db	79
   629  0021D7  46                 	db	70
   630  0021D8  46                 	db	70
   631  0021D9  25                 	db	37
   632  0021DA  00                 	db	0
   633  0021DB  00                 	db	0
   634  0021DC  00                 	db	0
   635  0021DD  00                 	db	0
   636  0021DE  02                 	db	2
   637  0021DF  14                 	db	20
   638  0021E0  41                 	db	65
   639  0021E1  54                 	db	84
   640  0021E2  43                 	db	67
   641  0021E3  4D                 	db	77
   642  0021E4  4F                 	db	79
   643  0021E5  44                 	db	68
   644  0021E6  45                 	db	69
   645  0021E7  00                 	db	0
   646  0021E8  00                 	db	0
   647  0021E9  00                 	db	0
   648  0021EA  00                 	db	0
   649  0021EB  02                 	db	2
   650  0021EC  15                 	db	21
   651  0021ED  41                 	db	65
   652  0021EE  54                 	db	84
   653  0021EF  43                 	db	67
   654  0021F0  54                 	db	84
   655  0021F1  43                 	db	67
   656  0021F2  4D                 	db	77
   657  0021F3  50                 	db	80
   658  0021F4  00                 	db	0
   659  0021F5  00                 	db	0
   660  0021F6  00                 	db	0
   661  0021F7  00                 	db	0
   662  0021F8  02                 	db	2
   663  0021F9  16                 	db	22
   664  0021FA  41                 	db	65
   665  0021FB  54                 	db	84
   666  0021FC  43                 	db	67
   667  0021FD  57                 	db	87
   668  0021FE  49                 	db	73
   669  0021FF  4E                 	db	78
   670  002200  25                 	db	37
   671  002201  00                 	db	0
   672  002202  00                 	db	0
   673  002203  00                 	db	0
   674  002204  00                 	db	0
   675  002205  02                 	db	2
   676  002206  17                 	db	23
   677  002207  41                 	db	65
   678  002208  54                 	db	84
   679  002209  43                 	db	67
   680  00220A  4B                 	db	75
   681  00220B  4D                 	db	77
   682  00220C  46                 	db	70
   683  00220D  45                 	db	69
   684  00220E  4D                 	db	77
   685  00220F  00                 	db	0
   686  002210  00                 	db	0
   687  002211  00                 	db	0
   688  002212  02                 	db	2
   689  002213  0B                 	db	11
   690  002214  41                 	db	65
   691  002215  54                 	db	84
   692  002216  43                 	db	67
   693  002217  43                 	db	67
   694  002218  4F                 	db	79
   695  002219  32                 	db	50
   696  00221A  41                 	db	65
   697  00221B  42                 	db	66
   698  00221C  43                 	db	67
   699  00221D  00                 	db	0
   700  00221E  00                 	db	0
   701  00221F  02                 	db	2
   702  002220  19                 	db	25
   703  002221  41                 	db	65
   704  002222  54                 	db	84
   705  002223  43                 	db	67
   706  002224  45                 	db	69
   707  002225  58                 	db	88
   708  002226  54                 	db	84
   709  002227  4D                 	db	77
   710  002228  00                 	db	0
   711  002229  00                 	db	0
   712  00222A  00                 	db	0
   713  00222B  00                 	db	0
   714  00222C  02                 	db	2
   715  00222D  18                 	db	24
   716  00222E  41                 	db	65
   717  00222F  54                 	db	84
   718  002230  43                 	db	67
   719  002231  55                 	db	85
   720  002232  53                 	db	83
   721  002233  45                 	db	69
   722  002234  44                 	db	68
   723  002235  00                 	db	0
   724  002236  00                 	db	0
   725  002237  00                 	db	0
   726  002238  00                 	db	0
   727  002239  02                 	db	2
   728  00223A  1A                 	db	26
   729  00223B  41                 	db	65
   730  00223C  54                 	db	84
   731  00223D  43                 	db	67
   732  00223E  42                 	db	66
   733  00223F  4C                 	db	76
   734  002240  44                 	db	68
   735  002241  54                 	db	84
   736  002242  4D                 	db	77
   737  002243  00                 	db	0
   738  002244  00                 	db	0
   739  002245  00                 	db	0
   740  002246  00                 	db	0
   741  002247                     __end_of_atcommand_type:
   742                           	callstack 0
   743  002247                     _configDescriptor1:
   744                           	callstack 0
   745  002247  09                 	db	9
   746  002248  02                 	db	2
   747  002249  43                 	db	67
   748  00224A  00                 	db	0
   749  00224B  02                 	db	2
   750  00224C  01                 	db	1
   751  00224D  00                 	db	0
   752  00224E  C0                 	db	192
   753  00224F  32                 	db	50
   754  002250  09                 	db	9
   755  002251  04                 	db	4
   756  002252  00                 	db	0
   757  002253  00                 	db	0
   758  002254  01                 	db	1
   759  002255  02                 	db	2
   760  002256  02                 	db	2
   761  002257  01                 	db	1
   762  002258  00                 	db	0
   763  002259  05                 	db	5
   764  00225A  24                 	db	36
   765  00225B  00                 	db	0
   766  00225C  10                 	db	16
   767  00225D  01                 	db	1
   768  00225E  04                 	db	4
   769  00225F  24                 	db	36
   770  002260  02                 	db	2
   771  002261  02                 	db	2
   772  002262  05                 	db	5
   773  002263  24                 	db	36
   774  002264  06                 	db	6
   775  002265  00                 	db	0
   776  002266  01                 	db	1
   777  002267  05                 	db	5
   778  002268  24                 	db	36
   779  002269  01                 	db	1
   780  00226A  00                 	db	0
   781  00226B  01                 	db	1
   782  00226C  07                 	db	7
   783  00226D  05                 	db	5
   784  00226E  81                 	db	129
   785  00226F  03                 	db	3
   786  002270  08                 	db	8
   787  002271  00                 	db	0
   788  002272  02                 	db	2
   789  002273  09                 	db	9
   790  002274  04                 	db	4
   791  002275  01                 	db	1
   792  002276  00                 	db	0
   793  002277  02                 	db	2
   794  002278  0A                 	db	10
   795  002279  00                 	db	0
   796  00227A  00                 	db	0
   797  00227B  00                 	db	0
   798  00227C  07                 	db	7
   799  00227D  05                 	db	5
   800  00227E  02                 	db	2
   801  00227F  02                 	db	2
   802  002280  40                 	db	64
   803  002281  00                 	db	0
   804  002282  00                 	db	0
   805  002283  07                 	db	7
   806  002284  05                 	db	5
   807  002285  82                 	db	130
   808  002286  02                 	db	2
   809  002287  40                 	db	64
   810  002288  00                 	db	0
   811  002289  00                 	db	0
   812  00228A                     __end_of_configDescriptor1:
   813                           	callstack 0
   814  00228A                     _sd001:
   815                           	callstack 0
   816  00228A  34                 	db	52
   817  00228B  03                 	db	3
   818  00228C  0044               	dw	68
   819  00228E  0065               	dw	101
   820  002290  006B               	dw	107
   821  002292  0069               	dw	105
   822  002294  0073               	dw	115
   823  002296  0074               	dw	116
   824  002298  0020               	dw	32
   825  00229A  0043               	dw	67
   826  00229C  006F               	dw	111
   827  00229E  002E               	dw	46
   828  0022A0  002C               	dw	44
   829  0022A2  0020               	dw	32
   830  0022A4  004C               	dw	76
   831  0022A6  0074               	dw	116
   832  0022A8  0064               	dw	100
   833  0022AA  002E               	dw	46
   834  0022AC  0000               	dw	0
   835  0022AE  00                 	db	0
   836  0022AF  00                 	db	0
   837  0022B0  00                 	db	0
   838  0022B1  00                 	db	0
   839  0022B2  00                 	db	0
   840  0022B3  00                 	db	0
   841  0022B4  00                 	db	0
   842  0022B5  00                 	db	0
   843  0022B6  00                 	db	0
   844  0022B7  00                 	db	0
   845  0022B8  00                 	db	0
   846  0022B9  00                 	db	0
   847  0022BA  00                 	db	0
   848  0022BB  00                 	db	0
   849  0022BC  00                 	db	0
   850  0022BD  00                 	db	0
   851  0022BE                     __end_of_sd001:
   852                           	callstack 0
   853  0022BE                     exp@coeff:
   854                           	callstack 0
   855  0022BE  0000               	dw	0
   856  0022C0  3F80               	dw	16256
   857  0022C2  7218               	dw	29208
   858  0022C4  3F31               	dw	16177
   859  0022C6  FDF0               	dw	65008
   860  0022C8  3E75               	dw	15989
   861  0022CA  5847               	dw	22599
   862  0022CC  3D63               	dw	15715
   863  0022CE  9558               	dw	38232
   864  0022D0  3C1D               	dw	15389
   865  0022D2  C482               	dw	50306
   866  0022D4  3AAE               	dw	15022
   867  0022D6  78A8               	dw	30888
   868  0022D8  3921               	dw	14625
   869  0022DA  93EF               	dw	37871
   870  0022DC  3780               	dw	14208
   871  0022DE  92A0               	dw	37536
   872  0022E0  35A7               	dw	13735
   873  0022E2  5646               	dw	22086
   874  0022E4  3415               	dw	13333
   875  0022E6                     __end_ofexp@coeff:
   876                           	callstack 0
   877  0022E6                     _dpowers:
   878                           	callstack 0
   879  0022E6  0001               	dw	1
   880  0022E8  0000               	dw	0
   881  0022EA  000A               	dw	10
   882  0022EC  0000               	dw	0
   883  0022EE  0064               	dw	100
   884  0022F0  0000               	dw	0
   885  0022F2  03E8               	dw	1000
   886  0022F4  0000               	dw	0
   887  0022F6  2710               	dw	10000
   888  0022F8  0000               	dw	0
   889  0022FA  86A0               	dw	34464
   890  0022FC  0001               	dw	1
   891  0022FE  4240               	dw	16960
   892  002300  000F               	dw	15
   893  002302  9680               	dw	38528
   894  002304  0098               	dw	152
   895  002306  E100               	dw	57600
   896  002308  05F5               	dw	1525
   897  00230A  CA00               	dw	51712
   898  00230C  3B9A               	dw	15258
   899  00230E                     __end_of_dpowers:
   900                           	callstack 0
   901  00230E                     log@coeff:
   902                           	callstack 0
   903  00230E  0000               	dw	0
   904  002310  0000               	dw	0
   905  002312  FFC4               	dw	65476
   906  002314  3F7F               	dw	16255
   907  002316  EF80               	dw	61312
   908  002318  BEFF               	dw	48895
   909  00231A  E190               	dw	57744
   910  00231C  3EA9               	dw	16041
   911  00231E  82EC               	dw	33516
   912  002320  BE76               	dw	48758
   913  002322  AD82               	dw	44418
   914  002324  3E2B               	dw	15915
   915  002326  3C0E               	dw	15374
   916  002328  BDC3               	dw	48579
   917  00232A  D187               	dw	53639
   918  00232C  3D13               	dw	15635
   919  00232E  7841               	dw	30785
   920  002330  BBD3               	dw	48083
   921  002332                     __end_oflog@coeff:
   922                           	callstack 0
   923  002332                     _device_dsc:
   924                           	callstack 0
   925  002332  12                 	db	18
   926  002333  01                 	db	1
   927  002334  0200               	dw	512
   928  002336  02                 	db	2
   929  002337  00                 	db	0
   930  002338  00                 	db	0
   931  002339  08                 	db	8
   932  00233A  04D8               	dw	1240
   933  00233C  000A               	dw	10
   934  00233E  0100               	dw	256
   935  002340  01                 	db	1
   936  002341  02                 	db	2
   937  002342  00                 	db	0
   938  002343  01                 	db	1
   939  002344                     __end_of_device_dsc:
   940                           	callstack 0
   941  002344                     _sd000:
   942                           	callstack 0
   943  002344  04                 	db	4
   944  002345  03                 	db	3
   945  002346  0409               	dw	1033
   946  002348                     __end_of_sd000:
   947                           	callstack 0
   948  0000                     _FlashSignatureWord_absconstaddr	set	8198
   949  002348                     STR_1:
   950  002348  55                 	db	85	;'U'
   951  002349  41                 	db	65	;'A'
   952  00234A  35                 	db	53	;'5'
   953  00234B  38                 	db	56	;'8'
   954  00234C  2D                 	db	45
   955  00234D  4B                 	db	75	;'K'
   956  00234E  46                 	db	70	;'F'
   957  00234F  47                 	db	71	;'G'
   958  002350  2D                 	db	45
   959  002351  55                 	db	85	;'U'
   960  002352  5F                 	db	95	;'_'
   961  002353  74                 	db	116	;'t'
   962  002354  65                 	db	101	;'e'
   963  002355  73                 	db	115	;'s'
   964  002356  74                 	db	116	;'t'
   965  002357  00                 	db	0
   966  002358                     STR_14:
   967  002358  46                 	db	70	;'F'
   968  002359  65                 	db	101	;'e'
   969  00235A  62                 	db	98	;'b'
   970  00235B  20                 	db	32
   971  00235C  30                 	db	48	;'0'
   972  00235D  32                 	db	50	;'2'
   973  00235E  20                 	db	32
   974  00235F  32                 	db	50	;'2'
   975  002360  30                 	db	48	;'0'
   976  002361  32                 	db	50	;'2'
   977  002362  33                 	db	51	;'3'
   978  002363  00                 	db	0
   979  002364                     STR_6:
   980  002364  2D                 	db	45
   981  002365  2D                 	db	45
   982  002366  2D                 	db	45
   983  002367  2D                 	db	45
   984  002368  2C                 	db	44
   985  002369  2D                 	db	45
   986  00236A  2D                 	db	45
   987  00236B  2D                 	db	45
   988  00236C  2D                 	db	45
   989  00236D  00                 	db	0
   990  00236E                     STR_48:
   991  00236E  31                 	db	49	;'1'
   992  00236F  30                 	db	48	;'0'
   993  002370  3A                 	db	58	;':'
   994  002371  30                 	db	48	;'0'
   995  002372  33                 	db	51	;'3'
   996  002373  3A                 	db	58	;':'
   997  002374  34                 	db	52	;'4'
   998  002375  37                 	db	55	;'7'
   999  002376  00                 	db	0
  1000  002377                     STR_8:
  1001  002377  65                 	db	101	;'e'
  1002  002378  72                 	db	114	;'r'
  1003  002379  72                 	db	114	;'r'
  1004  00237A  6F                 	db	111	;'o'
  1005  00237B  72                 	db	114	;'r'
  1006  00237C  00                 	db	0
  1007  00237D                     STR_10:
  1008  00237D  25                 	db	37
  1009  00237E  2E                 	db	46
  1010  00237F  32                 	db	50	;'2'
  1011  002380  66                 	db	102	;'f'
  1012  002381  00                 	db	0
  1013  002382  00                 	db	0	; dummy byte at the end
  1014  0000                     
  1015                           	psect	_FlashSignatureWord_const
  1016  002006                     __p_FlashSignatureWord_const:
  1017                           	callstack 0
  1018  002006                     _FlashSignatureWord:
  1019                           	callstack 0
  1020  002006  600D               	dw	24589
  1021  002008                     __end_of_FlashSignatureWord:
  1022                           	callstack 0
  1023  0000                     _UEP0bits	set	3878
  1024  0000                     _UIEbits	set	3894
  1025  0000                     _UADDR	set	3896
  1026  0000                     _UIE	set	3894
  1027  0000                     _UEIE	set	3895
  1028  0000                     _UCFG	set	3897
  1029  0000                     _DSCONHbits	set	3917
  1030  0000                     _ANCON1	set	3913
  1031  0000                     _ANCON0	set	3912
  1032  0000                     _UEP1	set	3879
  1033  0000                     _UEP0	set	3878
  1034  0000                     _USTAT	set	3940
  1035  0000                     _UIRbits	set	3938
  1036  0000                     _UIR	set	3938
  1037  0000                     _UEIR	set	3939
  1038  0000                     _PIE2bits	set	4000
  1039  0000                     _UCON	set	3941
  1040  0000                     _OSCCONbits	set	4051
  1041  0000                     _WDTCONbits	set	4032
  1042  0000                     _OSCCON	set	4051
  1043  0000                     _OSCTUNEbits	set	3995
  1044  0000                     _UCONbits	set	3941
  1045  0000                     _INTCON2bits	set	4081
  1046  0000                     _TMR0L	set	4054
  1047  0000                     _T0CONbits	set	4053
  1048  0000                     _RCREG1	set	4015
  1049  0000                     _RCSTA1bits	set	4012
  1050  0000                     _TXREG	set	4014
  1051  0000                     _TXSTA1bits	set	4013
  1052  0000                     _SPBRG1	set	4016
  1053  0000                     _PIE1bits	set	3997
  1054  0000                     _IPR1bits	set	3999
  1055  0000                     _RCONbits	set	4048
  1056  0000                     _BAUDCON1	set	3966
  1057  0000                     _RCSTA1	set	4012
  1058  0000                     _TXSTA1	set	4013
  1059  0000                     _LATBbits	set	3978
  1060  0000                     _TRISCbits	set	3988
  1061  0000                     _LATCbits	set	3979
  1062  0000                     _SSP1BUF	set	4041
  1063  0000                     _SSP1STATbits	set	4039
  1064  0000                     _SSP1CON2bits	set	4037
  1065  0000                     _PIR2bits	set	4001
  1066  0000                     _PIR1bits	set	3998
  1067  0000                     _SSP1ADD	set	4040
  1068  0000                     _SSP1STAT	set	4039
  1069  0000                     _SSP1CON2	set	4037
  1070  0000                     _SSP1CON1	set	4038
  1071  0000                     _TRISBbits	set	3987
  1072  0000                     _EECON2	set	4007
  1073  0000                     _INTCONbits	set	4082
  1074  0000                     _EECON1bits	set	4006
  1075  0000                     _TABLAT	set	4085
  1076  0000                     _TBLPTRL	set	4086
  1077  0000                     _TBLPTRH	set	4087
  1078  0000                     _TBLPTRU	set	4088
  1079                           
  1080                           ; #config settings
  1081                           
  1082                           	psect	cinit
  1083  00CD22                     __pcinit:
  1084                           	callstack 0
  1085  00CD22                     start_initialization:
  1086                           	callstack 0
  1087  00CD22                     __initialization:
  1088                           	callstack 0
  1089                           
  1090                           ; Initialize objects allocated to BANK1 (6 bytes)
  1091                           ; load TBLPTR registers with __pidataBANK1
  1092  00CD22  0EA2               	movlw	low __pidataBANK1
  1093  00CD24  6EF6               	movwf	tblptrl,c
  1094  00CD26  0EF1               	movlw	high __pidataBANK1
  1095  00CD28  6EF7               	movwf	tblptrh,c
  1096  00CD2A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1097  00CD2C  6EF8               	movwf	tblptru,c
  1098  00CD2E  EE01  F0F8         	lfsr	0,__pdataBANK1
  1099  00CD32  EE10 F006          	lfsr	1,6
  1100  00CD36                     copy_data0:
  1101  00CD36  0009               	tblrd		*+
  1102  00CD38  CFF5 FFEE          	movff	tablat,postinc0
  1103  00CD3C  50E5               	movf	postdec1,w,c
  1104  00CD3E  50E1               	movf	fsr1l,w,c
  1105  00CD40  E1FA               	bnz	copy_data0
  1106                           
  1107                           ; Initialize objects allocated to BANK4 (52 bytes)
  1108                           ; load TBLPTR registers with __pidataBANK4
  1109  00CD42  0E12               	movlw	low __pidataBANK4
  1110  00CD44  6EF6               	movwf	tblptrl,c
  1111  00CD46  0EEC               	movlw	high __pidataBANK4
  1112  00CD48  6EF7               	movwf	tblptrh,c
  1113  00CD4A  0E00               	movlw	low (__pidataBANK4 shr (0+16))
  1114  00CD4C  6EF8               	movwf	tblptru,c
  1115  00CD4E  EE04  F0C3         	lfsr	0,__pdataBANK4
  1116  00CD52  EE10 F034          	lfsr	1,52
  1117  00CD56                     copy_data1:
  1118  00CD56  0009               	tblrd		*+
  1119  00CD58  CFF5 FFEE          	movff	tablat,postinc0
  1120  00CD5C  50E5               	movf	postdec1,w,c
  1121  00CD5E  50E1               	movf	fsr1l,w,c
  1122  00CD60  E1FA               	bnz	copy_data1
  1123                           
  1124                           ; Clear objects allocated to BANK6 (236 bytes)
  1125  00CD62  EE06  F000         	lfsr	0,__pbssBANK6
  1126  00CD66  0EEC               	movlw	236
  1127  00CD68                     clear_0:
  1128  00CD68  6AEE               	clrf	postinc0,c
  1129  00CD6A  06E8               	decf	wreg,f,c
  1130  00CD6C  E1FD               	bnz	clear_0
  1131                           
  1132                           ; Clear objects allocated to BANK5 (242 bytes)
  1133  00CD6E  EE05  F000         	lfsr	0,__pbssBANK5
  1134  00CD72  0EF2               	movlw	242
  1135  00CD74                     clear_1:
  1136  00CD74  6AEE               	clrf	postinc0,c
  1137  00CD76  06E8               	decf	wreg,f,c
  1138  00CD78  E1FD               	bnz	clear_1
  1139                           
  1140                           ; Clear objects allocated to BANK3 (250 bytes)
  1141  00CD7A  EE03  F000         	lfsr	0,__pbssBANK3
  1142  00CD7E  0EFA               	movlw	250
  1143  00CD80                     clear_2:
  1144  00CD80  6AEE               	clrf	postinc0,c
  1145  00CD82  06E8               	decf	wreg,f,c
  1146  00CD84  E1FD               	bnz	clear_2
  1147                           
  1148                           ; Clear objects allocated to BANK2 (248 bytes)
  1149  00CD86  EE02  F000         	lfsr	0,__pbssBANK2
  1150  00CD8A  0EF8               	movlw	248
  1151  00CD8C                     clear_3:
  1152  00CD8C  6AEE               	clrf	postinc0,c
  1153  00CD8E  06E8               	decf	wreg,f,c
  1154  00CD90  E1FD               	bnz	clear_3
  1155                           
  1156                           ; Clear objects allocated to BANK1 (248 bytes)
  1157  00CD92  EE01  F000         	lfsr	0,__pbssBANK1
  1158  00CD96  0EF8               	movlw	248
  1159  00CD98                     clear_4:
  1160  00CD98  6AEE               	clrf	postinc0,c
  1161  00CD9A  06E8               	decf	wreg,f,c
  1162  00CD9C  E1FD               	bnz	clear_4
  1163                           
  1164                           ; Clear objects allocated to BANK4 (131 bytes)
  1165  00CD9E  EE04  F040         	lfsr	0,__pbssBANK4
  1166  00CDA2  0E83               	movlw	131
  1167  00CDA4                     clear_5:
  1168  00CDA4  6AEE               	clrf	postinc0,c
  1169  00CDA6  06E8               	decf	wreg,f,c
  1170  00CDA8  E1FD               	bnz	clear_5
  1171                           
  1172                           ; Clear objects allocated to BANK0 (8 bytes)
  1173  00CDAA  EE00  F0F8         	lfsr	0,__pbssBANK0
  1174  00CDAE  0E08               	movlw	8
  1175  00CDB0                     clear_6:
  1176  00CDB0  6AEE               	clrf	postinc0,c
  1177  00CDB2  06E8               	decf	wreg,f,c
  1178  00CDB4  E1FD               	bnz	clear_6
  1179                           
  1180                           ; Clear objects allocated to COMRAM (16 bytes)
  1181  00CDB6  EE00  F041         	lfsr	0,__pbssCOMRAM
  1182  00CDBA  0E10               	movlw	16
  1183  00CDBC                     clear_7:
  1184  00CDBC  6AEE               	clrf	postinc0,c
  1185  00CDBE  06E8               	decf	wreg,f,c
  1186  00CDC0  E1FD               	bnz	clear_7
  1187  00CDC2                     end_of_initialization:
  1188                           	callstack 0
  1189  00CDC2                     __end_of__initialization:
  1190                           	callstack 0
  1191  00CDC2  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1192  00CDC4  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1193  00CDC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1194  00CDC8  6EF8               	movwf	tblptru,c
  1195  00CDCA  0100               	movlb	0
  1196  00CDCC  EFC0  F074         	goto	_main	;jump to C main() function
  1197                           
  1198                           	psect	bssCOMRAM
  1199  000041                     __pbssCOMRAM:
  1200                           	callstack 0
  1201  000041                     _inPipes:
  1202                           	callstack 0
  1203  000041                     	ds	6
  1204  000047                     _pBDTEntryEP0OutNext:
  1205                           	callstack 0
  1206  000047                     	ds	2
  1207  000049                     _pBDTEntryEP0OutCurrent:
  1208                           	callstack 0
  1209  000049                     	ds	2
  1210  00004B                     _convData:
  1211                           	callstack 0
  1212  00004B                     	ds	2
  1213  00004D                     _USBDeferStatusStagePacket:
  1214                           	callstack 0
  1215  00004D                     	ds	1
  1216  00004E                     _cdc_trf_state:
  1217                           	callstack 0
  1218  00004E                     	ds	1
  1219  00004F                     _USBDeviceState:
  1220                           	callstack 0
  1221  00004F                     	ds	1
  1222  000050                     _USTATcopy:
  1223                           	callstack 0
  1224  000050                     	ds	1
  1225                           
  1226                           	psect	bssBANK0
  1227  0000F8                     __pbssBANK0:
  1228                           	callstack 0
  1229  0000F8                     _pBDTEntryIn:
  1230                           	callstack 0
  1231  0000F8                     	ds	6
  1232  0000FE                     _controlTransferState:
  1233                           	callstack 0
  1234  0000FE                     	ds	1
  1235  0000FF                     _gChNum:
  1236                           	callstack 0
  1237  0000FF                     	ds	1
  1238                           
  1239                           	psect	bssBANK1
  1240  000100                     __pbssBANK1:
  1241                           	callstack 0
  1242  000100                     _g_rDataFormat:
  1243                           	callstack 0
  1244  000100                     	ds	14
  1245  00010E                     _g_sens_measure:
  1246                           	callstack 0
  1247  00010E                     	ds	13
  1248  00011B                     _outPipes:
  1249                           	callstack 0
  1250  00011B                     	ds	8
  1251  000123                     _pBDTEntryOut:
  1252                           	callstack 0
  1253  000123                     	ds	6
  1254  000129                     _g_led_status:
  1255                           	callstack 0
  1256  000129                     	ds	5
  1257  00012E                     _USB1msTickCount:
  1258                           	callstack 0
  1259  00012E                     	ds	4
  1260  000132                     window_moving_average_recursion@avg:
  1261                           	callstack 0
  1262  000132                     	ds	4
  1263  000136                     _prev_average:
  1264                           	callstack 0
  1265  000136                     	ds	4
  1266  00013A                     _g_calib_count:
  1267                           	callstack 0
  1268  00013A                     	ds	4
  1269  00013E                     _gTemp_volt:
  1270                           	callstack 0
  1271  00013E                     	ds	4
  1272  000142                     _g_large_counter:
  1273                           	callstack 0
  1274  000142                     	ds	4
  1275  000146                     _g_led_counter:
  1276                           	callstack 0
  1277  000146                     	ds	4
  1278  00014A                     _g_usedtime_count:
  1279                           	callstack 0
  1280  00014A                     	ds	4
  1281  00014E                     _pCDCDst:
  1282                           	callstack 0
  1283  00014E                     	ds	3
  1284  000151                     _pCDCSrc:
  1285                           	callstack 0
  1286  000151                     	ds	3
  1287  000154                     _ep_data_out:
  1288                           	callstack 0
  1289  000154                     	ds	3
  1290  000157                     _ep_data_in:
  1291                           	callstack 0
  1292  000157                     	ds	3
  1293  00015A                     _errno:
  1294                           	callstack 0
  1295  00015A                     	ds	2
  1296  00015C                     _CDCDataInHandle:
  1297                           	callstack 0
  1298  00015C                     	ds	2
  1299  00015E                     _CDCDataOutHandle:
  1300                           	callstack 0
  1301  00015E                     	ds	2
  1302  000160                     _pDst:
  1303                           	callstack 0
  1304  000160                     	ds	2
  1305  000162                     _g_Num_of_sample:
  1306                           	callstack 0
  1307  000162                     	ds	2
  1308  000164                     _g_sens_calib:
  1309                           	callstack 0
  1310  000164                     	ds	2
  1311  000166                     _control_signal_bitmap:
  1312                           	callstack 0
  1313  000166                     	ds	1
  1314  000167                     _cdc_mem_type:
  1315                           	callstack 0
  1316  000167                     	ds	1
  1317  000168                     _cdc_tx_len:
  1318                           	callstack 0
  1319  000168                     	ds	1
  1320  000169                     _cdc_rx_len:
  1321                           	callstack 0
  1322  000169                     	ds	1
  1323  00016A                     _USBTicksSinceSuspendEnd:
  1324                           	callstack 0
  1325  00016A                     	ds	1
  1326  00016B                     _USBDeferOUTDataStagePackets:
  1327                           	callstack 0
  1328  00016B                     	ds	1
  1329  00016C                     _USBDeferINDataStagePackets:
  1330                           	callstack 0
  1331  00016C                     	ds	1
  1332  00016D                     _USBStatusStageEnabledFlag2:
  1333                           	callstack 0
  1334  00016D                     	ds	1
  1335  00016E                     _USBStatusStageEnabledFlag1:
  1336                           	callstack 0
  1337  00016E                     	ds	1
  1338  00016F                     _USBStatusStageTimeoutCounter:
  1339                           	callstack 0
  1340  00016F                     	ds	1
  1341  000170                     _BothEP0OutUOWNsSet:
  1342                           	callstack 0
  1343  000170                     	ds	1
  1344  000171                     _endpoint_number:
  1345                           	callstack 0
  1346  000171                     	ds	1
  1347  000172                     _USBBusIsSuspended:
  1348                           	callstack 0
  1349  000172                     	ds	1
  1350  000173                     _RemoteWakeup:
  1351                           	callstack 0
  1352  000173                     	ds	1
  1353  000174                     _shortPacketStatus:
  1354                           	callstack 0
  1355  000174                     	ds	1
  1356  000175                     _g_tick_count:
  1357                           	callstack 0
  1358  000175                     	ds	1
  1359  000176                     _e_level:
  1360                           	callstack 0
  1361  000176                     	ds	1
  1362  000177                     _g_usb_state:
  1363                           	callstack 0
  1364  000177                     	ds	1
  1365  000178                     _g_tes0902_measure:
  1366                           	callstack 0
  1367  000178                     	ds	1
  1368  000179                     _g_nvm:
  1369                           	callstack 0
  1370  000179                     	ds	109
  1371  0001E6                     _g_Wbuff:
  1372                           	callstack 0
  1373  0001E6                     	ds	8
  1374  0001EE                     _line_coding:
  1375                           	callstack 0
  1376  0001EE                     	ds	7
  1377  0001F5                     _USBAlternateInterface:
  1378                           	callstack 0
  1379  0001F5                     	ds	2
  1380  0001F7                     _USBActiveConfiguration:
  1381                           	callstack 0
  1382  0001F7                     	ds	1
  1383                           
  1384                           	psect	dataBANK1
  1385  0001F8                     __pdataBANK1:
  1386                           	callstack 0
  1387  0001F8                     ads1115_SetUp@F158:
  1388                           	callstack 0
  1389  0001F8                     	ds	3
  1390  0001FB                     _ADS1115_I2C_ADDRESS:
  1391                           	callstack 0
  1392  0001FB                     	ds	3
  1393                           
  1394                           	psect	bssBANK2
  1395  000200                     __pbssBANK2:
  1396                           	callstack 0
  1397  000200                     _sens_value:
  1398                           	callstack 0
  1399  000200                     	ds	38
  1400  000226                     _Last_value:
  1401                           	callstack 0
  1402  000226                     	ds	38
  1403  00024C                     _BaudRateGen:
  1404                           	callstack 0
  1405  00024C                     	ds	4
  1406  000250                     _kalmanFilter:
  1407                           	callstack 0
  1408  000250                     	ds	96
  1409  0002B0                     _writeBuffer:
  1410                           	callstack 0
  1411  0002B0                     	ds	64
  1412  0002F0                     _dummy_encapsulated_cmd_response:
  1413                           	callstack 0
  1414  0002F0                     	ds	8
  1415                           
  1416                           	psect	bssBANK3
  1417  000300                     __pbssBANK3:
  1418                           	callstack 0
  1419  000300                     _g_moving_buffer:
  1420                           	callstack 0
  1421  000300                     	ds	48
  1422  000330                     	ds	32
  1423  000350                     build_time@F37:
  1424                           	callstack 0
  1425  000350                     	ds	18
  1426  000362                     	ds	11
  1427  00036D                     _cdc_notice:
  1428                           	callstack 0
  1429  00036D                     	ds	10
  1430  000377                     _g_usart_queue:
  1431                           	callstack 0
  1432  000377                     	ds	67
  1433  0003BA                     _cdc_data_rx:
  1434                           	callstack 0
  1435  0003BA                     	ds	64
  1436                           
  1437                           	psect	bssBANK4
  1438  000440                     __pbssBANK4:
  1439                           	callstack 0
  1440  000440                     _g_usb_queue:
  1441                           	callstack 0
  1442  000440                     	ds	67
  1443  000483                     _cdc_data_tx:
  1444                           	callstack 0
  1445  000483                     	ds	64
  1446                           
  1447                           	psect	dataBANK4
  1448  0004C3                     __pdataBANK4:
  1449                           	callstack 0
  1450  0004C3                     _sd002:
  1451                           	callstack 0
  1452  0004C3                     	ds	52
  1453                           
  1454                           	psect	bssBANK5
  1455  000500                     __pbssBANK5:
  1456                           	callstack 0
  1457  000500                     _g_atcommand:
  1458                           	callstack 0
  1459  000500                     	ds	242
  1460                           
  1461                           	psect	bssBANK6
  1462  000600                     __pbssBANK6:
  1463                           	callstack 0
  1464  000600                     _b:
  1465                           	callstack 0
  1466  000600                     	ds	64
  1467  000640                     _g_flash_temp:
  1468                           	callstack 0
  1469  000640                     	ds	108
  1470  0006AC                     _readBuffer:
  1471                           	callstack 0
  1472  0006AC                     	ds	64
  1473                           
  1474                           	psect	cstackBANK5
  1475  0005F2                     __pcstackBANK5:
  1476                           	callstack 0
  1477  0005F2                     gasSensor_read@cmp_coeff:
  1478                           	callstack 0
  1479                           
  1480                           ; 4 bytes @ 0x0
  1481  0005F2                     	ds	4
  1482  0005F6                     gasSensor_read@adc_gain:
  1483                           	callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x4
  1486  0005F6                     	ds	1
  1487  0005F7                     gasSensor_read@raw:
  1488                           	callstack 0
  1489                           
  1490                           ; 2 bytes @ 0x5
  1491  0005F7                     	ds	2
  1492  0005F9                     gasSensor_read@volt:
  1493                           	callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x7
  1496  0005F9                     	ds	4
  1497  0005FD                     gasSensor_read@chNum:
  1498                           	callstack 0
  1499                           
  1500                           ; 1 bytes @ 0xB
  1501  0005FD                     	ds	1
  1502                           
  1503                           	psect	cstackBANK0
  1504  000060                     __pcstackBANK0:
  1505                           	callstack 0
  1506  000060                     ?_frexp:
  1507                           	callstack 0
  1508  000060                     frexp@value:
  1509                           	callstack 0
  1510  000060                     mktime@tt:
  1511                           	callstack 0
  1512  000060                     parse_command@param:
  1513                           	callstack 0
  1514                           
  1515                           ; 32 bytes @ 0x0
  1516  000060                     	ds	4
  1517  000064                     ?_build_time:
  1518                           	callstack 0
  1519  000064                     frexp@eptr:
  1520                           	callstack 0
  1521                           
  1522                           ; 2 bytes @ 0x4
  1523  000064                     	ds	2
  1524  000066                     ??_frexp:
  1525                           
  1526                           ; 1 bytes @ 0x6
  1527  000066                     	ds	2
  1528  000068                     ??_build_time:
  1529  000068                     ?___flmul:
  1530                           	callstack 0
  1531  000068                     ___flmul@b:
  1532                           	callstack 0
  1533                           
  1534                           ; 4 bytes @ 0x8
  1535  000068                     	ds	2
  1536  00006A                     build_time@timestamp:
  1537                           	callstack 0
  1538                           
  1539                           ; 4 bytes @ 0xA
  1540  00006A                     	ds	2
  1541  00006C                     ___flmul@a:
  1542                           	callstack 0
  1543                           
  1544                           ; 4 bytes @ 0xC
  1545  00006C                     	ds	2
  1546  00006E                     _build_time$5891:
  1547                           	callstack 0
  1548                           
  1549                           ; 2 bytes @ 0xE
  1550  00006E                     	ds	2
  1551  000070                     ??___flmul:
  1552  000070                     _build_time$5917:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x10
  1556  000070                     	ds	2
  1557  000072                     _build_time$5918:
  1558                           	callstack 0
  1559                           
  1560                           ; 2 bytes @ 0x12
  1561  000072                     	ds	2
  1562  000074                     ___flmul@sign:
  1563                           	callstack 0
  1564  000074                     _build_time$5919:
  1565                           	callstack 0
  1566                           
  1567                           ; 2 bytes @ 0x14
  1568  000074                     	ds	1
  1569  000075                     ___flmul@aexp:
  1570                           	callstack 0
  1571                           
  1572                           ; 1 bytes @ 0x15
  1573  000075                     	ds	1
  1574  000076                     _build_time$5920:
  1575                           	callstack 0
  1576  000076                     ___flmul@grs:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x16
  1580  000076                     	ds	2
  1581  000078                     _build_time$5921:
  1582                           	callstack 0
  1583                           
  1584                           ; 2 bytes @ 0x18
  1585  000078                     	ds	2
  1586  00007A                     ___flmul@bexp:
  1587                           	callstack 0
  1588  00007A                     _build_time$5922:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x1A
  1592  00007A                     	ds	1
  1593  00007B                     ___flmul@prod:
  1594                           	callstack 0
  1595                           
  1596                           ; 4 bytes @ 0x1B
  1597  00007B                     	ds	1
  1598  00007C                     _build_time$5923:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x1C
  1602  00007C                     	ds	2
  1603  00007E                     _build_time$5924:
  1604                           	callstack 0
  1605                           
  1606                           ; 2 bytes @ 0x1E
  1607  00007E                     	ds	1
  1608  00007F                     ___flmul@temp:
  1609                           	callstack 0
  1610                           
  1611                           ; 2 bytes @ 0x1F
  1612  00007F                     	ds	1
  1613  000080                     parse_command@retval:
  1614                           	callstack 0
  1615  000080                     _build_time$5925:
  1616                           	callstack 0
  1617                           
  1618                           ; 2 bytes @ 0x20
  1619  000080                     	ds	1
  1620  000081                     ?_ADCto_uVoltage:
  1621                           	callstack 0
  1622  000081                     ?_fround:
  1623                           	callstack 0
  1624  000081                     ?_scale:
  1625                           	callstack 0
  1626  000081                     ADCto_uVoltage@raw_adc:
  1627                           	callstack 0
  1628  000081                     parse_command@cmd:
  1629                           	callstack 0
  1630                           
  1631                           ; 11 bytes @ 0x21
  1632  000081                     	ds	1
  1633  000082                     _build_time$5926:
  1634                           	callstack 0
  1635                           
  1636                           ; 2 bytes @ 0x22
  1637  000082                     	ds	1
  1638  000083                     ADCto_uVoltage@gain:
  1639                           	callstack 0
  1640                           
  1641                           ; 1 bytes @ 0x23
  1642  000083                     	ds	1
  1643  000084                     _build_time$5927:
  1644                           	callstack 0
  1645                           
  1646                           ; 2 bytes @ 0x24
  1647  000084                     	ds	1
  1648  000085                     ADCto_uVoltage@uVolt:
  1649                           	callstack 0
  1650  000085                     _fround$7088:
  1651                           	callstack 0
  1652  000085                     _scale$7089:
  1653                           	callstack 0
  1654                           
  1655                           ; 4 bytes @ 0x25
  1656  000085                     	ds	1
  1657  000086                     _build_time$5928:
  1658                           	callstack 0
  1659                           
  1660                           ; 2 bytes @ 0x26
  1661  000086                     	ds	2
  1662  000088                     _build_time$5929:
  1663                           	callstack 0
  1664                           
  1665                           ; 2 bytes @ 0x28
  1666  000088                     	ds	1
  1667  000089                     scale@scl:
  1668                           	callstack 0
  1669  000089                     ADCto_uVoltage@lsb:
  1670                           	callstack 0
  1671  000089                     _fround$7087:
  1672                           	callstack 0
  1673                           
  1674                           ; 4 bytes @ 0x29
  1675  000089                     	ds	1
  1676  00008A                     _build_time$5934:
  1677                           	callstack 0
  1678                           
  1679                           ; 2 bytes @ 0x2A
  1680  00008A                     	ds	2
  1681  00008C                     parse_command@seq:
  1682                           	callstack 0
  1683  00008C                     _build_time$5935:
  1684                           	callstack 0
  1685                           
  1686                           ; 2 bytes @ 0x2C
  1687  00008C                     	ds	1
  1688  00008D                     parse_command@chno:
  1689                           	callstack 0
  1690  00008D                     fround@prec:
  1691                           	callstack 0
  1692                           
  1693                           ; 1 bytes @ 0x2D
  1694  00008D                     	ds	1
  1695  00008E                     ?___fladd:
  1696                           	callstack 0
  1697  00008E                     parse_command@idx:
  1698                           	callstack 0
  1699  00008E                     _build_time$5939:
  1700                           	callstack 0
  1701  00008E                     ___fladd@b:
  1702                           	callstack 0
  1703                           
  1704                           ; 4 bytes @ 0x2E
  1705  00008E                     	ds	1
  1706  00008F                     parse_command@paramidx:
  1707                           	callstack 0
  1708                           
  1709                           ; 1 bytes @ 0x2F
  1710  00008F                     	ds	1
  1711  000090                     parse_command@cmdidx:
  1712                           	callstack 0
  1713  000090                     _build_time$5943:
  1714                           	callstack 0
  1715                           
  1716                           ; 2 bytes @ 0x30
  1717  000090                     	ds	1
  1718  000091                     parse_command@ch:
  1719                           	callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x31
  1722  000091                     	ds	1
  1723  000092                     _build_time$5947:
  1724                           	callstack 0
  1725  000092                     ___fladd@a:
  1726                           	callstack 0
  1727                           
  1728                           ; 4 bytes @ 0x32
  1729  000092                     	ds	2
  1730  000094                     build_time@tm:
  1731                           	callstack 0
  1732                           
  1733                           ; 18 bytes @ 0x34
  1734  000094                     	ds	2
  1735  000096                     ??___fladd:
  1736                           
  1737                           ; 1 bytes @ 0x36
  1738  000096                     	ds	4
  1739  00009A                     ___fladd@signs:
  1740                           	callstack 0
  1741                           
  1742                           ; 1 bytes @ 0x3A
  1743  00009A                     	ds	1
  1744  00009B                     ___fladd@aexp:
  1745                           	callstack 0
  1746                           
  1747                           ; 1 bytes @ 0x3B
  1748  00009B                     	ds	1
  1749  00009C                     ___fladd@bexp:
  1750                           	callstack 0
  1751                           
  1752                           ; 1 bytes @ 0x3C
  1753  00009C                     	ds	1
  1754  00009D                     ___fladd@grs:
  1755                           	callstack 0
  1756                           
  1757                           ; 1 bytes @ 0x3D
  1758  00009D                     	ds	1
  1759  00009E                     ?_floor:
  1760                           	callstack 0
  1761  00009E                     ?___flsub:
  1762                           	callstack 0
  1763  00009E                     ?_eval_poly:
  1764                           	callstack 0
  1765  00009E                     sensor_temp_fahrenheit@temp:
  1766                           	callstack 0
  1767  00009E                     ___flsub@b:
  1768                           	callstack 0
  1769  00009E                     floor@x:
  1770                           	callstack 0
  1771  00009E                     eval_poly@x:
  1772                           	callstack 0
  1773                           
  1774                           ; 4 bytes @ 0x3E
  1775  00009E                     	ds	4
  1776  0000A2                     eval_poly@d:
  1777                           	callstack 0
  1778  0000A2                     ___flsub@a:
  1779                           	callstack 0
  1780  0000A2                     floor@i:
  1781                           	callstack 0
  1782                           
  1783                           ; 4 bytes @ 0x42
  1784  0000A2                     	ds	2
  1785  0000A4                     eval_poly@n:
  1786                           	callstack 0
  1787                           
  1788                           ; 2 bytes @ 0x44
  1789  0000A4                     	ds	2
  1790  0000A6                     ??_nvm_init:
  1791  0000A6                     ??_eval_poly:
  1792  0000A6                     ?_sprintf:
  1793                           	callstack 0
  1794  0000A6                     ?___fldiv:
  1795                           	callstack 0
  1796  0000A6                     sprintf@sp:
  1797                           	callstack 0
  1798  0000A6                     floor@expon:
  1799                           	callstack 0
  1800  0000A6                     ___fldiv@b:
  1801                           	callstack 0
  1802                           
  1803                           ; 4 bytes @ 0x46
  1804  0000A6                     	ds	2
  1805  0000A8                     sprintf@f:
  1806                           	callstack 0
  1807                           
  1808                           ; 2 bytes @ 0x48
  1809  0000A8                     	ds	2
  1810  0000AA                     ___fldiv@a:
  1811                           	callstack 0
  1812  0000AA                     eval_poly@res:
  1813                           	callstack 0
  1814                           
  1815                           ; 4 bytes @ 0x4A
  1816  0000AA                     	ds	2
  1817  0000AC                     nvm_init@pdesc:
  1818                           	callstack 0
  1819                           
  1820                           ; 2 bytes @ 0x4C
  1821  0000AC                     	ds	2
  1822  0000AE                     ??_sprintf:
  1823  0000AE                     ??___fldiv:
  1824  0000AE                     ?_log:
  1825                           	callstack 0
  1826  0000AE                     ?_ldexp:
  1827                           	callstack 0
  1828  0000AE                     nvm_init@i:
  1829                           	callstack 0
  1830  0000AE                     ldexp@value:
  1831                           	callstack 0
  1832  0000AE                     log@x:
  1833                           	callstack 0
  1834                           
  1835                           ; 4 bytes @ 0x4E
  1836  0000AE                     	ds	4
  1837  0000B2                     ldexp@newexp:
  1838                           	callstack 0
  1839  0000B2                     log@exponent:
  1840                           	callstack 0
  1841  0000B2                     ___fldiv@rem:
  1842                           	callstack 0
  1843  0000B2                     _sprintf$7090:
  1844                           	callstack 0
  1845                           
  1846                           ; 4 bytes @ 0x52
  1847  0000B2                     	ds	2
  1848  0000B4                     ??_ldexp:
  1849                           
  1850                           ; 1 bytes @ 0x54
  1851  0000B4                     	ds	2
  1852  0000B6                     ___fldiv@sign:
  1853                           	callstack 0
  1854  0000B6                     sprintf@ap:
  1855                           	callstack 0
  1856                           
  1857                           ; 2 bytes @ 0x56
  1858  0000B6                     	ds	1
  1859  0000B7                     ___fldiv@new_exp:
  1860                           	callstack 0
  1861                           
  1862                           ; 2 bytes @ 0x57
  1863  0000B7                     	ds	1
  1864  0000B8                     sprintf@ccnt:
  1865                           	callstack 0
  1866                           
  1867                           ; 2 bytes @ 0x58
  1868  0000B8                     	ds	1
  1869  0000B9                     ___fldiv@grs:
  1870                           	callstack 0
  1871                           
  1872                           ; 4 bytes @ 0x59
  1873  0000B9                     	ds	1
  1874  0000BA                     sprintf@flag:
  1875                           	callstack 0
  1876                           
  1877                           ; 2 bytes @ 0x5A
  1878  0000BA                     	ds	2
  1879  0000BC                     sprintf@val:
  1880                           	callstack 0
  1881                           
  1882                           ; 4 bytes @ 0x5C
  1883  0000BC                     	ds	1
  1884  0000BD                     ___fldiv@bexp:
  1885                           	callstack 0
  1886                           
  1887                           ; 1 bytes @ 0x5D
  1888  0000BD                     	ds	1
  1889  0000BE                     ___fldiv@aexp:
  1890                           	callstack 0
  1891                           
  1892                           ; 1 bytes @ 0x5E
  1893  0000BE                     	ds	1
  1894  0000BF                     ?__atof:
  1895                           	callstack 0
  1896  0000BF                     ?_gasSensor_calib:
  1897                           	callstack 0
  1898  0000BF                     ?_exp:
  1899                           	callstack 0
  1900  0000BF                     ?_Kalman_updateEstimate:
  1901                           	callstack 0
  1902  0000BF                     sht3x_measure_read@temp:
  1903                           	callstack 0
  1904  0000BF                     Kalman_updateEstimate@pObj:
  1905                           	callstack 0
  1906  0000BF                     __atof@str:
  1907                           	callstack 0
  1908  0000BF                     gasSensor_calib@gas_uVolt:
  1909                           	callstack 0
  1910  0000BF                     exp@x:
  1911                           	callstack 0
  1912  0000BF                     _CMP_temp_read$7084:
  1913                           	callstack 0
  1914                           
  1915                           ; 4 bytes @ 0x5F
  1916  0000BF                     	ds	1
  1917  0000C0                     sprintf@eexp:
  1918                           	callstack 0
  1919                           
  1920                           ; 2 bytes @ 0x60
  1921  0000C0                     	ds	1
  1922  0000C1                     sht3x_measure_read@humi:
  1923                           	callstack 0
  1924  0000C1                     Kalman_updateEstimate@mea:
  1925                           	callstack 0
  1926                           
  1927                           ; 4 bytes @ 0x61
  1928  0000C1                     	ds	1
  1929  0000C2                     sprintf@tmpval:
  1930                           	callstack 0
  1931                           
  1932                           ; 4 bytes @ 0x62
  1933  0000C2                     	ds	1
  1934  0000C3                     ??__atof:
  1935  0000C3                     ??_sht3x_measure_read:
  1936  0000C3                     CMP_temp_read@chNum:
  1937                           	callstack 0
  1938  0000C3                     gasSensor_calib@gas_percent:
  1939                           	callstack 0
  1940  0000C3                     _exp$7093:
  1941                           	callstack 0
  1942                           
  1943                           ; 4 bytes @ 0x63
  1944  0000C3                     	ds	1
  1945  0000C4                     sht3x_measure_read@raw_temp:
  1946                           	callstack 0
  1947  0000C4                     CMP_temp_read@volt:
  1948                           	callstack 0
  1949                           
  1950                           ; 4 bytes @ 0x64
  1951  0000C4                     	ds	1
  1952  0000C5                     _Kalman_updateEstimate$7080:
  1953                           	callstack 0
  1954                           
  1955                           ; 4 bytes @ 0x65
  1956  0000C5                     	ds	1
  1957  0000C6                     sprintf@prec:
  1958                           	callstack 0
  1959                           
  1960                           ; 2 bytes @ 0x66
  1961  0000C6                     	ds	1
  1962  0000C7                     __atof@sign:
  1963                           	callstack 0
  1964  0000C7                     exp@exponent:
  1965                           	callstack 0
  1966  0000C7                     _gasSensor_calib$7081:
  1967                           	callstack 0
  1968                           
  1969                           ; 4 bytes @ 0x67
  1970  0000C7                     	ds	1
  1971  0000C8                     CMP_temp_read@raw:
  1972                           	callstack 0
  1973  0000C8                     sht3x_measure_read@raw_humi:
  1974                           	callstack 0
  1975  0000C8                     sprintf@fval:
  1976                           	callstack 0
  1977                           
  1978                           ; 4 bytes @ 0x68
  1979  0000C8                     	ds	1
  1980  0000C9                     exp@sign:
  1981                           	callstack 0
  1982  0000C9                     __atof@cnt:
  1983                           	callstack 0
  1984  0000C9                     _Kalman_updateEstimate$7079:
  1985                           	callstack 0
  1986                           
  1987                           ; 4 bytes @ 0x69
  1988  0000C9                     	ds	1
  1989  0000CA                     ?_pow:
  1990                           	callstack 0
  1991  0000CA                     pow@x:
  1992                           	callstack 0
  1993                           
  1994                           ; 4 bytes @ 0x6A
  1995  0000CA                     	ds	1
  1996  0000CB                     __atof@ret:
  1997                           	callstack 0
  1998  0000CB                     gasSensor_calib@span:
  1999                           	callstack 0
  2000                           
  2001                           ; 12 bytes @ 0x6B
  2002  0000CB                     	ds	1
  2003  0000CC                     sprintf@c:
  2004                           	callstack 0
  2005  0000CC                     sht3x_measure_nonblock_read@temp:
  2006                           	callstack 0
  2007                           
  2008                           ; 2 bytes @ 0x6C
  2009  0000CC                     	ds	1
  2010  0000CD                     ??_tes0902_data_parsing:
  2011  0000CD                     ?__ftoa:
  2012                           	callstack 0
  2013  0000CD                     __ftoa@num:
  2014                           	callstack 0
  2015                           
  2016                           ; 4 bytes @ 0x6D
  2017  0000CD                     	ds	1
  2018  0000CE                     sht3x_measure_nonblock_read@humi:
  2019                           	callstack 0
  2020  0000CE                     pow@y:
  2021                           	callstack 0
  2022                           
  2023                           ; 4 bytes @ 0x6E
  2024  0000CE                     	ds	1
  2025  0000CF                     tes0902_data_parsing@cmd:
  2026                           	callstack 0
  2027  0000CF                     __atof@dotpos:
  2028                           	callstack 0
  2029                           
  2030                           ; 2 bytes @ 0x6F
  2031  0000CF                     	ds	1
  2032  0000D0                     Co2_measure_task@rev_data:
  2033                           	callstack 0
  2034  0000D0                     sht3x_measure_nonblock_read@cmd:
  2035                           	callstack 0
  2036                           
  2037                           ; 2 bytes @ 0x70
  2038  0000D0                     	ds	1
  2039  0000D1                     __atof@p:
  2040                           	callstack 0
  2041  0000D1                     __ftoa@str:
  2042                           	callstack 0
  2043                           
  2044                           ; 2 bytes @ 0x71
  2045  0000D1                     	ds	1
  2046  0000D2                     sensor_read_temp_humi@temp:
  2047                           	callstack 0
  2048  0000D2                     _pow$7091:
  2049                           	callstack 0
  2050                           
  2051                           ; 4 bytes @ 0x72
  2052  0000D2                     	ds	1
  2053  0000D3                     update_command@status:
  2054                           	callstack 0
  2055  0000D3                     __ftoa@len:
  2056                           	callstack 0
  2057                           
  2058                           ; 2 bytes @ 0x73
  2059  0000D3                     	ds	1
  2060  0000D4                     sensor_read_temp_humi@humi:
  2061                           	callstack 0
  2062                           
  2063                           ; 2 bytes @ 0x74
  2064  0000D4                     	ds	1
  2065  0000D5                     ??_update_command:
  2066  0000D5                     build_response@status:
  2067                           	callstack 0
  2068                           
  2069                           ; 2 bytes @ 0x75
  2070  0000D5                     	ds	1
  2071  0000D6                     tempSensor_read@temp:
  2072                           	callstack 0
  2073  0000D6                     _pow$7092:
  2074                           	callstack 0
  2075                           
  2076                           ; 4 bytes @ 0x76
  2077  0000D6                     	ds	1
  2078  0000D7                     ??_build_response:
  2079  0000D7                     _update_command$2465:
  2080                           	callstack 0
  2081  0000D7                     gasSensor_calib@CalibrationGas:
  2082                           	callstack 0
  2083                           
  2084                           ; 12 bytes @ 0x77
  2085  0000D7                     	ds	2
  2086  0000D9                     update_command@i:
  2087                           	callstack 0
  2088  0000D9                     _build_response$2481:
  2089                           	callstack 0
  2090                           
  2091                           ; 2 bytes @ 0x79
  2092  0000D9                     	ds	1
  2093  0000DA                     pow@sign:
  2094                           	callstack 0
  2095  0000DA                     tempSensor_read@humi:
  2096                           	callstack 0
  2097                           
  2098                           ; 4 bytes @ 0x7A
  2099  0000DA                     	ds	1
  2100  0000DB                     update_command@apply:
  2101                           	callstack 0
  2102  0000DB                     build_response@temp:
  2103                           	callstack 0
  2104  0000DB                     pow@yi:
  2105                           	callstack 0
  2106                           
  2107                           ; 4 bytes @ 0x7B
  2108  0000DB                     	ds	1
  2109  0000DC                     update_command@chno:
  2110                           	callstack 0
  2111                           
  2112                           ; 1 bytes @ 0x7C
  2113  0000DC                     	ds	3
  2114  0000DF                     ?_gasSensor_temperature_cmp_coefficient:
  2115                           	callstack 0
  2116  0000DF                     build_response@temp_2492:
  2117                           	callstack 0
  2118  0000DF                     gasSensor_temperature_cmp_coefficient@temp:
  2119                           	callstack 0
  2120                           
  2121                           ; 4 bytes @ 0x7F
  2122  0000DF                     	ds	4
  2123  0000E3                     gasSensor_temperature_cmp_coefficient@chNum:
  2124                           	callstack 0
  2125  0000E3                     build_response@i:
  2126                           	callstack 0
  2127  0000E3                     gasSensor_calib@gas_ppm:
  2128                           	callstack 0
  2129                           
  2130                           ; 4 bytes @ 0x83
  2131  0000E3                     	ds	1
  2132  0000E4                     _gasSensor_temperature_cmp_coefficient$7082:
  2133                           	callstack 0
  2134                           
  2135                           ; 4 bytes @ 0x84
  2136  0000E4                     	ds	1
  2137  0000E5                     build_response@chNum:
  2138                           	callstack 0
  2139                           
  2140                           ; 1 bytes @ 0x85
  2141  0000E5                     	ds	1
  2142  0000E6                     build_response@chNum_2487:
  2143                           	callstack 0
  2144                           
  2145                           ; 1 bytes @ 0x86
  2146  0000E6                     	ds	1
  2147  0000E7                     build_response@chno:
  2148                           	callstack 0
  2149  0000E7                     gasSensor_calib@baseline:
  2150                           	callstack 0
  2151                           
  2152                           ; 12 bytes @ 0x87
  2153  0000E7                     	ds	1
  2154  0000E8                     build_response@len:
  2155                           	callstack 0
  2156  0000E8                     _gasSensor_temperature_cmp_coefficient$7083:
  2157                           	callstack 0
  2158                           
  2159                           ; 4 bytes @ 0x88
  2160  0000E8                     	ds	1
  2161  0000E9                     _atcommand_task$2398:
  2162                           	callstack 0
  2163                           
  2164                           ; 2 bytes @ 0x89
  2165  0000E9                     	ds	2
  2166  0000EB                     atcommand_task@ch:
  2167                           	callstack 0
  2168                           
  2169                           ; 1 bytes @ 0x8B
  2170  0000EB                     	ds	1
  2171  0000EC                     gasSensor_temperature_cmp_coefficient@coeff:
  2172                           	callstack 0
  2173                           
  2174                           ; 4 bytes @ 0x8C
  2175  0000EC                     	ds	7
  2176  0000F3                     gasSensor_calib@chNum:
  2177                           	callstack 0
  2178                           
  2179                           ; 1 bytes @ 0x93
  2180  0000F3                     	ds	1
  2181  0000F4                     ??_sensMeasure_task:
  2182                           
  2183                           ; 1 bytes @ 0x94
  2184  0000F4                     	ds	4
  2185                           
  2186                           	psect	cstackCOMRAM
  2187  000001                     __pcstackCOMRAM:
  2188                           	callstack 0
  2189  000001                     usart_getc@c:
  2190                           	callstack 0
  2191  000001                     i1buffer_en_queue@queue:
  2192                           	callstack 0
  2193                           
  2194                           ; 2 bytes @ 0x0
  2195  000001                     	ds	2
  2196  000003                     i1buffer_en_queue@ch:
  2197                           	callstack 0
  2198                           
  2199                           ; 1 bytes @ 0x2
  2200  000003                     	ds	1
  2201  000004                     ??i1_buffer_en_queue:
  2202                           
  2203                           ; 1 bytes @ 0x3
  2204  000004                     	ds	3
  2205  000007                     ??_uart_getBuffer:
  2206                           
  2207                           ; 1 bytes @ 0x6
  2208  000007                     	ds	7
  2209  00000E                     uart_getBuffer@ch:
  2210                           	callstack 0
  2211                           
  2212                           ; 1 bytes @ 0xD
  2213  00000E                     	ds	1
  2214  00000F                     ??_WDT_initialize:
  2215  00000F                     ??_isdigit:
  2216  00000F                     ??_USBStdGetDscHandler:
  2217  00000F                     ??_USBStdGetStatusHandler:
  2218  00000F                     ?_Calculate_CRC16:
  2219                           	callstack 0
  2220  00000F                     ?__strlen:
  2221                           	callstack 0
  2222  00000F                     ?__strcpy:
  2223                           	callstack 0
  2224  00000F                     ?_get_product_desc:
  2225                           	callstack 0
  2226  00000F                     ?_USBTransferOnePacket:
  2227                           	callstack 0
  2228  00000F                     ?___wmul:
  2229                           	callstack 0
  2230  00000F                     ?___awmod:
  2231                           	callstack 0
  2232  00000F                     ?___lwmod:
  2233                           	callstack 0
  2234  00000F                     ?_FSR_set_LSB:
  2235                           	callstack 0
  2236  00000F                     ?__tdiv_to_l_:
  2237                           	callstack 0
  2238  00000F                     ?__div_to_l_:
  2239                           	callstack 0
  2240  00000F                     ?___lmul:
  2241                           	callstack 0
  2242  00000F                     ?___lldiv:
  2243                           	callstack 0
  2244  00000F                     ?___aldiv:
  2245                           	callstack 0
  2246  00000F                     ?___almod:
  2247                           	callstack 0
  2248  00000F                     ?___flneg:
  2249                           	callstack 0
  2250  00000F                     ?___llmod:
  2251                           	callstack 0
  2252  00000F                     i2c_init@speed:
  2253                           	callstack 0
  2254  00000F                     I2C_Write@I2cWriteData:
  2255                           	callstack 0
  2256  00000F                     I2C_Read@ack:
  2257                           	callstack 0
  2258  00000F                     LED_On@led:
  2259                           	callstack 0
  2260  00000F                     LED_Enable@led:
  2261                           	callstack 0
  2262  00000F                     lmp91000_enable@chNum:
  2263                           	callstack 0
  2264  00000F                     lmp91000_disable@chNum:
  2265                           	callstack 0
  2266  00000F                     usart_putc@c:
  2267                           	callstack 0
  2268  00000F                     check_param@param:
  2269                           	callstack 0
  2270  00000F                     USBTransferOnePacket@dir:
  2271                           	callstack 0
  2272  00000F                     USBConfigureEndpoint@direction:
  2273                           	callstack 0
  2274  00000F                     USBCtrlTrfTxService@byteToSend:
  2275                           	callstack 0
  2276  00000F                     USBCtrlTrfRxService@i:
  2277                           	callstack 0
  2278  00000F                     crc8@data:
  2279                           	callstack 0
  2280  00000F                     Calculate_CRC16@crc:
  2281                           	callstack 0
  2282  00000F                     Kalman_setMeasurementError@pObj:
  2283                           	callstack 0
  2284  00000F                     Kalman_setEstimateError@pObj:
  2285                           	callstack 0
  2286  00000F                     Kalman_setProcessNoise@pObj:
  2287                           	callstack 0
  2288  00000F                     nvm_serialno_check@sno:
  2289                           	callstack 0
  2290  00000F                     SYSTEM_Initialize@pll_startup_counter:
  2291                           	callstack 0
  2292  00000F                     DelayRoutine@DelayAmount:
  2293                           	callstack 0
  2294  00000F                     __strcpy@dest:
  2295                           	callstack 0
  2296  00000F                     __strlen@source:
  2297                           	callstack 0
  2298  00000F                     __strclr@dest:
  2299                           	callstack 0
  2300  00000F                     __isdigit@src:
  2301                           	callstack 0
  2302  00000F                     buffer_init@queue:
  2303                           	callstack 0
  2304  00000F                     buffer_en_queue@queue:
  2305                           	callstack 0
  2306  00000F                     buffer_de_queue@queue:
  2307                           	callstack 0
  2308  00000F                     buffer_de_queue_bool@queue:
  2309                           	callstack 0
  2310  00000F                     ___wmul@multiplier:
  2311                           	callstack 0
  2312  00000F                     ___awmod@dividend:
  2313                           	callstack 0
  2314  00000F                     ___lwmod@dividend:
  2315                           	callstack 0
  2316  00000F                     memcpy@d1:
  2317                           	callstack 0
  2318  00000F                     memset@p1:
  2319                           	callstack 0
  2320  00000F                     flash_readBytes@startaddr:
  2321                           	callstack 0
  2322  00000F                     flash_writeBytes@startaddr:
  2323                           	callstack 0
  2324  00000F                     flash_clear@startaddr:
  2325                           	callstack 0
  2326  00000F                     ___lmul@multiplier:
  2327                           	callstack 0
  2328  00000F                     ___lldiv@dividend:
  2329                           	callstack 0
  2330  00000F                     ___aldiv@dividend:
  2331                           	callstack 0
  2332  00000F                     ___almod@dividend:
  2333                           	callstack 0
  2334  00000F                     __div_to_l_@f1:
  2335                           	callstack 0
  2336  00000F                     ___flge@ff1:
  2337                           	callstack 0
  2338  00000F                     ___flneg@f1:
  2339                           	callstack 0
  2340  00000F                     __tdiv_to_l_@f1:
  2341                           	callstack 0
  2342  00000F                     ___llmod@dividend:
  2343                           	callstack 0
  2344                           
  2345                           ; 4 bytes @ 0xE
  2346  00000F                     	ds	1
  2347  000010                     ??_USBConfigureEndpoint:
  2348  000010                     ?_param_copy:
  2349                           	callstack 0
  2350  000010                     I2C_Read@I2CReadData:
  2351                           	callstack 0
  2352  000010                     WDT_initialize@enabled:
  2353                           	callstack 0
  2354  000010                     USBCtrlTrfRxService@byteToRead:
  2355                           	callstack 0
  2356  000010                     USBCtrlTrfInHandler@lastDTS:
  2357                           	callstack 0
  2358  000010                     _isdigit$6494:
  2359                           	callstack 0
  2360  000010                     i2c_writeData@wrptr:
  2361                           	callstack 0
  2362  000010                     usart_writeBytes@wrptr:
  2363                           	callstack 0
  2364  000010                     param_copy@src1:
  2365                           	callstack 0
  2366  000010                     _led_warmup$2567:
  2367                           	callstack 0
  2368  000010                     USBTransferOnePacket@data:
  2369                           	callstack 0
  2370  000010                     USBStdGetStatusHandler@p:
  2371                           	callstack 0
  2372                           
  2373                           ; 2 bytes @ 0xF
  2374  000010                     	ds	1
  2375  000011                     ??_buffer_de_queue:
  2376  000011                     crc8@len:
  2377                           	callstack 0
  2378  000011                     buffer_en_queue@ch:
  2379                           	callstack 0
  2380  000011                     isdigit@c:
  2381                           	callstack 0
  2382  000011                     i2c_readBytes@rdptr:
  2383                           	callstack 0
  2384  000011                     Calculate_CRC16@crc_length:
  2385                           	callstack 0
  2386  000011                     SYSTEM_Initialize@pll_startup_counter_3440:
  2387                           	callstack 0
  2388  000011                     __strcpy@source:
  2389                           	callstack 0
  2390  000011                     __strlen@sc:
  2391                           	callstack 0
  2392  000011                     __strclr@n:
  2393                           	callstack 0
  2394  000011                     __isdigit@n:
  2395                           	callstack 0
  2396  000011                     buffer_de_queue_bool@ch:
  2397                           	callstack 0
  2398  000011                     ___wmul@multiplicand:
  2399                           	callstack 0
  2400  000011                     ___awmod@divisor:
  2401                           	callstack 0
  2402  000011                     ___lwmod@divisor:
  2403                           	callstack 0
  2404  000011                     memcpy@s1:
  2405                           	callstack 0
  2406  000011                     memset@c:
  2407                           	callstack 0
  2408  000011                     Kalman_setMeasurementError@mea_e:
  2409                           	callstack 0
  2410  000011                     Kalman_setEstimateError@est_e:
  2411                           	callstack 0
  2412  000011                     Kalman_setProcessNoise@q:
  2413                           	callstack 0
  2414                           
  2415                           ; 4 bytes @ 0x10
  2416  000011                     	ds	1
  2417  000012                     ??_buffer_en_queue:
  2418  000012                     i2c_writeData@len:
  2419                           	callstack 0
  2420  000012                     crc8@i:
  2421                           	callstack 0
  2422  000012                     usart_writeBytes@len:
  2423                           	callstack 0
  2424  000012                     nvm_serialno_check@i:
  2425                           	callstack 0
  2426  000012                     USBTransferOnePacket@len:
  2427                           	callstack 0
  2428  000012                     param_copy@src2:
  2429                           	callstack 0
  2430  000012                     _led_task$2572:
  2431                           	callstack 0
  2432                           
  2433                           ; 2 bytes @ 0x11
  2434  000012                     	ds	1
  2435  000013                     ??_Calculate_CRC16:
  2436  000013                     ??_usart_writeBytes:
  2437  000013                     ??__strcpy:
  2438  000013                     ??_buffer_de_queue_bool:
  2439  000013                     ??_USBTransferOnePacket:
  2440  000013                     ?_fabs:
  2441                           	callstack 0
  2442  000013                     i2c_writeData@isStop:
  2443                           	callstack 0
  2444  000013                     i2c_readBytes@len:
  2445                           	callstack 0
  2446  000013                     crc8@j:
  2447                           	callstack 0
  2448  000013                     FSR_set_LSB@gain:
  2449                           	callstack 0
  2450  000013                     SYSTEM_Initialize@state:
  2451                           	callstack 0
  2452  000013                     __isdigit@ch:
  2453                           	callstack 0
  2454  000013                     ___awmod@counter:
  2455                           	callstack 0
  2456  000013                     ___lwmod@counter:
  2457                           	callstack 0
  2458  000013                     flash_readBytes@flash_array:
  2459                           	callstack 0
  2460  000013                     flash_writeBytes@flash_array:
  2461                           	callstack 0
  2462  000013                     atcommand_compare@src1:
  2463                           	callstack 0
  2464  000013                     split_param@src:
  2465                           	callstack 0
  2466  000013                     putUSBUSART@data:
  2467                           	callstack 0
  2468  000013                     ___wmul@product:
  2469                           	callstack 0
  2470  000013                     memcpy@n:
  2471                           	callstack 0
  2472  000013                     memset@n:
  2473                           	callstack 0
  2474  000013                     flash_clear@endaddr:
  2475                           	callstack 0
  2476  000013                     ___lmul@multiplicand:
  2477                           	callstack 0
  2478  000013                     ___lldiv@divisor:
  2479                           	callstack 0
  2480  000013                     ___aldiv@divisor:
  2481                           	callstack 0
  2482  000013                     ___almod@divisor:
  2483                           	callstack 0
  2484  000013                     __div_to_l_@f2:
  2485                           	callstack 0
  2486  000013                     ___flge@ff2:
  2487                           	callstack 0
  2488  000013                     __tdiv_to_l_@f2:
  2489                           	callstack 0
  2490  000013                     ___llmod@divisor:
  2491                           	callstack 0
  2492  000013                     fabs@d:
  2493                           	callstack 0
  2494                           
  2495                           ; 4 bytes @ 0x12
  2496  000013                     	ds	1
  2497  000014                     ??_i2c_readBytes:
  2498  000014                     ?_isleap:
  2499                           	callstack 0
  2500  000014                     i2c_writeData@i:
  2501                           	callstack 0
  2502  000014                     crc8@crc:
  2503                           	callstack 0
  2504  000014                     USBConfigureEndpoint@EPNum:
  2505                           	callstack 0
  2506  000014                     buffer_de_queue@ch:
  2507                           	callstack 0
  2508  000014                     ___awmod@sign:
  2509                           	callstack 0
  2510  000014                     param_copy@i:
  2511                           	callstack 0
  2512  000014                     isleap@yr:
  2513                           	callstack 0
  2514                           
  2515                           ; 2 bytes @ 0x13
  2516  000014                     	ds	1
  2517  000015                     ?___awdiv:
  2518                           	callstack 0
  2519  000015                     ?___lwdiv:
  2520                           	callstack 0
  2521  000015                     putUSBUSART@length:
  2522                           	callstack 0
  2523  000015                     flash_readBytes@num_bytes:
  2524                           	callstack 0
  2525  000015                     flash_writeBytes@num_bytes:
  2526                           	callstack 0
  2527  000015                     i2c_writeBytes@wrptr:
  2528                           	callstack 0
  2529  000015                     check_crc8@data:
  2530                           	callstack 0
  2531  000015                     atcommand_compare@src2:
  2532                           	callstack 0
  2533  000015                     split_param@params:
  2534                           	callstack 0
  2535  000015                     Set_KalmanFilter_Sensitivity@pObj:
  2536                           	callstack 0
  2537  000015                     USBConfigureEndpoint@handle:
  2538                           	callstack 0
  2539  000015                     __strcpy@i:
  2540                           	callstack 0
  2541  000015                     ___awdiv@dividend:
  2542                           	callstack 0
  2543  000015                     ___lwdiv@dividend:
  2544                           	callstack 0
  2545  000015                     memcpy@d:
  2546                           	callstack 0
  2547  000015                     memset@p:
  2548                           	callstack 0
  2549                           
  2550                           ; 2 bytes @ 0x14
  2551  000015                     	ds	1
  2552  000016                     ??_isleap:
  2553  000016                     param_copy@ch:
  2554                           	callstack 0
  2555  000016                     Calculate_CRC16@polynomial:
  2556                           	callstack 0
  2557  000016                     usart_writeBytes@i:
  2558                           	callstack 0
  2559  000016                     write_command@buff:
  2560                           	callstack 0
  2561  000016                     tes0902_data_receive@rev_data:
  2562                           	callstack 0
  2563                           
  2564                           ; 8 bytes @ 0x15
  2565  000016                     	ds	1
  2566  000017                     ??__tdiv_to_l_:
  2567  000017                     ??_flash_writeBytes:
  2568  000017                     ??___flge:
  2569  000017                     flash_clear@flag:
  2570                           	callstack 0
  2571  000017                     i2c_writeBytes@len:
  2572                           	callstack 0
  2573  000017                     check_crc8@nbrOfBytes:
  2574                           	callstack 0
  2575  000017                     atcommand_compare@n:
  2576                           	callstack 0
  2577  000017                     split_param@m:
  2578                           	callstack 0
  2579  000017                     Set_KalmanFilter_Sensitivity@e_level:
  2580                           	callstack 0
  2581  000017                     USBDeviceInit@i:
  2582                           	callstack 0
  2583  000017                     USBEnableEndpoint@options:
  2584                           	callstack 0
  2585  000017                     USBTransferOnePacket@ep:
  2586                           	callstack 0
  2587  000017                     ___aldiv@counter:
  2588                           	callstack 0
  2589  000017                     ___almod@counter:
  2590                           	callstack 0
  2591  000017                     ___llmod@counter:
  2592                           	callstack 0
  2593  000017                     ___awdiv@divisor:
  2594                           	callstack 0
  2595  000017                     ___lwdiv@divisor:
  2596                           	callstack 0
  2597  000017                     memcpy@s:
  2598                           	callstack 0
  2599  000017                     flash_readBytes@flash_addr:
  2600                           	callstack 0
  2601  000017                     ___lmul@product:
  2602                           	callstack 0
  2603  000017                     ___lldiv@quotient:
  2604                           	callstack 0
  2605  000017                     __div_to_l_@quot:
  2606                           	callstack 0
  2607                           
  2608                           ; 4 bytes @ 0x16
  2609  000017                     	ds	1
  2610  000018                     flash_writeBytes@retval:
  2611                           	callstack 0
  2612  000018                     i2c_writeBytes@isStop:
  2613                           	callstack 0
  2614  000018                     check_crc8@checksum:
  2615                           	callstack 0
  2616  000018                     split_param@n:
  2617                           	callstack 0
  2618  000018                     ___aldiv@sign:
  2619                           	callstack 0
  2620  000018                     ___almod@sign:
  2621                           	callstack 0
  2622  000018                     _isleap$6519:
  2623                           	callstack 0
  2624  000018                     Calculate_CRC16@code:
  2625                           	callstack 0
  2626  000018                     atcommand_compare@channelno:
  2627                           	callstack 0
  2628  000018                     USBEnableEndpoint@p:
  2629                           	callstack 0
  2630  000018                     USBTransferOnePacket@handle:
  2631                           	callstack 0
  2632  000018                     flash_clear@flash_addr:
  2633                           	callstack 0
  2634  000018                     Set_KalmanFilter_Sensitivity@sensitivity:
  2635                           	callstack 0
  2636                           
  2637                           ; 4 bytes @ 0x17
  2638  000018                     	ds	1
  2639  000019                     ??_split_param:
  2640  000019                     flash_writeBytes@write_byte:
  2641                           	callstack 0
  2642  000019                     i2c_writeBytes@address:
  2643                           	callstack 0
  2644  000019                     check_crc8@crc:
  2645                           	callstack 0
  2646  000019                     ___awdiv@counter:
  2647                           	callstack 0
  2648  000019                     ___lwdiv@counter:
  2649                           	callstack 0
  2650  000019                     memcpy@tmp:
  2651                           	callstack 0
  2652  000019                     ___aldiv@quotient:
  2653                           	callstack 0
  2654                           
  2655                           ; 4 bytes @ 0x18
  2656  000019                     	ds	1
  2657  00001A                     ??_atcommand_compare:
  2658  00001A                     flash_writeBytes@flag:
  2659                           	callstack 0
  2660  00001A                     i2c_readBytes@address:
  2661                           	callstack 0
  2662  00001A                     lmp91000_set_GainRLoad@user_gain:
  2663                           	callstack 0
  2664  00001A                     lmp91000_set_Reference@source:
  2665                           	callstack 0
  2666  00001A                     lmp91000_set_Mode@fet:
  2667                           	callstack 0
  2668  00001A                     USBEnableEndpoint@ep:
  2669                           	callstack 0
  2670  00001A                     CDCTxService@i:
  2671                           	callstack 0
  2672  00001A                     ___awdiv@sign:
  2673                           	callstack 0
  2674  00001A                     i2c_writeBytes_to@wraddr:
  2675                           	callstack 0
  2676  00001A                     lmp91000_unlock@buff:
  2677                           	callstack 0
  2678  00001A                     sht3x_measure_start@cmd:
  2679                           	callstack 0
  2680  00001A                     sht3x_clear_status_reg@cmd:
  2681                           	callstack 0
  2682  00001A                     sht3x_heaterOff@cmd:
  2683                           	callstack 0
  2684  00001A                     Calculate_CRC16@shift:
  2685                           	callstack 0
  2686  00001A                     getsUSBUSART@buffer:
  2687                           	callstack 0
  2688  00001A                     ___lwdiv@quotient:
  2689                           	callstack 0
  2690  00001A                     __tdiv_to_l_@quot:
  2691                           	callstack 0
  2692                           
  2693                           ; 4 bytes @ 0x19
  2694  00001A                     	ds	1
  2695  00001B                     ?__atoi:
  2696                           	callstack 0
  2697  00001B                     ?_GasSensor_Zerofilter:
  2698                           	callstack 0
  2699  00001B                     i2c_readBytes@ackbit:
  2700                           	callstack 0
  2701  00001B                     lmp91000_set_GainRLoad@RLoad:
  2702                           	callstack 0
  2703  00001B                     lmp91000_set_Reference@IntZ:
  2704                           	callstack 0
  2705  00001B                     lmp91000_set_Mode@mode:
  2706                           	callstack 0
  2707  00001B                     split_param@len:
  2708                           	callstack 0
  2709  00001B                     CDCTxService@byte_to_send:
  2710                           	callstack 0
  2711  00001B                     ___lldiv@counter:
  2712                           	callstack 0
  2713  00001B                     __div_to_l_@cntr:
  2714                           	callstack 0
  2715  00001B                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2716                           	callstack 0
  2717  00001B                     __atoi@str:
  2718                           	callstack 0
  2719  00001B                     ___awdiv@quotient:
  2720                           	callstack 0
  2721  00001B                     flash_readBytes@tblptr_save:
  2722                           	callstack 0
  2723  00001B                     flash_writeBytes@flash_addr:
  2724                           	callstack 0
  2725  00001B                     GasSensor_Zerofilter@gasConcent:
  2726                           	callstack 0
  2727                           
  2728                           ; 4 bytes @ 0x1A
  2729  00001B                     	ds	1
  2730  00001C                     ??_sensor_sht3x_init:
  2731  00001C                     ?_months_to_days:
  2732                           	callstack 0
  2733  00001C                     ?_years_to_days:
  2734                           	callstack 0
  2735  00001C                     i2c_writeBytes_to@addrlen:
  2736                           	callstack 0
  2737  00001C                     i2c_readBytes@i:
  2738                           	callstack 0
  2739  00001C                     lmp91000_unlock@chNum:
  2740                           	callstack 0
  2741  00001C                     lmp91000_set_Reference@sign:
  2742                           	callstack 0
  2743  00001C                     split_param@ch:
  2744                           	callstack 0
  2745  00001C                     getsUSBUSART@len:
  2746                           	callstack 0
  2747  00001C                     __div_to_l_@exp1:
  2748                           	callstack 0
  2749  00001C                     lmp91000_set_GainRLoad@buff:
  2750                           	callstack 0
  2751  00001C                     lmp91000_set_Mode@buff:
  2752                           	callstack 0
  2753  00001C                     Calculate_CRC16@i:
  2754                           	callstack 0
  2755  00001C                     months_to_days@month:
  2756                           	callstack 0
  2757  00001C                     years_to_days@yr:
  2758                           	callstack 0
  2759  00001C                     usart_init@baudrate:
  2760                           	callstack 0
  2761                           
  2762                           ; 4 bytes @ 0x1B
  2763  00001C                     	ds	1
  2764  00001D                     ?___fltol:
  2765                           	callstack 0
  2766  00001D                     lmp91000_set_Reference@bias:
  2767                           	callstack 0
  2768  00001D                     split_param@i:
  2769                           	callstack 0
  2770  00001D                     i2c_writeBytes_to@wrptr:
  2771                           	callstack 0
  2772  00001D                     lmp91000_get_status@preg:
  2773                           	callstack 0
  2774  00001D                     sht3x_common_read@temp:
  2775                           	callstack 0
  2776  00001D                     ads1114_read_ready@rbuff:
  2777                           	callstack 0
  2778  00001D                     ads1114_read@raw_adc:
  2779                           	callstack 0
  2780  00001D                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2781                           	callstack 0
  2782  00001D                     ___fltol@f1:
  2783                           	callstack 0
  2784                           
  2785                           ; 4 bytes @ 0x1C
  2786  00001D                     	ds	1
  2787  00001E                     lmp91000_set_GainRLoad@chNum:
  2788                           	callstack 0
  2789  00001E                     lmp91000_set_Mode@reg:
  2790                           	callstack 0
  2791  00001E                     split_param@cnt:
  2792                           	callstack 0
  2793  00001E                     app_usb_task@numBytesRead:
  2794                           	callstack 0
  2795  00001E                     __tdiv_to_l_@cntr:
  2796                           	callstack 0
  2797  00001E                     lmp91000_set_Reference@buff:
  2798                           	callstack 0
  2799  00001E                     Calculate_CRC16@ret:
  2800                           	callstack 0
  2801  00001E                     tes0902_data_receive@rev_crc:
  2802                           	callstack 0
  2803                           
  2804                           ; 2 bytes @ 0x1D
  2805  00001E                     	ds	1
  2806  00001F                     ??__atoi:
  2807  00001F                     ??_ads1114_read:
  2808  00001F                     i2c_writeBytes_to@len:
  2809                           	callstack 0
  2810  00001F                     lmp91000_get_status@chNum:
  2811                           	callstack 0
  2812  00001F                     lmp91000_set_GainRLoad@reg:
  2813                           	callstack 0
  2814  00001F                     lmp91000_set_Mode@chNum:
  2815                           	callstack 0
  2816  00001F                     ads1114_read_ready@wbuff:
  2817                           	callstack 0
  2818  00001F                     app_usb_task@i:
  2819                           	callstack 0
  2820  00001F                     GasSensor_Zerofilter@chNum:
  2821                           	callstack 0
  2822  00001F                     __tdiv_to_l_@exp1:
  2823                           	callstack 0
  2824  00001F                     sht3x_common_read@humi:
  2825                           	callstack 0
  2826  00001F                     nvm_write_flash_all@flash:
  2827                           	callstack 0
  2828  00001F                     nvm_read_flash_all@flash:
  2829                           	callstack 0
  2830  00001F                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2831                           	callstack 0
  2832                           
  2833                           ; 2 bytes @ 0x1E
  2834  00001F                     	ds	1
  2835  000020                     ??_CRC_check:
  2836  000020                     ??_usart_init:
  2837  000020                     ??_years_to_days:
  2838  000020                     i2c_writeBytes_to@address:
  2839                           	callstack 0
  2840  000020                     lmp91000_get_status@wBuff:
  2841                           	callstack 0
  2842  000020                     lmp91000_set_Reference@chNum:
  2843                           	callstack 0
  2844  000020                     CMD_manual_cal@len:
  2845                           	callstack 0
  2846  000020                     CMD_set_ABC_on@value:
  2847                           	callstack 0
  2848  000020                     ads1114_read_ready@chNum:
  2849                           	callstack 0
  2850  000020                     atcommand_compare@no:
  2851                           	callstack 0
  2852  000020                     tes0902_data_receive@data_len:
  2853                           	callstack 0
  2854  000020                     GasSensor_Zerofilter@retval:
  2855                           	callstack 0
  2856                           
  2857                           ; 4 bytes @ 0x1F
  2858  000020                     	ds	1
  2859  000021                     ??_sht3x_common_read:
  2860  000021                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2861  000021                     ??___fltol:
  2862  000021                     lmp91000_get_status@rBuff:
  2863                           	callstack 0
  2864  000021                     lmp91000_set_Reference@reg:
  2865                           	callstack 0
  2866  000021                     CMD_set_ABC_on@len:
  2867                           	callstack 0
  2868  000021                     ads1115_SetUp@mode:
  2869                           	callstack 0
  2870  000021                     ads1114_read@wbuff:
  2871                           	callstack 0
  2872  000021                     atcommand_compare@ch:
  2873                           	callstack 0
  2874  000021                     tes0902_data_receive@crc_len:
  2875                           	callstack 0
  2876                           
  2877                           ; 1 bytes @ 0x20
  2878  000021                     	ds	1
  2879  000022                     lmp91000_isReady@chNum:
  2880                           	callstack 0
  2881  000022                     tes0902_ABC_OFF@status:
  2882                           	callstack 0
  2883  000022                     ads1115_SetUp@pga:
  2884                           	callstack 0
  2885  000022                     ads1114_read@rbuff:
  2886                           	callstack 0
  2887  000022                     check_atcommand@cmd:
  2888                           	callstack 0
  2889  000022                     years_to_days@ret:
  2890                           	callstack 0
  2891  000022                     CRC_check@crc:
  2892                           	callstack 0
  2893                           
  2894                           ; 12 bytes @ 0x21
  2895  000022                     	ds	1
  2896  000023                     ??_USBStdFeatureReqHandler:
  2897  000023                     lmp91000_isReady@rBuff:
  2898                           	callstack 0
  2899  000023                     ads1115_SetUp@dataRate:
  2900                           	callstack 0
  2901  000023                     sensMeasure_init@chNum:
  2902                           	callstack 0
  2903  000023                     USBStdSetCfgHandler@i:
  2904                           	callstack 0
  2905  000023                     __atoi@sign:
  2906                           	callstack 0
  2907                           
  2908                           ; 2 bytes @ 0x22
  2909  000023                     	ds	1
  2910  000024                     ??_ads1115_SetUp:
  2911  000024                     ads1114_read@chNum:
  2912                           	callstack 0
  2913  000024                     sensor_lmp_initialize@lmp_gain:
  2914                           	callstack 0
  2915  000024                     check_atcommand@chno:
  2916                           	callstack 0
  2917  000024                     usart_init@b:
  2918                           	callstack 0
  2919                           
  2920                           ; 4 bytes @ 0x23
  2921  000024                     	ds	1
  2922  000025                     sensor_lmp_initialize@chNum:
  2923                           	callstack 0
  2924  000025                     ___fltol@sign1:
  2925                           	callstack 0
  2926  000025                     sensor_ADC_read@raw_adc:
  2927                           	callstack 0
  2928  000025                     USBStdFeatureReqHandler@pUEP:
  2929                           	callstack 0
  2930  000025                     __atoi@ret:
  2931                           	callstack 0
  2932                           
  2933                           ; 4 bytes @ 0x24
  2934  000025                     	ds	1
  2935  000026                     ??_check_atcommand:
  2936  000026                     ?_ymd_to_scalar:
  2937                           	callstack 0
  2938  000026                     ___fltol@exp1:
  2939                           	callstack 0
  2940  000026                     ymd_to_scalar@yr:
  2941                           	callstack 0
  2942  000026                     ads1115_SetUp@adcInput:
  2943                           	callstack 0
  2944                           
  2945                           ; 3 bytes @ 0x25
  2946  000026                     	ds	1
  2947  000027                     ?__itoa:
  2948                           	callstack 0
  2949  000027                     ?___xxtofl:
  2950                           	callstack 0
  2951  000027                     sensor_ADC_read@chNum:
  2952                           	callstack 0
  2953  000027                     USBStdFeatureReqHandler@current_ep_data:
  2954                           	callstack 0
  2955  000027                     __itoa@num:
  2956                           	callstack 0
  2957  000027                     ___xxtofl@val:
  2958                           	callstack 0
  2959                           
  2960                           ; 4 bytes @ 0x26
  2961  000027                     	ds	1
  2962  000028                     check_atcommand@i:
  2963                           	callstack 0
  2964  000028                     USBStdFeatureReqHandler@p:
  2965                           	callstack 0
  2966  000028                     ymd_to_scalar@mo:
  2967                           	callstack 0
  2968                           
  2969                           ; 2 bytes @ 0x27
  2970  000028                     	ds	1
  2971  000029                     ads1115_SetUp@buff:
  2972                           	callstack 0
  2973  000029                     parse_command@buff:
  2974                           	callstack 0
  2975  000029                     __atoi@p:
  2976                           	callstack 0
  2977  000029                     sht3x_common_read@buff:
  2978                           	callstack 0
  2979                           
  2980                           ; 6 bytes @ 0x28
  2981  000029                     	ds	1
  2982  00002A                     ??_USBCtrlEPService:
  2983  00002A                     ymd_to_scalar@day:
  2984                           	callstack 0
  2985                           
  2986                           ; 2 bytes @ 0x29
  2987  00002A                     	ds	1
  2988  00002B                     ??___xxtofl:
  2989  00002B                     ads1115_SetUp@wraddr:
  2990                           	callstack 0
  2991  00002B                     USBDeviceTasks@i:
  2992                           	callstack 0
  2993  00002B                     parse_command@status:
  2994                           	callstack 0
  2995  00002B                     __itoa@str:
  2996                           	callstack 0
  2997                           
  2998                           ; 2 bytes @ 0x2A
  2999  00002B                     	ds	1
  3000  00002C                     ??_ymd_to_scalar:
  3001  00002C                     ads1115_SetUp@chNum:
  3002                           	callstack 0
  3003                           
  3004                           ; 1 bytes @ 0x2B
  3005  00002C                     	ds	1
  3006  00002D                     ??_parse_command:
  3007  00002D                     sensor_adc_initialize@adc_gain:
  3008                           	callstack 0
  3009  00002D                     sensor_temp_mode@chNum:
  3010                           	callstack 0
  3011  00002D                     sensor_gas_mode@adc_gain:
  3012                           	callstack 0
  3013  00002D                     __itoa@len:
  3014                           	callstack 0
  3015                           
  3016                           ; 2 bytes @ 0x2C
  3017  00002D                     	ds	1
  3018  00002E                     CRC_check@crcLen:
  3019                           	callstack 0
  3020  00002E                     sensor_adc_initialize@chNum:
  3021                           	callstack 0
  3022  00002E                     sensor_gas_mode@chNum:
  3023                           	callstack 0
  3024                           
  3025                           ; 1 bytes @ 0x2D
  3026  00002E                     	ds	1
  3027  00002F                     ??_gas_init:
  3028  00002F                     CRC_check@i:
  3029                           	callstack 0
  3030  00002F                     ___xxtofl@sign:
  3031                           	callstack 0
  3032  00002F                     __itoa@shifter:
  3033                           	callstack 0
  3034                           
  3035                           ; 4 bytes @ 0x2E
  3036  00002F                     	ds	1
  3037  000030                     gas_init@chNum:
  3038                           	callstack 0
  3039  000030                     ___xxtofl@exp:
  3040                           	callstack 0
  3041  000030                     _ymd_to_scalar$6532:
  3042                           	callstack 0
  3043                           
  3044                           ; 2 bytes @ 0x2F
  3045  000030                     	ds	1
  3046  000031                     ___xxtofl@arg:
  3047                           	callstack 0
  3048                           
  3049                           ; 4 bytes @ 0x30
  3050  000031                     	ds	1
  3051  000032                     ymd_to_scalar@scalar:
  3052                           	callstack 0
  3053                           
  3054                           ; 4 bytes @ 0x31
  3055  000032                     	ds	1
  3056  000033                     __itoa@p:
  3057                           	callstack 0
  3058                           
  3059                           ; 2 bytes @ 0x32
  3060  000033                     	ds	2
  3061  000035                     __itoa@n:
  3062                           	callstack 0
  3063  000035                     ___fleq@ff1:
  3064                           	callstack 0
  3065                           
  3066                           ; 4 bytes @ 0x34
  3067  000035                     	ds	1
  3068  000036                     ?_mktime:
  3069                           	callstack 0
  3070  000036                     mktime@timeptr:
  3071                           	callstack 0
  3072                           
  3073                           ; 2 bytes @ 0x35
  3074  000036                     	ds	3
  3075  000039                     ___fleq@ff2:
  3076                           	callstack 0
  3077                           
  3078                           ; 4 bytes @ 0x38
  3079  000039                     	ds	1
  3080  00003A                     ??_mktime:
  3081                           
  3082                           ; 1 bytes @ 0x39
  3083  00003A                     	ds	3
  3084  00003D                     ??___fleq:
  3085                           
  3086                           ; 1 bytes @ 0x3C
  3087  00003D                     	ds	3
  3088  000040                     Board_initialize@chNum:
  3089                           	callstack 0
  3090  000040                     nvm_clear_all@i:
  3091                           	callstack 0
  3092                           
  3093                           ; 1 bytes @ 0x3F
  3094  000040                     	ds	1
  3095  000041                     
  3096                           ; 1 bytes @ 0x40
  3097 ;;
  3098 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3099 ;;
  3100 ;; *************** function _main *****************
  3101 ;; Defined at:
  3102 ;;		line 82 in file "main.c"
  3103 ;; Parameters:    Size  Location     Type
  3104 ;;		None
  3105 ;; Auto vars:     Size  Location     Type
  3106 ;;		None
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  1    wreg      void 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3120 ;;Total ram usage:        0 bytes
  3121 ;; Hardware stack levels required when called: 13
  3122 ;; This function calls:
  3123 ;;		_Board_initialize
  3124 ;;		_Co2_measure_task
  3125 ;;		_InitTimer
  3126 ;;		_SYSTEM_Initialize
  3127 ;;		_USBDeviceInit
  3128 ;;		_USBDeviceTasks
  3129 ;;		_WDT_initialize
  3130 ;;		_app_usb_task
  3131 ;;		_atcommand_task
  3132 ;;		_changeUsbState_task
  3133 ;;		_led_task
  3134 ;;		_sensMeasure_task
  3135 ;;		_sens_ZeroCalib_task
  3136 ;;		_usedtime_task
  3137 ;; This function is called by:
  3138 ;;		Startup code after reset
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text0
  3143  00E980                     __ptext0:
  3144                           	callstack 0
  3145  00E980                     _main:
  3146                           	callstack 18
  3147  00E980                     
  3148                           ;main.c: 84: Board_initialize();
  3149  00E980  ECA9  F06B         	call	_Board_initialize	;wreg free
  3150  00E984                     
  3151                           ;main.c: 85: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3152  00E984  0E00               	movlw	0
  3153  00E986  ECA4  F06C         	call	_SYSTEM_Initialize
  3154  00E98A                     
  3155                           ;main.c: 86: USBDeviceInit();
  3156  00E98A  ECCF  F050         	call	_USBDeviceInit	;wreg free
  3157  00E98E                     
  3158                           ;main.c: 87: ;;main.c: 88: InitTimer();
  3159  00E98E  EC1E  F078         	call	_InitTimer	;wreg free
  3160  00E992                     
  3161                           ;main.c: 89: WDT_initialize(1);
  3162  00E992  0E01               	movlw	1
  3163  00E994  ECAB  F077         	call	_WDT_initialize
  3164  00E998                     l618:
  3165  00E998  0004               	clrwdt		;# 
  3166  00E99A                     
  3167                           ;main.c: 107: USBDeviceTasks();
  3168  00E99A  EC3D  F040         	call	_USBDeviceTasks	;wreg free
  3169  00E99E                     
  3170                           ;main.c: 109: app_usb_task();
  3171  00E99E  EC2A  F069         	call	_app_usb_task	;wreg free
  3172  00E9A2                     
  3173                           ;main.c: 110: changeUsbState_task();
  3174  00E9A2  EC99  F077         	call	_changeUsbState_task	;wreg free
  3175  00E9A6                     
  3176                           ;main.c: 111: led_task();
  3177  00E9A6  EC0A  F048         	call	_led_task	;wreg free
  3178  00E9AA                     
  3179                           ;main.c: 112: sens_ZeroCalib_task();
  3180  00E9AA  EC28  F060         	call	_sens_ZeroCalib_task	;wreg free
  3181  00E9AE                     
  3182                           ;main.c: 113: sensMeasure_task();
  3183  00E9AE  ECE8  F038         	call	_sensMeasure_task	;wreg free
  3184  00E9B2                     
  3185                           ;main.c: 114: Co2_measure_task();
  3186  00E9B2  ECD0  F049         	call	_Co2_measure_task	;wreg free
  3187  00E9B6                     
  3188                           ;main.c: 115: atcommand_task();
  3189  00E9B6  EC1D  F047         	call	_atcommand_task	;wreg free
  3190  00E9BA                     
  3191                           ;main.c: 116: usedtime_task();
  3192  00E9BA  ECD1  F05E         	call	_usedtime_task	;wreg free
  3193  00E9BE  EFCC  F074         	goto	l618
  3194  00E9C2  EF40  F010         	goto	start
  3195  00E9C6                     __end_of_main:
  3196                           	callstack 0
  3197                           
  3198 ;; *************** function _usedtime_task *****************
  3199 ;; Defined at:
  3200 ;;		line 168 in file "main.c"
  3201 ;; Parameters:    Size  Location     Type
  3202 ;;		None
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;		None
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;Total ram usage:        0 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 5
  3221 ;; This function calls:
  3222 ;;		_memcpy
  3223 ;;		_nvm_write_flash_all
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text1
  3230  00BDA2                     __ptext1:
  3231                           	callstack 0
  3232  00BDA2                     _usedtime_task:
  3233                           	callstack 25
  3234  00BDA2                     
  3235                           ;main.c: 170: if (g_led_status.isBlink == 1 && g_usedtime_count > 18000) {
  3236  00BDA2  0101               	movlb	1	; () banked
  3237  00BDA4  052B               	decf	(_g_led_status+2)& (0+255),w,b
  3238  00BDA6  A4D8               	btfss	status,2,c
  3239  00BDA8  EFD8  F05E         	goto	u21491
  3240  00BDAC  EFDA  F05E         	goto	u21490
  3241  00BDB0                     u21491:
  3242  00BDB0  EFEC  F05E         	goto	l19810
  3243  00BDB4                     u21490:
  3244  00BDB4                     
  3245                           ; BSR set to: 1
  3246  00BDB4  514D               	movf	(_g_usedtime_count+3)& (0+255),w,b	;volatile
  3247  00BDB6  114C               	iorwf	(_g_usedtime_count+2)& (0+255),w,b	;volatile
  3248  00BDB8  E10B               	bnz	u21500
  3249  00BDBA  0E51               	movlw	81
  3250  00BDBC  5D4A               	subwf	_g_usedtime_count& (0+255),w,b	;volatile
  3251  00BDBE  0E46               	movlw	70
  3252  00BDC0  594B               	subwfb	(_g_usedtime_count+1)& (0+255),w,b	;volatile
  3253  00BDC2  A0D8               	btfss	status,0,c
  3254  00BDC4  EFE6  F05E         	goto	u21501
  3255  00BDC8  EFE8  F05E         	goto	u21500
  3256  00BDCC                     u21501:
  3257  00BDCC  EFEC  F05E         	goto	l19810
  3258  00BDD0                     u21500:
  3259  00BDD0                     
  3260                           ; BSR set to: 1
  3261                           ;main.c: 171: g_led_status.isBlink = 0;
  3262  00BDD0  0E00               	movlw	0
  3263  00BDD2  6F2B               	movwf	(_g_led_status+2)& (0+255),b
  3264                           
  3265                           ;main.c: 172: g_led_status.seq = LED_ALLOFF;
  3266  00BDD4  0E09               	movlw	9
  3267  00BDD6  6F29               	movwf	_g_led_status& (0+255),b
  3268  00BDD8                     l19810:
  3269                           
  3270                           ; BSR set to: 1
  3271                           ;main.c: 173: };main.c: 175: if (g_usedtime_count > 360000) {
  3272  00BDD8  514D               	movf	(_g_usedtime_count+3)& (0+255),w,b	;volatile
  3273  00BDDA  E10D               	bnz	u21510
  3274  00BDDC  0E41               	movlw	65
  3275  00BDDE  5D4A               	subwf	_g_usedtime_count& (0+255),w,b	;volatile
  3276  00BDE0  0E7E               	movlw	126
  3277  00BDE2  594B               	subwfb	(_g_usedtime_count+1)& (0+255),w,b	;volatile
  3278  00BDE4  0E05               	movlw	5
  3279  00BDE6  594C               	subwfb	(_g_usedtime_count+2)& (0+255),w,b	;volatile
  3280  00BDE8  A0D8               	btfss	status,0,c
  3281  00BDEA  EFF9  F05E         	goto	u21511
  3282  00BDEE  EFFB  F05E         	goto	u21510
  3283  00BDF2                     u21511:
  3284  00BDF2  EF45  F05F         	goto	l636
  3285  00BDF6                     u21510:
  3286  00BDF6                     
  3287                           ; BSR set to: 1
  3288                           ;main.c: 176: g_usedtime_count = 0;
  3289  00BDF6  0E00               	movlw	0
  3290  00BDF8  6F4A               	movwf	_g_usedtime_count& (0+255),b	;volatile
  3291  00BDFA  0E00               	movlw	0
  3292  00BDFC  6F4B               	movwf	(_g_usedtime_count+1)& (0+255),b	;volatile
  3293  00BDFE  0E00               	movlw	0
  3294  00BE00  6F4C               	movwf	(_g_usedtime_count+2)& (0+255),b	;volatile
  3295  00BE02  0E00               	movlw	0
  3296  00BE04  6F4D               	movwf	(_g_usedtime_count+3)& (0+255),b	;volatile
  3297  00BE06                     
  3298                           ; BSR set to: 1
  3299                           ;main.c: 177: memcpy(g_flash_temp.byte, g_nvm.flash.byte, 108);
  3300  00BE06  0E40               	movlw	low _g_flash_temp
  3301  00BE08  6E0F               	movwf	memcpy@d1^0,c
  3302  00BE0A  0E06               	movlw	high _g_flash_temp
  3303  00BE0C  6E10               	movwf	(memcpy@d1+1)^0,c
  3304  00BE0E  0E7A               	movlw	low (_g_nvm+1)
  3305  00BE10  6E11               	movwf	memcpy@s1^0,c
  3306  00BE12  0E01               	movlw	high (_g_nvm+1)
  3307  00BE14  6E12               	movwf	(memcpy@s1+1)^0,c
  3308  00BE16  0E00               	movlw	0
  3309  00BE18  6E14               	movwf	(memcpy@n+1)^0,c
  3310  00BE1A  0E6C               	movlw	108
  3311  00BE1C  6E13               	movwf	memcpy@n^0,c
  3312  00BE1E  EC47  F073         	call	_memcpy	;wreg free
  3313  00BE22                     
  3314                           ;main.c: 178: g_nvm.flash.usedtime++;
  3315  00BE22  0E01               	movlw	1
  3316  00BE24  0101               	movlb	1	; () banked
  3317  00BE26  27D6               	addwf	(_g_nvm+93)& (0+255),f,b
  3318  00BE28  0E00               	movlw	0
  3319  00BE2A  23D7               	addwfc	(_g_nvm+94)& (0+255),f,b
  3320  00BE2C  23D8               	addwfc	(_g_nvm+95)& (0+255),f,b
  3321  00BE2E  23D9               	addwfc	(_g_nvm+96)& (0+255),f,b
  3322  00BE30                     
  3323                           ; BSR set to: 1
  3324                           ;main.c: 179: if (nvm_write_flash_all(&g_nvm.flash) == 0) {
  3325  00BE30  0E7A               	movlw	low (_g_nvm+1)
  3326  00BE32  6E1F               	movwf	nvm_write_flash_all@flash^0,c
  3327  00BE34  0E01               	movlw	high (_g_nvm+1)
  3328  00BE36  6E20               	movwf	(nvm_write_flash_all@flash+1)^0,c
  3329  00BE38  EC2F  F074         	call	_nvm_write_flash_all	;wreg free
  3330  00BE3C  0900               	iorlw	0
  3331  00BE3E  A4D8               	btfss	status,2,c
  3332  00BE40  EF24  F05F         	goto	u21521
  3333  00BE44  EF26  F05F         	goto	u21520
  3334  00BE48                     u21521:
  3335  00BE48  EF34  F05F         	goto	l19822
  3336  00BE4C                     u21520:
  3337  00BE4C                     
  3338                           ;main.c: 180: memcpy(g_nvm.flash.byte, g_flash_temp.byte, 108);
  3339  00BE4C  0E7A               	movlw	low (_g_nvm+1)
  3340  00BE4E  6E0F               	movwf	memcpy@d1^0,c
  3341  00BE50  0E01               	movlw	high (_g_nvm+1)
  3342  00BE52  6E10               	movwf	(memcpy@d1+1)^0,c
  3343  00BE54  0E40               	movlw	low _g_flash_temp
  3344  00BE56  6E11               	movwf	memcpy@s1^0,c
  3345  00BE58  0E06               	movlw	high _g_flash_temp
  3346  00BE5A  6E12               	movwf	(memcpy@s1+1)^0,c
  3347  00BE5C  0E00               	movlw	0
  3348  00BE5E  6E14               	movwf	(memcpy@n+1)^0,c
  3349  00BE60  0E6C               	movlw	108
  3350  00BE62  6E13               	movwf	memcpy@n^0,c
  3351  00BE64  EC47  F073         	call	_memcpy	;wreg free
  3352  00BE68                     l19822:
  3353                           
  3354                           ;main.c: 181: };main.c: 182: if (g_nvm.flash.usedtime >= 17520) {
  3355  00BE68  0101               	movlb	1	; () banked
  3356  00BE6A  51D9               	movf	(_g_nvm+96)& (0+255),w,b
  3357  00BE6C  11D8               	iorwf	(_g_nvm+95)& (0+255),w,b
  3358  00BE6E  E10B               	bnz	u21530
  3359  00BE70  0E70               	movlw	112
  3360  00BE72  5DD6               	subwf	(_g_nvm+93)& (0+255),w,b
  3361  00BE74  0E44               	movlw	68
  3362  00BE76  59D7               	subwfb	(_g_nvm+94)& (0+255),w,b
  3363  00BE78  A0D8               	btfss	status,0,c
  3364  00BE7A  EF41  F05F         	goto	u21531
  3365  00BE7E  EF43  F05F         	goto	u21530
  3366  00BE82                     u21531:
  3367  00BE82  EF45  F05F         	goto	l636
  3368  00BE86                     u21530:
  3369  00BE86                     
  3370                           ; BSR set to: 1
  3371                           ;main.c: 183: g_led_status.twoYear = 1;
  3372  00BE86  0E01               	movlw	1
  3373  00BE88  6F2D               	movwf	(_g_led_status+4)& (0+255),b
  3374  00BE8A                     l636:
  3375                           
  3376                           ; BSR set to: 1
  3377  00BE8A  0012               	return		;funcret
  3378  00BE8C                     __end_of_usedtime_task:
  3379                           	callstack 0
  3380                           
  3381 ;; *************** function _sens_ZeroCalib_task *****************
  3382 ;; Defined at:
  3383 ;;		line 57 in file "app_sens_calibration.c"
  3384 ;; Parameters:    Size  Location     Type
  3385 ;;		None
  3386 ;; Auto vars:     Size  Location     Type
  3387 ;;		None
  3388 ;; Return value:  Size  Location     Type
  3389 ;;                  1    wreg      void 
  3390 ;; Registers used:
  3391 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3392 ;; Tracked objects:
  3393 ;;		On entry : 0/0
  3394 ;;		On exit  : 0/0
  3395 ;;		Unchanged: 0/0
  3396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3401 ;;Total ram usage:        0 bytes
  3402 ;; Hardware stack levels used: 1
  3403 ;; Hardware stack levels required when called: 8
  3404 ;; This function calls:
  3405 ;;		_LED_Off
  3406 ;;		_LED_On
  3407 ;;		_sens_ZeroCalibration
  3408 ;; This function is called by:
  3409 ;;		_main
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text2
  3414  00C050                     __ptext2:
  3415                           	callstack 0
  3416  00C050                     _sens_ZeroCalib_task:
  3417                           	callstack 22
  3418  00C050                     
  3419                           ;app_sens_calibration.c: 59: if ((g_usb_state == USB_DETACHED) && (g_sens_calib.zero_cal
      +                           == 0)) {
  3420  00C050  0101               	movlb	1	; () banked
  3421  00C052  0577               	decf	_g_usb_state& (0+255),w,b
  3422  00C054  A4D8               	btfss	status,2,c
  3423  00C056  EF2F  F060         	goto	u21181
  3424  00C05A  EF31  F060         	goto	u21180
  3425  00C05E                     u21181:
  3426  00C05E  EF8A  F060         	goto	l19570
  3427  00C062                     u21180:
  3428  00C062                     
  3429                           ; BSR set to: 1
  3430  00C062  5165               	movf	(_g_sens_calib+1)& (0+255),w,b
  3431  00C064  A4D8               	btfss	status,2,c
  3432  00C066  EF37  F060         	goto	u21191
  3433  00C06A  EF39  F060         	goto	u21190
  3434  00C06E                     u21191:
  3435  00C06E  EF8A  F060         	goto	l19570
  3436  00C072                     u21190:
  3437  00C072  EF7B  F060         	goto	l19568
  3438  00C076                     l19548:
  3439                           
  3440                           ; BSR set to: 1
  3441                           ;app_sens_calibration.c: 63: LED_Off();
  3442  00C076  ECD7  F078         	call	_LED_Off	;wreg free
  3443  00C07A                     
  3444                           ;app_sens_calibration.c: 64: LED_On(LED_GREEN);
  3445  00C07A  0E02               	movlw	2
  3446  00C07C  EC56  F076         	call	_LED_On
  3447  00C080                     
  3448                           ;app_sens_calibration.c: 65: g_calib_count = 0;
  3449  00C080  0E00               	movlw	0
  3450  00C082  0101               	movlb	1	; () banked
  3451  00C084  6F3A               	movwf	_g_calib_count& (0+255),b	;volatile
  3452  00C086  0E00               	movlw	0
  3453  00C088  6F3B               	movwf	(_g_calib_count+1)& (0+255),b	;volatile
  3454  00C08A  0E00               	movlw	0
  3455  00C08C  6F3C               	movwf	(_g_calib_count+2)& (0+255),b	;volatile
  3456  00C08E  0E00               	movlw	0
  3457  00C090  6F3D               	movwf	(_g_calib_count+3)& (0+255),b	;volatile
  3458  00C092                     
  3459                           ; BSR set to: 1
  3460                           ;app_sens_calibration.c: 66: g_sens_calib.seq = CALIB_WAIT;
  3461  00C092  0E01               	movlw	1
  3462  00C094  6F64               	movwf	_g_sens_calib& (0+255),b
  3463                           
  3464                           ;app_sens_calibration.c: 67: break;
  3465  00C096  EF92  F060         	goto	l1721
  3466  00C09A                     l19556:
  3467                           
  3468                           ; BSR set to: 1
  3469                           ;app_sens_calibration.c: 69: if (g_calib_count > 30000) {
  3470  00C09A  513D               	movf	(_g_calib_count+3)& (0+255),w,b	;volatile
  3471  00C09C  113C               	iorwf	(_g_calib_count+2)& (0+255),w,b	;volatile
  3472  00C09E  E10B               	bnz	u21200
  3473  00C0A0  0E31               	movlw	49
  3474  00C0A2  5D3A               	subwf	_g_calib_count& (0+255),w,b	;volatile
  3475  00C0A4  0E75               	movlw	117
  3476  00C0A6  593B               	subwfb	(_g_calib_count+1)& (0+255),w,b	;volatile
  3477  00C0A8  A0D8               	btfss	status,0,c
  3478  00C0AA  EF59  F060         	goto	u21201
  3479  00C0AE  EF5B  F060         	goto	u21200
  3480  00C0B2                     u21201:
  3481  00C0B2  EF92  F060         	goto	l1721
  3482  00C0B6                     u21200:
  3483  00C0B6                     
  3484                           ; BSR set to: 1
  3485                           ;app_sens_calibration.c: 70: g_calib_count = 0;
  3486  00C0B6  0E00               	movlw	0
  3487  00C0B8  6F3A               	movwf	_g_calib_count& (0+255),b	;volatile
  3488  00C0BA  0E00               	movlw	0
  3489  00C0BC  6F3B               	movwf	(_g_calib_count+1)& (0+255),b	;volatile
  3490  00C0BE  0E00               	movlw	0
  3491  00C0C0  6F3C               	movwf	(_g_calib_count+2)& (0+255),b	;volatile
  3492  00C0C2  0E00               	movlw	0
  3493  00C0C4  6F3D               	movwf	(_g_calib_count+3)& (0+255),b	;volatile
  3494                           
  3495                           ;app_sens_calibration.c: 71: g_sens_calib.seq = CALIB_ZERO;
  3496  00C0C6  0E02               	movlw	2
  3497  00C0C8  6F64               	movwf	_g_sens_calib& (0+255),b
  3498  00C0CA  EF92  F060         	goto	l1721
  3499  00C0CE                     l19560:
  3500                           
  3501                           ; BSR set to: 1
  3502                           ;app_sens_calibration.c: 74: if (sens_ZeroCalibration() == 0)
  3503  00C0CE  ECA9  F04E         	call	_sens_ZeroCalibration	;wreg free
  3504  00C0D2  0900               	iorlw	0
  3505  00C0D4  A4D8               	btfss	status,2,c
  3506  00C0D6  EF6F  F060         	goto	u21211
  3507  00C0DA  EF71  F060         	goto	u21210
  3508  00C0DE                     u21211:
  3509  00C0DE  EF76  F060         	goto	l19564
  3510  00C0E2                     u21210:
  3511  00C0E2                     
  3512                           ;app_sens_calibration.c: 75: g_sens_calib.seq = CALIB_ZERO;
  3513  00C0E2  0E02               	movlw	2
  3514  00C0E4  0101               	movlb	1	; () banked
  3515  00C0E6  6F64               	movwf	_g_sens_calib& (0+255),b
  3516  00C0E8  EF92  F060         	goto	l1721
  3517  00C0EC                     l19564:
  3518                           
  3519                           ;app_sens_calibration.c: 76: else g_led_status.seq = LED_ZEROCAL_END;
  3520  00C0EC  0E07               	movlw	7
  3521  00C0EE  0101               	movlb	1	; () banked
  3522  00C0F0  6F29               	movwf	_g_led_status& (0+255),b
  3523  00C0F2  EF92  F060         	goto	l1721
  3524  00C0F6                     l19568:
  3525                           
  3526                           ; BSR set to: 1
  3527  00C0F6  5164               	movf	_g_sens_calib& (0+255),w,b
  3528                           
  3529                           ; Switch size 1, requested type "simple"
  3530                           ; Number of cases is 3, Range of values is 0 to 2
  3531                           ; switch strategies available:
  3532                           ; Name         Instructions Cycles
  3533                           ; simple_byte           10     6 (average)
  3534                           ;	Chosen strategy is simple_byte
  3535  00C0F8  0A00               	xorlw	0	; case 0
  3536  00C0FA  B4D8               	btfsc	status,2,c
  3537  00C0FC  EF3B  F060         	goto	l19548
  3538  00C100  0A01               	xorlw	1	; case 1
  3539  00C102  B4D8               	btfsc	status,2,c
  3540  00C104  EF4D  F060         	goto	l19556
  3541  00C108  0A03               	xorlw	3	; case 2
  3542  00C10A  B4D8               	btfsc	status,2,c
  3543  00C10C  EF67  F060         	goto	l19560
  3544  00C110  EF92  F060         	goto	l1721
  3545  00C114                     l19570:
  3546                           
  3547                           ; BSR set to: 1
  3548                           ;app_sens_calibration.c: 80: g_calib_count = 0;
  3549  00C114  0E00               	movlw	0
  3550  00C116  6F3A               	movwf	_g_calib_count& (0+255),b	;volatile
  3551  00C118  0E00               	movlw	0
  3552  00C11A  6F3B               	movwf	(_g_calib_count+1)& (0+255),b	;volatile
  3553  00C11C  0E00               	movlw	0
  3554  00C11E  6F3C               	movwf	(_g_calib_count+2)& (0+255),b	;volatile
  3555  00C120  0E00               	movlw	0
  3556  00C122  6F3D               	movwf	(_g_calib_count+3)& (0+255),b	;volatile
  3557  00C124                     l1721:
  3558                           
  3559                           ; BSR set to: 1
  3560  00C124  0012               	return		;funcret
  3561  00C126                     __end_of_sens_ZeroCalib_task:
  3562                           	callstack 0
  3563                           
  3564 ;; *************** function _sens_ZeroCalibration *****************
  3565 ;; Defined at:
  3566 ;;		line 43 in file "app_sens_calibration.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      unsigned char 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 7
  3587 ;; This function calls:
  3588 ;;		_CMD_manual_cal
  3589 ;;		___fldiv
  3590 ;;		___flsub
  3591 ;;		_nvm_write_flash_all
  3592 ;; This function is called by:
  3593 ;;		_sens_ZeroCalib_task
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           
  3597                           	psect	text3
  3598  009D52                     __ptext3:
  3599                           	callstack 0
  3600  009D52                     _sens_ZeroCalibration:
  3601                           	callstack 22
  3602  009D52                     
  3603                           ;app_sens_calibration.c: 45: g_nvm.flash.baseLine_uV[0] = Last_value.toxic_gas[0][LV_GAS
      +                          _VOLT];
  3604  009D52  C226  F182         	movff	_Last_value,_g_nvm+9
  3605  009D56  C227  F183         	movff	_Last_value+1,_g_nvm+10
  3606  009D5A  C228  F184         	movff	_Last_value+2,_g_nvm+11
  3607  009D5E  C229  F185         	movff	_Last_value+3,_g_nvm+12
  3608                           
  3609                           ;app_sens_calibration.c: 46: g_nvm.flash.baseLine_uV[1] = Last_value.toxic_gas[1][LV_GAS
      +                          _VOLT];
  3610  009D62  C22E  F186         	movff	_Last_value+8,_g_nvm+13
  3611  009D66  C22F  F187         	movff	_Last_value+9,_g_nvm+14
  3612  009D6A  C230  F188         	movff	_Last_value+10,_g_nvm+15
  3613  009D6E  C231  F189         	movff	_Last_value+11,_g_nvm+16
  3614                           
  3615                           ;app_sens_calibration.c: 47: g_nvm.flash.baseLine_uV[2] = Last_value.toxic_gas[2][LV_GAS
      +                          _VOLT];
  3616  009D72  C236  F18A         	movff	_Last_value+16,_g_nvm+17
  3617  009D76  C237  F18B         	movff	_Last_value+17,_g_nvm+18
  3618  009D7A  C238  F18C         	movff	_Last_value+18,_g_nvm+19
  3619  009D7E  C239  F18D         	movff	_Last_value+19,_g_nvm+20
  3620  009D82                     
  3621                           ;app_sens_calibration.c: 48: g_nvm.flash.gas_slope[0] = (g_nvm.flash.span_uV[0] - g_nvm.
      +                          flash.baseLine_uV[0]) / g_nvm.flash.CalibrationGas[0];
  3622  009D82  C182  F0A2         	movff	_g_nvm+9,___flsub@a
  3623  009D86  C183  F0A3         	movff	_g_nvm+10,___flsub@a+1
  3624  009D8A  C184  F0A4         	movff	_g_nvm+11,___flsub@a+2
  3625  009D8E  C185  F0A5         	movff	_g_nvm+12,___flsub@a+3
  3626  009D92  C18E  F09E         	movff	_g_nvm+21,___flsub@b
  3627  009D96  C18F  F09F         	movff	_g_nvm+22,___flsub@b+1
  3628  009D9A  C190  F0A0         	movff	_g_nvm+23,___flsub@b+2
  3629  009D9E  C191  F0A1         	movff	_g_nvm+24,___flsub@b+3
  3630  009DA2  EC9C  F074         	call	___flsub	;wreg free
  3631  009DA6  C09E  F0A6         	movff	?___flsub,___fldiv@b
  3632  009DAA  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
  3633  009DAE  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
  3634  009DB2  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
  3635  009DB6  C19A  F0AA         	movff	_g_nvm+33,___fldiv@a
  3636  009DBA  C19B  F0AB         	movff	_g_nvm+34,___fldiv@a+1
  3637  009DBE  C19C  F0AC         	movff	_g_nvm+35,___fldiv@a+2
  3638  009DC2  C19D  F0AD         	movff	_g_nvm+36,___fldiv@a+3
  3639  009DC6  ECCB  F033         	call	___fldiv	;wreg free
  3640  009DCA  C0A6  F1A6         	movff	?___fldiv,_g_nvm+45
  3641  009DCE  C0A7  F1A7         	movff	?___fldiv+1,_g_nvm+46
  3642  009DD2  C0A8  F1A8         	movff	?___fldiv+2,_g_nvm+47
  3643  009DD6  C0A9  F1A9         	movff	?___fldiv+3,_g_nvm+48
  3644                           
  3645                           ;app_sens_calibration.c: 49: g_nvm.flash.gas_slope[1] = (g_nvm.flash.baseLine_uV[1] - g_
      +                          nvm.flash.span_uV[1]) / (20.8f - g_nvm.flash.CalibrationGas[1]);
  3646  009DDA  C192  F0A2         	movff	_g_nvm+25,___flsub@a
  3647  009DDE  C193  F0A3         	movff	_g_nvm+26,___flsub@a+1
  3648  009DE2  C194  F0A4         	movff	_g_nvm+27,___flsub@a+2
  3649  009DE6  C195  F0A5         	movff	_g_nvm+28,___flsub@a+3
  3650  009DEA  C186  F09E         	movff	_g_nvm+13,___flsub@b
  3651  009DEE  C187  F09F         	movff	_g_nvm+14,___flsub@b+1
  3652  009DF2  C188  F0A0         	movff	_g_nvm+15,___flsub@b+2
  3653  009DF6  C189  F0A1         	movff	_g_nvm+16,___flsub@b+3
  3654  009DFA  EC9C  F074         	call	___flsub	;wreg free
  3655  009DFE  C09E  F0A6         	movff	?___flsub,___fldiv@b
  3656  009E02  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
  3657  009E06  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
  3658  009E0A  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
  3659  009E0E  C19E  F0A2         	movff	_g_nvm+37,___flsub@a
  3660  009E12  C19F  F0A3         	movff	_g_nvm+38,___flsub@a+1
  3661  009E16  C1A0  F0A4         	movff	_g_nvm+39,___flsub@a+2
  3662  009E1A  C1A1  F0A5         	movff	_g_nvm+40,___flsub@a+3
  3663  009E1E  0E66               	movlw	102
  3664  009E20  0100               	movlb	0	; () banked
  3665  009E22  6F9E               	movwf	___flsub@b& (0+255),b
  3666  009E24  0E66               	movlw	102
  3667  009E26  6F9F               	movwf	(___flsub@b+1)& (0+255),b
  3668  009E28  0EA6               	movlw	166
  3669  009E2A  6FA0               	movwf	(___flsub@b+2)& (0+255),b
  3670  009E2C  0E41               	movlw	65
  3671  009E2E  6FA1               	movwf	(___flsub@b+3)& (0+255),b
  3672  009E30  EC9C  F074         	call	___flsub	;wreg free
  3673  009E34  C09E  F0AA         	movff	?___flsub,___fldiv@a
  3674  009E38  C09F  F0AB         	movff	?___flsub+1,___fldiv@a+1
  3675  009E3C  C0A0  F0AC         	movff	?___flsub+2,___fldiv@a+2
  3676  009E40  C0A1  F0AD         	movff	?___flsub+3,___fldiv@a+3
  3677  009E44  ECCB  F033         	call	___fldiv	;wreg free
  3678  009E48  C0A6  F1AA         	movff	?___fldiv,_g_nvm+49
  3679  009E4C  C0A7  F1AB         	movff	?___fldiv+1,_g_nvm+50
  3680  009E50  C0A8  F1AC         	movff	?___fldiv+2,_g_nvm+51
  3681  009E54  C0A9  F1AD         	movff	?___fldiv+3,_g_nvm+52
  3682                           
  3683                           ;app_sens_calibration.c: 50: g_nvm.flash.gas_slope[2] = (g_nvm.flash.span_uV[2] - g_nvm.
      +                          flash.baseLine_uV[2]) / g_nvm.flash.CalibrationGas[2];
  3684  009E58  C18A  F0A2         	movff	_g_nvm+17,___flsub@a
  3685  009E5C  C18B  F0A3         	movff	_g_nvm+18,___flsub@a+1
  3686  009E60  C18C  F0A4         	movff	_g_nvm+19,___flsub@a+2
  3687  009E64  C18D  F0A5         	movff	_g_nvm+20,___flsub@a+3
  3688  009E68  C196  F09E         	movff	_g_nvm+29,___flsub@b
  3689  009E6C  C197  F09F         	movff	_g_nvm+30,___flsub@b+1
  3690  009E70  C198  F0A0         	movff	_g_nvm+31,___flsub@b+2
  3691  009E74  C199  F0A1         	movff	_g_nvm+32,___flsub@b+3
  3692  009E78  EC9C  F074         	call	___flsub	;wreg free
  3693  009E7C  C09E  F0A6         	movff	?___flsub,___fldiv@b
  3694  009E80  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
  3695  009E84  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
  3696  009E88  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
  3697  009E8C  C1A2  F0AA         	movff	_g_nvm+41,___fldiv@a
  3698  009E90  C1A3  F0AB         	movff	_g_nvm+42,___fldiv@a+1
  3699  009E94  C1A4  F0AC         	movff	_g_nvm+43,___fldiv@a+2
  3700  009E98  C1A5  F0AD         	movff	_g_nvm+44,___fldiv@a+3
  3701  009E9C  ECCB  F033         	call	___fldiv	;wreg free
  3702  009EA0  C0A6  F1AE         	movff	?___fldiv,_g_nvm+53
  3703  009EA4  C0A7  F1AF         	movff	?___fldiv+1,_g_nvm+54
  3704  009EA8  C0A8  F1B0         	movff	?___fldiv+2,_g_nvm+55
  3705  009EAC  C0A9  F1B1         	movff	?___fldiv+3,_g_nvm+56
  3706  009EB0                     
  3707                           ;app_sens_calibration.c: 51: g_nvm.flash.calib_temp = Last_value.tempHumi[CMP_TEMP];
  3708  009EB0  C248  F1CA         	movff	_Last_value+34,_g_nvm+81
  3709  009EB4  C249  F1CB         	movff	_Last_value+35,_g_nvm+82
  3710  009EB8  C24A  F1CC         	movff	_Last_value+36,_g_nvm+83
  3711  009EBC  C24B  F1CD         	movff	_Last_value+37,_g_nvm+84
  3712  009EC0                     
  3713                           ;app_sens_calibration.c: 52: CMD_manual_cal();
  3714  009EC0  ECBF  F069         	call	_CMD_manual_cal	;wreg free
  3715  009EC4                     
  3716                           ;app_sens_calibration.c: 53: g_sens_calib.zero_cal = nvm_write_flash_all(&g_nvm.flash);
  3717  009EC4  0E7A               	movlw	low (_g_nvm+1)
  3718  009EC6  6E1F               	movwf	nvm_write_flash_all@flash^0,c
  3719  009EC8  0E01               	movlw	high (_g_nvm+1)
  3720  009ECA  6E20               	movwf	(nvm_write_flash_all@flash+1)^0,c
  3721  009ECC  EC2F  F074         	call	_nvm_write_flash_all	;wreg free
  3722  009ED0  0101               	movlb	1	; () banked
  3723  009ED2  6F65               	movwf	(_g_sens_calib+1)& (0+255),b
  3724  009ED4                     
  3725                           ; BSR set to: 1
  3726                           ;app_sens_calibration.c: 54: return g_sens_calib.zero_cal;
  3727  009ED4  5165               	movf	(_g_sens_calib+1)& (0+255),w,b
  3728  009ED6                     
  3729                           ; BSR set to: 1
  3730  009ED6  0012               	return		;funcret
  3731  009ED8                     __end_of_sens_ZeroCalibration:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function _sensMeasure_task *****************
  3735 ;; Defined at:
  3736 ;;		line 78 in file "app_sens_measure.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3752 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3753 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3754 ;;Total ram usage:        4 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 10
  3757 ;; This function calls:
  3758 ;;		_CMP_temp_read
  3759 ;;		_Sensors_initialize
  3760 ;;		_gasSensor_read
  3761 ;;		_gas_init
  3762 ;;		_sensor_gas_mode
  3763 ;;		_sensor_temp_mode
  3764 ;;		_tempSensor_read
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text4
  3771  0071D0                     __ptext4:
  3772                           	callstack 0
  3773  0071D0                     _sensMeasure_task:
  3774                           	callstack 20
  3775  0071D0                     
  3776                           ;app_sens_measure.c: 80: switch (g_sens_measure.seq)
  3777  0071D0  EF48  F03A         	goto	l19674
  3778  0071D4                     l19576:
  3779                           
  3780                           ; BSR set to: 1
  3781                           ;app_sens_measure.c: 83: Sensors_initialize();
  3782  0071D4  EC63  F077         	call	_Sensors_initialize	;wreg free
  3783  0071D8                     
  3784                           ;app_sens_measure.c: 84: g_large_counter = 0;
  3785  0071D8  0E00               	movlw	0
  3786  0071DA  0101               	movlb	1	; () banked
  3787  0071DC  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  3788  0071DE  0E00               	movlw	0
  3789  0071E0  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  3790  0071E2  0E00               	movlw	0
  3791  0071E4  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  3792  0071E6  0E00               	movlw	0
  3793  0071E8  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  3794  0071EA                     
  3795                           ; BSR set to: 1
  3796                           ;app_sens_measure.c: 85: g_sens_measure.seq = SENS_READY;
  3797  0071EA  0E01               	movlw	1
  3798  0071EC  6F0E               	movwf	_g_sens_measure& (0+255),b
  3799                           
  3800                           ;app_sens_measure.c: 86: break;
  3801  0071EE  EF7C  F03A         	goto	l1148
  3802  0071F2                     l19582:
  3803                           
  3804                           ; BSR set to: 1
  3805                           ;app_sens_measure.c: 88: if (g_large_counter > 20) {
  3806  0071F2  5145               	movf	(_g_large_counter+3)& (0+255),w,b	;volatile
  3807  0071F4  1144               	iorwf	(_g_large_counter+2)& (0+255),w,b	;volatile
  3808  0071F6  1143               	iorwf	(_g_large_counter+1)& (0+255),w,b	;volatile
  3809  0071F8  E109               	bnz	u21220
  3810  0071FA  0E15               	movlw	21
  3811  0071FC  5D42               	subwf	_g_large_counter& (0+255),w,b	;volatile
  3812  0071FE  A0D8               	btfss	status,0,c
  3813  007200  EF04  F039         	goto	u21221
  3814  007204  EF06  F039         	goto	u21220
  3815  007208                     u21221:
  3816  007208  EF7C  F03A         	goto	l1148
  3817  00720C                     u21220:
  3818  00720C                     
  3819                           ; BSR set to: 1
  3820                           ;app_sens_measure.c: 89: g_large_counter = 0;
  3821  00720C  0E00               	movlw	0
  3822  00720E  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  3823  007210  0E00               	movlw	0
  3824  007212  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  3825  007214  0E00               	movlw	0
  3826  007216  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  3827  007218  0E00               	movlw	0
  3828  00721A  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  3829                           
  3830                           ;app_sens_measure.c: 90: g_sens_measure.seq = SENS_TEMP_MODE;
  3831  00721C  0E02               	movlw	2
  3832  00721E  6F0E               	movwf	_g_sens_measure& (0+255),b
  3833  007220  EF7C  F03A         	goto	l1148
  3834  007224                     l19586:
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;app_sens_measure.c: 93: sensor_temp_mode(GAS_CH2);
  3838  007224  0E02               	movlw	2
  3839  007226  EC62  F075         	call	_sensor_temp_mode
  3840  00722A                     
  3841                           ;app_sens_measure.c: 94: g_large_counter = 0;
  3842  00722A  0E00               	movlw	0
  3843  00722C  0101               	movlb	1	; () banked
  3844  00722E  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  3845  007230  0E00               	movlw	0
  3846  007232  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  3847  007234  0E00               	movlw	0
  3848  007236  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  3849  007238  0E00               	movlw	0
  3850  00723A  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  3851  00723C                     
  3852                           ; BSR set to: 1
  3853                           ;app_sens_measure.c: 95: g_sens_measure.seq = SENS_WAIT;
  3854  00723C  0E0B               	movlw	11
  3855  00723E  6F0E               	movwf	_g_sens_measure& (0+255),b
  3856  007240                     
  3857                           ; BSR set to: 1
  3858                           ;app_sens_measure.c: 96: g_sens_measure.next_seq = SENS_TEMP_MEASURE;
  3859  007240  0E03               	movlw	3
  3860  007242  6F0F               	movwf	(_g_sens_measure+1)& (0+255),b
  3861  007244                     l19594:
  3862                           
  3863                           ; BSR set to: 1
  3864                           ;app_sens_measure.c: 97: g_sens_measure.seq_count = 20;
  3865  007244  0E14               	movlw	20
  3866  007246  6F10               	movwf	(_g_sens_measure+2)& (0+255),b
  3867                           
  3868                           ;app_sens_measure.c: 98: break;
  3869  007248  EF7C  F03A         	goto	l1148
  3870  00724C                     l19596:
  3871                           
  3872                           ; BSR set to: 1
  3873                           ;app_sens_measure.c: 100: g_sens_measure.isTemp_Success = tempSensor_read();
  3874  00724C  EC64  F061         	call	_tempSensor_read	;wreg free
  3875  007250  0101               	movlb	1	; () banked
  3876  007252  6F1A               	movwf	(_g_sens_measure+12)& (0+255),b
  3877  007254                     
  3878                           ; BSR set to: 1
  3879                           ;app_sens_measure.c: 101: CMP_temp_read(GAS_CH2);
  3880  007254  0E02               	movlw	2
  3881  007256  EC53  F059         	call	_CMP_temp_read
  3882  00725A                     
  3883                           ;app_sens_measure.c: 102: g_large_counter = 0;
  3884  00725A  0E00               	movlw	0
  3885  00725C  0101               	movlb	1	; () banked
  3886  00725E  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  3887  007260  0E00               	movlw	0
  3888  007262  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  3889  007264  0E00               	movlw	0
  3890  007266  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  3891  007268  0E00               	movlw	0
  3892  00726A  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  3893  00726C                     
  3894                           ; BSR set to: 1
  3895                           ;app_sens_measure.c: 103: g_sens_measure.seq = SENS_WAIT;
  3896  00726C  0E0B               	movlw	11
  3897  00726E  6F0E               	movwf	_g_sens_measure& (0+255),b
  3898  007270                     
  3899                           ; BSR set to: 1
  3900                           ;app_sens_measure.c: 104: g_sens_measure.next_seq = SENS_GAS_MODE;
  3901  007270  0E04               	movlw	4
  3902  007272  6F0F               	movwf	(_g_sens_measure+1)& (0+255),b
  3903  007274                     l19606:
  3904                           
  3905                           ; BSR set to: 1
  3906                           ;app_sens_measure.c: 105: g_sens_measure.seq_count = 10;
  3907  007274  0E0A               	movlw	10
  3908  007276  6F10               	movwf	(_g_sens_measure+2)& (0+255),b
  3909                           
  3910                           ;app_sens_measure.c: 106: break;
  3911  007278  EF7C  F03A         	goto	l1148
  3912  00727C                     l19608:
  3913                           
  3914                           ; BSR set to: 1
  3915                           ;app_sens_measure.c: 108: sensor_gas_mode(GAS_CH2);
  3916  00727C  0E02               	movlw	2
  3917  00727E  ECAB  F06E         	call	_sensor_gas_mode
  3918  007282                     
  3919                           ;app_sens_measure.c: 109: g_large_counter = 0;
  3920  007282  0E00               	movlw	0
  3921  007284  0101               	movlb	1	; () banked
  3922  007286  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  3923  007288  0E00               	movlw	0
  3924  00728A  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  3925  00728C  0E00               	movlw	0
  3926  00728E  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  3927  007290  0E00               	movlw	0
  3928  007292  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  3929  007294                     
  3930                           ; BSR set to: 1
  3931                           ;app_sens_measure.c: 110: g_sens_measure.seq = SENS_WAIT;
  3932  007294  0E0B               	movlw	11
  3933  007296  6F0E               	movwf	_g_sens_measure& (0+255),b
  3934  007298                     
  3935                           ; BSR set to: 1
  3936                           ;app_sens_measure.c: 111: g_sens_measure.next_seq = SENS_GAS_MODE_MEASURE;
  3937  007298  0E05               	movlw	5
  3938  00729A  6F0F               	movwf	(_g_sens_measure+1)& (0+255),b
  3939  00729C  EF22  F039         	goto	l19594
  3940  0072A0                     l19618:
  3941                           
  3942                           ; BSR set to: 1
  3943                           ;app_sens_measure.c: 115: g_sens_measure.isGasSensor_Success[GAS_CH2] = gasSensor_read(G
      +                          AS_CH2);
  3944  0072A0  0E02               	movlw	2
  3945  0072A2  EC46  F037         	call	_gasSensor_read
  3946  0072A6  0101               	movlb	1	; () banked
  3947  0072A8  6F18               	movwf	(_g_sens_measure+10)& (0+255),b
  3948  0072AA                     
  3949                           ; BSR set to: 1
  3950                           ;app_sens_measure.c: 116: g_sens_measure.seq = SENS_GAS_INIT;
  3951  0072AA  0E06               	movlw	6
  3952  0072AC  6F0E               	movwf	_g_sens_measure& (0+255),b
  3953                           
  3954                           ;app_sens_measure.c: 117: break;
  3955  0072AE  EF7C  F03A         	goto	l1148
  3956  0072B2                     l19622:
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;app_sens_measure.c: 119: gas_init(gChNum);
  3960  0072B2  0100               	movlb	0	; () banked
  3961  0072B4  51FF               	movf	_gChNum& (0+255),w,b
  3962  0072B6  EC4B  F078         	call	_gas_init
  3963  0072BA                     
  3964                           ;app_sens_measure.c: 120: g_large_counter = 0;
  3965  0072BA  0E00               	movlw	0
  3966  0072BC  0101               	movlb	1	; () banked
  3967  0072BE  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  3968  0072C0  0E00               	movlw	0
  3969  0072C2  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  3970  0072C4  0E00               	movlw	0
  3971  0072C6  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  3972  0072C8  0E00               	movlw	0
  3973  0072CA  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  3974  0072CC                     
  3975                           ; BSR set to: 1
  3976                           ;app_sens_measure.c: 121: g_sens_measure.seq = SENS_WAIT;
  3977  0072CC  0E0B               	movlw	11
  3978  0072CE  6F0E               	movwf	_g_sens_measure& (0+255),b
  3979  0072D0                     
  3980                           ; BSR set to: 1
  3981                           ;app_sens_measure.c: 122: g_sens_measure.next_seq = SENS_GAS_MEASURE;
  3982  0072D0  0E07               	movlw	7
  3983  0072D2  6F0F               	movwf	(_g_sens_measure+1)& (0+255),b
  3984  0072D4  EF22  F039         	goto	l19594
  3985  0072D8                     l19632:
  3986                           
  3987                           ; BSR set to: 1
  3988                           ;app_sens_measure.c: 126: g_sens_measure.isGasSensor_Success[gChNum] = gasSensor_read(gC
      +                          hNum);
  3989  0072D8  0100               	movlb	0	; () banked
  3990  0072DA  51FF               	movf	_gChNum& (0+255),w,b
  3991  0072DC  EC46  F037         	call	_gasSensor_read
  3992  0072E0  0100               	movlb	0	; () banked
  3993  0072E2  6FF4               	movwf	??_sensMeasure_task& (0+255),b
  3994  0072E4  0E16               	movlw	low (_g_sens_measure+8)
  3995  0072E6  25FF               	addwf	_gChNum& (0+255),w,b
  3996  0072E8  6ED9               	movwf	fsr2l,c
  3997  0072EA  6ADA               	clrf	fsr2h,c
  3998  0072EC  0E01               	movlw	high (_g_sens_measure+8)
  3999  0072EE  22DA               	addwfc	fsr2h,f,c
  4000  0072F0  C0F4  FFDF         	movff	??_sensMeasure_task,indf2
  4001  0072F4                     
  4002                           ; BSR set to: 0
  4003                           ;app_sens_measure.c: 127: gChNum++;
  4004  0072F4  2BFF               	incf	_gChNum& (0+255),f,b
  4005  0072F6                     
  4006                           ; BSR set to: 0
  4007                           ;app_sens_measure.c: 128: g_large_counter = 0;
  4008  0072F6  0E00               	movlw	0
  4009  0072F8  0101               	movlb	1	; () banked
  4010  0072FA  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  4011  0072FC  0E00               	movlw	0
  4012  0072FE  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4013  007300  0E00               	movlw	0
  4014  007302  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4015  007304  0E00               	movlw	0
  4016  007306  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4017  007308                     
  4018                           ; BSR set to: 1
  4019                           ;app_sens_measure.c: 129: g_sens_measure.seq = SENS_WAIT;
  4020  007308  0E0B               	movlw	11
  4021  00730A  6F0E               	movwf	_g_sens_measure& (0+255),b
  4022  00730C                     
  4023                           ; BSR set to: 1
  4024                           ;app_sens_measure.c: 130: g_sens_measure.next_seq = SENS_GAS_INIT;
  4025  00730C  0E06               	movlw	6
  4026  00730E  6F0F               	movwf	(_g_sens_measure+1)& (0+255),b
  4027  007310  EF3A  F039         	goto	l19606
  4028  007314                     l19644:
  4029                           
  4030                           ; BSR set to: 1
  4031                           ;app_sens_measure.c: 134: if (g_sens_measure.isGasSensor_Success[0] && g_sens_measure.is
      +                          GasSensor_Success[1] && g_sens_measure.isGasSensor_Success[2])
  4032  007314  5116               	movf	(_g_sens_measure+8)& (0+255),w,b
  4033  007316  B4D8               	btfsc	status,2,c
  4034  007318  EF90  F039         	goto	u21231
  4035  00731C  EF92  F039         	goto	u21230
  4036  007320                     u21231:
  4037  007320  EFA6  F039         	goto	l19652
  4038  007324                     u21230:
  4039  007324                     
  4040                           ; BSR set to: 1
  4041  007324  5117               	movf	(_g_sens_measure+9)& (0+255),w,b
  4042  007326  B4D8               	btfsc	status,2,c
  4043  007328  EF98  F039         	goto	u21241
  4044  00732C  EF9A  F039         	goto	u21240
  4045  007330                     u21241:
  4046  007330  EFA6  F039         	goto	l19652
  4047  007334                     u21240:
  4048  007334                     
  4049                           ; BSR set to: 1
  4050  007334  5118               	movf	(_g_sens_measure+10)& (0+255),w,b
  4051  007336  B4D8               	btfsc	status,2,c
  4052  007338  EFA0  F039         	goto	u21251
  4053  00733C  EFA2  F039         	goto	u21250
  4054  007340                     u21251:
  4055  007340  EFA6  F039         	goto	l19652
  4056  007344                     u21250:
  4057  007344                     
  4058                           ; BSR set to: 1
  4059                           ;app_sens_measure.c: 135: g_sens_measure.seq = SENS_MEASURE_APPLY;
  4060  007344  0E08               	movlw	8
  4061  007346  6F0E               	movwf	_g_sens_measure& (0+255),b
  4062  007348  EF7C  F03A         	goto	l1148
  4063  00734C                     l19652:
  4064                           
  4065                           ; BSR set to: 1
  4066                           ;app_sens_measure.c: 136: else g_sens_measure.seq = SENS_INIT;
  4067  00734C  0E00               	movlw	0
  4068  00734E  6F0E               	movwf	_g_sens_measure& (0+255),b
  4069  007350  EF7C  F03A         	goto	l1148
  4070  007354                     l1141:
  4071                           
  4072                           ; BSR set to: 1
  4073                           ;app_sens_measure.c: 139: Last_value.toxic_gas[0][LV_GAS_VOLT] = sens_value.toxic_gas[0]
      +                          [LV_GAS_VOLT];
  4074  007354  C200  F226         	movff	_sens_value,_Last_value
  4075  007358  C201  F227         	movff	_sens_value+1,_Last_value+1
  4076  00735C  C202  F228         	movff	_sens_value+2,_Last_value+2
  4077  007360  C203  F229         	movff	_sens_value+3,_Last_value+3
  4078                           
  4079                           ;app_sens_measure.c: 140: Last_value.toxic_gas[1][LV_GAS_VOLT] = sens_value.toxic_gas[1]
      +                          [LV_GAS_VOLT];
  4080  007364  C208  F22E         	movff	_sens_value+8,_Last_value+8
  4081  007368  C209  F22F         	movff	_sens_value+9,_Last_value+9
  4082  00736C  C20A  F230         	movff	_sens_value+10,_Last_value+10
  4083  007370  C20B  F231         	movff	_sens_value+11,_Last_value+11
  4084                           
  4085                           ;app_sens_measure.c: 141: Last_value.toxic_gas[2][LV_GAS_VOLT] = sens_value.toxic_gas[2]
      +                          [LV_GAS_VOLT];
  4086  007374  C210  F236         	movff	_sens_value+16,_Last_value+16
  4087  007378  C211  F237         	movff	_sens_value+17,_Last_value+17
  4088  00737C  C212  F238         	movff	_sens_value+18,_Last_value+18
  4089  007380  C213  F239         	movff	_sens_value+19,_Last_value+19
  4090                           
  4091                           ;app_sens_measure.c: 142: Last_value.toxic_gas[0][LV_GAS_CONCEN] = sens_value.toxic_gas[
      +                          0][LV_GAS_CONCEN];
  4092  007384  C204  F22A         	movff	_sens_value+4,_Last_value+4
  4093  007388  C205  F22B         	movff	_sens_value+5,_Last_value+5
  4094  00738C  C206  F22C         	movff	_sens_value+6,_Last_value+6
  4095  007390  C207  F22D         	movff	_sens_value+7,_Last_value+7
  4096                           
  4097                           ;app_sens_measure.c: 143: Last_value.toxic_gas[1][LV_GAS_CONCEN] = sens_value.toxic_gas[
      +                          1][LV_GAS_CONCEN];
  4098  007394  C20C  F232         	movff	_sens_value+12,_Last_value+12
  4099  007398  C20D  F233         	movff	_sens_value+13,_Last_value+13
  4100  00739C  C20E  F234         	movff	_sens_value+14,_Last_value+14
  4101  0073A0  C20F  F235         	movff	_sens_value+15,_Last_value+15
  4102                           
  4103                           ;app_sens_measure.c: 144: Last_value.toxic_gas[2][LV_GAS_CONCEN] = sens_value.toxic_gas[
      +                          2][LV_GAS_CONCEN];
  4104  0073A4  C214  F23A         	movff	_sens_value+20,_Last_value+20
  4105  0073A8  C215  F23B         	movff	_sens_value+21,_Last_value+21
  4106  0073AC  C216  F23C         	movff	_sens_value+22,_Last_value+22
  4107  0073B0  C217  F23D         	movff	_sens_value+23,_Last_value+23
  4108  0073B4                     
  4109                           ; BSR set to: 1
  4110                           ;app_sens_measure.c: 145: if (g_sens_measure.isCO2_Success)
  4111  0073B4  5119               	movf	(_g_sens_measure+11)& (0+255),w,b
  4112  0073B6  B4D8               	btfsc	status,2,c
  4113  0073B8  EFE0  F039         	goto	u21261
  4114  0073BC  EFE2  F039         	goto	u21260
  4115  0073C0                     u21261:
  4116  0073C0  EFE6  F039         	goto	l1142
  4117  0073C4                     u21260:
  4118  0073C4                     
  4119                           ; BSR set to: 1
  4120                           ;app_sens_measure.c: 146: Last_value.co2_gas = sens_value.co2_gas;
  4121  0073C4  C218  F23E         	movff	_sens_value+24,_Last_value+24
  4122  0073C8  C219  F23F         	movff	_sens_value+25,_Last_value+25
  4123  0073CC                     l1142:
  4124                           
  4125                           ; BSR set to: 1
  4126                           ;app_sens_measure.c: 147: Last_value.tempHumi[LV_TEMP] = sens_value.tempHumi[LV_TEMP];
  4127  0073CC  C21A  F240         	movff	_sens_value+26,_Last_value+26
  4128  0073D0  C21B  F241         	movff	_sens_value+27,_Last_value+27
  4129  0073D4  C21C  F242         	movff	_sens_value+28,_Last_value+28
  4130  0073D8  C21D  F243         	movff	_sens_value+29,_Last_value+29
  4131                           
  4132                           ;app_sens_measure.c: 148: Last_value.tempHumi[LV_HUMI] = sens_value.tempHumi[LV_HUMI];
  4133  0073DC  C21E  F244         	movff	_sens_value+30,_Last_value+30
  4134  0073E0  C21F  F245         	movff	_sens_value+31,_Last_value+31
  4135  0073E4  C220  F246         	movff	_sens_value+32,_Last_value+32
  4136  0073E8  C221  F247         	movff	_sens_value+33,_Last_value+33
  4137                           
  4138                           ;app_sens_measure.c: 149: Last_value.tempHumi[CMP_TEMP] = sens_value.tempHumi[CMP_TEMP];
  4139  0073EC  C222  F248         	movff	_sens_value+34,_Last_value+34
  4140  0073F0  C223  F249         	movff	_sens_value+35,_Last_value+35
  4141  0073F4  C224  F24A         	movff	_sens_value+36,_Last_value+36
  4142  0073F8  C225  F24B         	movff	_sens_value+37,_Last_value+37
  4143  0073FC                     
  4144                           ; BSR set to: 1
  4145                           ;app_sens_measure.c: 150: g_sens_measure.seq = SENS_DISPLAY;
  4146  0073FC  0E0A               	movlw	10
  4147  0073FE  6F0E               	movwf	_g_sens_measure& (0+255),b
  4148                           
  4149                           ;app_sens_measure.c: 151: break;
  4150  007400  EF7C  F03A         	goto	l1148
  4151  007404                     l19660:
  4152                           
  4153                           ; BSR set to: 1
  4154                           ;app_sens_measure.c: 156: g_large_counter = 0;
  4155  007404  0E00               	movlw	0
  4156  007406  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  4157  007408  0E00               	movlw	0
  4158  00740A  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4159  00740C  0E00               	movlw	0
  4160  00740E  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4161  007410  0E00               	movlw	0
  4162  007412  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4163                           
  4164                           ;app_sens_measure.c: 157: g_sens_measure.seq = SENS_READY;
  4165  007414  0E01               	movlw	1
  4166  007416  6F0E               	movwf	_g_sens_measure& (0+255),b
  4167                           
  4168                           ;app_sens_measure.c: 158: break;
  4169  007418  EF7C  F03A         	goto	l1148
  4170  00741C                     l19662:
  4171                           
  4172                           ; BSR set to: 1
  4173                           ;app_sens_measure.c: 160: if (gChNum == 2) {
  4174  00741C  0E02               	movlw	2
  4175  00741E  0100               	movlb	0	; () banked
  4176  007420  19FF               	xorwf	_gChNum& (0+255),w,b
  4177  007422  A4D8               	btfss	status,2,c
  4178  007424  EF16  F03A         	goto	u21271
  4179  007428  EF18  F03A         	goto	u21270
  4180  00742C                     u21271:
  4181  00742C  EF1F  F03A         	goto	l19666
  4182  007430                     u21270:
  4183  007430                     
  4184                           ; BSR set to: 0
  4185                           ;app_sens_measure.c: 161: gChNum = 0;
  4186  007430  0E00               	movlw	0
  4187  007432  6FFF               	movwf	_gChNum& (0+255),b
  4188                           
  4189                           ;app_sens_measure.c: 162: g_sens_measure.seq = SENS_MEASURE_CHECK;
  4190  007434  0E09               	movlw	9
  4191  007436  0101               	movlb	1	; () banked
  4192  007438  6F0E               	movwf	_g_sens_measure& (0+255),b
  4193                           
  4194                           ;app_sens_measure.c: 163: } else {
  4195  00743A  EF7C  F03A         	goto	l1148
  4196  00743E                     l19666:
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;app_sens_measure.c: 164: if (g_large_counter > g_sens_measure.seq_count) {
  4200  00743E  C110  F0F4         	movff	_g_sens_measure+2,??_sensMeasure_task
  4201  007442  6BF5               	clrf	(??_sensMeasure_task+1)& (0+255),b
  4202  007444  6BF6               	clrf	(??_sensMeasure_task+2)& (0+255),b
  4203  007446  6BF7               	clrf	(??_sensMeasure_task+3)& (0+255),b
  4204  007448  0101               	movlb	1	; () banked
  4205  00744A  5142               	movf	_g_large_counter& (0+255),w,b	;volatile
  4206  00744C  0100               	movlb	0	; () banked
  4207  00744E  5DF4               	subwf	??_sensMeasure_task& (0+255),w,b
  4208  007450  0101               	movlb	1	; () banked
  4209  007452  5143               	movf	(_g_large_counter+1)& (0+255),w,b	;volatile
  4210  007454  0100               	movlb	0	; () banked
  4211  007456  59F5               	subwfb	(??_sensMeasure_task+1)& (0+255),w,b
  4212  007458  0101               	movlb	1	; () banked
  4213  00745A  5144               	movf	(_g_large_counter+2)& (0+255),w,b	;volatile
  4214  00745C  0100               	movlb	0	; () banked
  4215  00745E  59F6               	subwfb	(??_sensMeasure_task+2)& (0+255),w,b
  4216  007460  0101               	movlb	1	; () banked
  4217  007462  5145               	movf	(_g_large_counter+3)& (0+255),w,b	;volatile
  4218  007464  0100               	movlb	0	; () banked
  4219  007466  59F7               	subwfb	(??_sensMeasure_task+3)& (0+255),w,b
  4220  007468  B0D8               	btfsc	status,0,c
  4221  00746A  EF39  F03A         	goto	u21281
  4222  00746E  EF3B  F03A         	goto	u21280
  4223  007472                     u21281:
  4224  007472  EF7C  F03A         	goto	l1148
  4225  007476                     u21280:
  4226  007476                     
  4227                           ; BSR set to: 0
  4228                           ;app_sens_measure.c: 165: g_large_counter = 0;
  4229  007476  0E00               	movlw	0
  4230  007478  0101               	movlb	1	; () banked
  4231  00747A  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
  4232  00747C  0E00               	movlw	0
  4233  00747E  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
  4234  007480  0E00               	movlw	0
  4235  007482  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
  4236  007484  0E00               	movlw	0
  4237  007486  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
  4238  007488                     
  4239                           ; BSR set to: 1
  4240                           ;app_sens_measure.c: 166: g_sens_measure.seq = g_sens_measure.next_seq;
  4241  007488  C10F  F10E         	movff	_g_sens_measure+1,_g_sens_measure
  4242  00748C  EF7C  F03A         	goto	l1148
  4243  007490                     l19674:
  4244  007490  0101               	movlb	1	; () banked
  4245  007492  510E               	movf	_g_sens_measure& (0+255),w,b
  4246                           
  4247                           ; Switch size 1, requested type "simple"
  4248                           ; Number of cases is 12, Range of values is 0 to 11
  4249                           ; switch strategies available:
  4250                           ; Name         Instructions Cycles
  4251                           ; simple_byte           37    19 (average)
  4252                           ;	Chosen strategy is simple_byte
  4253  007494  0A00               	xorlw	0	; case 0
  4254  007496  B4D8               	btfsc	status,2,c
  4255  007498  EFEA  F038         	goto	l19576
  4256  00749C  0A01               	xorlw	1	; case 1
  4257  00749E  B4D8               	btfsc	status,2,c
  4258  0074A0  EFF9  F038         	goto	l19582
  4259  0074A4  0A03               	xorlw	3	; case 2
  4260  0074A6  B4D8               	btfsc	status,2,c
  4261  0074A8  EF12  F039         	goto	l19586
  4262  0074AC  0A01               	xorlw	1	; case 3
  4263  0074AE  B4D8               	btfsc	status,2,c
  4264  0074B0  EF26  F039         	goto	l19596
  4265  0074B4  0A07               	xorlw	7	; case 4
  4266  0074B6  B4D8               	btfsc	status,2,c
  4267  0074B8  EF3E  F039         	goto	l19608
  4268  0074BC  0A01               	xorlw	1	; case 5
  4269  0074BE  B4D8               	btfsc	status,2,c
  4270  0074C0  EF50  F039         	goto	l19618
  4271  0074C4  0A03               	xorlw	3	; case 6
  4272  0074C6  B4D8               	btfsc	status,2,c
  4273  0074C8  EF59  F039         	goto	l19622
  4274  0074CC  0A01               	xorlw	1	; case 7
  4275  0074CE  B4D8               	btfsc	status,2,c
  4276  0074D0  EF6C  F039         	goto	l19632
  4277  0074D4  0A0F               	xorlw	15	; case 8
  4278  0074D6  B4D8               	btfsc	status,2,c
  4279  0074D8  EFAA  F039         	goto	l1141
  4280  0074DC  0A01               	xorlw	1	; case 9
  4281  0074DE  B4D8               	btfsc	status,2,c
  4282  0074E0  EF8A  F039         	goto	l19644
  4283  0074E4  0A03               	xorlw	3	; case 10
  4284  0074E6  B4D8               	btfsc	status,2,c
  4285  0074E8  EF02  F03A         	goto	l19660
  4286  0074EC  0A01               	xorlw	1	; case 11
  4287  0074EE  B4D8               	btfsc	status,2,c
  4288  0074F0  EF0E  F03A         	goto	l19662
  4289  0074F4  EF7C  F03A         	goto	l1148
  4290  0074F8                     l1148:
  4291  0074F8  0012               	return		;funcret
  4292  0074FA                     __end_of_sensMeasure_task:
  4293                           	callstack 0
  4294                           
  4295 ;; *************** function _tempSensor_read *****************
  4296 ;; Defined at:
  4297 ;;		line 284 in file "sensor.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;  humi            4  122[BANK0 ] float 
  4302 ;;  temp            4  118[BANK0 ] float 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  1    wreg      unsigned char 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4307 ;; Tracked objects:
  4308 ;;		On entry : 0/0
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4313 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4315 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4316 ;;Total ram usage:        8 bytes
  4317 ;; Hardware stack levels used: 1
  4318 ;; Hardware stack levels required when called: 9
  4319 ;; This function calls:
  4320 ;;		___fladd
  4321 ;;		_sensor_read_temp_humi
  4322 ;; This function is called by:
  4323 ;;		_sensMeasure_task
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text5
  4328  00C2C8                     __ptext5:
  4329                           	callstack 0
  4330  00C2C8                     _tempSensor_read:
  4331                           	callstack 20
  4332  00C2C8                     
  4333                           ;sensor.c: 286: float temp, humi;;sensor.c: 288: if (g_sens_measure.isTemp_InitDone == 0
      +                          )
  4334  00C2C8  0101               	movlb	1	; () banked
  4335  00C2CA  5115               	movf	(_g_sens_measure+7)& (0+255),w,b
  4336  00C2CC  A4D8               	btfss	status,2,c
  4337  00C2CE  EF6B  F061         	goto	u20961
  4338  00C2D2  EF6D  F061         	goto	u20960
  4339  00C2D6                     u20961:
  4340  00C2D6  EF70  F061         	goto	l19222
  4341  00C2DA                     u20960:
  4342  00C2DA                     l19218:
  4343                           
  4344                           ;sensor.c: 289: return 0;
  4345  00C2DA  0E00               	movlw	0
  4346  00C2DC  EFC8  F061         	goto	l1458
  4347  00C2E0                     l19222:
  4348                           
  4349                           ; BSR set to: 1
  4350                           ;sensor.c: 291: if (sensor_read_temp_humi(&temp, &humi)) {
  4351  00C2E0  0ED6               	movlw	low tempSensor_read@temp
  4352  00C2E2  0100               	movlb	0	; () banked
  4353  00C2E4  6FD2               	movwf	sensor_read_temp_humi@temp& (0+255),b
  4354  00C2E6  0E00               	movlw	high tempSensor_read@temp
  4355  00C2E8  6FD3               	movwf	(sensor_read_temp_humi@temp+1)& (0+255),b
  4356  00C2EA  0EDA               	movlw	low tempSensor_read@humi
  4357  00C2EC  6FD4               	movwf	sensor_read_temp_humi@humi& (0+255),b
  4358  00C2EE  0E00               	movlw	high tempSensor_read@humi
  4359  00C2F0  6FD5               	movwf	(sensor_read_temp_humi@humi+1)& (0+255),b
  4360  00C2F2  EC9A  F078         	call	_sensor_read_temp_humi	;wreg free
  4361  00C2F6  0900               	iorlw	0
  4362  00C2F8  B4D8               	btfsc	status,2,c
  4363  00C2FA  EF81  F061         	goto	u20971
  4364  00C2FE  EF83  F061         	goto	u20970
  4365  00C302                     u20971:
  4366  00C302  EF6D  F061         	goto	l19218
  4367  00C306                     u20970:
  4368  00C306                     
  4369                           ;sensor.c: 292: sens_value.tempHumi[LV_TEMP] = temp;
  4370  00C306  C0D6  F21A         	movff	tempSensor_read@temp,_sens_value+26
  4371  00C30A  C0D7  F21B         	movff	tempSensor_read@temp+1,_sens_value+27
  4372  00C30E  C0D8  F21C         	movff	tempSensor_read@temp+2,_sens_value+28
  4373  00C312  C0D9  F21D         	movff	tempSensor_read@temp+3,_sens_value+29
  4374  00C316                     
  4375                           ;sensor.c: 293: sens_value.tempHumi[LV_TEMP] += g_nvm.flash.tempOffset;
  4376  00C316  C21A  F08E         	movff	_sens_value+26,___fladd@b
  4377  00C31A  C21B  F08F         	movff	_sens_value+27,___fladd@b+1
  4378  00C31E  C21C  F090         	movff	_sens_value+28,___fladd@b+2
  4379  00C322  C21D  F091         	movff	_sens_value+29,___fladd@b+3
  4380  00C326  C1C2  F092         	movff	_g_nvm+73,___fladd@a
  4381  00C32A  C1C3  F093         	movff	_g_nvm+74,___fladd@a+1
  4382  00C32E  C1C4  F094         	movff	_g_nvm+75,___fladd@a+2
  4383  00C332  C1C5  F095         	movff	_g_nvm+76,___fladd@a+3
  4384  00C336  EC46  F02D         	call	___fladd	;wreg free
  4385  00C33A  C08E  F21A         	movff	?___fladd,_sens_value+26
  4386  00C33E  C08F  F21B         	movff	?___fladd+1,_sens_value+27
  4387  00C342  C090  F21C         	movff	?___fladd+2,_sens_value+28
  4388  00C346  C091  F21D         	movff	?___fladd+3,_sens_value+29
  4389  00C34A                     
  4390                           ;sensor.c: 294: sens_value.tempHumi[LV_HUMI] = humi;
  4391  00C34A  C0DA  F21E         	movff	tempSensor_read@humi,_sens_value+30
  4392  00C34E  C0DB  F21F         	movff	tempSensor_read@humi+1,_sens_value+31
  4393  00C352  C0DC  F220         	movff	tempSensor_read@humi+2,_sens_value+32
  4394  00C356  C0DD  F221         	movff	tempSensor_read@humi+3,_sens_value+33
  4395                           
  4396                           ;sensor.c: 295: sens_value.tempHumi[LV_HUMI] += g_nvm.flash.humiOffset;
  4397  00C35A  C21E  F08E         	movff	_sens_value+30,___fladd@b
  4398  00C35E  C21F  F08F         	movff	_sens_value+31,___fladd@b+1
  4399  00C362  C220  F090         	movff	_sens_value+32,___fladd@b+2
  4400  00C366  C221  F091         	movff	_sens_value+33,___fladd@b+3
  4401  00C36A  C1C6  F092         	movff	_g_nvm+77,___fladd@a
  4402  00C36E  C1C7  F093         	movff	_g_nvm+78,___fladd@a+1
  4403  00C372  C1C8  F094         	movff	_g_nvm+79,___fladd@a+2
  4404  00C376  C1C9  F095         	movff	_g_nvm+80,___fladd@a+3
  4405  00C37A  EC46  F02D         	call	___fladd	;wreg free
  4406  00C37E  C08E  F21E         	movff	?___fladd,_sens_value+30
  4407  00C382  C08F  F21F         	movff	?___fladd+1,_sens_value+31
  4408  00C386  C090  F220         	movff	?___fladd+2,_sens_value+32
  4409  00C38A  C091  F221         	movff	?___fladd+3,_sens_value+33
  4410  00C38E                     
  4411                           ;sensor.c: 296: return 1;
  4412  00C38E  0E01               	movlw	1
  4413  00C390                     l1458:
  4414  00C390  0012               	return		;funcret
  4415  00C392                     __end_of_tempSensor_read:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _sensor_read_temp_humi *****************
  4419 ;; Defined at:
  4420 ;;		line 270 in file "sensor.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  temp            2  114[BANK0 ] PTR float 
  4423 ;;		 -> tempSensor_read@temp(4), 
  4424 ;;  humi            2  116[BANK0 ] PTR float 
  4425 ;;		 -> tempSensor_read@humi(4), 
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      unsigned char 
  4430 ;; Registers used:
  4431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4437 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4440 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4441 ;;Total ram usage:        4 bytes
  4442 ;; Hardware stack levels used: 1
  4443 ;; Hardware stack levels required when called: 8
  4444 ;; This function calls:
  4445 ;;		_sht3x_measure_nonblock_read
  4446 ;; This function is called by:
  4447 ;;		_tempSensor_read
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text6
  4452  00F134                     __ptext6:
  4453                           	callstack 0
  4454  00F134                     _sensor_read_temp_humi:
  4455                           	callstack 20
  4456  00F134                     
  4457                           ;sensor.c: 275: return sht3x_measure_nonblock_read(temp, humi);
  4458  00F134  C0D2  F0CC         	movff	sensor_read_temp_humi@temp,sht3x_measure_nonblock_read@temp
  4459  00F138  C0D3  F0CD         	movff	sensor_read_temp_humi@temp+1,sht3x_measure_nonblock_read@temp+1
  4460  00F13C  C0D4  F0CE         	movff	sensor_read_temp_humi@humi,sht3x_measure_nonblock_read@humi
  4461  00F140  C0D5  F0CF         	movff	sensor_read_temp_humi@humi+1,sht3x_measure_nonblock_read@humi+1
  4462  00F144  EC79  F070         	call	_sht3x_measure_nonblock_read	;wreg free
  4463  00F148  0012               	return		;funcret
  4464  00F14A                     __end_of_sensor_read_temp_humi:
  4465                           	callstack 0
  4466                           
  4467 ;; *************** function _sht3x_measure_nonblock_read *****************
  4468 ;; Defined at:
  4469 ;;		line 200 in file "bsp/sht3x.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;  temp            2  108[BANK0 ] PTR float 
  4472 ;;		 -> tempSensor_read@temp(4), 
  4473 ;;  humi            2  110[BANK0 ] PTR float 
  4474 ;;		 -> tempSensor_read@humi(4), 
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  cmd             2  112[BANK0 ] unsigned char [2]
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      unsigned char 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4486 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4487 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4490 ;;Total ram usage:        6 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 7
  4493 ;; This function calls:
  4494 ;;		_i2c_writeBytes
  4495 ;;		_sht3x_measure_read
  4496 ;; This function is called by:
  4497 ;;		_sensor_read_temp_humi
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text7
  4502  00E0F2                     __ptext7:
  4503                           	callstack 0
  4504  00E0F2                     _sht3x_measure_nonblock_read:
  4505                           	callstack 20
  4506  00E0F2                     
  4507                           ;sht3x.c: 202: uint8_t cmd[2];;sht3x.c: 203: cmd[0] = 0xe0;
  4508  00E0F2  0EE0               	movlw	224
  4509  00E0F4  0100               	movlb	0	; () banked
  4510  00E0F6  6FD0               	movwf	sht3x_measure_nonblock_read@cmd& (0+255),b
  4511                           
  4512                           ;sht3x.c: 204: cmd[1] = 0x00;
  4513  00E0F8  0E00               	movlw	0
  4514  00E0FA  6FD1               	movwf	(sht3x_measure_nonblock_read@cmd+1)& (0+255),b
  4515  00E0FC                     
  4516                           ; BSR set to: 0
  4517                           ;sht3x.c: 206: if (i2c_writeBytes(0x88, cmd, 2, 0) == 0)
  4518  00E0FC  0ED0               	movlw	low sht3x_measure_nonblock_read@cmd
  4519  00E0FE  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  4520  00E100  0E00               	movlw	high sht3x_measure_nonblock_read@cmd
  4521  00E102  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  4522  00E104  0E02               	movlw	2
  4523  00E106  6E17               	movwf	i2c_writeBytes@len^0,c
  4524  00E108  0E00               	movlw	0
  4525  00E10A  6E18               	movwf	i2c_writeBytes@isStop^0,c
  4526  00E10C  0E88               	movlw	136
  4527  00E10E  ECF6  F072         	call	_i2c_writeBytes
  4528  00E112  0900               	iorlw	0
  4529  00E114  A4D8               	btfss	status,2,c
  4530  00E116  EF8F  F070         	goto	u19001
  4531  00E11A  EF91  F070         	goto	u19000
  4532  00E11E                     u19001:
  4533  00E11E  EF94  F070         	goto	l17550
  4534  00E122                     u19000:
  4535  00E122                     l17546:
  4536                           
  4537                           ;sht3x.c: 207: return 0;
  4538  00E122  0E00               	movlw	0
  4539  00E124  EFA9  F070         	goto	l319
  4540  00E128                     l17550:
  4541                           
  4542                           ;sht3x.c: 209: if (sht3x_measure_read(temp, humi) == 0)
  4543  00E128  C0CC  F0BF         	movff	sht3x_measure_nonblock_read@temp,sht3x_measure_read@temp
  4544  00E12C  C0CD  F0C0         	movff	sht3x_measure_nonblock_read@temp+1,sht3x_measure_read@temp+1
  4545  00E130  C0CE  F0C1         	movff	sht3x_measure_nonblock_read@humi,sht3x_measure_read@humi
  4546  00E134  C0CF  F0C2         	movff	sht3x_measure_nonblock_read@humi+1,sht3x_measure_read@humi+1
  4547  00E138  ECE2  F04D         	call	_sht3x_measure_read	;wreg free
  4548  00E13C  0900               	iorlw	0
  4549  00E13E  A4D8               	btfss	status,2,c
  4550  00E140  EFA4  F070         	goto	u19011
  4551  00E144  EFA6  F070         	goto	u19010
  4552  00E148                     u19011:
  4553  00E148  EFA8  F070         	goto	l17556
  4554  00E14C                     u19010:
  4555  00E14C  EF91  F070         	goto	l17546
  4556  00E150                     l17556:
  4557                           
  4558                           ;sht3x.c: 212: return 1;
  4559  00E150  0E01               	movlw	1
  4560  00E152                     l319:
  4561  00E152  0012               	return		;funcret
  4562  00E154                     __end_of_sht3x_measure_nonblock_read:
  4563                           	callstack 0
  4564                           
  4565 ;; *************** function _sht3x_measure_read *****************
  4566 ;; Defined at:
  4567 ;;		line 175 in file "bsp/sht3x.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  temp            2   95[BANK0 ] PTR float 
  4570 ;;		 -> tempSensor_read@temp(4), 
  4571 ;;  humi            2   97[BANK0 ] PTR float 
  4572 ;;		 -> tempSensor_read@humi(4), 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;  raw_humi        4  104[BANK0 ] long 
  4575 ;;  raw_temp        4  100[BANK0 ] long 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      unsigned char 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4585 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4586 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4588 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4589 ;;Total ram usage:       13 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 6
  4592 ;; This function calls:
  4593 ;;		___fldiv
  4594 ;;		___lmul
  4595 ;;		___xxtofl
  4596 ;;		_sht3x_common_read
  4597 ;; This function is called by:
  4598 ;;		_sht3x_measure_nonblock_read
  4599 ;;		_sht3x_measure_block_read
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           	psect	text8
  4604  009BC4                     __ptext8:
  4605                           	callstack 0
  4606  009BC4                     _sht3x_measure_read:
  4607                           	callstack 20
  4608  009BC4                     
  4609                           ;sht3x.c: 177: int32_t raw_temp, raw_humi;;sht3x.c: 178: if (sht3x_common_read(&raw_temp
      +                          , &raw_humi) == 0)
  4610  009BC4  0EC4               	movlw	low sht3x_measure_read@raw_temp
  4611  009BC6  6E1D               	movwf	sht3x_common_read@temp^0,c
  4612  009BC8  0E00               	movlw	high sht3x_measure_read@raw_temp
  4613  009BCA  6E1E               	movwf	(sht3x_common_read@temp+1)^0,c
  4614  009BCC  0EC8               	movlw	low sht3x_measure_read@raw_humi
  4615  009BCE  6E1F               	movwf	sht3x_common_read@humi^0,c
  4616  009BD0  0E00               	movlw	high sht3x_measure_read@raw_humi
  4617  009BD2  6E20               	movwf	(sht3x_common_read@humi+1)^0,c
  4618  009BD4  EC69  F05C         	call	_sht3x_common_read	;wreg free
  4619  009BD8  0900               	iorlw	0
  4620  009BDA  A4D8               	btfss	status,2,c
  4621  009BDC  EFF2  F04D         	goto	u18551
  4622  009BE0  EFF4  F04D         	goto	u18550
  4623  009BE4                     u18551:
  4624  009BE4  EFF7  F04D         	goto	l17162
  4625  009BE8                     u18550:
  4626  009BE8                     
  4627                           ;sht3x.c: 179: return 0;
  4628  009BE8  0E00               	movlw	0
  4629  009BEA  EFA8  F04E         	goto	l315
  4630  009BEE                     l17162:
  4631                           
  4632                           ;sht3x.c: 187: raw_temp = ((21875 * raw_temp) >> 13) - 45000;
  4633  009BEE  0E0D               	movlw	13
  4634  009BF0  0100               	movlb	0	; () banked
  4635  009BF2  6FC3               	movwf	??_sht3x_measure_read& (0+255),b
  4636  009BF4  C0C4  F00F         	movff	sht3x_measure_read@raw_temp,___lmul@multiplier
  4637  009BF8  C0C5  F010         	movff	sht3x_measure_read@raw_temp+1,___lmul@multiplier+1
  4638  009BFC  C0C6  F011         	movff	sht3x_measure_read@raw_temp+2,___lmul@multiplier+2
  4639  009C00  C0C7  F012         	movff	sht3x_measure_read@raw_temp+3,___lmul@multiplier+3
  4640  009C04  0E73               	movlw	115
  4641  009C06  6E13               	movwf	___lmul@multiplicand^0,c
  4642  009C08  0E55               	movlw	85
  4643  009C0A  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  4644  009C0C  0E00               	movlw	0
  4645  009C0E  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  4646  009C10  0E00               	movlw	0
  4647  009C12  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  4648  009C14  ECE0  F06E         	call	___lmul	;wreg free
  4649  009C18                     u18565:
  4650  009C18  0100               	movlb	0	; () banked
  4651  009C1A  67C3               	tstfsz	??_sht3x_measure_read& (0+255),b
  4652  009C1C  EF12  F04E         	goto	u18566
  4653  009C20  EF1A  F04E         	goto	u18567
  4654  009C24                     u18566:
  4655  009C24  3412               	rlcf	(?___lmul+3)^0,w,c
  4656  009C26  3212               	rrcf	(?___lmul+3)^0,f,c
  4657  009C28  3211               	rrcf	(?___lmul+2)^0,f,c
  4658  009C2A  3210               	rrcf	(?___lmul+1)^0,f,c
  4659  009C2C  320F               	rrcf	?___lmul^0,f,c
  4660  009C2E  2FC3               	decfsz	??_sht3x_measure_read& (0+255),f,b
  4661  009C30  EF0C  F04E         	goto	u18565
  4662  009C34                     u18567:
  4663  009C34  0E38               	movlw	56
  4664  009C36  240F               	addwf	?___lmul^0,w,c
  4665  009C38  0100               	movlb	0	; () banked
  4666  009C3A  6FC4               	movwf	sht3x_measure_read@raw_temp& (0+255),b
  4667  009C3C  0E50               	movlw	80
  4668  009C3E  2010               	addwfc	(?___lmul+1)^0,w,c
  4669  009C40  6FC5               	movwf	(sht3x_measure_read@raw_temp+1)& (0+255),b
  4670  009C42  0EFF               	movlw	255
  4671  009C44  2011               	addwfc	(?___lmul+2)^0,w,c
  4672  009C46  6FC6               	movwf	(sht3x_measure_read@raw_temp+2)& (0+255),b
  4673  009C48  0EFF               	movlw	255
  4674  009C4A  2012               	addwfc	(?___lmul+3)^0,w,c
  4675  009C4C  6FC7               	movwf	(sht3x_measure_read@raw_temp+3)& (0+255),b
  4676                           
  4677                           ;sht3x.c: 188: raw_humi = ((12500 * raw_humi) >> 13);
  4678  009C4E  0E0D               	movlw	13
  4679  009C50  6FC3               	movwf	??_sht3x_measure_read& (0+255),b
  4680  009C52  C0C8  F00F         	movff	sht3x_measure_read@raw_humi,___lmul@multiplier
  4681  009C56  C0C9  F010         	movff	sht3x_measure_read@raw_humi+1,___lmul@multiplier+1
  4682  009C5A  C0CA  F011         	movff	sht3x_measure_read@raw_humi+2,___lmul@multiplier+2
  4683  009C5E  C0CB  F012         	movff	sht3x_measure_read@raw_humi+3,___lmul@multiplier+3
  4684  009C62  0ED4               	movlw	212
  4685  009C64  6E13               	movwf	___lmul@multiplicand^0,c
  4686  009C66  0E30               	movlw	48
  4687  009C68  6E14               	movwf	(___lmul@multiplicand+1)^0,c
  4688  009C6A  0E00               	movlw	0
  4689  009C6C  6E15               	movwf	(___lmul@multiplicand+2)^0,c
  4690  009C6E  0E00               	movlw	0
  4691  009C70  6E16               	movwf	(___lmul@multiplicand+3)^0,c
  4692  009C72  ECE0  F06E         	call	___lmul	;wreg free
  4693  009C76                     u18575:
  4694  009C76  0100               	movlb	0	; () banked
  4695  009C78  67C3               	tstfsz	??_sht3x_measure_read& (0+255),b
  4696  009C7A  EF41  F04E         	goto	u18576
  4697  009C7E  EF49  F04E         	goto	u18577
  4698  009C82                     u18576:
  4699  009C82  3412               	rlcf	(?___lmul+3)^0,w,c
  4700  009C84  3212               	rrcf	(?___lmul+3)^0,f,c
  4701  009C86  3211               	rrcf	(?___lmul+2)^0,f,c
  4702  009C88  3210               	rrcf	(?___lmul+1)^0,f,c
  4703  009C8A  320F               	rrcf	?___lmul^0,f,c
  4704  009C8C  2FC3               	decfsz	??_sht3x_measure_read& (0+255),f,b
  4705  009C8E  EF3B  F04E         	goto	u18575
  4706  009C92                     u18577:
  4707  009C92  C00F  F0C8         	movff	?___lmul,sht3x_measure_read@raw_humi
  4708  009C96  C010  F0C9         	movff	?___lmul+1,sht3x_measure_read@raw_humi+1
  4709  009C9A  C011  F0CA         	movff	?___lmul+2,sht3x_measure_read@raw_humi+2
  4710  009C9E  C012  F0CB         	movff	?___lmul+3,sht3x_measure_read@raw_humi+3
  4711  009CA2                     
  4712                           ;sht3x.c: 190: *temp = (float)(raw_temp / 1000.0f);
  4713  009CA2  C0C4  F027         	movff	sht3x_measure_read@raw_temp,___xxtofl@val
  4714  009CA6  C0C5  F028         	movff	sht3x_measure_read@raw_temp+1,___xxtofl@val+1
  4715  009CAA  C0C6  F029         	movff	sht3x_measure_read@raw_temp+2,___xxtofl@val+2
  4716  009CAE  C0C7  F02A         	movff	sht3x_measure_read@raw_temp+3,___xxtofl@val+3
  4717  009CB2  0E01               	movlw	1
  4718  009CB4  ECF6  F048         	call	___xxtofl
  4719  009CB8  C027  F0A6         	movff	?___xxtofl,___fldiv@b
  4720  009CBC  C028  F0A7         	movff	?___xxtofl+1,___fldiv@b+1
  4721  009CC0  C029  F0A8         	movff	?___xxtofl+2,___fldiv@b+2
  4722  009CC4  C02A  F0A9         	movff	?___xxtofl+3,___fldiv@b+3
  4723  009CC8  0E00               	movlw	0
  4724  009CCA  0100               	movlb	0	; () banked
  4725  009CCC  6FAA               	movwf	___fldiv@a& (0+255),b
  4726  009CCE  0E00               	movlw	0
  4727  009CD0  6FAB               	movwf	(___fldiv@a+1)& (0+255),b
  4728  009CD2  0E7A               	movlw	122
  4729  009CD4  6FAC               	movwf	(___fldiv@a+2)& (0+255),b
  4730  009CD6  0E44               	movlw	68
  4731  009CD8  6FAD               	movwf	(___fldiv@a+3)& (0+255),b
  4732  009CDA  ECCB  F033         	call	___fldiv	;wreg free
  4733  009CDE  C0BF  FFD9         	movff	sht3x_measure_read@temp,fsr2l
  4734  009CE2  C0C0  FFDA         	movff	sht3x_measure_read@temp+1,fsr2h
  4735  009CE6  0100               	movlb	0	; () banked
  4736  009CE8  C0A6  FFDE         	movff	?___fldiv,postinc2
  4737  009CEC  C0A7  FFDE         	movff	?___fldiv+1,postinc2
  4738  009CF0  C0A8  FFDE         	movff	?___fldiv+2,postinc2
  4739  009CF4  C0A9  FFDE         	movff	?___fldiv+3,postinc2
  4740  009CF8                     
  4741                           ; BSR set to: 0
  4742                           ;sht3x.c: 191: *humi = (float)(raw_humi / 1000.0f);
  4743  009CF8  C0C8  F027         	movff	sht3x_measure_read@raw_humi,___xxtofl@val
  4744  009CFC  C0C9  F028         	movff	sht3x_measure_read@raw_humi+1,___xxtofl@val+1
  4745  009D00  C0CA  F029         	movff	sht3x_measure_read@raw_humi+2,___xxtofl@val+2
  4746  009D04  C0CB  F02A         	movff	sht3x_measure_read@raw_humi+3,___xxtofl@val+3
  4747  009D08  0E01               	movlw	1
  4748  009D0A  ECF6  F048         	call	___xxtofl
  4749  009D0E  C027  F0A6         	movff	?___xxtofl,___fldiv@b
  4750  009D12  C028  F0A7         	movff	?___xxtofl+1,___fldiv@b+1
  4751  009D16  C029  F0A8         	movff	?___xxtofl+2,___fldiv@b+2
  4752  009D1A  C02A  F0A9         	movff	?___xxtofl+3,___fldiv@b+3
  4753  009D1E  0E00               	movlw	0
  4754  009D20  0100               	movlb	0	; () banked
  4755  009D22  6FAA               	movwf	___fldiv@a& (0+255),b
  4756  009D24  0E00               	movlw	0
  4757  009D26  6FAB               	movwf	(___fldiv@a+1)& (0+255),b
  4758  009D28  0E7A               	movlw	122
  4759  009D2A  6FAC               	movwf	(___fldiv@a+2)& (0+255),b
  4760  009D2C  0E44               	movlw	68
  4761  009D2E  6FAD               	movwf	(___fldiv@a+3)& (0+255),b
  4762  009D30  ECCB  F033         	call	___fldiv	;wreg free
  4763  009D34  C0C1  FFD9         	movff	sht3x_measure_read@humi,fsr2l
  4764  009D38  C0C2  FFDA         	movff	sht3x_measure_read@humi+1,fsr2h
  4765  009D3C  0100               	movlb	0	; () banked
  4766  009D3E  C0A6  FFDE         	movff	?___fldiv,postinc2
  4767  009D42  C0A7  FFDE         	movff	?___fldiv+1,postinc2
  4768  009D46  C0A8  FFDE         	movff	?___fldiv+2,postinc2
  4769  009D4A  C0A9  FFDE         	movff	?___fldiv+3,postinc2
  4770  009D4E                     
  4771                           ; BSR set to: 0
  4772                           ;sht3x.c: 197: return 1;
  4773  009D4E  0E01               	movlw	1
  4774  009D50                     l315:
  4775  009D50  0012               	return		;funcret
  4776  009D52                     __end_of_sht3x_measure_read:
  4777                           	callstack 0
  4778                           
  4779 ;; *************** function _sht3x_common_read *****************
  4780 ;; Defined at:
  4781 ;;		line 60 in file "bsp/sht3x.c"
  4782 ;; Parameters:    Size  Location     Type
  4783 ;;  temp            2   28[COMRAM] PTR long 
  4784 ;;		 -> sht3x_measure_read@raw_temp(4), 
  4785 ;;  humi            2   30[COMRAM] PTR long 
  4786 ;;		 -> sht3x_measure_read@raw_humi(4), 
  4787 ;; Auto vars:     Size  Location     Type
  4788 ;;  buff            6   40[COMRAM] unsigned char [6]
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      unsigned char 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4799 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4800 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4801 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4802 ;;Total ram usage:       18 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 5
  4805 ;; This function calls:
  4806 ;;		_check_crc8
  4807 ;;		_i2c_readBytes
  4808 ;; This function is called by:
  4809 ;;		_sht3x_measure_read
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           	psect	text9
  4814  00B8D2                     __ptext9:
  4815                           	callstack 0
  4816  00B8D2                     _sht3x_common_read:
  4817                           	callstack 20
  4818  00B8D2                     
  4819                           ;sht3x.c: 62: uint8_t buff[6];;sht3x.c: 63: if (i2c_readBytes(0x88, buff, 6) == 0)
  4820  00B8D2  0E29               	movlw	low sht3x_common_read@buff
  4821  00B8D4  6E11               	movwf	i2c_readBytes@rdptr^0,c
  4822  00B8D6  0E00               	movlw	high sht3x_common_read@buff
  4823  00B8D8  6E12               	movwf	(i2c_readBytes@rdptr+1)^0,c
  4824  00B8DA  0E06               	movlw	6
  4825  00B8DC  6E13               	movwf	i2c_readBytes@len^0,c
  4826  00B8DE  0E88               	movlw	136
  4827  00B8E0  ECE8  F066         	call	_i2c_readBytes
  4828  00B8E4  0900               	iorlw	0
  4829  00B8E6  A4D8               	btfss	status,2,c
  4830  00B8E8  EF78  F05C         	goto	u17811
  4831  00B8EC  EF7A  F05C         	goto	u17810
  4832  00B8F0                     u17811:
  4833  00B8F0  EF7D  F05C         	goto	l16716
  4834  00B8F4                     u17810:
  4835  00B8F4                     l16712:
  4836                           
  4837                           ;sht3x.c: 64: return 0;
  4838  00B8F4  0E00               	movlw	0
  4839  00B8F6  EFE8  F05C         	goto	l309
  4840  00B8FA                     l16716:
  4841                           
  4842                           ;sht3x.c: 66: if(check_crc8(&buff[0], 2, buff[2]) == 0)
  4843  00B8FA  0E29               	movlw	low sht3x_common_read@buff
  4844  00B8FC  6E15               	movwf	check_crc8@data^0,c
  4845  00B8FE  0E00               	movlw	high sht3x_common_read@buff
  4846  00B900  6E16               	movwf	(check_crc8@data+1)^0,c
  4847  00B902  0E02               	movlw	2
  4848  00B904  6E17               	movwf	check_crc8@nbrOfBytes^0,c
  4849  00B906  C02B  F018         	movff	sht3x_common_read@buff+2,check_crc8@checksum
  4850  00B90A  ECA0  F076         	call	_check_crc8	;wreg free
  4851  00B90E  0900               	iorlw	0
  4852  00B910  A4D8               	btfss	status,2,c
  4853  00B912  EF8D  F05C         	goto	u17821
  4854  00B916  EF8F  F05C         	goto	u17820
  4855  00B91A                     u17821:
  4856  00B91A  EF91  F05C         	goto	l16722
  4857  00B91E                     u17820:
  4858  00B91E  EF7A  F05C         	goto	l16712
  4859  00B922                     l16722:
  4860                           
  4861                           ;sht3x.c: 68: if(check_crc8(&buff[3], 2, buff[5]) == 0)
  4862  00B922  0E2C               	movlw	low (sht3x_common_read@buff+3)
  4863  00B924  6E15               	movwf	check_crc8@data^0,c
  4864  00B926  0E00               	movlw	high (sht3x_common_read@buff+3)
  4865  00B928  6E16               	movwf	(check_crc8@data+1)^0,c
  4866  00B92A  0E02               	movlw	2
  4867  00B92C  6E17               	movwf	check_crc8@nbrOfBytes^0,c
  4868  00B92E  C02E  F018         	movff	sht3x_common_read@buff+5,check_crc8@checksum
  4869  00B932  ECA0  F076         	call	_check_crc8	;wreg free
  4870  00B936  0900               	iorlw	0
  4871  00B938  A4D8               	btfss	status,2,c
  4872  00B93A  EFA1  F05C         	goto	u17831
  4873  00B93E  EFA3  F05C         	goto	u17830
  4874  00B942                     u17831:
  4875  00B942  EFA5  F05C         	goto	l16728
  4876  00B946                     u17830:
  4877  00B946  EF7A  F05C         	goto	l16712
  4878  00B94A                     l16728:
  4879                           
  4880                           ;sht3x.c: 71: *temp = (int32_t)((int32_t)buff[0] << 8 | (buff[1] & 0xff));
  4881  00B94A  502A               	movf	(sht3x_common_read@buff+1)^0,w,c
  4882  00B94C  C029  F021         	movff	sht3x_common_read@buff,??_sht3x_common_read
  4883  00B950  6A22               	clrf	(??_sht3x_common_read+1)^0,c
  4884  00B952  6A23               	clrf	(??_sht3x_common_read+2)^0,c
  4885  00B954  6A24               	clrf	(??_sht3x_common_read+3)^0,c
  4886  00B956  C023  F024         	movff	??_sht3x_common_read+2,??_sht3x_common_read+3
  4887  00B95A  C022  F023         	movff	??_sht3x_common_read+1,??_sht3x_common_read+2
  4888  00B95E  C021  F022         	movff	??_sht3x_common_read,??_sht3x_common_read+1
  4889  00B962  6A21               	clrf	??_sht3x_common_read^0,c
  4890  00B964  1021               	iorwf	??_sht3x_common_read^0,w,c
  4891  00B966  6E25               	movwf	(??_sht3x_common_read+4)^0,c
  4892  00B968  5022               	movf	(??_sht3x_common_read+1)^0,w,c
  4893  00B96A  6E26               	movwf	(??_sht3x_common_read+5)^0,c
  4894  00B96C  5023               	movf	(??_sht3x_common_read+2)^0,w,c
  4895  00B96E  6E27               	movwf	(??_sht3x_common_read+6)^0,c
  4896  00B970  5024               	movf	(??_sht3x_common_read+3)^0,w,c
  4897  00B972  6E28               	movwf	(??_sht3x_common_read+7)^0,c
  4898  00B974  C01D  FFD9         	movff	sht3x_common_read@temp,fsr2l
  4899  00B978  C01E  FFDA         	movff	sht3x_common_read@temp+1,fsr2h
  4900  00B97C  C025  FFDE         	movff	??_sht3x_common_read+4,postinc2
  4901  00B980  C026  FFDE         	movff	??_sht3x_common_read+5,postinc2
  4902  00B984  C027  FFDE         	movff	??_sht3x_common_read+6,postinc2
  4903  00B988  C028  FFDE         	movff	??_sht3x_common_read+7,postinc2
  4904                           
  4905                           ;sht3x.c: 72: *humi = (int32_t)((int32_t)buff[3] << 8 | (buff[4] & 0xff));
  4906  00B98C  502D               	movf	(sht3x_common_read@buff+4)^0,w,c
  4907  00B98E  C02C  F021         	movff	sht3x_common_read@buff+3,??_sht3x_common_read
  4908  00B992  6A22               	clrf	(??_sht3x_common_read+1)^0,c
  4909  00B994  6A23               	clrf	(??_sht3x_common_read+2)^0,c
  4910  00B996  6A24               	clrf	(??_sht3x_common_read+3)^0,c
  4911  00B998  C023  F024         	movff	??_sht3x_common_read+2,??_sht3x_common_read+3
  4912  00B99C  C022  F023         	movff	??_sht3x_common_read+1,??_sht3x_common_read+2
  4913  00B9A0  C021  F022         	movff	??_sht3x_common_read,??_sht3x_common_read+1
  4914  00B9A4  6A21               	clrf	??_sht3x_common_read^0,c
  4915  00B9A6  1021               	iorwf	??_sht3x_common_read^0,w,c
  4916  00B9A8  6E25               	movwf	(??_sht3x_common_read+4)^0,c
  4917  00B9AA  5022               	movf	(??_sht3x_common_read+1)^0,w,c
  4918  00B9AC  6E26               	movwf	(??_sht3x_common_read+5)^0,c
  4919  00B9AE  5023               	movf	(??_sht3x_common_read+2)^0,w,c
  4920  00B9B0  6E27               	movwf	(??_sht3x_common_read+6)^0,c
  4921  00B9B2  5024               	movf	(??_sht3x_common_read+3)^0,w,c
  4922  00B9B4  6E28               	movwf	(??_sht3x_common_read+7)^0,c
  4923  00B9B6  C01F  FFD9         	movff	sht3x_common_read@humi,fsr2l
  4924  00B9BA  C020  FFDA         	movff	sht3x_common_read@humi+1,fsr2h
  4925  00B9BE  C025  FFDE         	movff	??_sht3x_common_read+4,postinc2
  4926  00B9C2  C026  FFDE         	movff	??_sht3x_common_read+5,postinc2
  4927  00B9C6  C027  FFDE         	movff	??_sht3x_common_read+6,postinc2
  4928  00B9CA  C028  FFDE         	movff	??_sht3x_common_read+7,postinc2
  4929  00B9CE                     
  4930                           ;sht3x.c: 74: return 1;
  4931  00B9CE  0E01               	movlw	1
  4932  00B9D0                     l309:
  4933  00B9D0  0012               	return		;funcret
  4934  00B9D2                     __end_of_sht3x_common_read:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _check_crc8 *****************
  4938 ;; Defined at:
  4939 ;;		line 32 in file "bsp/sht3x.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  data            2   20[COMRAM] PTR unsigned char 
  4942 ;;		 -> sht3x_read_status_reg@buff(3), sht3x_common_read@buff(6), 
  4943 ;;  nbrOfBytes      1   22[COMRAM] unsigned char 
  4944 ;;  checksum        1   23[COMRAM] unsigned char 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  crc             1   24[COMRAM] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      unsigned char 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4959 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4960 ;;Total ram usage:        5 bytes
  4961 ;; Hardware stack levels used: 1
  4962 ;; Hardware stack levels required when called: 4
  4963 ;; This function calls:
  4964 ;;		_crc8
  4965 ;; This function is called by:
  4966 ;;		_sht3x_common_read
  4967 ;;		_sht3x_read_status_reg
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text10
  4972  00ED40                     __ptext10:
  4973                           	callstack 0
  4974  00ED40                     _check_crc8:
  4975                           	callstack 20
  4976  00ED40                     
  4977                           ;sht3x.c: 34: unsigned char crc;;sht3x.c: 36: crc = crc8(data, nbrOfBytes);
  4978  00ED40  C015  F00F         	movff	check_crc8@data,crc8@data
  4979  00ED44  C016  F010         	movff	check_crc8@data+1,crc8@data+1
  4980  00ED48  C017  F011         	movff	check_crc8@nbrOfBytes,crc8@len
  4981  00ED4C  EC15  F06F         	call	_crc8	;wreg free
  4982  00ED50  6E19               	movwf	check_crc8@crc^0,c
  4983  00ED52                     
  4984                           ;sht3x.c: 39: if(crc != checksum) return 0;
  4985  00ED52  5018               	movf	check_crc8@checksum^0,w,c
  4986  00ED54  1819               	xorwf	check_crc8@crc^0,w,c
  4987  00ED56  B4D8               	btfsc	status,2,c
  4988  00ED58  EFB0  F076         	goto	u8831
  4989  00ED5C  EFB2  F076         	goto	u8830
  4990  00ED60                     u8831:
  4991  00ED60  EFB5  F076         	goto	l10092
  4992  00ED64                     u8830:
  4993  00ED64  0E00               	movlw	0
  4994  00ED66  EFB6  F076         	goto	l299
  4995  00ED6A                     l10092:
  4996                           
  4997                           ;sht3x.c: 41: return 1;
  4998  00ED6A  0E01               	movlw	1
  4999  00ED6C                     l299:
  5000  00ED6C  0012               	return		;funcret
  5001  00ED6E                     __end_of_check_crc8:
  5002                           	callstack 0
  5003                           
  5004 ;; *************** function _crc8 *****************
  5005 ;; Defined at:
  5006 ;;		line 11 in file "bsp/sht3x.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  data            2   14[COMRAM] PTR unsigned char 
  5009 ;;		 -> sht3x_write_alert_limits@buff(3), sht3x_read_status_reg@buff(3), sht3x_common_read@buff(6), 
  5010 ;;  len             1   16[COMRAM] unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  crc             1   19[COMRAM] unsigned char 
  5013 ;;  j               1   18[COMRAM] unsigned char 
  5014 ;;  i               1   17[COMRAM] unsigned char 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      unsigned char 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5024 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;Total ram usage:        6 bytes
  5029 ;; Hardware stack levels used: 1
  5030 ;; Hardware stack levels required when called: 3
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_check_crc8
  5035 ;;		_sht3x_write_alert_limits
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           	psect	text11
  5040  00DE2A                     __ptext11:
  5041                           	callstack 0
  5042  00DE2A                     _crc8:
  5043                           	callstack 20
  5044  00DE2A                     
  5045                           ;sht3x.c: 13: unsigned char crc = 0xff;
  5046  00DE2A  6814               	setf	crc8@crc^0,c
  5047  00DE2C                     
  5048                           ;sht3x.c: 14: unsigned char i;;sht3x.c: 15: unsigned char j;;sht3x.c: 18: for (i = 0; i 
      +                          < len; ++i)
  5049  00DE2C  0E00               	movlw	0
  5050  00DE2E  6E12               	movwf	crc8@i^0,c
  5051  00DE30  EF3E  F06F         	goto	l9942
  5052  00DE34                     l9924:
  5053                           
  5054                           ;sht3x.c: 19: {;sht3x.c: 20: crc ^= (data[i]);
  5055  00DE34  5012               	movf	crc8@i^0,w,c
  5056  00DE36  240F               	addwf	crc8@data^0,w,c
  5057  00DE38  6ED9               	movwf	fsr2l,c
  5058  00DE3A  0E00               	movlw	0
  5059  00DE3C  2010               	addwfc	(crc8@data+1)^0,w,c
  5060  00DE3E  6EDA               	movwf	fsr2h,c
  5061  00DE40  50DF               	movf	indf2,w,c
  5062  00DE42  1A14               	xorwf	crc8@crc^0,f,c
  5063  00DE44                     
  5064                           ;sht3x.c: 21: for (j = 8; j > 0; --j)
  5065  00DE44  0E08               	movlw	8
  5066  00DE46  6E13               	movwf	crc8@j^0,c
  5067  00DE48                     l290:
  5068                           
  5069                           ;sht3x.c: 22: {;sht3x.c: 23: if (crc & 0x80)
  5070  00DE48  AE14               	btfss	crc8@crc^0,7,c
  5071  00DE4A  EF29  F06F         	goto	u8621
  5072  00DE4E  EF2B  F06F         	goto	u8620
  5073  00DE52                     u8621:
  5074  00DE52  EF31  F06F         	goto	l9934
  5075  00DE56                     u8620:
  5076  00DE56                     
  5077                           ;sht3x.c: 24: crc = (crc << 1) ^ 0x31;
  5078  00DE56  5014               	movf	crc8@crc^0,w,c
  5079  00DE58  2414               	addwf	crc8@crc^0,w,c
  5080  00DE5A  0A31               	xorlw	49
  5081  00DE5C  6E14               	movwf	crc8@crc^0,c
  5082  00DE5E  EF34  F06F         	goto	l9936
  5083  00DE62                     l9934:
  5084                           
  5085                           ;sht3x.c: 25: else;sht3x.c: 26: crc = (crc << 1);
  5086  00DE62  5014               	movf	crc8@crc^0,w,c
  5087  00DE64  2414               	addwf	crc8@crc^0,w,c
  5088  00DE66  6E14               	movwf	crc8@crc^0,c
  5089  00DE68                     l9936:
  5090  00DE68  0613               	decf	crc8@j^0,f,c
  5091  00DE6A  5013               	movf	crc8@j^0,w,c
  5092  00DE6C  A4D8               	btfss	status,2,c
  5093  00DE6E  EF3B  F06F         	goto	u8631
  5094  00DE72  EF3D  F06F         	goto	u8630
  5095  00DE76                     u8631:
  5096  00DE76  EF24  F06F         	goto	l290
  5097  00DE7A                     u8630:
  5098  00DE7A  2A12               	incf	crc8@i^0,f,c
  5099  00DE7C                     l9942:
  5100  00DE7C  5011               	movf	crc8@len^0,w,c
  5101  00DE7E  5C12               	subwf	crc8@i^0,w,c
  5102  00DE80  A0D8               	btfss	status,0,c
  5103  00DE82  EF45  F06F         	goto	u8641
  5104  00DE86  EF47  F06F         	goto	u8640
  5105  00DE8A                     u8641:
  5106  00DE8A  EF1A  F06F         	goto	l9924
  5107  00DE8E                     u8640:
  5108  00DE8E                     
  5109                           ;sht3x.c: 27: };sht3x.c: 28: };sht3x.c: 29: return crc;
  5110  00DE8E  5014               	movf	crc8@crc^0,w,c
  5111  00DE90  0012               	return		;funcret
  5112  00DE92                     __end_of_crc8:
  5113                           	callstack 0
  5114                           
  5115 ;; *************** function _sensor_temp_mode *****************
  5116 ;; Defined at:
  5117 ;;		line 301 in file "sensor.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  chNum           1    wreg     unsigned char 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  chNum           1   44[COMRAM] unsigned char 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1    wreg      unsigned char 
  5124 ;; Registers used:
  5125 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5135 ;;Total ram usage:        1 bytes
  5136 ;; Hardware stack levels used: 1
  5137 ;; Hardware stack levels required when called: 8
  5138 ;; This function calls:
  5139 ;;		_ads1115_SetUp
  5140 ;;		_lmp91000_set_Mode
  5141 ;; This function is called by:
  5142 ;;		_sensMeasure_task
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text12
  5147  00EAC4                     __ptext12:
  5148                           	callstack 0
  5149  00EAC4                     _sensor_temp_mode:
  5150                           	callstack 21
  5151                           
  5152                           ;incstack = 0
  5153                           ;sensor_temp_mode@chNum stored from wreg
  5154  00EAC4  6E2D               	movwf	sensor_temp_mode@chNum^0,c
  5155  00EAC6                     
  5156                           ;sensor.c: 303: if (lmp91000_set_Mode(chNum, DISABLE, TEMP_MEASURE_TIAON) == 0)
  5157  00EAC6  0E00               	movlw	0
  5158  00EAC8  6E1A               	movwf	lmp91000_set_Mode@fet^0,c
  5159  00EACA  0E07               	movlw	7
  5160  00EACC  6E1B               	movwf	lmp91000_set_Mode@mode^0,c
  5161  00EACE  502D               	movf	sensor_temp_mode@chNum^0,w,c
  5162  00EAD0  ECA2  F072         	call	_lmp91000_set_Mode
  5163  00EAD4  0900               	iorlw	0
  5164  00EAD6  A4D8               	btfss	status,2,c
  5165  00EAD8  EF70  F075         	goto	u20951
  5166  00EADC  EF72  F075         	goto	u20950
  5167  00EAE0                     u20951:
  5168  00EAE0  EF74  F075         	goto	l19212
  5169  00EAE4                     u20950:
  5170  00EAE4  EF7D  F075         	goto	l1463
  5171  00EAE8                     l19212:
  5172                           
  5173                           ;sensor.c: 306: if (ads1115_SetUp(chNum, CONTINUE_CONV, FSR_2p048V, SPS128) == 0)
  5174  00EAE8  0E00               	movlw	0
  5175  00EAEA  6E21               	movwf	ads1115_SetUp@mode^0,c
  5176  00EAEC  0E02               	movlw	2
  5177  00EAEE  6E22               	movwf	ads1115_SetUp@pga^0,c
  5178  00EAF0  0E04               	movlw	4
  5179  00EAF2  6E23               	movwf	ads1115_SetUp@dataRate^0,c
  5180  00EAF4  502D               	movf	sensor_temp_mode@chNum^0,w,c
  5181  00EAF6  EC49  F06F         	call	_ads1115_SetUp
  5182  00EAFA                     l1463:
  5183  00EAFA  0012               	return		;funcret
  5184  00EAFC                     __end_of_sensor_temp_mode:
  5185                           	callstack 0
  5186                           
  5187 ;; *************** function _sensor_gas_mode *****************
  5188 ;; Defined at:
  5189 ;;		line 312 in file "sensor.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  chNum           1    wreg     unsigned char 
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;  chNum           1   45[COMRAM] unsigned char 
  5194 ;;  adc_gain        1   44[COMRAM] unsigned char 
  5195 ;; Return value:  Size  Location     Type
  5196 ;;                  1    wreg      unsigned char 
  5197 ;; Registers used:
  5198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5199 ;; Tracked objects:
  5200 ;;		On entry : 0/0
  5201 ;;		On exit  : 0/0
  5202 ;;		Unchanged: 0/0
  5203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5208 ;;Total ram usage:        2 bytes
  5209 ;; Hardware stack levels used: 1
  5210 ;; Hardware stack levels required when called: 8
  5211 ;; This function calls:
  5212 ;;		_ads1115_SetUp
  5213 ;;		_lmp91000_set_Mode
  5214 ;; This function is called by:
  5215 ;;		_sensMeasure_task
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text13
  5220  00DD56                     __ptext13:
  5221                           	callstack 0
  5222  00DD56                     _sensor_gas_mode:
  5223                           	callstack 21
  5224                           
  5225                           ;incstack = 0
  5226                           ;sensor_gas_mode@chNum stored from wreg
  5227  00DD56  6E2E               	movwf	sensor_gas_mode@chNum^0,c
  5228  00DD58                     
  5229                           ;sensor.c: 314: uint8_t adc_gain;;sensor.c: 316: switch(chNum)
  5230  00DD58  EFB6  F06E         	goto	l19260
  5231  00DD5C                     l19252:
  5232  00DD5C  0E05               	movlw	5
  5233  00DD5E  6E2D               	movwf	sensor_gas_mode@adc_gain^0,c
  5234  00DD60  EFC5  F06E         	goto	l19262
  5235  00DD64                     l19256:
  5236  00DD64  0E03               	movlw	3
  5237  00DD66  6E2D               	movwf	sensor_gas_mode@adc_gain^0,c
  5238  00DD68  EFC5  F06E         	goto	l19262
  5239  00DD6C                     l19260:
  5240  00DD6C  502E               	movf	sensor_gas_mode@chNum^0,w,c
  5241                           
  5242                           ; Switch size 1, requested type "simple"
  5243                           ; Number of cases is 3, Range of values is 0 to 2
  5244                           ; switch strategies available:
  5245                           ; Name         Instructions Cycles
  5246                           ; simple_byte           10     6 (average)
  5247                           ;	Chosen strategy is simple_byte
  5248  00DD6E  0A00               	xorlw	0	; case 0
  5249  00DD70  B4D8               	btfsc	status,2,c
  5250  00DD72  EFAE  F06E         	goto	l19252
  5251  00DD76  0A01               	xorlw	1	; case 1
  5252  00DD78  B4D8               	btfsc	status,2,c
  5253  00DD7A  EFAE  F06E         	goto	l19252
  5254  00DD7E  0A03               	xorlw	3	; case 2
  5255  00DD80  B4D8               	btfsc	status,2,c
  5256  00DD82  EFB2  F06E         	goto	l19256
  5257  00DD86  EFC5  F06E         	goto	l19262
  5258  00DD8A                     l19262:
  5259                           
  5260                           ;sensor.c: 323: if (lmp91000_set_Mode(chNum, DISABLE, AMPEROETRIC_3LEAD) == 0)
  5261  00DD8A  0E00               	movlw	0
  5262  00DD8C  6E1A               	movwf	lmp91000_set_Mode@fet^0,c
  5263  00DD8E  0E03               	movlw	3
  5264  00DD90  6E1B               	movwf	lmp91000_set_Mode@mode^0,c
  5265  00DD92  502E               	movf	sensor_gas_mode@chNum^0,w,c
  5266  00DD94  ECA2  F072         	call	_lmp91000_set_Mode
  5267  00DD98  0900               	iorlw	0
  5268  00DD9A  A4D8               	btfss	status,2,c
  5269  00DD9C  EFD2  F06E         	goto	u20991
  5270  00DDA0  EFD4  F06E         	goto	u20990
  5271  00DDA4                     u20991:
  5272  00DDA4  EFD6  F06E         	goto	l19266
  5273  00DDA8                     u20990:
  5274  00DDA8  EFDF  F06E         	goto	l1473
  5275  00DDAC                     l19266:
  5276                           
  5277                           ;sensor.c: 326: if (ads1115_SetUp(chNum, CONTINUE_CONV, adc_gain, SPS128) == 0)
  5278  00DDAC  0E00               	movlw	0
  5279  00DDAE  6E21               	movwf	ads1115_SetUp@mode^0,c
  5280  00DDB0  C02D  F022         	movff	sensor_gas_mode@adc_gain,ads1115_SetUp@pga
  5281  00DDB4  0E04               	movlw	4
  5282  00DDB6  6E23               	movwf	ads1115_SetUp@dataRate^0,c
  5283  00DDB8  502E               	movf	sensor_gas_mode@chNum^0,w,c
  5284  00DDBA  EC49  F06F         	call	_ads1115_SetUp
  5285  00DDBE                     l1473:
  5286  00DDBE  0012               	return		;funcret
  5287  00DDC0                     __end_of_sensor_gas_mode:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _gas_init *****************
  5291 ;; Defined at:
  5292 ;;		line 344 in file "sensor.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;  chNum           1    wreg     unsigned char 
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;  chNum           1   47[COMRAM] unsigned char 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      unsigned char 
  5299 ;; Registers used:
  5300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5309 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5310 ;;Total ram usage:        2 bytes
  5311 ;; Hardware stack levels used: 1
  5312 ;; Hardware stack levels required when called: 9
  5313 ;; This function calls:
  5314 ;;		_sensor_adc_initialize
  5315 ;; This function is called by:
  5316 ;;		_sensMeasure_task
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320                           	psect	text14
  5321  00F096                     __ptext14:
  5322                           	callstack 0
  5323  00F096                     _gas_init:
  5324                           	callstack 20
  5325                           
  5326                           ;incstack = 0
  5327                           ;gas_init@chNum stored from wreg
  5328  00F096  6E30               	movwf	gas_init@chNum^0,c
  5329  00F098                     
  5330                           ;sensor.c: 346: g_sens_measure.isADC_InitDone[chNum] = sensor_adc_initialize(chNum);
  5331  00F098  5030               	movf	gas_init@chNum^0,w,c
  5332  00F09A  EC54  F074         	call	_sensor_adc_initialize
  5333  00F09E  6E2F               	movwf	??_gas_init^0,c
  5334  00F0A0  0E13               	movlw	low (_g_sens_measure+5)
  5335  00F0A2  2430               	addwf	gas_init@chNum^0,w,c
  5336  00F0A4  6ED9               	movwf	fsr2l,c
  5337  00F0A6  6ADA               	clrf	fsr2h,c
  5338  00F0A8  0E01               	movlw	high (_g_sens_measure+5)
  5339  00F0AA  22DA               	addwfc	fsr2h,f,c
  5340  00F0AC  C02F  FFDF         	movff	??_gas_init,indf2
  5341  00F0B0  0012               	return		;funcret
  5342  00F0B2                     __end_of_gas_init:
  5343                           	callstack 0
  5344                           
  5345 ;; *************** function _sensor_adc_initialize *****************
  5346 ;; Defined at:
  5347 ;;		line 101 in file "sensor.c"
  5348 ;; Parameters:    Size  Location     Type
  5349 ;;  chNum           1    wreg     unsigned char 
  5350 ;; Auto vars:     Size  Location     Type
  5351 ;;  chNum           1   45[COMRAM] unsigned char 
  5352 ;;  adc_gain        1   44[COMRAM] unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  1    wreg      unsigned char 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5366 ;;Total ram usage:        2 bytes
  5367 ;; Hardware stack levels used: 1
  5368 ;; Hardware stack levels required when called: 8
  5369 ;; This function calls:
  5370 ;;		_ads1115_SetUp
  5371 ;; This function is called by:
  5372 ;;		_gas_init
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text15
  5377  00E8A8                     __ptext15:
  5378                           	callstack 0
  5379  00E8A8                     _sensor_adc_initialize:
  5380                           	callstack 20
  5381                           
  5382                           ;incstack = 0
  5383                           ;sensor_adc_initialize@chNum stored from wreg
  5384  00E8A8  6E2E               	movwf	sensor_adc_initialize@chNum^0,c
  5385  00E8AA                     
  5386                           ;sensor.c: 103: uint8_t adc_gain;;sensor.c: 105: switch(chNum)
  5387  00E8AA  EF5F  F074         	goto	l18378
  5388  00E8AE                     l18370:
  5389  00E8AE  0E05               	movlw	5
  5390  00E8B0  6E2D               	movwf	sensor_adc_initialize@adc_gain^0,c
  5391  00E8B2  EF6E  F074         	goto	l18380
  5392  00E8B6                     l18374:
  5393  00E8B6  0E03               	movlw	3
  5394  00E8B8  6E2D               	movwf	sensor_adc_initialize@adc_gain^0,c
  5395  00E8BA  EF6E  F074         	goto	l18380
  5396  00E8BE                     l18378:
  5397  00E8BE  502E               	movf	sensor_adc_initialize@chNum^0,w,c
  5398                           
  5399                           ; Switch size 1, requested type "simple"
  5400                           ; Number of cases is 3, Range of values is 0 to 2
  5401                           ; switch strategies available:
  5402                           ; Name         Instructions Cycles
  5403                           ; simple_byte           10     6 (average)
  5404                           ;	Chosen strategy is simple_byte
  5405  00E8C0  0A00               	xorlw	0	; case 0
  5406  00E8C2  B4D8               	btfsc	status,2,c
  5407  00E8C4  EF57  F074         	goto	l18370
  5408  00E8C8  0A01               	xorlw	1	; case 1
  5409  00E8CA  B4D8               	btfsc	status,2,c
  5410  00E8CC  EF57  F074         	goto	l18370
  5411  00E8D0  0A03               	xorlw	3	; case 2
  5412  00E8D2  B4D8               	btfsc	status,2,c
  5413  00E8D4  EF5B  F074         	goto	l18374
  5414  00E8D8  EF6E  F074         	goto	l18380
  5415  00E8DC                     l18380:
  5416                           
  5417                           ;sensor.c: 111: return ads1115_SetUp(chNum, CONTINUE_CONV, adc_gain, SPS128);
  5418  00E8DC  0E00               	movlw	0
  5419  00E8DE  6E21               	movwf	ads1115_SetUp@mode^0,c
  5420  00E8E0  C02D  F022         	movff	sensor_adc_initialize@adc_gain,ads1115_SetUp@pga
  5421  00E8E4  0E04               	movlw	4
  5422  00E8E6  6E23               	movwf	ads1115_SetUp@dataRate^0,c
  5423  00E8E8  502E               	movf	sensor_adc_initialize@chNum^0,w,c
  5424  00E8EA  EC49  F06F         	call	_ads1115_SetUp
  5425  00E8EE  0012               	return		;funcret
  5426  00E8F0                     __end_of_sensor_adc_initialize:
  5427                           	callstack 0
  5428                           
  5429 ;; *************** function _ads1115_SetUp *****************
  5430 ;; Defined at:
  5431 ;;		line 35 in file "bsp/ads1114.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  chNum           1    wreg     unsigned char 
  5434 ;;  mode            1   32[COMRAM] unsigned char 
  5435 ;;  pga             1   33[COMRAM] unsigned char 
  5436 ;;  dataRate        1   34[COMRAM] unsigned char 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  chNum           1   43[COMRAM] unsigned char 
  5439 ;;  adcInput        3   37[COMRAM] unsigned char [3]
  5440 ;;  buff            2   40[COMRAM] unsigned char [2]
  5441 ;;  wraddr          1   42[COMRAM] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;                  1    wreg      unsigned char 
  5444 ;; Registers used:
  5445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5451 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5452 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5453 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5454 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5455 ;;Total ram usage:       12 bytes
  5456 ;; Hardware stack levels used: 1
  5457 ;; Hardware stack levels required when called: 7
  5458 ;; This function calls:
  5459 ;;		_i2c_writeBytes_to
  5460 ;; This function is called by:
  5461 ;;		_sensor_adc_initialize
  5462 ;;		_sensor_temp_mode
  5463 ;;		_sensor_gas_mode
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text16
  5468  00DE92                     __ptext16:
  5469                           	callstack 0
  5470  00DE92                     _ads1115_SetUp:
  5471                           	callstack 21
  5472                           
  5473                           ;incstack = 0
  5474                           ;ads1115_SetUp@chNum stored from wreg
  5475  00DE92  6E2C               	movwf	ads1115_SetUp@chNum^0,c
  5476  00DE94                     
  5477                           ;ads1114.c: 37: uint8_t adcInput[3] = {0x00, 0x03, 0x00};
  5478  00DE94  C1F8  F026         	movff	ads1115_SetUp@F158,ads1115_SetUp@adcInput
  5479  00DE98  C1F9  F027         	movff	ads1115_SetUp@F158+1,ads1115_SetUp@adcInput+1
  5480  00DE9C  C1FA  F028         	movff	ads1115_SetUp@F158+2,ads1115_SetUp@adcInput+2
  5481  00DEA0                     
  5482                           ;ads1114.c: 38: uint8_t wraddr = 0x01;
  5483  00DEA0  0E01               	movlw	1
  5484  00DEA2  6E2B               	movwf	ads1115_SetUp@wraddr^0,c
  5485  00DEA4                     
  5486                           ;ads1114.c: 39: uint8_t buff[2];;ads1114.c: 41: buff[0] = 0x00 | (adcInput[chNum] << 4) 
      +                          | (pga << 1) | mode;
  5487  00DEA4  90D8               	bcf	status,0,c
  5488  00DEA6  3422               	rlcf	ads1115_SetUp@pga^0,w,c
  5489  00DEA8  6E24               	movwf	??_ads1115_SetUp^0,c
  5490  00DEAA  0E26               	movlw	low ads1115_SetUp@adcInput
  5491  00DEAC  242C               	addwf	ads1115_SetUp@chNum^0,w,c
  5492  00DEAE  6ED9               	movwf	fsr2l,c
  5493  00DEB0  6ADA               	clrf	fsr2h,c
  5494  00DEB2  0E00               	movlw	high ads1115_SetUp@adcInput
  5495  00DEB4  22DA               	addwfc	fsr2h,f,c
  5496  00DEB6  50DF               	movf	indf2,w,c
  5497  00DEB8  6E25               	movwf	(??_ads1115_SetUp+1)^0,c
  5498  00DEBA  3825               	swapf	(??_ads1115_SetUp+1)^0,w,c
  5499  00DEBC  0BF0               	andlw	240
  5500  00DEBE  1024               	iorwf	??_ads1115_SetUp^0,w,c
  5501  00DEC0  1021               	iorwf	ads1115_SetUp@mode^0,w,c
  5502  00DEC2  6E29               	movwf	ads1115_SetUp@buff^0,c
  5503  00DEC4                     
  5504                           ;ads1114.c: 42: buff[1] = (dataRate << 5) | 0b00010011;
  5505  00DEC4  3823               	swapf	ads1115_SetUp@dataRate^0,w,c
  5506  00DEC6  46E8               	rlncf	wreg,f,c
  5507  00DEC8  0BE0               	andlw	224
  5508  00DECA  0913               	iorlw	19
  5509  00DECC  6E2A               	movwf	(ads1115_SetUp@buff+1)^0,c
  5510  00DECE                     
  5511                           ;ads1114.c: 44: return i2c_writeBytes_to(ADS1115_I2C_ADDRESS[chNum], &wraddr, 1, buff, 2
      +                          );
  5512  00DECE  0E2B               	movlw	low ads1115_SetUp@wraddr
  5513  00DED0  6E1A               	movwf	i2c_writeBytes_to@wraddr^0,c
  5514  00DED2  0E00               	movlw	high ads1115_SetUp@wraddr
  5515  00DED4  6E1B               	movwf	(i2c_writeBytes_to@wraddr+1)^0,c
  5516  00DED6  0E01               	movlw	1
  5517  00DED8  6E1C               	movwf	i2c_writeBytes_to@addrlen^0,c
  5518  00DEDA  0E29               	movlw	low ads1115_SetUp@buff
  5519  00DEDC  6E1D               	movwf	i2c_writeBytes_to@wrptr^0,c
  5520  00DEDE  0E00               	movlw	high ads1115_SetUp@buff
  5521  00DEE0  6E1E               	movwf	(i2c_writeBytes_to@wrptr+1)^0,c
  5522  00DEE2  0E02               	movlw	2
  5523  00DEE4  6E1F               	movwf	i2c_writeBytes_to@len^0,c
  5524  00DEE6  0EFB               	movlw	low _ADS1115_I2C_ADDRESS
  5525  00DEE8  242C               	addwf	ads1115_SetUp@chNum^0,w,c
  5526  00DEEA  6ED9               	movwf	fsr2l,c
  5527  00DEEC  6ADA               	clrf	fsr2h,c
  5528  00DEEE  0E01               	movlw	high _ADS1115_I2C_ADDRESS
  5529  00DEF0  22DA               	addwfc	fsr2h,f,c
  5530  00DEF2  50DF               	movf	indf2,w,c
  5531  00DEF4  EC3D  F071         	call	_i2c_writeBytes_to
  5532  00DEF8  0012               	return		;funcret
  5533  00DEFA                     __end_of_ads1115_SetUp:
  5534                           	callstack 0
  5535                           
  5536 ;; *************** function _i2c_writeBytes_to *****************
  5537 ;; Defined at:
  5538 ;;		line 73 in file "bsp/i2c.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  address         1    wreg     const unsigned char 
  5541 ;;  wraddr          2   25[COMRAM] PTR const unsigned char 
  5542 ;;		 -> ads1114_Comparator_SetUp@wbuff(1), ads1115_SetUp@wraddr(1), sht3x_write_alert_limits@cmd(2), 
  5543 ;;  addrlen         1   27[COMRAM] const unsigned char 
  5544 ;;  wrptr           2   28[COMRAM] PTR const unsigned char 
  5545 ;;		 -> ads1114_Comparator_SetUp@rbuff(2), ads1115_SetUp@buff(2), sht3x_write_alert_limits@buff(3), 
  5546 ;;  len             1   30[COMRAM] const unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  address         1   31[COMRAM] const unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      unsigned char 
  5551 ;; Registers used:
  5552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5558 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5561 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5562 ;;Total ram usage:        7 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 6
  5565 ;; This function calls:
  5566 ;;		_I2C_Stop
  5567 ;;		_i2c_writeBytes
  5568 ;;		_i2c_writeData
  5569 ;; This function is called by:
  5570 ;;		_ads1115_SetUp
  5571 ;;		_sht3x_write_alert_limits
  5572 ;;		_ads1114_Comparator_SetUp
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576                           	psect	text17
  5577  00E27A                     __ptext17:
  5578                           	callstack 0
  5579  00E27A                     _i2c_writeBytes_to:
  5580                           	callstack 21
  5581                           
  5582                           ;incstack = 0
  5583                           ;i2c_writeBytes_to@address stored from wreg
  5584  00E27A  6E20               	movwf	i2c_writeBytes_to@address^0,c
  5585  00E27C                     
  5586                           ;i2c.c: 75: if (i2c_writeBytes(address, wraddr, addrlen, 0) == 0) {
  5587  00E27C  C01A  F015         	movff	i2c_writeBytes_to@wraddr,i2c_writeBytes@wrptr
  5588  00E280  C01B  F016         	movff	i2c_writeBytes_to@wraddr+1,i2c_writeBytes@wrptr+1
  5589  00E284  C01C  F017         	movff	i2c_writeBytes_to@addrlen,i2c_writeBytes@len
  5590  00E288  0E00               	movlw	0
  5591  00E28A  6E18               	movwf	i2c_writeBytes@isStop^0,c
  5592  00E28C  5020               	movf	i2c_writeBytes_to@address^0,w,c
  5593  00E28E  ECF6  F072         	call	_i2c_writeBytes
  5594  00E292  0900               	iorlw	0
  5595  00E294  A4D8               	btfss	status,2,c
  5596  00E296  EF4F  F071         	goto	u18511
  5597  00E29A  EF51  F071         	goto	u18510
  5598  00E29E                     u18511:
  5599  00E29E  EF56  F071         	goto	l17122
  5600  00E2A2                     u18510:
  5601  00E2A2                     
  5602                           ;i2c.c: 76: I2C_Stop();
  5603  00E2A2  EC75  F077         	call	_I2C_Stop	;wreg free
  5604  00E2A6                     l17118:
  5605                           
  5606                           ;i2c.c: 77: return 0;
  5607  00E2A6  0E00               	movlw	0
  5608  00E2A8  EF6B  F071         	goto	l90
  5609  00E2AC                     l17122:
  5610                           
  5611                           ;i2c.c: 78: };i2c.c: 80: if (i2c_writeData(wrptr, len, 1) == 0) {
  5612  00E2AC  C01D  F010         	movff	i2c_writeBytes_to@wrptr,i2c_writeData@wrptr
  5613  00E2B0  C01E  F011         	movff	i2c_writeBytes_to@wrptr+1,i2c_writeData@wrptr+1
  5614  00E2B4  C01F  F012         	movff	i2c_writeBytes_to@len,i2c_writeData@len
  5615  00E2B8  0E01               	movlw	1
  5616  00E2BA  6E13               	movwf	i2c_writeData@isStop^0,c
  5617  00E2BC  EC05  F06E         	call	_i2c_writeData	;wreg free
  5618  00E2C0  0900               	iorlw	0
  5619  00E2C2  A4D8               	btfss	status,2,c
  5620  00E2C4  EF66  F071         	goto	u18521
  5621  00E2C8  EF68  F071         	goto	u18520
  5622  00E2CC                     u18521:
  5623  00E2CC  EF6A  F071         	goto	l17128
  5624  00E2D0                     u18520:
  5625  00E2D0  EF53  F071         	goto	l17118
  5626  00E2D4                     l17128:
  5627                           
  5628                           ;i2c.c: 82: };i2c.c: 84: return 1;
  5629  00E2D4  0E01               	movlw	1
  5630  00E2D6                     l90:
  5631  00E2D6  0012               	return		;funcret
  5632  00E2D8                     __end_of_i2c_writeBytes_to:
  5633                           	callstack 0
  5634                           
  5635 ;; *************** function _gasSensor_read *****************
  5636 ;; Defined at:
  5637 ;;		line 114 in file "sensor.c"
  5638 ;; Parameters:    Size  Location     Type
  5639 ;;  chNum           1    wreg     unsigned char 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  chNum           1   11[BANK5 ] unsigned char 
  5642 ;;  volt            4    7[BANK5 ] float 
  5643 ;;  cmp_coeff       4    0[BANK5 ] float 
  5644 ;;  raw             2    5[BANK5 ] int 
  5645 ;;  adc_gain        1    4[BANK5 ] unsigned char 
  5646 ;; Return value:  Size  Location     Type
  5647 ;;                  1    wreg      unsigned char 
  5648 ;; Registers used:
  5649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0      12       0       0       0       0       0       
      +0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0      12       0       0       0       0       0       
      +0       0       0       0
  5659 ;;Total ram usage:       12 bytes
  5660 ;; Hardware stack levels used: 1
  5661 ;; Hardware stack levels required when called: 9
  5662 ;; This function calls:
  5663 ;;		_ADCto_uVoltage
  5664 ;;		_GasSensor_Zerofilter
  5665 ;;		_Kalman_updateEstimate
  5666 ;;		___fladd
  5667 ;;		___flmul
  5668 ;;		___flneg
  5669 ;;		_floor
  5670 ;;		_gasSensor_calib
  5671 ;;		_gasSensor_temperature_cmp_coefficient
  5672 ;;		_sensor_ADC_read
  5673 ;; This function is called by:
  5674 ;;		_sensMeasure_task
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text18
  5679  006E8C                     __ptext18:
  5680                           	callstack 0
  5681  006E8C                     _gasSensor_read:
  5682                           	callstack 20
  5683                           
  5684                           ;incstack = 0
  5685                           ;gasSensor_read@chNum stored from wreg
  5686  006E8C  0105               	movlb	5	; () banked
  5687  006E8E  6FFD               	movwf	gasSensor_read@chNum& (0+255),b
  5688  006E90                     
  5689                           ;sensor.c: 116: int16_t raw;;sensor.c: 117: uint8_t adc_gain;;sensor.c: 118: float cmp_c
      +                          oeff = 1.0f;
  5690  006E90  0E00               	movlw	0
  5691  006E92  0105               	movlb	5	; () banked
  5692  006E94  6FF2               	movwf	gasSensor_read@cmp_coeff& (0+255),b
  5693  006E96  0E00               	movlw	0
  5694  006E98  6FF3               	movwf	(gasSensor_read@cmp_coeff+1)& (0+255),b
  5695  006E9A  0E80               	movlw	128
  5696  006E9C  6FF4               	movwf	(gasSensor_read@cmp_coeff+2)& (0+255),b
  5697  006E9E  0E3F               	movlw	63
  5698  006EA0  6FF5               	movwf	(gasSensor_read@cmp_coeff+3)& (0+255),b
  5699  006EA2                     
  5700                           ; BSR set to: 5
  5701                           ;sensor.c: 120: if (chNum != GAS_CH2) {
  5702  006EA2  0E02               	movlw	2
  5703  006EA4  19FD               	xorwf	gasSensor_read@chNum& (0+255),w,b
  5704  006EA6  B4D8               	btfsc	status,2,c
  5705  006EA8  EF58  F037         	goto	u21001
  5706  006EAC  EF5A  F037         	goto	u21000
  5707  006EB0                     u21001:
  5708  006EB0  EF81  F037         	goto	l19290
  5709  006EB4                     u21000:
  5710  006EB4                     
  5711                           ; BSR set to: 5
  5712                           ;sensor.c: 121: if (g_sens_measure.isLMP_InitDone[chNum] == 0 || g_sens_measure.isADC_In
      +                          itDone[chNum] == 0)
  5713  006EB4  0E11               	movlw	low (_g_sens_measure+3)
  5714  006EB6  25FD               	addwf	gasSensor_read@chNum& (0+255),w,b
  5715  006EB8  6ED9               	movwf	fsr2l,c
  5716  006EBA  6ADA               	clrf	fsr2h,c
  5717  006EBC  0E01               	movlw	high (_g_sens_measure+3)
  5718  006EBE  22DA               	addwfc	fsr2h,f,c
  5719  006EC0  50DF               	movf	indf2,w,c
  5720  006EC2  B4D8               	btfsc	status,2,c
  5721  006EC4  EF66  F037         	goto	u21011
  5722  006EC8  EF68  F037         	goto	u21010
  5723  006ECC                     u21011:
  5724  006ECC  EF76  F037         	goto	l19278
  5725  006ED0                     u21010:
  5726  006ED0                     
  5727                           ; BSR set to: 5
  5728  006ED0  0E13               	movlw	low (_g_sens_measure+5)
  5729  006ED2  25FD               	addwf	gasSensor_read@chNum& (0+255),w,b
  5730  006ED4  6ED9               	movwf	fsr2l,c
  5731  006ED6  6ADA               	clrf	fsr2h,c
  5732  006ED8  0E01               	movlw	high (_g_sens_measure+5)
  5733  006EDA  22DA               	addwfc	fsr2h,f,c
  5734  006EDC  50DF               	movf	indf2,w,c
  5735  006EDE  A4D8               	btfss	status,2,c
  5736  006EE0  EF74  F037         	goto	u21021
  5737  006EE4  EF76  F037         	goto	u21020
  5738  006EE8                     u21021:
  5739  006EE8  EF81  F037         	goto	l19290
  5740  006EEC                     u21020:
  5741  006EEC                     l19278:
  5742                           
  5743                           ;sensor.c: 122: return 0;
  5744  006EEC  0E00               	movlw	0
  5745  006EEE  EFE7  F038         	goto	l1367
  5746  006EF2                     l19282:
  5747                           
  5748                           ; BSR set to: 5
  5749  006EF2  0E05               	movlw	5
  5750  006EF4  6FF6               	movwf	gasSensor_read@adc_gain& (0+255),b
  5751  006EF6  EF90  F037         	goto	l19292
  5752  006EFA                     l19286:
  5753                           
  5754                           ; BSR set to: 5
  5755  006EFA  0E03               	movlw	3
  5756  006EFC  6FF6               	movwf	gasSensor_read@adc_gain& (0+255),b
  5757  006EFE  EF90  F037         	goto	l19292
  5758  006F02                     l19290:
  5759                           
  5760                           ; BSR set to: 5
  5761  006F02  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5762                           
  5763                           ; Switch size 1, requested type "simple"
  5764                           ; Number of cases is 3, Range of values is 0 to 2
  5765                           ; switch strategies available:
  5766                           ; Name         Instructions Cycles
  5767                           ; simple_byte           10     6 (average)
  5768                           ;	Chosen strategy is simple_byte
  5769  006F04  0A00               	xorlw	0	; case 0
  5770  006F06  B4D8               	btfsc	status,2,c
  5771  006F08  EF79  F037         	goto	l19282
  5772  006F0C  0A01               	xorlw	1	; case 1
  5773  006F0E  B4D8               	btfsc	status,2,c
  5774  006F10  EF79  F037         	goto	l19282
  5775  006F14  0A03               	xorlw	3	; case 2
  5776  006F16  B4D8               	btfsc	status,2,c
  5777  006F18  EF7D  F037         	goto	l19286
  5778  006F1C  EF90  F037         	goto	l19292
  5779  006F20                     l19292:
  5780                           
  5781                           ; BSR set to: 5
  5782                           ;sensor.c: 132: if (sensor_ADC_read(chNum, &raw)) {
  5783  006F20  0EF7               	movlw	low gasSensor_read@raw
  5784  006F22  6E25               	movwf	sensor_ADC_read@raw_adc^0,c
  5785  006F24  0E05               	movlw	high gasSensor_read@raw
  5786  006F26  6E26               	movwf	(sensor_ADC_read@raw_adc+1)^0,c
  5787  006F28  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5788  006F2A  ECCE  F076         	call	_sensor_ADC_read
  5789  006F2E  0900               	iorlw	0
  5790  006F30  B4D8               	btfsc	status,2,c
  5791  006F32  EF9D  F037         	goto	u21031
  5792  006F36  EF9F  F037         	goto	u21030
  5793  006F3A                     u21031:
  5794  006F3A  EF76  F037         	goto	l19278
  5795  006F3E                     u21030:
  5796  006F3E                     
  5797                           ;sensor.c: 133: float volt = ADCto_uVoltage(raw, adc_gain);
  5798  006F3E  C5F7  F081         	movff	gasSensor_read@raw,ADCto_uVoltage@raw_adc
  5799  006F42  C5F8  F082         	movff	gasSensor_read@raw+1,ADCto_uVoltage@raw_adc+1
  5800  006F46  C5F6  F083         	movff	gasSensor_read@adc_gain,ADCto_uVoltage@gain
  5801  006F4A  EC1C  F06D         	call	_ADCto_uVoltage	;wreg free
  5802  006F4E  C081  F5F9         	movff	?_ADCto_uVoltage,gasSensor_read@volt
  5803  006F52  C082  F5FA         	movff	?_ADCto_uVoltage+1,gasSensor_read@volt+1
  5804  006F56  C083  F5FB         	movff	?_ADCto_uVoltage+2,gasSensor_read@volt+2
  5805  006F5A  C084  F5FC         	movff	?_ADCto_uVoltage+3,gasSensor_read@volt+3
  5806  006F5E                     
  5807                           ;sensor.c: 134: if (chNum == GAS_CH1)
  5808  006F5E  0105               	movlb	5	; () banked
  5809  006F60  05FD               	decf	gasSensor_read@chNum& (0+255),w,b
  5810  006F62  A4D8               	btfss	status,2,c
  5811  006F64  EFB6  F037         	goto	u21041
  5812  006F68  EFB8  F037         	goto	u21040
  5813  006F6C                     u21041:
  5814  006F6C  EFCA  F037         	goto	l19300
  5815  006F70                     u21040:
  5816  006F70                     
  5817                           ; BSR set to: 5
  5818                           ;sensor.c: 135: volt = -volt;
  5819  006F70  C5F9  F00F         	movff	gasSensor_read@volt,___flneg@f1
  5820  006F74  C5FA  F010         	movff	gasSensor_read@volt+1,___flneg@f1+1
  5821  006F78  C5FB  F011         	movff	gasSensor_read@volt+2,___flneg@f1+2
  5822  006F7C  C5FC  F012         	movff	gasSensor_read@volt+3,___flneg@f1+3
  5823  006F80  ECB6  F075         	call	___flneg	;wreg free
  5824  006F84  C00F  F5F9         	movff	?___flneg,gasSensor_read@volt
  5825  006F88  C010  F5FA         	movff	?___flneg+1,gasSensor_read@volt+1
  5826  006F8C  C011  F5FB         	movff	?___flneg+2,gasSensor_read@volt+2
  5827  006F90  C012  F5FC         	movff	?___flneg+3,gasSensor_read@volt+3
  5828  006F94                     l19300:
  5829                           
  5830                           ;sensor.c: 138: volt = Kalman_updateEstimate(&kalmanFilter[chNum], volt);
  5831  006F94  0105               	movlb	5	; () banked
  5832  006F96  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5833  006F98  0D18               	mullw	24
  5834  006F9A  0E50               	movlw	low _kalmanFilter
  5835  006F9C  24F3               	addwf	243,w,c
  5836  006F9E  0100               	movlb	0	; () banked
  5837  006FA0  6FBF               	movwf	Kalman_updateEstimate@pObj& (0+255),b
  5838  006FA2  0E02               	movlw	high _kalmanFilter
  5839  006FA4  20F4               	addwfc	prodh,w,c
  5840  006FA6  6FC0               	movwf	(Kalman_updateEstimate@pObj+1)& (0+255),b
  5841  006FA8  C5F9  F0C1         	movff	gasSensor_read@volt,Kalman_updateEstimate@mea
  5842  006FAC  C5FA  F0C2         	movff	gasSensor_read@volt+1,Kalman_updateEstimate@mea+1
  5843  006FB0  C5FB  F0C3         	movff	gasSensor_read@volt+2,Kalman_updateEstimate@mea+2
  5844  006FB4  C5FC  F0C4         	movff	gasSensor_read@volt+3,Kalman_updateEstimate@mea+3
  5845  006FB8  EC81  F03D         	call	_Kalman_updateEstimate	;wreg free
  5846  006FBC  C0BF  F5F9         	movff	?_Kalman_updateEstimate,gasSensor_read@volt
  5847  006FC0  C0C0  F5FA         	movff	?_Kalman_updateEstimate+1,gasSensor_read@volt+1
  5848  006FC4  C0C1  F5FB         	movff	?_Kalman_updateEstimate+2,gasSensor_read@volt+2
  5849  006FC8  C0C2  F5FC         	movff	?_Kalman_updateEstimate+3,gasSensor_read@volt+3
  5850  006FCC                     
  5851                           ;sensor.c: 141: if (g_nvm.flash.temp_cmp == TEMP_CMP_ON)
  5852  006FCC  0101               	movlb	1	; () banked
  5853  006FCE  057B               	decf	(_g_nvm+2)& (0+255),w,b
  5854  006FD0  A4D8               	btfss	status,2,c
  5855  006FD2  EFED  F037         	goto	u21051
  5856  006FD6  EFEF  F037         	goto	u21050
  5857  006FDA                     u21051:
  5858  006FDA  EF03  F038         	goto	l19306
  5859  006FDE                     u21050:
  5860  006FDE                     
  5861                           ; BSR set to: 1
  5862                           ;sensor.c: 142: cmp_coeff = gasSensor_temperature_cmp_coefficient(chNum, sens_value.temp
      +                          Humi[CMP_TEMP]);
  5863  006FDE  C222  F0DF         	movff	_sens_value+34,gasSensor_temperature_cmp_coefficient@temp
  5864  006FE2  C223  F0E0         	movff	_sens_value+35,gasSensor_temperature_cmp_coefficient@temp+1
  5865  006FE6  C224  F0E1         	movff	_sens_value+36,gasSensor_temperature_cmp_coefficient@temp+2
  5866  006FEA  C225  F0E2         	movff	_sens_value+37,gasSensor_temperature_cmp_coefficient@temp+3
  5867  006FEE  0105               	movlb	5	; () banked
  5868  006FF0  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5869  006FF2  ECA0  F027         	call	_gasSensor_temperature_cmp_coefficient
  5870  006FF6  C0DF  F5F2         	movff	?_gasSensor_temperature_cmp_coefficient,gasSensor_read@cmp_coeff
  5871  006FFA  C0E0  F5F3         	movff	?_gasSensor_temperature_cmp_coefficient+1,gasSensor_read@cmp_coeff+1
  5872  006FFE  C0E1  F5F4         	movff	?_gasSensor_temperature_cmp_coefficient+2,gasSensor_read@cmp_coeff+2
  5873  007002  C0E2  F5F5         	movff	?_gasSensor_temperature_cmp_coefficient+3,gasSensor_read@cmp_coeff+3
  5874  007006                     l19306:
  5875                           
  5876                           ;sensor.c: 144: sens_value.toxic_gas[chNum][LV_GAS_VOLT] = volt * cmp_coeff;
  5877  007006  C5F9  F068         	movff	gasSensor_read@volt,___flmul@b
  5878  00700A  C5FA  F069         	movff	gasSensor_read@volt+1,___flmul@b+1
  5879  00700E  C5FB  F06A         	movff	gasSensor_read@volt+2,___flmul@b+2
  5880  007012  C5FC  F06B         	movff	gasSensor_read@volt+3,___flmul@b+3
  5881  007016  C5F2  F06C         	movff	gasSensor_read@cmp_coeff,___flmul@a
  5882  00701A  C5F3  F06D         	movff	gasSensor_read@cmp_coeff+1,___flmul@a+1
  5883  00701E  C5F4  F06E         	movff	gasSensor_read@cmp_coeff+2,___flmul@a+2
  5884  007022  C5F5  F06F         	movff	gasSensor_read@cmp_coeff+3,___flmul@a+3
  5885  007026  ECA7  F02F         	call	___flmul	;wreg free
  5886  00702A  0105               	movlb	5	; () banked
  5887  00702C  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5888  00702E  0D08               	mullw	8
  5889  007030  0E00               	movlw	low _sens_value
  5890  007032  24F3               	addwf	243,w,c
  5891  007034  6ED9               	movwf	fsr2l,c
  5892  007036  0E02               	movlw	high _sens_value
  5893  007038  20F4               	addwfc	prodh,w,c
  5894  00703A  6EDA               	movwf	fsr2h,c
  5895  00703C  0100               	movlb	0	; () banked
  5896  00703E  C068  FFDE         	movff	?___flmul,postinc2
  5897  007042  C069  FFDE         	movff	?___flmul+1,postinc2
  5898  007046  C06A  FFDE         	movff	?___flmul+2,postinc2
  5899  00704A  C06B  FFDE         	movff	?___flmul+3,postinc2
  5900  00704E                     
  5901                           ; BSR set to: 0
  5902                           ;sensor.c: 145: sens_value.toxic_gas[chNum][LV_GAS_CONCEN] = gasSensor_calib(chNum, sens
      +                          _value.toxic_gas[chNum][LV_GAS_VOLT]);
  5903  00704E  0105               	movlb	5	; () banked
  5904  007050  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5905  007052  0D08               	mullw	8
  5906  007054  0E00               	movlw	low _sens_value
  5907  007056  24F3               	addwf	243,w,c
  5908  007058  6ED9               	movwf	fsr2l,c
  5909  00705A  0E02               	movlw	high _sens_value
  5910  00705C  20F4               	addwfc	prodh,w,c
  5911  00705E  6EDA               	movwf	fsr2h,c
  5912  007060  CFDE F0BF          	movff	postinc2,gasSensor_calib@gas_uVolt
  5913  007064  CFDE F0C0          	movff	postinc2,gasSensor_calib@gas_uVolt+1
  5914  007068  CFDE F0C1          	movff	postinc2,gasSensor_calib@gas_uVolt+2
  5915  00706C  CFDE F0C2          	movff	postinc2,gasSensor_calib@gas_uVolt+3
  5916  007070  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5917  007072  EC7D  F03A         	call	_gasSensor_calib
  5918  007076  0105               	movlb	5	; () banked
  5919  007078  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5920  00707A  0D08               	mullw	8
  5921  00707C  0E04               	movlw	low (_sens_value+4)
  5922  00707E  24F3               	addwf	243,w,c
  5923  007080  6ED9               	movwf	fsr2l,c
  5924  007082  0E02               	movlw	high (_sens_value+4)
  5925  007084  20F4               	addwfc	prodh,w,c
  5926  007086  6EDA               	movwf	fsr2h,c
  5927  007088  0100               	movlb	0	; () banked
  5928  00708A  C0BF  FFDE         	movff	?_gasSensor_calib,postinc2
  5929  00708E  C0C0  FFDE         	movff	?_gasSensor_calib+1,postinc2
  5930  007092  C0C1  FFDE         	movff	?_gasSensor_calib+2,postinc2
  5931  007096  C0C2  FFDE         	movff	?_gasSensor_calib+3,postinc2
  5932  00709A                     
  5933                           ; BSR set to: 0
  5934                           ;sensor.c: 147: if (chNum == GAS_CH0 || chNum == GAS_CH2)
  5935  00709A  0105               	movlb	5	; () banked
  5936  00709C  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5937  00709E  B4D8               	btfsc	status,2,c
  5938  0070A0  EF54  F038         	goto	u21061
  5939  0070A4  EF56  F038         	goto	u21060
  5940  0070A8                     u21061:
  5941  0070A8  EF5F  F038         	goto	l19314
  5942  0070AC                     u21060:
  5943  0070AC                     
  5944                           ; BSR set to: 5
  5945  0070AC  0E02               	movlw	2
  5946  0070AE  19FD               	xorwf	gasSensor_read@chNum& (0+255),w,b
  5947  0070B0  A4D8               	btfss	status,2,c
  5948  0070B2  EF5D  F038         	goto	u21071
  5949  0070B6  EF5F  F038         	goto	u21070
  5950  0070BA                     u21071:
  5951  0070BA  EF83  F038         	goto	l19316
  5952  0070BE                     u21070:
  5953  0070BE                     l19314:
  5954                           
  5955                           ; BSR set to: 5
  5956                           ;sensor.c: 148: sens_value.toxic_gas[chNum][LV_GAS_CONCEN] = floor(sens_value.toxic_gas[
      +                          chNum][LV_GAS_CONCEN]);
  5957  0070BE  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5958  0070C0  0D08               	mullw	8
  5959  0070C2  0E04               	movlw	low (_sens_value+4)
  5960  0070C4  24F3               	addwf	243,w,c
  5961  0070C6  6ED9               	movwf	fsr2l,c
  5962  0070C8  0E02               	movlw	high (_sens_value+4)
  5963  0070CA  20F4               	addwfc	prodh,w,c
  5964  0070CC  6EDA               	movwf	fsr2h,c
  5965  0070CE  CFDE F09E          	movff	postinc2,floor@x
  5966  0070D2  CFDE F09F          	movff	postinc2,floor@x+1
  5967  0070D6  CFDE F0A0          	movff	postinc2,floor@x+2
  5968  0070DA  CFDE F0A1          	movff	postinc2,floor@x+3
  5969  0070DE  ECC8  F052         	call	_floor	;wreg free
  5970  0070E2  0105               	movlb	5	; () banked
  5971  0070E4  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  5972  0070E6  0D08               	mullw	8
  5973  0070E8  0E04               	movlw	low (_sens_value+4)
  5974  0070EA  24F3               	addwf	243,w,c
  5975  0070EC  6ED9               	movwf	fsr2l,c
  5976  0070EE  0E02               	movlw	high (_sens_value+4)
  5977  0070F0  20F4               	addwfc	prodh,w,c
  5978  0070F2  6EDA               	movwf	fsr2h,c
  5979  0070F4  0100               	movlb	0	; () banked
  5980  0070F6  C09E  FFDE         	movff	?_floor,postinc2
  5981  0070FA  C09F  FFDE         	movff	?_floor+1,postinc2
  5982  0070FE  C0A0  FFDE         	movff	?_floor+2,postinc2
  5983  007102  C0A1  FFDE         	movff	?_floor+3,postinc2
  5984  007106                     l19316:
  5985                           
  5986                           ;sensor.c: 150: if (g_nvm.flash.filter_mode == FIL_MODE)
  5987  007106  0101               	movlb	1	; () banked
  5988  007108  057A               	decf	(_g_nvm+1)& (0+255),w,b
  5989  00710A  A4D8               	btfss	status,2,c
  5990  00710C  EF8A  F038         	goto	u21081
  5991  007110  EF8C  F038         	goto	u21080
  5992  007114                     u21081:
  5993  007114  EFB1  F038         	goto	l1379
  5994  007118                     u21080:
  5995  007118                     
  5996                           ; BSR set to: 1
  5997                           ;sensor.c: 151: sens_value.toxic_gas[chNum][LV_GAS_CONCEN] = GasSensor_Zerofilter(chNum,
      +                           sens_value.toxic_gas[chNum][LV_GAS_CONCEN]);
  5998  007118  0105               	movlb	5	; () banked
  5999  00711A  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  6000  00711C  0D08               	mullw	8
  6001  00711E  0E04               	movlw	low (_sens_value+4)
  6002  007120  24F3               	addwf	243,w,c
  6003  007122  6ED9               	movwf	fsr2l,c
  6004  007124  0E02               	movlw	high (_sens_value+4)
  6005  007126  20F4               	addwfc	prodh,w,c
  6006  007128  6EDA               	movwf	fsr2h,c
  6007  00712A  CFDE F01B          	movff	postinc2,GasSensor_Zerofilter@gasConcent
  6008  00712E  CFDE F01C          	movff	postinc2,GasSensor_Zerofilter@gasConcent+1
  6009  007132  CFDE F01D          	movff	postinc2,GasSensor_Zerofilter@gasConcent+2
  6010  007136  CFDE F01E          	movff	postinc2,GasSensor_Zerofilter@gasConcent+3
  6011  00713A  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  6012  00713C  EC79  F041         	call	_GasSensor_Zerofilter
  6013  007140  0105               	movlb	5	; () banked
  6014  007142  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  6015  007144  0D08               	mullw	8
  6016  007146  0E04               	movlw	low (_sens_value+4)
  6017  007148  24F3               	addwf	243,w,c
  6018  00714A  6ED9               	movwf	fsr2l,c
  6019  00714C  0E02               	movlw	high (_sens_value+4)
  6020  00714E  20F4               	addwfc	prodh,w,c
  6021  007150  6EDA               	movwf	fsr2h,c
  6022  007152  C01B  FFDE         	movff	?_GasSensor_Zerofilter,postinc2
  6023  007156  C01C  FFDE         	movff	?_GasSensor_Zerofilter+1,postinc2
  6024  00715A  C01D  FFDE         	movff	?_GasSensor_Zerofilter+2,postinc2
  6025  00715E  C01E  FFDE         	movff	?_GasSensor_Zerofilter+3,postinc2
  6026  007162                     l1379:
  6027                           
  6028                           ;sensor.c: 153: sens_value.toxic_gas[chNum][LV_GAS_CONCEN] += g_nvm.flash.gasOffset[chNu
      +                          m];
  6029  007162  0105               	movlb	5	; () banked
  6030  007164  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  6031  007166  0D08               	mullw	8
  6032  007168  0E04               	movlw	low (_sens_value+4)
  6033  00716A  24F3               	addwf	243,w,c
  6034  00716C  6ED9               	movwf	fsr2l,c
  6035  00716E  0E02               	movlw	high (_sens_value+4)
  6036  007170  20F4               	addwfc	prodh,w,c
  6037  007172  6EDA               	movwf	fsr2h,c
  6038  007174  CFDE F08E          	movff	postinc2,___fladd@b
  6039  007178  CFDE F08F          	movff	postinc2,___fladd@b+1
  6040  00717C  CFDE F090          	movff	postinc2,___fladd@b+2
  6041  007180  CFDE F091          	movff	postinc2,___fladd@b+3
  6042  007184  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  6043  007186  0D04               	mullw	4
  6044  007188  0EB2               	movlw	low (_g_nvm+57)
  6045  00718A  24F3               	addwf	243,w,c
  6046  00718C  6ED9               	movwf	fsr2l,c
  6047  00718E  0E01               	movlw	high (_g_nvm+57)
  6048  007190  20F4               	addwfc	prodh,w,c
  6049  007192  6EDA               	movwf	fsr2h,c
  6050  007194  CFDE F092          	movff	postinc2,___fladd@a
  6051  007198  CFDE F093          	movff	postinc2,___fladd@a+1
  6052  00719C  CFDE F094          	movff	postinc2,___fladd@a+2
  6053  0071A0  CFDE F095          	movff	postinc2,___fladd@a+3
  6054  0071A4  EC46  F02D         	call	___fladd	;wreg free
  6055  0071A8  0105               	movlb	5	; () banked
  6056  0071AA  51FD               	movf	gasSensor_read@chNum& (0+255),w,b
  6057  0071AC  0D08               	mullw	8
  6058  0071AE  0E04               	movlw	low (_sens_value+4)
  6059  0071B0  24F3               	addwf	243,w,c
  6060  0071B2  6ED9               	movwf	fsr2l,c
  6061  0071B4  0E02               	movlw	high (_sens_value+4)
  6062  0071B6  20F4               	addwfc	prodh,w,c
  6063  0071B8  6EDA               	movwf	fsr2h,c
  6064  0071BA  0100               	movlb	0	; () banked
  6065  0071BC  C08E  FFDE         	movff	?___fladd,postinc2
  6066  0071C0  C08F  FFDE         	movff	?___fladd+1,postinc2
  6067  0071C4  C090  FFDE         	movff	?___fladd+2,postinc2
  6068  0071C8  C091  FFDE         	movff	?___fladd+3,postinc2
  6069  0071CC                     
  6070                           ; BSR set to: 0
  6071                           ;sensor.c: 154: return 1;
  6072  0071CC  0E01               	movlw	1
  6073  0071CE                     l1367:
  6074  0071CE  0012               	return		;funcret
  6075  0071D0                     __end_of_gasSensor_read:
  6076                           	callstack 0
  6077                           
  6078 ;; *************** function _gasSensor_temperature_cmp_coefficient *****************
  6079 ;; Defined at:
  6080 ;;		line 182 in file "sensor.c"
  6081 ;; Parameters:    Size  Location     Type
  6082 ;;  chNum           1    wreg     unsigned char 
  6083 ;;  temp            4  127[BANK0 ] float 
  6084 ;; Auto vars:     Size  Location     Type
  6085 ;;  chNum           1  131[BANK0 ] unsigned char 
  6086 ;;  coeff           4  140[BANK0 ] float 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  4  127[BANK0 ] float 
  6089 ;; Registers used:
  6090 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6097 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6099 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;Total ram usage:       17 bytes
  6101 ;; Hardware stack levels used: 1
  6102 ;; Hardware stack levels required when called: 8
  6103 ;; This function calls:
  6104 ;;		___fladd
  6105 ;;		___fldiv
  6106 ;;		___flge
  6107 ;;		___flmul
  6108 ;;		___flsub
  6109 ;;		_pow
  6110 ;; This function is called by:
  6111 ;;		_gasSensor_read
  6112 ;; This function uses a non-reentrant model
  6113 ;;
  6114                           
  6115                           	psect	text19
  6116  004F40                     __ptext19:
  6117                           	callstack 0
  6118  004F40                     _gasSensor_temperature_cmp_coefficient:
  6119                           	callstack 20
  6120                           
  6121                           ;incstack = 0
  6122                           ;gasSensor_temperature_cmp_coefficient@chNum stored from wreg
  6123  004F40  0100               	movlb	0	; () banked
  6124  004F42  6FE3               	movwf	gasSensor_temperature_cmp_coefficient@chNum& (0+255),b
  6125  004F44                     
  6126                           ;sensor.c: 184: float coeff;;sensor.c: 186: switch(chNum)
  6127  004F44  EF8E  F02A         	goto	l18456
  6128  004F48                     l18404:
  6129                           
  6130                           ; BSR set to: 0
  6131                           ;sensor.c: 189: {;sensor.c: 190: if (temp >= -20.0f && temp < 20.0f)
  6132  004F48  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6133  004F4C  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6134  004F50  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6135  004F54  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6136  004F58  0E00               	movlw	0
  6137  004F5A  6E13               	movwf	___flge@ff2^0,c
  6138  004F5C  0E00               	movlw	0
  6139  004F5E  6E14               	movwf	(___flge@ff2+1)^0,c
  6140  004F60  0EA0               	movlw	160
  6141  004F62  6E15               	movwf	(___flge@ff2+2)^0,c
  6142  004F64  0EC1               	movlw	193
  6143  004F66  6E16               	movwf	(___flge@ff2+3)^0,c
  6144  004F68  ECE7  F05B         	call	___flge	;wreg free
  6145  004F6C  A0D8               	btfss	status,0,c
  6146  004F6E  EFBB  F027         	goto	u19881
  6147  004F72  EFBD  F027         	goto	u19880
  6148  004F76                     u19881:
  6149  004F76  EF4E  F028         	goto	l18414
  6150  004F7A                     u19880:
  6151  004F7A  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6152  004F7E  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6153  004F82  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6154  004F86  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6155  004F8A  0E00               	movlw	0
  6156  004F8C  6E13               	movwf	___flge@ff2^0,c
  6157  004F8E  0E00               	movlw	0
  6158  004F90  6E14               	movwf	(___flge@ff2+1)^0,c
  6159  004F92  0EA0               	movlw	160
  6160  004F94  6E15               	movwf	(___flge@ff2+2)^0,c
  6161  004F96  0E41               	movlw	65
  6162  004F98  6E16               	movwf	(___flge@ff2+3)^0,c
  6163  004F9A  ECE7  F05B         	call	___flge	;wreg free
  6164  004F9E  B0D8               	btfsc	status,0,c
  6165  004FA0  EFD4  F027         	goto	u19891
  6166  004FA4  EFD6  F027         	goto	u19890
  6167  004FA8                     u19891:
  6168  004FA8  EF4E  F028         	goto	l18414
  6169  004FAC                     u19890:
  6170  004FAC                     
  6171                           ;sensor.c: 191: coeff = 0.02*pow(temp,2.0f)+ -1.1*temp + 113.7;
  6172  004FAC  0E00               	movlw	0
  6173  004FAE  0100               	movlb	0	; () banked
  6174  004FB0  6FCE               	movwf	pow@y& (0+255),b
  6175  004FB2  0E00               	movlw	0
  6176  004FB4  6FCF               	movwf	(pow@y+1)& (0+255),b
  6177  004FB6  0E00               	movlw	0
  6178  004FB8  6FD0               	movwf	(pow@y+2)& (0+255),b
  6179  004FBA  0E40               	movlw	64
  6180  004FBC  6FD1               	movwf	(pow@y+3)& (0+255),b
  6181  004FBE  C0DF  F0CA         	movff	gasSensor_temperature_cmp_coefficient@temp,pow@x
  6182  004FC2  C0E0  F0CB         	movff	gasSensor_temperature_cmp_coefficient@temp+1,pow@x+1
  6183  004FC6  C0E1  F0CC         	movff	gasSensor_temperature_cmp_coefficient@temp+2,pow@x+2
  6184  004FCA  C0E2  F0CD         	movff	gasSensor_temperature_cmp_coefficient@temp+3,pow@x+3
  6185  004FCE  ECE1  F043         	call	_pow	;wreg free
  6186  004FD2  C0CA  F0E4         	movff	?_pow,_gasSensor_temperature_cmp_coefficient$7082
  6187  004FD6  C0CB  F0E5         	movff	?_pow+1,_gasSensor_temperature_cmp_coefficient$7082+1
  6188  004FDA  C0CC  F0E6         	movff	?_pow+2,_gasSensor_temperature_cmp_coefficient$7082+2
  6189  004FDE  C0CD  F0E7         	movff	?_pow+3,_gasSensor_temperature_cmp_coefficient$7082+3
  6190  004FE2                     
  6191                           ;sensor.c: 191: coeff = 0.02*pow(temp,2.0f)+ -1.1*temp + 113.7;
  6192  004FE2  0ECD               	movlw	205
  6193  004FE4  0100               	movlb	0	; () banked
  6194  004FE6  6F6C               	movwf	___flmul@a& (0+255),b
  6195  004FE8  0ECC               	movlw	204
  6196  004FEA  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  6197  004FEC  0E8C               	movlw	140
  6198  004FEE  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  6199  004FF0  0EBF               	movlw	191
  6200  004FF2  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  6201  004FF4  C0DF  F068         	movff	gasSensor_temperature_cmp_coefficient@temp,___flmul@b
  6202  004FF8  C0E0  F069         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flmul@b+1
  6203  004FFC  C0E1  F06A         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flmul@b+2
  6204  005000  C0E2  F06B         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flmul@b+3
  6205  005004  ECA7  F02F         	call	___flmul	;wreg free
  6206  005008  C068  F092         	movff	?___flmul,___fladd@a
  6207  00500C  C069  F093         	movff	?___flmul+1,___fladd@a+1
  6208  005010  C06A  F094         	movff	?___flmul+2,___fladd@a+2
  6209  005014  C06B  F095         	movff	?___flmul+3,___fladd@a+3
  6210  005018  0E0A               	movlw	10
  6211  00501A  0100               	movlb	0	; () banked
  6212  00501C  6F6C               	movwf	___flmul@a& (0+255),b
  6213  00501E  0ED7               	movlw	215
  6214  005020  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  6215  005022  0EA3               	movlw	163
  6216  005024  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  6217  005026  0E3C               	movlw	60
  6218  005028  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  6219  00502A  C0E4  F068         	movff	_gasSensor_temperature_cmp_coefficient$7082,___flmul@b
  6220  00502E  C0E5  F069         	movff	_gasSensor_temperature_cmp_coefficient$7082+1,___flmul@b+1
  6221  005032  C0E6  F06A         	movff	_gasSensor_temperature_cmp_coefficient$7082+2,___flmul@b+2
  6222  005036  C0E7  F06B         	movff	_gasSensor_temperature_cmp_coefficient$7082+3,___flmul@b+3
  6223  00503A  ECA7  F02F         	call	___flmul	;wreg free
  6224  00503E  C068  F08E         	movff	?___flmul,___fladd@b
  6225  005042  C069  F08F         	movff	?___flmul+1,___fladd@b+1
  6226  005046  C06A  F090         	movff	?___flmul+2,___fladd@b+2
  6227  00504A  C06B  F091         	movff	?___flmul+3,___fladd@b+3
  6228  00504E  EC46  F02D         	call	___fladd	;wreg free
  6229  005052  C08E  F0E8         	movff	?___fladd,_gasSensor_temperature_cmp_coefficient$7083
  6230  005056  C08F  F0E9         	movff	?___fladd+1,_gasSensor_temperature_cmp_coefficient$7083+1
  6231  00505A  C090  F0EA         	movff	?___fladd+2,_gasSensor_temperature_cmp_coefficient$7083+2
  6232  00505E  C091  F0EB         	movff	?___fladd+3,_gasSensor_temperature_cmp_coefficient$7083+3
  6233  005062                     
  6234                           ;sensor.c: 191: coeff = 0.02*pow(temp,2.0f)+ -1.1*temp + 113.7;
  6235  005062  C0E8  F08E         	movff	_gasSensor_temperature_cmp_coefficient$7083,___fladd@b
  6236  005066  C0E9  F08F         	movff	_gasSensor_temperature_cmp_coefficient$7083+1,___fladd@b+1
  6237  00506A  C0EA  F090         	movff	_gasSensor_temperature_cmp_coefficient$7083+2,___fladd@b+2
  6238  00506E  C0EB  F091         	movff	_gasSensor_temperature_cmp_coefficient$7083+3,___fladd@b+3
  6239  005072  0E66               	movlw	102
  6240  005074  0100               	movlb	0	; () banked
  6241  005076  6F92               	movwf	___fladd@a& (0+255),b
  6242  005078  0E66               	movlw	102
  6243  00507A  6F93               	movwf	(___fladd@a+1)& (0+255),b
  6244  00507C  0EE3               	movlw	227
  6245  00507E  6F94               	movwf	(___fladd@a+2)& (0+255),b
  6246  005080  0E42               	movlw	66
  6247  005082  6F95               	movwf	(___fladd@a+3)& (0+255),b
  6248  005084  EC46  F02D         	call	___fladd	;wreg free
  6249  005088  C08E  F0EC         	movff	?___fladd,gasSensor_temperature_cmp_coefficient@coeff
  6250  00508C  C08F  F0ED         	movff	?___fladd+1,gasSensor_temperature_cmp_coefficient@coeff+1
  6251  005090  C090  F0EE         	movff	?___fladd+2,gasSensor_temperature_cmp_coefficient@coeff+2
  6252  005094  C091  F0EF         	movff	?___fladd+3,gasSensor_temperature_cmp_coefficient@coeff+3
  6253  005098  EF9E  F02A         	goto	l18458
  6254  00509C                     l18414:
  6255                           
  6256                           ;sensor.c: 192: else if (temp >= 20.0f && temp < 30.0f)
  6257  00509C  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6258  0050A0  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6259  0050A4  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6260  0050A8  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6261  0050AC  0E00               	movlw	0
  6262  0050AE  6E13               	movwf	___flge@ff2^0,c
  6263  0050B0  0E00               	movlw	0
  6264  0050B2  6E14               	movwf	(___flge@ff2+1)^0,c
  6265  0050B4  0EA0               	movlw	160
  6266  0050B6  6E15               	movwf	(___flge@ff2+2)^0,c
  6267  0050B8  0E41               	movlw	65
  6268  0050BA  6E16               	movwf	(___flge@ff2+3)^0,c
  6269  0050BC  ECE7  F05B         	call	___flge	;wreg free
  6270  0050C0  A0D8               	btfss	status,0,c
  6271  0050C2  EF65  F028         	goto	u19901
  6272  0050C6  EF67  F028         	goto	u19900
  6273  0050CA                     u19901:
  6274  0050CA  EFB0  F028         	goto	l18420
  6275  0050CE                     u19900:
  6276  0050CE  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6277  0050D2  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6278  0050D6  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6279  0050DA  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6280  0050DE  0E00               	movlw	0
  6281  0050E0  6E13               	movwf	___flge@ff2^0,c
  6282  0050E2  0E00               	movlw	0
  6283  0050E4  6E14               	movwf	(___flge@ff2+1)^0,c
  6284  0050E6  0EF0               	movlw	240
  6285  0050E8  6E15               	movwf	(___flge@ff2+2)^0,c
  6286  0050EA  0E41               	movlw	65
  6287  0050EC  6E16               	movwf	(___flge@ff2+3)^0,c
  6288  0050EE  ECE7  F05B         	call	___flge	;wreg free
  6289  0050F2  B0D8               	btfsc	status,0,c
  6290  0050F4  EF7E  F028         	goto	u19911
  6291  0050F8  EF80  F028         	goto	u19910
  6292  0050FC                     u19911:
  6293  0050FC  EFB0  F028         	goto	l18420
  6294  005100                     u19910:
  6295  005100                     
  6296                           ;sensor.c: 193: coeff = -1.8*temp +136;
  6297  005100  0E66               	movlw	102
  6298  005102  0100               	movlb	0	; () banked
  6299  005104  6F6C               	movwf	___flmul@a& (0+255),b
  6300  005106  0E66               	movlw	102
  6301  005108  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  6302  00510A  0EE6               	movlw	230
  6303  00510C  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  6304  00510E  0EBF               	movlw	191
  6305  005110  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  6306  005112  C0DF  F068         	movff	gasSensor_temperature_cmp_coefficient@temp,___flmul@b
  6307  005116  C0E0  F069         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flmul@b+1
  6308  00511A  C0E1  F06A         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flmul@b+2
  6309  00511E  C0E2  F06B         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flmul@b+3
  6310  005122  ECA7  F02F         	call	___flmul	;wreg free
  6311  005126  C068  F08E         	movff	?___flmul,___fladd@b
  6312  00512A  C069  F08F         	movff	?___flmul+1,___fladd@b+1
  6313  00512E  C06A  F090         	movff	?___flmul+2,___fladd@b+2
  6314  005132  C06B  F091         	movff	?___flmul+3,___fladd@b+3
  6315  005136  0E00               	movlw	0
  6316  005138  0100               	movlb	0	; () banked
  6317  00513A  6F92               	movwf	___fladd@a& (0+255),b
  6318  00513C  0E00               	movlw	0
  6319  00513E  6F93               	movwf	(___fladd@a+1)& (0+255),b
  6320  005140  0E08               	movlw	8
  6321  005142  6F94               	movwf	(___fladd@a+2)& (0+255),b
  6322  005144  0E43               	movlw	67
  6323  005146  6F95               	movwf	(___fladd@a+3)& (0+255),b
  6324  005148  EC46  F02D         	call	___fladd	;wreg free
  6325  00514C  C08E  F0EC         	movff	?___fladd,gasSensor_temperature_cmp_coefficient@coeff
  6326  005150  C08F  F0ED         	movff	?___fladd+1,gasSensor_temperature_cmp_coefficient@coeff+1
  6327  005154  C090  F0EE         	movff	?___fladd+2,gasSensor_temperature_cmp_coefficient@coeff+2
  6328  005158  C091  F0EF         	movff	?___fladd+3,gasSensor_temperature_cmp_coefficient@coeff+3
  6329  00515C  EF9E  F02A         	goto	l18458
  6330  005160                     l18420:
  6331                           
  6332                           ;sensor.c: 194: else if (temp >= 30.0f && temp < 40.0f)
  6333  005160  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6334  005164  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6335  005168  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6336  00516C  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6337  005170  0E00               	movlw	0
  6338  005172  6E13               	movwf	___flge@ff2^0,c
  6339  005174  0E00               	movlw	0
  6340  005176  6E14               	movwf	(___flge@ff2+1)^0,c
  6341  005178  0EF0               	movlw	240
  6342  00517A  6E15               	movwf	(___flge@ff2+2)^0,c
  6343  00517C  0E41               	movlw	65
  6344  00517E  6E16               	movwf	(___flge@ff2+3)^0,c
  6345  005180  ECE7  F05B         	call	___flge	;wreg free
  6346  005184  A0D8               	btfss	status,0,c
  6347  005186  EFC7  F028         	goto	u19921
  6348  00518A  EFC9  F028         	goto	u19920
  6349  00518E                     u19921:
  6350  00518E  EF12  F029         	goto	l18426
  6351  005192                     u19920:
  6352  005192  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6353  005196  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6354  00519A  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6355  00519E  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6356  0051A2  0E00               	movlw	0
  6357  0051A4  6E13               	movwf	___flge@ff2^0,c
  6358  0051A6  0E00               	movlw	0
  6359  0051A8  6E14               	movwf	(___flge@ff2+1)^0,c
  6360  0051AA  0E20               	movlw	32
  6361  0051AC  6E15               	movwf	(___flge@ff2+2)^0,c
  6362  0051AE  0E42               	movlw	66
  6363  0051B0  6E16               	movwf	(___flge@ff2+3)^0,c
  6364  0051B2  ECE7  F05B         	call	___flge	;wreg free
  6365  0051B6  B0D8               	btfsc	status,0,c
  6366  0051B8  EFE0  F028         	goto	u19931
  6367  0051BC  EFE2  F028         	goto	u19930
  6368  0051C0                     u19931:
  6369  0051C0  EF12  F029         	goto	l18426
  6370  0051C4                     u19930:
  6371  0051C4                     
  6372                           ;sensor.c: 195: coeff = -0.2*temp +88;
  6373  0051C4  0ECD               	movlw	205
  6374  0051C6  0100               	movlb	0	; () banked
  6375  0051C8  6F6C               	movwf	___flmul@a& (0+255),b
  6376  0051CA  0ECC               	movlw	204
  6377  0051CC  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  6378  0051CE  0E4C               	movlw	76
  6379  0051D0  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  6380  0051D2  0EBE               	movlw	190
  6381  0051D4  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  6382  0051D6  C0DF  F068         	movff	gasSensor_temperature_cmp_coefficient@temp,___flmul@b
  6383  0051DA  C0E0  F069         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flmul@b+1
  6384  0051DE  C0E1  F06A         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flmul@b+2
  6385  0051E2  C0E2  F06B         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flmul@b+3
  6386  0051E6  ECA7  F02F         	call	___flmul	;wreg free
  6387  0051EA  C068  F08E         	movff	?___flmul,___fladd@b
  6388  0051EE  C069  F08F         	movff	?___flmul+1,___fladd@b+1
  6389  0051F2  C06A  F090         	movff	?___flmul+2,___fladd@b+2
  6390  0051F6  C06B  F091         	movff	?___flmul+3,___fladd@b+3
  6391  0051FA  0E00               	movlw	0
  6392  0051FC  0100               	movlb	0	; () banked
  6393  0051FE  6F92               	movwf	___fladd@a& (0+255),b
  6394  005200  0E00               	movlw	0
  6395  005202  6F93               	movwf	(___fladd@a+1)& (0+255),b
  6396  005204  0EB0               	movlw	176
  6397  005206  6F94               	movwf	(___fladd@a+2)& (0+255),b
  6398  005208  0E42               	movlw	66
  6399  00520A  6F95               	movwf	(___fladd@a+3)& (0+255),b
  6400  00520C  EC46  F02D         	call	___fladd	;wreg free
  6401  005210  C08E  F0EC         	movff	?___fladd,gasSensor_temperature_cmp_coefficient@coeff
  6402  005214  C08F  F0ED         	movff	?___fladd+1,gasSensor_temperature_cmp_coefficient@coeff+1
  6403  005218  C090  F0EE         	movff	?___fladd+2,gasSensor_temperature_cmp_coefficient@coeff+2
  6404  00521C  C091  F0EF         	movff	?___fladd+3,gasSensor_temperature_cmp_coefficient@coeff+3
  6405  005220  EF9E  F02A         	goto	l18458
  6406  005224                     l18426:
  6407                           
  6408                           ;sensor.c: 196: else if (temp >= 40.0f && temp <= 60.0f)
  6409  005224  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6410  005228  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6411  00522C  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6412  005230  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6413  005234  0E00               	movlw	0
  6414  005236  6E13               	movwf	___flge@ff2^0,c
  6415  005238  0E00               	movlw	0
  6416  00523A  6E14               	movwf	(___flge@ff2+1)^0,c
  6417  00523C  0E20               	movlw	32
  6418  00523E  6E15               	movwf	(___flge@ff2+2)^0,c
  6419  005240  0E42               	movlw	66
  6420  005242  6E16               	movwf	(___flge@ff2+3)^0,c
  6421  005244  ECE7  F05B         	call	___flge	;wreg free
  6422  005248  A0D8               	btfss	status,0,c
  6423  00524A  EF29  F029         	goto	u19941
  6424  00524E  EF2B  F029         	goto	u19940
  6425  005252                     u19941:
  6426  005252  EF61  F029         	goto	l18432
  6427  005256                     u19940:
  6428  005256  0E00               	movlw	0
  6429  005258  6E0F               	movwf	___flge@ff1^0,c
  6430  00525A  0E00               	movlw	0
  6431  00525C  6E10               	movwf	(___flge@ff1+1)^0,c
  6432  00525E  0E70               	movlw	112
  6433  005260  6E11               	movwf	(___flge@ff1+2)^0,c
  6434  005262  0E42               	movlw	66
  6435  005264  6E12               	movwf	(___flge@ff1+3)^0,c
  6436  005266  C0DF  F013         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff2
  6437  00526A  C0E0  F014         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff2+1
  6438  00526E  C0E1  F015         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff2+2
  6439  005272  C0E2  F016         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff2+3
  6440  005276  ECE7  F05B         	call	___flge	;wreg free
  6441  00527A  A0D8               	btfss	status,0,c
  6442  00527C  EF42  F029         	goto	u19951
  6443  005280  EF44  F029         	goto	u19950
  6444  005284                     u19951:
  6445  005284  EF61  F029         	goto	l18432
  6446  005288                     u19950:
  6447  005288                     
  6448                           ;sensor.c: 197: coeff = -temp +120;
  6449  005288  0E00               	movlw	0
  6450  00528A  0100               	movlb	0	; () banked
  6451  00528C  6F9E               	movwf	___flsub@b& (0+255),b
  6452  00528E  0E00               	movlw	0
  6453  005290  6F9F               	movwf	(___flsub@b+1)& (0+255),b
  6454  005292  0EF0               	movlw	240
  6455  005294  6FA0               	movwf	(___flsub@b+2)& (0+255),b
  6456  005296  0E42               	movlw	66
  6457  005298  6FA1               	movwf	(___flsub@b+3)& (0+255),b
  6458  00529A  C0DF  F0A2         	movff	gasSensor_temperature_cmp_coefficient@temp,___flsub@a
  6459  00529E  C0E0  F0A3         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flsub@a+1
  6460  0052A2  C0E1  F0A4         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flsub@a+2
  6461  0052A6  C0E2  F0A5         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flsub@a+3
  6462  0052AA  EC9C  F074         	call	___flsub	;wreg free
  6463  0052AE  C09E  F0EC         	movff	?___flsub,gasSensor_temperature_cmp_coefficient@coeff
  6464  0052B2  C09F  F0ED         	movff	?___flsub+1,gasSensor_temperature_cmp_coefficient@coeff+1
  6465  0052B6  C0A0  F0EE         	movff	?___flsub+2,gasSensor_temperature_cmp_coefficient@coeff+2
  6466  0052BA  C0A1  F0EF         	movff	?___flsub+3,gasSensor_temperature_cmp_coefficient@coeff+3
  6467  0052BE  EF9E  F02A         	goto	l18458
  6468  0052C2                     l18432:
  6469                           
  6470                           ;sensor.c: 198: else;sensor.c: 199: coeff = 100.0f;
  6471  0052C2  0E00               	movlw	0
  6472  0052C4  0100               	movlb	0	; () banked
  6473  0052C6  6FEC               	movwf	gasSensor_temperature_cmp_coefficient@coeff& (0+255),b
  6474  0052C8  0E00               	movlw	0
  6475  0052CA  6FED               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+1)& (0+255),b
  6476  0052CC  0EC8               	movlw	200
  6477  0052CE  6FEE               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+2)& (0+255),b
  6478  0052D0  0E42               	movlw	66
  6479  0052D2  6FEF               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+3)& (0+255),b
  6480  0052D4  EF9E  F02A         	goto	l18458
  6481  0052D8                     l18434:
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;sensor.c: 202: {;sensor.c: 203: if (temp < -20.0f || temp > 50.0f) coeff = 100.0f;
  6485  0052D8  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6486  0052DC  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6487  0052E0  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6488  0052E4  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6489  0052E8  0E00               	movlw	0
  6490  0052EA  6E13               	movwf	___flge@ff2^0,c
  6491  0052EC  0E00               	movlw	0
  6492  0052EE  6E14               	movwf	(___flge@ff2+1)^0,c
  6493  0052F0  0EA0               	movlw	160
  6494  0052F2  6E15               	movwf	(___flge@ff2+2)^0,c
  6495  0052F4  0EC1               	movlw	193
  6496  0052F6  6E16               	movwf	(___flge@ff2+3)^0,c
  6497  0052F8  ECE7  F05B         	call	___flge	;wreg free
  6498  0052FC  A0D8               	btfss	status,0,c
  6499  0052FE  EF83  F029         	goto	u19961
  6500  005302  EF85  F029         	goto	u19960
  6501  005306                     u19961:
  6502  005306  EF9E  F029         	goto	l18438
  6503  00530A                     u19960:
  6504  00530A  0E00               	movlw	0
  6505  00530C  6E0F               	movwf	___flge@ff1^0,c
  6506  00530E  0E00               	movlw	0
  6507  005310  6E10               	movwf	(___flge@ff1+1)^0,c
  6508  005312  0E48               	movlw	72
  6509  005314  6E11               	movwf	(___flge@ff1+2)^0,c
  6510  005316  0E42               	movlw	66
  6511  005318  6E12               	movwf	(___flge@ff1+3)^0,c
  6512  00531A  C0DF  F013         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff2
  6513  00531E  C0E0  F014         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff2+1
  6514  005322  C0E1  F015         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff2+2
  6515  005326  C0E2  F016         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff2+3
  6516  00532A  ECE7  F05B         	call	___flge	;wreg free
  6517  00532E  B0D8               	btfsc	status,0,c
  6518  005330  EF9C  F029         	goto	u19971
  6519  005334  EF9E  F029         	goto	u19970
  6520  005338                     u19971:
  6521  005338  EFA9  F029         	goto	l18440
  6522  00533C                     u19970:
  6523  00533C                     l18438:
  6524  00533C  0E00               	movlw	0
  6525  00533E  0100               	movlb	0	; () banked
  6526  005340  6FEC               	movwf	gasSensor_temperature_cmp_coefficient@coeff& (0+255),b
  6527  005342  0E00               	movlw	0
  6528  005344  6FED               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+1)& (0+255),b
  6529  005346  0EC8               	movlw	200
  6530  005348  6FEE               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+2)& (0+255),b
  6531  00534A  0E42               	movlw	66
  6532  00534C  6FEF               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+3)& (0+255),b
  6533  00534E  EF9E  F02A         	goto	l18458
  6534  005352                     l18440:
  6535                           
  6536                           ;sensor.c: 204: else coeff = -0.27*temp + 105.2;
  6537  005352  0E71               	movlw	113
  6538  005354  0100               	movlb	0	; () banked
  6539  005356  6F6C               	movwf	___flmul@a& (0+255),b
  6540  005358  0E3D               	movlw	61
  6541  00535A  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  6542  00535C  0E8A               	movlw	138
  6543  00535E  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  6544  005360  0EBE               	movlw	190
  6545  005362  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  6546  005364  C0DF  F068         	movff	gasSensor_temperature_cmp_coefficient@temp,___flmul@b
  6547  005368  C0E0  F069         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flmul@b+1
  6548  00536C  C0E1  F06A         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flmul@b+2
  6549  005370  C0E2  F06B         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flmul@b+3
  6550  005374  ECA7  F02F         	call	___flmul	;wreg free
  6551  005378  C068  F08E         	movff	?___flmul,___fladd@b
  6552  00537C  C069  F08F         	movff	?___flmul+1,___fladd@b+1
  6553  005380  C06A  F090         	movff	?___flmul+2,___fladd@b+2
  6554  005384  C06B  F091         	movff	?___flmul+3,___fladd@b+3
  6555  005388  0E66               	movlw	102
  6556  00538A  0100               	movlb	0	; () banked
  6557  00538C  6F92               	movwf	___fladd@a& (0+255),b
  6558  00538E  0E66               	movlw	102
  6559  005390  6F93               	movwf	(___fladd@a+1)& (0+255),b
  6560  005392  0ED2               	movlw	210
  6561  005394  6F94               	movwf	(___fladd@a+2)& (0+255),b
  6562  005396  0E42               	movlw	66
  6563  005398  6F95               	movwf	(___fladd@a+3)& (0+255),b
  6564  00539A  EC46  F02D         	call	___fladd	;wreg free
  6565  00539E  C08E  F0EC         	movff	?___fladd,gasSensor_temperature_cmp_coefficient@coeff
  6566  0053A2  C08F  F0ED         	movff	?___fladd+1,gasSensor_temperature_cmp_coefficient@coeff+1
  6567  0053A6  C090  F0EE         	movff	?___fladd+2,gasSensor_temperature_cmp_coefficient@coeff+2
  6568  0053AA  C091  F0EF         	movff	?___fladd+3,gasSensor_temperature_cmp_coefficient@coeff+3
  6569  0053AE  EF9E  F02A         	goto	l18458
  6570  0053B2                     l18442:
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;sensor.c: 207: {;sensor.c: 208: if (temp < -20.0f || temp > 20.0f) coeff = 100.0f;
  6574  0053B2  C0DF  F00F         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff1
  6575  0053B6  C0E0  F010         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff1+1
  6576  0053BA  C0E1  F011         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff1+2
  6577  0053BE  C0E2  F012         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff1+3
  6578  0053C2  0E00               	movlw	0
  6579  0053C4  6E13               	movwf	___flge@ff2^0,c
  6580  0053C6  0E00               	movlw	0
  6581  0053C8  6E14               	movwf	(___flge@ff2+1)^0,c
  6582  0053CA  0EA0               	movlw	160
  6583  0053CC  6E15               	movwf	(___flge@ff2+2)^0,c
  6584  0053CE  0EC1               	movlw	193
  6585  0053D0  6E16               	movwf	(___flge@ff2+3)^0,c
  6586  0053D2  ECE7  F05B         	call	___flge	;wreg free
  6587  0053D6  A0D8               	btfss	status,0,c
  6588  0053D8  EFF0  F029         	goto	u19981
  6589  0053DC  EFF2  F029         	goto	u19980
  6590  0053E0                     u19981:
  6591  0053E0  EF0B  F02A         	goto	l18446
  6592  0053E4                     u19980:
  6593  0053E4  0E00               	movlw	0
  6594  0053E6  6E0F               	movwf	___flge@ff1^0,c
  6595  0053E8  0E00               	movlw	0
  6596  0053EA  6E10               	movwf	(___flge@ff1+1)^0,c
  6597  0053EC  0EA0               	movlw	160
  6598  0053EE  6E11               	movwf	(___flge@ff1+2)^0,c
  6599  0053F0  0E41               	movlw	65
  6600  0053F2  6E12               	movwf	(___flge@ff1+3)^0,c
  6601  0053F4  C0DF  F013         	movff	gasSensor_temperature_cmp_coefficient@temp,___flge@ff2
  6602  0053F8  C0E0  F014         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flge@ff2+1
  6603  0053FC  C0E1  F015         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flge@ff2+2
  6604  005400  C0E2  F016         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flge@ff2+3
  6605  005404  ECE7  F05B         	call	___flge	;wreg free
  6606  005408  B0D8               	btfsc	status,0,c
  6607  00540A  EF09  F02A         	goto	u19991
  6608  00540E  EF0B  F02A         	goto	u19990
  6609  005412                     u19991:
  6610  005412  EF16  F02A         	goto	l18448
  6611  005416                     u19990:
  6612  005416                     l18446:
  6613  005416  0E00               	movlw	0
  6614  005418  0100               	movlb	0	; () banked
  6615  00541A  6FEC               	movwf	gasSensor_temperature_cmp_coefficient@coeff& (0+255),b
  6616  00541C  0E00               	movlw	0
  6617  00541E  6FED               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+1)& (0+255),b
  6618  005420  0EC8               	movlw	200
  6619  005422  6FEE               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+2)& (0+255),b
  6620  005424  0E42               	movlw	66
  6621  005426  6FEF               	movwf	(gasSensor_temperature_cmp_coefficient@coeff+3)& (0+255),b
  6622  005428  EF9E  F02A         	goto	l18458
  6623  00542C                     l18448:
  6624                           
  6625                           ;sensor.c: 209: else coeff = 0.01*pow(temp,2.0f)+ -0.39*temp + 104.4;
  6626  00542C  0E00               	movlw	0
  6627  00542E  0100               	movlb	0	; () banked
  6628  005430  6FCE               	movwf	pow@y& (0+255),b
  6629  005432  0E00               	movlw	0
  6630  005434  6FCF               	movwf	(pow@y+1)& (0+255),b
  6631  005436  0E00               	movlw	0
  6632  005438  6FD0               	movwf	(pow@y+2)& (0+255),b
  6633  00543A  0E40               	movlw	64
  6634  00543C  6FD1               	movwf	(pow@y+3)& (0+255),b
  6635  00543E  C0DF  F0CA         	movff	gasSensor_temperature_cmp_coefficient@temp,pow@x
  6636  005442  C0E0  F0CB         	movff	gasSensor_temperature_cmp_coefficient@temp+1,pow@x+1
  6637  005446  C0E1  F0CC         	movff	gasSensor_temperature_cmp_coefficient@temp+2,pow@x+2
  6638  00544A  C0E2  F0CD         	movff	gasSensor_temperature_cmp_coefficient@temp+3,pow@x+3
  6639  00544E  ECE1  F043         	call	_pow	;wreg free
  6640  005452  C0CA  F0E4         	movff	?_pow,_gasSensor_temperature_cmp_coefficient$7082
  6641  005456  C0CB  F0E5         	movff	?_pow+1,_gasSensor_temperature_cmp_coefficient$7082+1
  6642  00545A  C0CC  F0E6         	movff	?_pow+2,_gasSensor_temperature_cmp_coefficient$7082+2
  6643  00545E  C0CD  F0E7         	movff	?_pow+3,_gasSensor_temperature_cmp_coefficient$7082+3
  6644  005462                     
  6645                           ;sensor.c: 209: else coeff = 0.01*pow(temp,2.0f)+ -0.39*temp + 104.4;
  6646  005462  0E14               	movlw	20
  6647  005464  0100               	movlb	0	; () banked
  6648  005466  6F6C               	movwf	___flmul@a& (0+255),b
  6649  005468  0EAE               	movlw	174
  6650  00546A  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  6651  00546C  0EC7               	movlw	199
  6652  00546E  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  6653  005470  0EBE               	movlw	190
  6654  005472  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  6655  005474  C0DF  F068         	movff	gasSensor_temperature_cmp_coefficient@temp,___flmul@b
  6656  005478  C0E0  F069         	movff	gasSensor_temperature_cmp_coefficient@temp+1,___flmul@b+1
  6657  00547C  C0E1  F06A         	movff	gasSensor_temperature_cmp_coefficient@temp+2,___flmul@b+2
  6658  005480  C0E2  F06B         	movff	gasSensor_temperature_cmp_coefficient@temp+3,___flmul@b+3
  6659  005484  ECA7  F02F         	call	___flmul	;wreg free
  6660  005488  C068  F092         	movff	?___flmul,___fladd@a
  6661  00548C  C069  F093         	movff	?___flmul+1,___fladd@a+1
  6662  005490  C06A  F094         	movff	?___flmul+2,___fladd@a+2
  6663  005494  C06B  F095         	movff	?___flmul+3,___fladd@a+3
  6664  005498  0E0A               	movlw	10
  6665  00549A  0100               	movlb	0	; () banked
  6666  00549C  6F6C               	movwf	___flmul@a& (0+255),b
  6667  00549E  0ED7               	movlw	215
  6668  0054A0  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  6669  0054A2  0E23               	movlw	35
  6670  0054A4  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  6671  0054A6  0E3C               	movlw	60
  6672  0054A8  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  6673  0054AA  C0E4  F068         	movff	_gasSensor_temperature_cmp_coefficient$7082,___flmul@b
  6674  0054AE  C0E5  F069         	movff	_gasSensor_temperature_cmp_coefficient$7082+1,___flmul@b+1
  6675  0054B2  C0E6  F06A         	movff	_gasSensor_temperature_cmp_coefficient$7082+2,___flmul@b+2
  6676  0054B6  C0E7  F06B         	movff	_gasSensor_temperature_cmp_coefficient$7082+3,___flmul@b+3
  6677  0054BA  ECA7  F02F         	call	___flmul	;wreg free
  6678  0054BE  C068  F08E         	movff	?___flmul,___fladd@b
  6679  0054C2  C069  F08F         	movff	?___flmul+1,___fladd@b+1
  6680  0054C6  C06A  F090         	movff	?___flmul+2,___fladd@b+2
  6681  0054CA  C06B  F091         	movff	?___flmul+3,___fladd@b+3
  6682  0054CE  EC46  F02D         	call	___fladd	;wreg free
  6683  0054D2  C08E  F0E8         	movff	?___fladd,_gasSensor_temperature_cmp_coefficient$7083
  6684  0054D6  C08F  F0E9         	movff	?___fladd+1,_gasSensor_temperature_cmp_coefficient$7083+1
  6685  0054DA  C090  F0EA         	movff	?___fladd+2,_gasSensor_temperature_cmp_coefficient$7083+2
  6686  0054DE  C091  F0EB         	movff	?___fladd+3,_gasSensor_temperature_cmp_coefficient$7083+3
  6687  0054E2                     
  6688                           ;sensor.c: 209: else coeff = 0.01*pow(temp,2.0f)+ -0.39*temp + 104.4;
  6689  0054E2  C0E8  F08E         	movff	_gasSensor_temperature_cmp_coefficient$7083,___fladd@b
  6690  0054E6  C0E9  F08F         	movff	_gasSensor_temperature_cmp_coefficient$7083+1,___fladd@b+1
  6691  0054EA  C0EA  F090         	movff	_gasSensor_temperature_cmp_coefficient$7083+2,___fladd@b+2
  6692  0054EE  C0EB  F091         	movff	_gasSensor_temperature_cmp_coefficient$7083+3,___fladd@b+3
  6693  0054F2  0ECD               	movlw	205
  6694  0054F4  0100               	movlb	0	; () banked
  6695  0054F6  6F92               	movwf	___fladd@a& (0+255),b
  6696  0054F8  0ECC               	movlw	204
  6697  0054FA  6F93               	movwf	(___fladd@a+1)& (0+255),b
  6698  0054FC  0ED0               	movlw	208
  6699  0054FE  6F94               	movwf	(___fladd@a+2)& (0+255),b
  6700  005500  0E42               	movlw	66
  6701  005502  6F95               	movwf	(___fladd@a+3)& (0+255),b
  6702  005504  EC46  F02D         	call	___fladd	;wreg free
  6703  005508  C08E  F0EC         	movff	?___fladd,gasSensor_temperature_cmp_coefficient@coeff
  6704  00550C  C08F  F0ED         	movff	?___fladd+1,gasSensor_temperature_cmp_coefficient@coeff+1
  6705  005510  C090  F0EE         	movff	?___fladd+2,gasSensor_temperature_cmp_coefficient@coeff+2
  6706  005514  C091  F0EF         	movff	?___fladd+3,gasSensor_temperature_cmp_coefficient@coeff+3
  6707  005518  EF9E  F02A         	goto	l18458
  6708  00551C                     l18456:
  6709  00551C  0100               	movlb	0	; () banked
  6710  00551E  51E3               	movf	gasSensor_temperature_cmp_coefficient@chNum& (0+255),w,b
  6711                           
  6712                           ; Switch size 1, requested type "simple"
  6713                           ; Number of cases is 3, Range of values is 0 to 2
  6714                           ; switch strategies available:
  6715                           ; Name         Instructions Cycles
  6716                           ; simple_byte           10     6 (average)
  6717                           ;	Chosen strategy is simple_byte
  6718  005520  0A00               	xorlw	0	; case 0
  6719  005522  B4D8               	btfsc	status,2,c
  6720  005524  EFA4  F027         	goto	l18404
  6721  005528  0A01               	xorlw	1	; case 1
  6722  00552A  B4D8               	btfsc	status,2,c
  6723  00552C  EF6C  F029         	goto	l18434
  6724  005530  0A03               	xorlw	3	; case 2
  6725  005532  B4D8               	btfsc	status,2,c
  6726  005534  EFD9  F029         	goto	l18442
  6727  005538  EF9E  F02A         	goto	l18458
  6728  00553C                     l18458:
  6729                           
  6730                           ;sensor.c: 212: return coeff / 100.0f;
  6731  00553C  C0EC  F0A6         	movff	gasSensor_temperature_cmp_coefficient@coeff,___fldiv@b
  6732  005540  C0ED  F0A7         	movff	gasSensor_temperature_cmp_coefficient@coeff+1,___fldiv@b+1
  6733  005544  C0EE  F0A8         	movff	gasSensor_temperature_cmp_coefficient@coeff+2,___fldiv@b+2
  6734  005548  C0EF  F0A9         	movff	gasSensor_temperature_cmp_coefficient@coeff+3,___fldiv@b+3
  6735  00554C  0E00               	movlw	0
  6736  00554E  0100               	movlb	0	; () banked
  6737  005550  6FAA               	movwf	___fldiv@a& (0+255),b
  6738  005552  0E00               	movlw	0
  6739  005554  6FAB               	movwf	(___fldiv@a+1)& (0+255),b
  6740  005556  0EC8               	movlw	200
  6741  005558  6FAC               	movwf	(___fldiv@a+2)& (0+255),b
  6742  00555A  0E42               	movlw	66
  6743  00555C  6FAD               	movwf	(___fldiv@a+3)& (0+255),b
  6744  00555E  ECCB  F033         	call	___fldiv	;wreg free
  6745  005562  C0A6  F0DF         	movff	?___fldiv,?_gasSensor_temperature_cmp_coefficient
  6746  005566  C0A7  F0E0         	movff	?___fldiv+1,?_gasSensor_temperature_cmp_coefficient+1
  6747  00556A  C0A8  F0E1         	movff	?___fldiv+2,?_gasSensor_temperature_cmp_coefficient+2
  6748  00556E  C0A9  F0E2         	movff	?___fldiv+3,?_gasSensor_temperature_cmp_coefficient+3
  6749  005572  0012               	return		;funcret
  6750  005574                     __end_of_gasSensor_temperature_cmp_coefficient:
  6751                           	callstack 0
  6752                           
  6753 ;; *************** function _pow *****************
  6754 ;; Defined at:
  6755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\pow.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  x               4  106[BANK0 ] float 
  6758 ;;  y               4  110[BANK0 ] float 
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;  yi              4  123[BANK0 ] unsigned long 
  6761 ;;  sign            1  122[BANK0 ] unsigned char 
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  4  106[BANK0 ] unsigned char 
  6764 ;; Registers used:
  6765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6771 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6772 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6774 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6775 ;;Total ram usage:       21 bytes
  6776 ;; Hardware stack levels used: 1
  6777 ;; Hardware stack levels required when called: 7
  6778 ;; This function calls:
  6779 ;;		___fleq
  6780 ;;		___flge
  6781 ;;		___flmul
  6782 ;;		___flneg
  6783 ;;		___fltol
  6784 ;;		___xxtofl
  6785 ;;		_exp
  6786 ;;		_log
  6787 ;; This function is called by:
  6788 ;;		_gasSensor_temperature_cmp_coefficient
  6789 ;; This function uses a non-reentrant model
  6790 ;;
  6791                           
  6792                           	psect	text20
  6793  0087C2                     __ptext20:
  6794                           	callstack 0
  6795  0087C2                     _pow:
  6796                           	callstack 20
  6797  0087C2  0E00               	movlw	0
  6798  0087C4  0100               	movlb	0	; () banked
  6799  0087C6  6FDA               	movwf	pow@sign& (0+255),b
  6800  0087C8                     
  6801                           ; BSR set to: 0
  6802  0087C8  C0CA  F035         	movff	pow@x,___fleq@ff1
  6803  0087CC  C0CB  F036         	movff	pow@x+1,___fleq@ff1+1
  6804  0087D0  C0CC  F037         	movff	pow@x+2,___fleq@ff1+2
  6805  0087D4  C0CD  F038         	movff	pow@x+3,___fleq@ff1+3
  6806  0087D8  0E00               	movlw	0
  6807  0087DA  6E39               	movwf	___fleq@ff2^0,c
  6808  0087DC  0E00               	movlw	0
  6809  0087DE  6E3A               	movwf	(___fleq@ff2+1)^0,c
  6810  0087E0  0E00               	movlw	0
  6811  0087E2  6E3B               	movwf	(___fleq@ff2+2)^0,c
  6812  0087E4  0E00               	movlw	0
  6813  0087E6  6E3C               	movwf	(___fleq@ff2+3)^0,c
  6814  0087E8  EC94  F067         	call	___fleq	;wreg free
  6815  0087EC  A0D8               	btfss	status,0,c
  6816  0087EE  EFFB  F043         	goto	u19431
  6817  0087F2  EFFD  F043         	goto	u19430
  6818  0087F6                     u19431:
  6819  0087F6  EF26  F044         	goto	l17924
  6820  0087FA                     u19430:
  6821  0087FA  0E00               	movlw	0
  6822  0087FC  6E0F               	movwf	___flge@ff1^0,c
  6823  0087FE  0E00               	movlw	0
  6824  008800  6E10               	movwf	(___flge@ff1+1)^0,c
  6825  008802  0E00               	movlw	0
  6826  008804  6E11               	movwf	(___flge@ff1+2)^0,c
  6827  008806  0E00               	movlw	0
  6828  008808  6E12               	movwf	(___flge@ff1+3)^0,c
  6829  00880A  C0CE  F013         	movff	pow@y,___flge@ff2
  6830  00880E  C0CF  F014         	movff	pow@y+1,___flge@ff2+1
  6831  008812  C0D0  F015         	movff	pow@y+2,___flge@ff2+2
  6832  008816  C0D1  F016         	movff	pow@y+3,___flge@ff2+3
  6833  00881A  ECE7  F05B         	call	___flge	;wreg free
  6834  00881E  A0D8               	btfss	status,0,c
  6835  008820  EF14  F044         	goto	u19441
  6836  008824  EF16  F044         	goto	u19440
  6837  008828                     u19441:
  6838  008828  EF1B  F044         	goto	l3312
  6839  00882C                     u19440:
  6840  00882C  0E00               	movlw	0
  6841  00882E  0101               	movlb	1	; () banked
  6842  008830  6F5B               	movwf	(_errno+1)& (0+255),b
  6843  008832  0E21               	movlw	33
  6844  008834  6F5A               	movwf	_errno& (0+255),b
  6845  008836                     l3312:
  6846  008836  0E00               	movlw	0
  6847  008838  0100               	movlb	0	; () banked
  6848  00883A  6FCA               	movwf	?_pow& (0+255),b
  6849  00883C  0E00               	movlw	0
  6850  00883E  6FCB               	movwf	(?_pow+1)& (0+255),b
  6851  008840  0E00               	movlw	0
  6852  008842  6FCC               	movwf	(?_pow+2)& (0+255),b
  6853  008844  0E00               	movlw	0
  6854  008846  6FCD               	movwf	(?_pow+3)& (0+255),b
  6855  008848  EF11  F045         	goto	l3313
  6856  00884C                     l17924:
  6857  00884C  C0CE  F035         	movff	pow@y,___fleq@ff1
  6858  008850  C0CF  F036         	movff	pow@y+1,___fleq@ff1+1
  6859  008854  C0D0  F037         	movff	pow@y+2,___fleq@ff1+2
  6860  008858  C0D1  F038         	movff	pow@y+3,___fleq@ff1+3
  6861  00885C  0E00               	movlw	0
  6862  00885E  6E39               	movwf	___fleq@ff2^0,c
  6863  008860  0E00               	movlw	0
  6864  008862  6E3A               	movwf	(___fleq@ff2+1)^0,c
  6865  008864  0E00               	movlw	0
  6866  008866  6E3B               	movwf	(___fleq@ff2+2)^0,c
  6867  008868  0E00               	movlw	0
  6868  00886A  6E3C               	movwf	(___fleq@ff2+3)^0,c
  6869  00886C  EC94  F067         	call	___fleq	;wreg free
  6870  008870  A0D8               	btfss	status,0,c
  6871  008872  EF3D  F044         	goto	u19451
  6872  008876  EF3F  F044         	goto	u19450
  6873  00887A                     u19451:
  6874  00887A  EF4A  F044         	goto	l17930
  6875  00887E                     u19450:
  6876  00887E  0E00               	movlw	0
  6877  008880  0100               	movlb	0	; () banked
  6878  008882  6FCA               	movwf	?_pow& (0+255),b
  6879  008884  0E00               	movlw	0
  6880  008886  6FCB               	movwf	(?_pow+1)& (0+255),b
  6881  008888  0E80               	movlw	128
  6882  00888A  6FCC               	movwf	(?_pow+2)& (0+255),b
  6883  00888C  0E3F               	movlw	63
  6884  00888E  6FCD               	movwf	(?_pow+3)& (0+255),b
  6885  008890  EF11  F045         	goto	l3313
  6886  008894                     l17930:
  6887  008894  0100               	movlb	0	; () banked
  6888  008896  BFCD               	btfsc	(pow@x+3)& (0+255),7,b
  6889  008898  EF52  F044         	goto	u19460
  6890  00889C  EF50  F044         	goto	u19461
  6891  0088A0                     u19461:
  6892  0088A0  EFAE  F044         	goto	l17942
  6893  0088A4                     u19460:
  6894  0088A4                     
  6895                           ; BSR set to: 0
  6896  0088A4  C0CE  F01D         	movff	pow@y,___fltol@f1
  6897  0088A8  C0CF  F01E         	movff	pow@y+1,___fltol@f1+1
  6898  0088AC  C0D0  F01F         	movff	pow@y+2,___fltol@f1+2
  6899  0088B0  C0D1  F020         	movff	pow@y+3,___fltol@f1+3
  6900  0088B4  ECE2  F05A         	call	___fltol	;wreg free
  6901  0088B8  C01D  F0DB         	movff	?___fltol,pow@yi
  6902  0088BC  C01E  F0DC         	movff	?___fltol+1,pow@yi+1
  6903  0088C0  C01F  F0DD         	movff	?___fltol+2,pow@yi+2
  6904  0088C4  C020  F0DE         	movff	?___fltol+3,pow@yi+3
  6905  0088C8  C0DB  F027         	movff	pow@yi,___xxtofl@val
  6906  0088CC  C0DC  F028         	movff	pow@yi+1,___xxtofl@val+1
  6907  0088D0  C0DD  F029         	movff	pow@yi+2,___xxtofl@val+2
  6908  0088D4  C0DE  F02A         	movff	pow@yi+3,___xxtofl@val+3
  6909  0088D8  0E00               	movlw	0
  6910  0088DA  ECF6  F048         	call	___xxtofl
  6911  0088DE  C027  F035         	movff	?___xxtofl,___fleq@ff1
  6912  0088E2  C028  F036         	movff	?___xxtofl+1,___fleq@ff1+1
  6913  0088E6  C029  F037         	movff	?___xxtofl+2,___fleq@ff1+2
  6914  0088EA  C02A  F038         	movff	?___xxtofl+3,___fleq@ff1+3
  6915  0088EE  C0CE  F039         	movff	pow@y,___fleq@ff2
  6916  0088F2  C0CF  F03A         	movff	pow@y+1,___fleq@ff2+1
  6917  0088F6  C0D0  F03B         	movff	pow@y+2,___fleq@ff2+2
  6918  0088FA  C0D1  F03C         	movff	pow@y+3,___fleq@ff2+3
  6919  0088FE  EC94  F067         	call	___fleq	;wreg free
  6920  008902  B0D8               	btfsc	status,0,c
  6921  008904  EF86  F044         	goto	u19471
  6922  008908  EF88  F044         	goto	u19470
  6923  00890C                     u19471:
  6924  00890C  EF98  F044         	goto	l17938
  6925  008910                     u19470:
  6926  008910  0E00               	movlw	0
  6927  008912  0101               	movlb	1	; () banked
  6928  008914  6F5B               	movwf	(_errno+1)& (0+255),b
  6929  008916  0E21               	movlw	33
  6930  008918  6F5A               	movwf	_errno& (0+255),b
  6931  00891A  0E00               	movlw	0
  6932  00891C  0100               	movlb	0	; () banked
  6933  00891E  6FCA               	movwf	?_pow& (0+255),b
  6934  008920  0E00               	movlw	0
  6935  008922  6FCB               	movwf	(?_pow+1)& (0+255),b
  6936  008924  0E00               	movlw	0
  6937  008926  6FCC               	movwf	(?_pow+2)& (0+255),b
  6938  008928  0E00               	movlw	0
  6939  00892A  6FCD               	movwf	(?_pow+3)& (0+255),b
  6940  00892C  EF11  F045         	goto	l3313
  6941  008930                     l17938:
  6942  008930  0100               	movlb	0	; () banked
  6943  008932  51DB               	movf	pow@yi& (0+255),w,b
  6944  008934  0B01               	andlw	1
  6945  008936  6FDA               	movwf	pow@sign& (0+255),b
  6946  008938                     
  6947                           ; BSR set to: 0
  6948  008938  C0CA  F00F         	movff	pow@x,___flneg@f1
  6949  00893C  C0CB  F010         	movff	pow@x+1,___flneg@f1+1
  6950  008940  C0CC  F011         	movff	pow@x+2,___flneg@f1+2
  6951  008944  C0CD  F012         	movff	pow@x+3,___flneg@f1+3
  6952  008948  ECB6  F075         	call	___flneg	;wreg free
  6953  00894C  C00F  F0CA         	movff	?___flneg,pow@x
  6954  008950  C010  F0CB         	movff	?___flneg+1,pow@x+1
  6955  008954  C011  F0CC         	movff	?___flneg+2,pow@x+2
  6956  008958  C012  F0CD         	movff	?___flneg+3,pow@x+3
  6957  00895C                     l17942:
  6958  00895C  C0CA  F0AE         	movff	pow@x,log@x
  6959  008960  C0CB  F0AF         	movff	pow@x+1,log@x+1
  6960  008964  C0CC  F0B0         	movff	pow@x+2,log@x+2
  6961  008968  C0CD  F0B1         	movff	pow@x+3,log@x+3
  6962  00896C  ECA6  F04A         	call	_log	;wreg free
  6963  008970  C0AE  F0D2         	movff	?_log,_pow$7091
  6964  008974  C0AF  F0D3         	movff	?_log+1,_pow$7091+1
  6965  008978  C0B0  F0D4         	movff	?_log+2,_pow$7091+2
  6966  00897C  C0B1  F0D5         	movff	?_log+3,_pow$7091+3
  6967  008980  C0D2  F068         	movff	_pow$7091,___flmul@b
  6968  008984  C0D3  F069         	movff	_pow$7091+1,___flmul@b+1
  6969  008988  C0D4  F06A         	movff	_pow$7091+2,___flmul@b+2
  6970  00898C  C0D5  F06B         	movff	_pow$7091+3,___flmul@b+3
  6971  008990  C0CE  F06C         	movff	pow@y,___flmul@a
  6972  008994  C0CF  F06D         	movff	pow@y+1,___flmul@a+1
  6973  008998  C0D0  F06E         	movff	pow@y+2,___flmul@a+2
  6974  00899C  C0D1  F06F         	movff	pow@y+3,___flmul@a+3
  6975  0089A0  ECA7  F02F         	call	___flmul	;wreg free
  6976  0089A4  C068  F0D6         	movff	?___flmul,_pow$7092
  6977  0089A8  C069  F0D7         	movff	?___flmul+1,_pow$7092+1
  6978  0089AC  C06A  F0D8         	movff	?___flmul+2,_pow$7092+2
  6979  0089B0  C06B  F0D9         	movff	?___flmul+3,_pow$7092+3
  6980  0089B4  C0D6  F0BF         	movff	_pow$7092,exp@x
  6981  0089B8  C0D7  F0C0         	movff	_pow$7092+1,exp@x+1
  6982  0089BC  C0D8  F0C1         	movff	_pow$7092+2,exp@x+2
  6983  0089C0  C0D9  F0C2         	movff	_pow$7092+3,exp@x+3
  6984  0089C4  EC09  F03C         	call	_exp	;wreg free
  6985  0089C8  C0BF  F0CA         	movff	?_exp,pow@x
  6986  0089CC  C0C0  F0CB         	movff	?_exp+1,pow@x+1
  6987  0089D0  C0C1  F0CC         	movff	?_exp+2,pow@x+2
  6988  0089D4  C0C2  F0CD         	movff	?_exp+3,pow@x+3
  6989  0089D8  0100               	movlb	0	; () banked
  6990  0089DA  51DA               	movf	pow@sign& (0+255),w,b
  6991  0089DC  B4D8               	btfsc	status,2,c
  6992  0089DE  EFF3  F044         	goto	u19481
  6993  0089E2  EFF5  F044         	goto	u19480
  6994  0089E6                     u19481:
  6995  0089E6  EF09  F045         	goto	l3317
  6996  0089EA                     u19480:
  6997  0089EA                     
  6998                           ; BSR set to: 0
  6999  0089EA  C0CA  F00F         	movff	pow@x,___flneg@f1
  7000  0089EE  C0CB  F010         	movff	pow@x+1,___flneg@f1+1
  7001  0089F2  C0CC  F011         	movff	pow@x+2,___flneg@f1+2
  7002  0089F6  C0CD  F012         	movff	pow@x+3,___flneg@f1+3
  7003  0089FA  ECB6  F075         	call	___flneg	;wreg free
  7004  0089FE  C00F  F0CA         	movff	?___flneg,?_pow
  7005  008A02  C010  F0CB         	movff	?___flneg+1,?_pow+1
  7006  008A06  C011  F0CC         	movff	?___flneg+2,?_pow+2
  7007  008A0A  C012  F0CD         	movff	?___flneg+3,?_pow+3
  7008  008A0E  EF11  F045         	goto	l3313
  7009  008A12                     l3317:
  7010                           
  7011                           ; BSR set to: 0
  7012  008A12  C0CA  F0CA         	movff	pow@x,?_pow
  7013  008A16  C0CB  F0CB         	movff	pow@x+1,?_pow+1
  7014  008A1A  C0CC  F0CC         	movff	pow@x+2,?_pow+2
  7015  008A1E  C0CD  F0CD         	movff	pow@x+3,?_pow+3
  7016  008A22                     l3313:
  7017  008A22  0012               	return		;funcret
  7018  008A24                     __end_of_pow:
  7019                           	callstack 0
  7020                           
  7021 ;; *************** function _log *****************
  7022 ;; Defined at:
  7023 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\log.c"
  7024 ;; Parameters:    Size  Location     Type
  7025 ;;  x               4   78[BANK0 ] unsigned char 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;  exponent        2   82[BANK0 ] int 
  7028 ;; Return value:  Size  Location     Type
  7029 ;;                  4   78[BANK0 ] int 
  7030 ;; Registers used:
  7031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7032 ;; Tracked objects:
  7033 ;;		On entry : 0/0
  7034 ;;		On exit  : 0/0
  7035 ;;		Unchanged: 0/0
  7036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7037 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7038 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7040 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7041 ;;Total ram usage:        6 bytes
  7042 ;; Hardware stack levels used: 1
  7043 ;; Hardware stack levels required when called: 5
  7044 ;; This function calls:
  7045 ;;		___fladd
  7046 ;;		___fleq
  7047 ;;		___flmul
  7048 ;;		___xxtofl
  7049 ;;		_eval_poly
  7050 ;;		_frexp
  7051 ;; This function is called by:
  7052 ;;		_pow
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           	psect	text21
  7057  00954C                     __ptext21:
  7058                           	callstack 0
  7059  00954C                     _log:
  7060                           	callstack 21
  7061  00954C  0100               	movlb	0	; () banked
  7062  00954E  BFB1               	btfsc	(log@x+3)& (0+255),7,b
  7063  009550  EFAE  F04A         	goto	u18730
  7064  009554  EFAC  F04A         	goto	u18731
  7065  009558                     u18731:
  7066  009558  EFBE  F04A         	goto	l17300
  7067  00955C                     u18730:
  7068  00955C                     
  7069                           ; BSR set to: 0
  7070  00955C  0E00               	movlw	0
  7071  00955E  0101               	movlb	1	; () banked
  7072  009560  6F5B               	movwf	(_errno+1)& (0+255),b
  7073  009562  0E21               	movlw	33
  7074  009564  6F5A               	movwf	_errno& (0+255),b
  7075  009566  0E00               	movlw	0
  7076  009568  0100               	movlb	0	; () banked
  7077  00956A  6FAE               	movwf	?_log& (0+255),b
  7078  00956C  0E00               	movlw	0
  7079  00956E  6FAF               	movwf	(?_log+1)& (0+255),b
  7080  009570  0E00               	movlw	0
  7081  009572  6FB0               	movwf	(?_log+2)& (0+255),b
  7082  009574  0E00               	movlw	0
  7083  009576  6FB1               	movwf	(?_log+3)& (0+255),b
  7084  009578  EF7A  F04B         	goto	l3354
  7085  00957C                     l17300:
  7086                           
  7087                           ; BSR set to: 0
  7088  00957C  C0AE  F035         	movff	log@x,___fleq@ff1
  7089  009580  C0AF  F036         	movff	log@x+1,___fleq@ff1+1
  7090  009584  C0B0  F037         	movff	log@x+2,___fleq@ff1+2
  7091  009588  C0B1  F038         	movff	log@x+3,___fleq@ff1+3
  7092  00958C  0E00               	movlw	0
  7093  00958E  6E39               	movwf	___fleq@ff2^0,c
  7094  009590  0E00               	movlw	0
  7095  009592  6E3A               	movwf	(___fleq@ff2+1)^0,c
  7096  009594  0E00               	movlw	0
  7097  009596  6E3B               	movwf	(___fleq@ff2+2)^0,c
  7098  009598  0E00               	movlw	0
  7099  00959A  6E3C               	movwf	(___fleq@ff2+3)^0,c
  7100  00959C  EC94  F067         	call	___fleq	;wreg free
  7101  0095A0  A0D8               	btfss	status,0,c
  7102  0095A2  EFD5  F04A         	goto	u18741
  7103  0095A6  EFD7  F04A         	goto	u18740
  7104  0095AA                     u18741:
  7105  0095AA  EFE7  F04A         	goto	l17306
  7106  0095AE                     u18740:
  7107  0095AE  0E00               	movlw	0
  7108  0095B0  0101               	movlb	1	; () banked
  7109  0095B2  6F5B               	movwf	(_errno+1)& (0+255),b
  7110  0095B4  0E22               	movlw	34
  7111  0095B6  6F5A               	movwf	_errno& (0+255),b
  7112  0095B8  0E00               	movlw	0
  7113  0095BA  0100               	movlb	0	; () banked
  7114  0095BC  6FAE               	movwf	?_log& (0+255),b
  7115  0095BE  0E00               	movlw	0
  7116  0095C0  6FAF               	movwf	(?_log+1)& (0+255),b
  7117  0095C2  0E00               	movlw	0
  7118  0095C4  6FB0               	movwf	(?_log+2)& (0+255),b
  7119  0095C6  0E00               	movlw	0
  7120  0095C8  6FB1               	movwf	(?_log+3)& (0+255),b
  7121  0095CA  EF7A  F04B         	goto	l3354
  7122  0095CE                     l17306:
  7123  0095CE  0E00               	movlw	0
  7124  0095D0  0100               	movlb	0	; () banked
  7125  0095D2  6F6C               	movwf	___flmul@a& (0+255),b
  7126  0095D4  0E00               	movlw	0
  7127  0095D6  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  7128  0095D8  0E00               	movlw	0
  7129  0095DA  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  7130  0095DC  0E40               	movlw	64
  7131  0095DE  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  7132  0095E0  0EB2               	movlw	low log@exponent
  7133  0095E2  6F64               	movwf	frexp@eptr& (0+255),b
  7134  0095E4  0E00               	movlw	high log@exponent
  7135  0095E6  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  7136  0095E8  C0AE  F060         	movff	log@x,frexp@value
  7137  0095EC  C0AF  F061         	movff	log@x+1,frexp@value+1
  7138  0095F0  C0B0  F062         	movff	log@x+2,frexp@value+2
  7139  0095F4  C0B1  F063         	movff	log@x+3,frexp@value+3
  7140  0095F8  ECC9  F061         	call	_frexp	;wreg free
  7141  0095FC  C060  F068         	movff	?_frexp,___flmul@b
  7142  009600  C061  F069         	movff	?_frexp+1,___flmul@b+1
  7143  009604  C062  F06A         	movff	?_frexp+2,___flmul@b+2
  7144  009608  C063  F06B         	movff	?_frexp+3,___flmul@b+3
  7145  00960C  ECA7  F02F         	call	___flmul	;wreg free
  7146  009610  C068  F08E         	movff	?___flmul,___fladd@b
  7147  009614  C069  F08F         	movff	?___flmul+1,___fladd@b+1
  7148  009618  C06A  F090         	movff	?___flmul+2,___fladd@b+2
  7149  00961C  C06B  F091         	movff	?___flmul+3,___fladd@b+3
  7150  009620  0E00               	movlw	0
  7151  009622  0100               	movlb	0	; () banked
  7152  009624  6F92               	movwf	___fladd@a& (0+255),b
  7153  009626  0E00               	movlw	0
  7154  009628  6F93               	movwf	(___fladd@a+1)& (0+255),b
  7155  00962A  0E80               	movlw	128
  7156  00962C  6F94               	movwf	(___fladd@a+2)& (0+255),b
  7157  00962E  0EBF               	movlw	191
  7158  009630  6F95               	movwf	(___fladd@a+3)& (0+255),b
  7159  009632  EC46  F02D         	call	___fladd	;wreg free
  7160  009636  C08E  F0AE         	movff	?___fladd,log@x
  7161  00963A  C08F  F0AF         	movff	?___fladd+1,log@x+1
  7162  00963E  C090  F0B0         	movff	?___fladd+2,log@x+2
  7163  009642  C091  F0B1         	movff	?___fladd+3,log@x+3
  7164  009646  0100               	movlb	0	; () banked
  7165  009648  07B2               	decf	log@exponent& (0+255),f,b
  7166  00964A  A0D8               	btfss	status,0,c
  7167  00964C  07B3               	decf	(log@exponent+1)& (0+255),f,b
  7168  00964E                     
  7169                           ; BSR set to: 0
  7170  00964E  C0AE  F09E         	movff	log@x,eval_poly@x
  7171  009652  C0AF  F09F         	movff	log@x+1,eval_poly@x+1
  7172  009656  C0B0  F0A0         	movff	log@x+2,eval_poly@x+2
  7173  00965A  C0B1  F0A1         	movff	log@x+3,eval_poly@x+3
  7174  00965E  0E0E               	movlw	low log@coeff
  7175  009660  6FA2               	movwf	eval_poly@d& (0+255),b
  7176  009662  0E23               	movlw	high log@coeff
  7177  009664  6FA3               	movwf	(eval_poly@d+1)& (0+255),b
  7178  009666  0E00               	movlw	0
  7179  009668  6FA5               	movwf	(eval_poly@n+1)& (0+255),b
  7180  00966A  0E08               	movlw	8
  7181  00966C  6FA4               	movwf	eval_poly@n& (0+255),b
  7182  00966E  EC65  F05B         	call	_eval_poly	;wreg free
  7183  009672  C09E  F0AE         	movff	?_eval_poly,log@x
  7184  009676  C09F  F0AF         	movff	?_eval_poly+1,log@x+1
  7185  00967A  C0A0  F0B0         	movff	?_eval_poly+2,log@x+2
  7186  00967E  C0A1  F0B1         	movff	?_eval_poly+3,log@x+3
  7187  009682  0E18               	movlw	24
  7188  009684  0100               	movlb	0	; () banked
  7189  009686  6F6C               	movwf	___flmul@a& (0+255),b
  7190  009688  0E72               	movlw	114
  7191  00968A  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  7192  00968C  0E31               	movlw	49
  7193  00968E  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  7194  009690  0E3F               	movlw	63
  7195  009692  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  7196  009694  C0B2  F027         	movff	log@exponent,___xxtofl@val
  7197  009698  C0B3  F028         	movff	log@exponent+1,___xxtofl@val+1
  7198  00969C  0E00               	movlw	0
  7199  00969E  BE28               	btfsc	(___xxtofl@val+1)^0,7,c
  7200  0096A0  0EFF               	movlw	-1
  7201  0096A2  6E29               	movwf	(___xxtofl@val+2)^0,c
  7202  0096A4  6E2A               	movwf	(___xxtofl@val+3)^0,c
  7203  0096A6  0E01               	movlw	1
  7204  0096A8  ECF6  F048         	call	___xxtofl
  7205  0096AC  C027  F068         	movff	?___xxtofl,___flmul@b
  7206  0096B0  C028  F069         	movff	?___xxtofl+1,___flmul@b+1
  7207  0096B4  C029  F06A         	movff	?___xxtofl+2,___flmul@b+2
  7208  0096B8  C02A  F06B         	movff	?___xxtofl+3,___flmul@b+3
  7209  0096BC  ECA7  F02F         	call	___flmul	;wreg free
  7210  0096C0  C068  F08E         	movff	?___flmul,___fladd@b
  7211  0096C4  C069  F08F         	movff	?___flmul+1,___fladd@b+1
  7212  0096C8  C06A  F090         	movff	?___flmul+2,___fladd@b+2
  7213  0096CC  C06B  F091         	movff	?___flmul+3,___fladd@b+3
  7214  0096D0  C0AE  F092         	movff	log@x,___fladd@a
  7215  0096D4  C0AF  F093         	movff	log@x+1,___fladd@a+1
  7216  0096D8  C0B0  F094         	movff	log@x+2,___fladd@a+2
  7217  0096DC  C0B1  F095         	movff	log@x+3,___fladd@a+3
  7218  0096E0  EC46  F02D         	call	___fladd	;wreg free
  7219  0096E4  C08E  F0AE         	movff	?___fladd,?_log
  7220  0096E8  C08F  F0AF         	movff	?___fladd+1,?_log+1
  7221  0096EC  C090  F0B0         	movff	?___fladd+2,?_log+2
  7222  0096F0  C091  F0B1         	movff	?___fladd+3,?_log+3
  7223  0096F4                     l3354:
  7224  0096F4  0012               	return		;funcret
  7225  0096F6                     __end_of_log:
  7226                           	callstack 0
  7227                           
  7228 ;; *************** function _exp *****************
  7229 ;; Defined at:
  7230 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\exp.c"
  7231 ;; Parameters:    Size  Location     Type
  7232 ;;  x               4   95[BANK0 ] int 
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  exponent        2  103[BANK0 ] int 
  7235 ;;  sign            1  105[BANK0 ] unsigned char 
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  4   95[BANK0 ] unsigned char 
  7238 ;; Registers used:
  7239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7245 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7246 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7248 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7249 ;;Total ram usage:       11 bytes
  7250 ;; Hardware stack levels used: 1
  7251 ;; Hardware stack levels required when called: 6
  7252 ;; This function calls:
  7253 ;;		___fldiv
  7254 ;;		___fleq
  7255 ;;		___flge
  7256 ;;		___flmul
  7257 ;;		___flneg
  7258 ;;		___flsub
  7259 ;;		___fltol
  7260 ;;		___xxtofl
  7261 ;;		_eval_poly
  7262 ;;		_floor
  7263 ;;		_ldexp
  7264 ;; This function is called by:
  7265 ;;		_pow
  7266 ;; This function uses a non-reentrant model
  7267 ;;
  7268                           
  7269                           	psect	text22
  7270  007812                     __ptext22:
  7271                           	callstack 0
  7272  007812                     _exp:
  7273                           	callstack 20
  7274  007812  C0BF  F035         	movff	exp@x,___fleq@ff1
  7275  007816  C0C0  F036         	movff	exp@x+1,___fleq@ff1+1
  7276  00781A  C0C1  F037         	movff	exp@x+2,___fleq@ff1+2
  7277  00781E  C0C2  F038         	movff	exp@x+3,___fleq@ff1+3
  7278  007822  0E00               	movlw	0
  7279  007824  6E39               	movwf	___fleq@ff2^0,c
  7280  007826  0E00               	movlw	0
  7281  007828  6E3A               	movwf	(___fleq@ff2+1)^0,c
  7282  00782A  0E00               	movlw	0
  7283  00782C  6E3B               	movwf	(___fleq@ff2+2)^0,c
  7284  00782E  0E00               	movlw	0
  7285  007830  6E3C               	movwf	(___fleq@ff2+3)^0,c
  7286  007832  EC94  F067         	call	___fleq	;wreg free
  7287  007836  A0D8               	btfss	status,0,c
  7288  007838  EF20  F03C         	goto	u18751
  7289  00783C  EF22  F03C         	goto	u18750
  7290  007840                     u18751:
  7291  007840  EF2D  F03C         	goto	l17322
  7292  007844                     u18750:
  7293  007844  0E00               	movlw	0
  7294  007846  0100               	movlb	0	; () banked
  7295  007848  6FBF               	movwf	?_exp& (0+255),b
  7296  00784A  0E00               	movlw	0
  7297  00784C  6FC0               	movwf	(?_exp+1)& (0+255),b
  7298  00784E  0E80               	movlw	128
  7299  007850  6FC1               	movwf	(?_exp+2)& (0+255),b
  7300  007852  0E3F               	movlw	63
  7301  007854  6FC2               	movwf	(?_exp+3)& (0+255),b
  7302  007856  EF80  F03D         	goto	l3331
  7303  00785A                     l17322:
  7304  00785A  0E18               	movlw	24
  7305  00785C  6E0F               	movwf	___flge@ff1^0,c
  7306  00785E  0E72               	movlw	114
  7307  007860  6E10               	movwf	(___flge@ff1+1)^0,c
  7308  007862  0E31               	movlw	49
  7309  007864  6E11               	movwf	(___flge@ff1+2)^0,c
  7310  007866  0E44               	movlw	68
  7311  007868  6E12               	movwf	(___flge@ff1+3)^0,c
  7312  00786A  C0BF  F013         	movff	exp@x,___flge@ff2
  7313  00786E  C0C0  F014         	movff	exp@x+1,___flge@ff2+1
  7314  007872  C0C1  F015         	movff	exp@x+2,___flge@ff2+2
  7315  007876  C0C2  F016         	movff	exp@x+3,___flge@ff2+3
  7316  00787A  ECE7  F05B         	call	___flge	;wreg free
  7317  00787E  B0D8               	btfsc	status,0,c
  7318  007880  EF44  F03C         	goto	u18761
  7319  007884  EF46  F03C         	goto	u18760
  7320  007888                     u18761:
  7321  007888  EF56  F03C         	goto	l17328
  7322  00788C                     u18760:
  7323  00788C  0E00               	movlw	0
  7324  00788E  0101               	movlb	1	; () banked
  7325  007890  6F5B               	movwf	(_errno+1)& (0+255),b
  7326  007892  0E22               	movlw	34
  7327  007894  6F5A               	movwf	_errno& (0+255),b
  7328  007896  0EFF               	movlw	255
  7329  007898  0100               	movlb	0	; () banked
  7330  00789A  6FBF               	movwf	?_exp& (0+255),b
  7331  00789C  0EFF               	movlw	255
  7332  00789E  6FC0               	movwf	(?_exp+1)& (0+255),b
  7333  0078A0  0E7F               	movlw	127
  7334  0078A2  6FC1               	movwf	(?_exp+2)& (0+255),b
  7335  0078A4  0E7F               	movlw	127
  7336  0078A6  6FC2               	movwf	(?_exp+3)& (0+255),b
  7337  0078A8  EF80  F03D         	goto	l3331
  7338  0078AC                     l17328:
  7339  0078AC  C0BF  F00F         	movff	exp@x,___flge@ff1
  7340  0078B0  C0C0  F010         	movff	exp@x+1,___flge@ff1+1
  7341  0078B4  C0C1  F011         	movff	exp@x+2,___flge@ff1+2
  7342  0078B8  C0C2  F012         	movff	exp@x+3,___flge@ff1+3
  7343  0078BC  0E87               	movlw	135
  7344  0078BE  6E13               	movwf	___flge@ff2^0,c
  7345  0078C0  0E48               	movlw	72
  7346  0078C2  6E14               	movwf	(___flge@ff2+1)^0,c
  7347  0078C4  0E3A               	movlw	58
  7348  0078C6  6E15               	movwf	(___flge@ff2+2)^0,c
  7349  0078C8  0EC4               	movlw	196
  7350  0078CA  6E16               	movwf	(___flge@ff2+3)^0,c
  7351  0078CC  ECE7  F05B         	call	___flge	;wreg free
  7352  0078D0  B0D8               	btfsc	status,0,c
  7353  0078D2  EF6D  F03C         	goto	u18771
  7354  0078D6  EF6F  F03C         	goto	u18770
  7355  0078DA                     u18771:
  7356  0078DA  EF7F  F03C         	goto	l17334
  7357  0078DE                     u18770:
  7358  0078DE  0E00               	movlw	0
  7359  0078E0  0101               	movlb	1	; () banked
  7360  0078E2  6F5B               	movwf	(_errno+1)& (0+255),b
  7361  0078E4  0E22               	movlw	34
  7362  0078E6  6F5A               	movwf	_errno& (0+255),b
  7363  0078E8  0E00               	movlw	0
  7364  0078EA  0100               	movlb	0	; () banked
  7365  0078EC  6FBF               	movwf	?_exp& (0+255),b
  7366  0078EE  0E00               	movlw	0
  7367  0078F0  6FC0               	movwf	(?_exp+1)& (0+255),b
  7368  0078F2  0E00               	movlw	0
  7369  0078F4  6FC1               	movwf	(?_exp+2)& (0+255),b
  7370  0078F6  0E00               	movlw	0
  7371  0078F8  6FC2               	movwf	(?_exp+3)& (0+255),b
  7372  0078FA  EF80  F03D         	goto	l3331
  7373  0078FE                     l17334:
  7374  0078FE  0100               	movlb	0	; () banked
  7375  007900  BFC2               	btfsc	(exp@x+3)& (0+255),7,b
  7376  007902  EF85  F03C         	goto	u18781
  7377  007906  EF88  F03C         	goto	u18780
  7378  00790A                     u18781:
  7379  00790A  0E01               	movlw	1
  7380  00790C  EF89  F03C         	goto	u18790
  7381  007910                     u18780:
  7382  007910  0E00               	movlw	0
  7383  007912                     u18790:
  7384  007912  6FC9               	movwf	exp@sign& (0+255),b
  7385  007914                     
  7386                           ; BSR set to: 0
  7387  007914  51C9               	movf	exp@sign& (0+255),w,b
  7388  007916  B4D8               	btfsc	status,2,c
  7389  007918  EF90  F03C         	goto	u18801
  7390  00791C  EF92  F03C         	goto	u18800
  7391  007920                     u18801:
  7392  007920  EFA4  F03C         	goto	l17340
  7393  007924                     u18800:
  7394  007924                     
  7395                           ; BSR set to: 0
  7396  007924  C0BF  F00F         	movff	exp@x,___flneg@f1
  7397  007928  C0C0  F010         	movff	exp@x+1,___flneg@f1+1
  7398  00792C  C0C1  F011         	movff	exp@x+2,___flneg@f1+2
  7399  007930  C0C2  F012         	movff	exp@x+3,___flneg@f1+3
  7400  007934  ECB6  F075         	call	___flneg	;wreg free
  7401  007938  C00F  F0BF         	movff	?___flneg,exp@x
  7402  00793C  C010  F0C0         	movff	?___flneg+1,exp@x+1
  7403  007940  C011  F0C1         	movff	?___flneg+2,exp@x+2
  7404  007944  C012  F0C2         	movff	?___flneg+3,exp@x+3
  7405  007948                     l17340:
  7406  007948  C0BF  F068         	movff	exp@x,___flmul@b
  7407  00794C  C0C0  F069         	movff	exp@x+1,___flmul@b+1
  7408  007950  C0C1  F06A         	movff	exp@x+2,___flmul@b+2
  7409  007954  C0C2  F06B         	movff	exp@x+3,___flmul@b+3
  7410  007958  0E3B               	movlw	59
  7411  00795A  0100               	movlb	0	; () banked
  7412  00795C  6F6C               	movwf	___flmul@a& (0+255),b
  7413  00795E  0EAA               	movlw	170
  7414  007960  6F6D               	movwf	(___flmul@a+1)& (0+255),b
  7415  007962  0EB8               	movlw	184
  7416  007964  6F6E               	movwf	(___flmul@a+2)& (0+255),b
  7417  007966  0E3F               	movlw	63
  7418  007968  6F6F               	movwf	(___flmul@a+3)& (0+255),b
  7419  00796A  ECA7  F02F         	call	___flmul	;wreg free
  7420  00796E  C068  F0BF         	movff	?___flmul,exp@x
  7421  007972  C069  F0C0         	movff	?___flmul+1,exp@x+1
  7422  007976  C06A  F0C1         	movff	?___flmul+2,exp@x+2
  7423  00797A  C06B  F0C2         	movff	?___flmul+3,exp@x+3
  7424  00797E  C0BF  F09E         	movff	exp@x,floor@x
  7425  007982  C0C0  F09F         	movff	exp@x+1,floor@x+1
  7426  007986  C0C1  F0A0         	movff	exp@x+2,floor@x+2
  7427  00798A  C0C2  F0A1         	movff	exp@x+3,floor@x+3
  7428  00798E  ECC8  F052         	call	_floor	;wreg free
  7429  007992  C09E  F0C3         	movff	?_floor,_exp$7093
  7430  007996  C09F  F0C4         	movff	?_floor+1,_exp$7093+1
  7431  00799A  C0A0  F0C5         	movff	?_floor+2,_exp$7093+2
  7432  00799E  C0A1  F0C6         	movff	?_floor+3,_exp$7093+3
  7433  0079A2  C0C3  F01D         	movff	_exp$7093,___fltol@f1
  7434  0079A6  C0C4  F01E         	movff	_exp$7093+1,___fltol@f1+1
  7435  0079AA  C0C5  F01F         	movff	_exp$7093+2,___fltol@f1+2
  7436  0079AE  C0C6  F020         	movff	_exp$7093+3,___fltol@f1+3
  7437  0079B2  ECE2  F05A         	call	___fltol	;wreg free
  7438  0079B6  C01D  F0C7         	movff	?___fltol,exp@exponent
  7439  0079BA  C01E  F0C8         	movff	?___fltol+1,exp@exponent+1
  7440  0079BE  C0BF  F09E         	movff	exp@x,___flsub@b
  7441  0079C2  C0C0  F09F         	movff	exp@x+1,___flsub@b+1
  7442  0079C6  C0C1  F0A0         	movff	exp@x+2,___flsub@b+2
  7443  0079CA  C0C2  F0A1         	movff	exp@x+3,___flsub@b+3
  7444  0079CE  C0C7  F027         	movff	exp@exponent,___xxtofl@val
  7445  0079D2  C0C8  F028         	movff	exp@exponent+1,___xxtofl@val+1
  7446  0079D6  0E00               	movlw	0
  7447  0079D8  BE28               	btfsc	(___xxtofl@val+1)^0,7,c
  7448  0079DA  0EFF               	movlw	-1
  7449  0079DC  6E29               	movwf	(___xxtofl@val+2)^0,c
  7450  0079DE  6E2A               	movwf	(___xxtofl@val+3)^0,c
  7451  0079E0  0E01               	movlw	1
  7452  0079E2  ECF6  F048         	call	___xxtofl
  7453  0079E6  C027  F0A2         	movff	?___xxtofl,___flsub@a
  7454  0079EA  C028  F0A3         	movff	?___xxtofl+1,___flsub@a+1
  7455  0079EE  C029  F0A4         	movff	?___xxtofl+2,___flsub@a+2
  7456  0079F2  C02A  F0A5         	movff	?___xxtofl+3,___flsub@a+3
  7457  0079F6  EC9C  F074         	call	___flsub	;wreg free
  7458  0079FA  C09E  F0BF         	movff	?___flsub,exp@x
  7459  0079FE  C09F  F0C0         	movff	?___flsub+1,exp@x+1
  7460  007A02  C0A0  F0C1         	movff	?___flsub+2,exp@x+2
  7461  007A06  C0A1  F0C2         	movff	?___flsub+3,exp@x+3
  7462  007A0A  C0BF  F09E         	movff	exp@x,eval_poly@x
  7463  007A0E  C0C0  F09F         	movff	exp@x+1,eval_poly@x+1
  7464  007A12  C0C1  F0A0         	movff	exp@x+2,eval_poly@x+2
  7465  007A16  C0C2  F0A1         	movff	exp@x+3,eval_poly@x+3
  7466  007A1A  0EBE               	movlw	low exp@coeff
  7467  007A1C  0100               	movlb	0	; () banked
  7468  007A1E  6FA2               	movwf	eval_poly@d& (0+255),b
  7469  007A20  0E22               	movlw	high exp@coeff
  7470  007A22  6FA3               	movwf	(eval_poly@d+1)& (0+255),b
  7471  007A24  0E00               	movlw	0
  7472  007A26  6FA5               	movwf	(eval_poly@n+1)& (0+255),b
  7473  007A28  0E09               	movlw	9
  7474  007A2A  6FA4               	movwf	eval_poly@n& (0+255),b
  7475  007A2C  EC65  F05B         	call	_eval_poly	;wreg free
  7476  007A30  C09E  F0AE         	movff	?_eval_poly,ldexp@value
  7477  007A34  C09F  F0AF         	movff	?_eval_poly+1,ldexp@value+1
  7478  007A38  C0A0  F0B0         	movff	?_eval_poly+2,ldexp@value+2
  7479  007A3C  C0A1  F0B1         	movff	?_eval_poly+3,ldexp@value+3
  7480  007A40  C0C7  F0B2         	movff	exp@exponent,ldexp@newexp
  7481  007A44  C0C8  F0B3         	movff	exp@exponent+1,ldexp@newexp+1
  7482  007A48  ECAF  F054         	call	_ldexp	;wreg free
  7483  007A4C  C0AE  F0BF         	movff	?_ldexp,exp@x
  7484  007A50  C0AF  F0C0         	movff	?_ldexp+1,exp@x+1
  7485  007A54  C0B0  F0C1         	movff	?_ldexp+2,exp@x+2
  7486  007A58  C0B1  F0C2         	movff	?_ldexp+3,exp@x+3
  7487  007A5C  0100               	movlb	0	; () banked
  7488  007A5E  51C9               	movf	exp@sign& (0+255),w,b
  7489  007A60  B4D8               	btfsc	status,2,c
  7490  007A62  EF35  F03D         	goto	u18811
  7491  007A66  EF37  F03D         	goto	u18810
  7492  007A6A                     u18811:
  7493  007A6A  EF78  F03D         	goto	l3335
  7494  007A6E                     u18810:
  7495  007A6E                     
  7496                           ; BSR set to: 0
  7497  007A6E  C0BF  F035         	movff	exp@x,___fleq@ff1
  7498  007A72  C0C0  F036         	movff	exp@x+1,___fleq@ff1+1
  7499  007A76  C0C1  F037         	movff	exp@x+2,___fleq@ff1+2
  7500  007A7A  C0C2  F038         	movff	exp@x+3,___fleq@ff1+3
  7501  007A7E  0EFF               	movlw	255
  7502  007A80  6E39               	movwf	___fleq@ff2^0,c
  7503  007A82  0EFF               	movlw	255
  7504  007A84  6E3A               	movwf	(___fleq@ff2+1)^0,c
  7505  007A86  0E7F               	movlw	127
  7506  007A88  6E3B               	movwf	(___fleq@ff2+2)^0,c
  7507  007A8A  0E7F               	movlw	127
  7508  007A8C  6E3C               	movwf	(___fleq@ff2+3)^0,c
  7509  007A8E  EC94  F067         	call	___fleq	;wreg free
  7510  007A92  A0D8               	btfss	status,0,c
  7511  007A94  EF4E  F03D         	goto	u18821
  7512  007A98  EF50  F03D         	goto	u18820
  7513  007A9C                     u18821:
  7514  007A9C  EF5B  F03D         	goto	l17358
  7515  007AA0                     u18820:
  7516  007AA0  0E00               	movlw	0
  7517  007AA2  0100               	movlb	0	; () banked
  7518  007AA4  6FBF               	movwf	?_exp& (0+255),b
  7519  007AA6  0E00               	movlw	0
  7520  007AA8  6FC0               	movwf	(?_exp+1)& (0+255),b
  7521  007AAA  0E00               	movlw	0
  7522  007AAC  6FC1               	movwf	(?_exp+2)& (0+255),b
  7523  007AAE  0E00               	movlw	0
  7524  007AB0  6FC2               	movwf	(?_exp+3)& (0+255),b
  7525  007AB2  EF80  F03D         	goto	l3331
  7526  007AB6                     l17358:
  7527  007AB6  0E00               	movlw	0
  7528  007AB8  0100               	movlb	0	; () banked
  7529  007ABA  6FA6               	movwf	___fldiv@b& (0+255),b
  7530  007ABC  0E00               	movlw	0
  7531  007ABE  6FA7               	movwf	(___fldiv@b+1)& (0+255),b
  7532  007AC0  0E80               	movlw	128
  7533  007AC2  6FA8               	movwf	(___fldiv@b+2)& (0+255),b
  7534  007AC4  0E3F               	movlw	63
  7535  007AC6  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
  7536  007AC8  C0BF  F0AA         	movff	exp@x,___fldiv@a
  7537  007ACC  C0C0  F0AB         	movff	exp@x+1,___fldiv@a+1
  7538  007AD0  C0C1  F0AC         	movff	exp@x+2,___fldiv@a+2
  7539  007AD4  C0C2  F0AD         	movff	exp@x+3,___fldiv@a+3
  7540  007AD8  ECCB  F033         	call	___fldiv	;wreg free
  7541  007ADC  C0A6  F0BF         	movff	?___fldiv,?_exp
  7542  007AE0  C0A7  F0C0         	movff	?___fldiv+1,?_exp+1
  7543  007AE4  C0A8  F0C1         	movff	?___fldiv+2,?_exp+2
  7544  007AE8  C0A9  F0C2         	movff	?___fldiv+3,?_exp+3
  7545  007AEC  EF80  F03D         	goto	l3331
  7546  007AF0                     l3335:
  7547                           
  7548                           ; BSR set to: 0
  7549  007AF0  C0BF  F0BF         	movff	exp@x,?_exp
  7550  007AF4  C0C0  F0C0         	movff	exp@x+1,?_exp+1
  7551  007AF8  C0C1  F0C1         	movff	exp@x+2,?_exp+2
  7552  007AFC  C0C2  F0C2         	movff	exp@x+3,?_exp+3
  7553  007B00                     l3331:
  7554  007B00  0012               	return		;funcret
  7555  007B02                     __end_of_exp:
  7556                           	callstack 0
  7557                           
  7558 ;; *************** function _ldexp *****************
  7559 ;; Defined at:
  7560 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  value           4   78[BANK0 ] unsigned char 
  7563 ;;  newexp          2   82[BANK0 ] int 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;		None
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  4   78[BANK0 ] int 
  7568 ;; Registers used:
  7569 ;;		wreg, status,2, status,0, cstack
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7575 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7578 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7579 ;;Total ram usage:        8 bytes
  7580 ;; Hardware stack levels used: 1
  7581 ;; Hardware stack levels required when called: 4
  7582 ;; This function calls:
  7583 ;;		___fleq
  7584 ;; This function is called by:
  7585 ;;		_exp
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           	psect	text23
  7590  00A95E                     __ptext23:
  7591                           	callstack 0
  7592  00A95E                     _ldexp:
  7593                           	callstack 21
  7594  00A95E  C0AE  F035         	movff	ldexp@value,___fleq@ff1
  7595  00A962  C0AF  F036         	movff	ldexp@value+1,___fleq@ff1+1
  7596  00A966  C0B0  F037         	movff	ldexp@value+2,___fleq@ff1+2
  7597  00A96A  C0B1  F038         	movff	ldexp@value+3,___fleq@ff1+3
  7598  00A96E  0E00               	movlw	0
  7599  00A970  6E39               	movwf	___fleq@ff2^0,c
  7600  00A972  0E00               	movlw	0
  7601  00A974  6E3A               	movwf	(___fleq@ff2+1)^0,c
  7602  00A976  0E00               	movlw	0
  7603  00A978  6E3B               	movwf	(___fleq@ff2+2)^0,c
  7604  00A97A  0E00               	movlw	0
  7605  00A97C  6E3C               	movwf	(___fleq@ff2+3)^0,c
  7606  00A97E  EC94  F067         	call	___fleq	;wreg free
  7607  00A982  A0D8               	btfss	status,0,c
  7608  00A984  EFC6  F054         	goto	u18451
  7609  00A988  EFC8  F054         	goto	u18450
  7610  00A98C                     u18451:
  7611  00A98C  EFD3  F054         	goto	l17078
  7612  00A990                     u18450:
  7613  00A990  0E00               	movlw	0
  7614  00A992  0100               	movlb	0	; () banked
  7615  00A994  6FAE               	movwf	?_ldexp& (0+255),b
  7616  00A996  0E00               	movlw	0
  7617  00A998  6FAF               	movwf	(?_ldexp+1)& (0+255),b
  7618  00A99A  0E00               	movlw	0
  7619  00A99C  6FB0               	movwf	(?_ldexp+2)& (0+255),b
  7620  00A99E  0E00               	movlw	0
  7621  00A9A0  6FB1               	movwf	(?_ldexp+3)& (0+255),b
  7622  00A9A2  EF4E  F055         	goto	l3251
  7623  00A9A6                     l17078:
  7624  00A9A6  0100               	movlb	0	; () banked
  7625  00A9A8  51B1               	movf	(ldexp@value+3)& (0+255),w,b
  7626  00A9AA  0B7F               	andlw	127
  7627  00A9AC  6FB4               	movwf	??_ldexp& (0+255),b
  7628  00A9AE  6BB5               	clrf	(??_ldexp+1)& (0+255),b
  7629  00A9B0  90D8               	bcf	status,0,c
  7630  00A9B2  37B4               	rlcf	??_ldexp& (0+255),f,b
  7631  00A9B4  37B5               	rlcf	(??_ldexp+1)& (0+255),f,b
  7632  00A9B6  51B4               	movf	??_ldexp& (0+255),w,b
  7633  00A9B8  27B2               	addwf	ldexp@newexp& (0+255),f,b
  7634  00A9BA  51B5               	movf	(??_ldexp+1)& (0+255),w,b
  7635  00A9BC  23B3               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  7636  00A9BE  BFB0               	btfsc	(ldexp@value+2)& (0+255),7,b
  7637  00A9C0  EFE4  F054         	goto	u18461
  7638  00A9C4  EFE8  F054         	goto	u18460
  7639  00A9C8                     u18461:
  7640  00A9C8  6BB4               	clrf	??_ldexp& (0+255),b
  7641  00A9CA  2BB4               	incf	??_ldexp& (0+255),f,b
  7642  00A9CC  EFEA  F054         	goto	u18468
  7643  00A9D0                     u18460:
  7644  00A9D0  0100               	movlb	0	; () banked
  7645  00A9D2  6BB4               	clrf	??_ldexp& (0+255),b
  7646  00A9D4                     u18468:
  7647  00A9D4  51B4               	movf	??_ldexp& (0+255),w,b
  7648  00A9D6  27B2               	addwf	ldexp@newexp& (0+255),f,b
  7649  00A9D8  0E00               	movlw	0
  7650  00A9DA  23B3               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  7651  00A9DC  BFB3               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  7652  00A9DE  EFF5  F054         	goto	u18470
  7653  00A9E2  EFF3  F054         	goto	u18471
  7654  00A9E6                     u18471:
  7655  00A9E6  EF05  F055         	goto	l17086
  7656  00A9EA                     u18470:
  7657  00A9EA                     
  7658                           ; BSR set to: 0
  7659  00A9EA  0E00               	movlw	0
  7660  00A9EC  0101               	movlb	1	; () banked
  7661  00A9EE  6F5B               	movwf	(_errno+1)& (0+255),b
  7662  00A9F0  0E22               	movlw	34
  7663  00A9F2  6F5A               	movwf	_errno& (0+255),b
  7664  00A9F4  0E00               	movlw	0
  7665  00A9F6  0100               	movlb	0	; () banked
  7666  00A9F8  6FAE               	movwf	?_ldexp& (0+255),b
  7667  00A9FA  0E00               	movlw	0
  7668  00A9FC  6FAF               	movwf	(?_ldexp+1)& (0+255),b
  7669  00A9FE  0E00               	movlw	0
  7670  00AA00  6FB0               	movwf	(?_ldexp+2)& (0+255),b
  7671  00AA02  0E00               	movlw	0
  7672  00AA04  6FB1               	movwf	(?_ldexp+3)& (0+255),b
  7673  00AA06  EF4E  F055         	goto	l3251
  7674  00AA0A                     l17086:
  7675                           
  7676                           ; BSR set to: 0
  7677  00AA0A  BFB3               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  7678  00AA0C  EF0E  F055         	goto	u18481
  7679  00AA10  05B3               	decf	(ldexp@newexp+1)& (0+255),w,b
  7680  00AA12  A0D8               	btfss	status,0,c
  7681  00AA14  EF0E  F055         	goto	u18481
  7682  00AA18  EF10  F055         	goto	u18480
  7683  00AA1C                     u18481:
  7684  00AA1C  EF31  F055         	goto	l17102
  7685  00AA20                     u18480:
  7686  00AA20                     
  7687                           ; BSR set to: 0
  7688  00AA20  0E00               	movlw	0
  7689  00AA22  0101               	movlb	1	; () banked
  7690  00AA24  6F5B               	movwf	(_errno+1)& (0+255),b
  7691  00AA26  0E22               	movlw	34
  7692  00AA28  6F5A               	movwf	_errno& (0+255),b
  7693  00AA2A                     
  7694                           ; BSR set to: 1
  7695  00AA2A  0100               	movlb	0	; () banked
  7696  00AA2C  BFB1               	btfsc	(ldexp@value+3)& (0+255),7,b
  7697  00AA2E  EF1D  F055         	goto	u18490
  7698  00AA32  EF1B  F055         	goto	u18491
  7699  00AA36                     u18491:
  7700  00AA36  EF27  F055         	goto	l17098
  7701  00AA3A                     u18490:
  7702  00AA3A                     
  7703                           ; BSR set to: 0
  7704  00AA3A  0EFF               	movlw	255
  7705  00AA3C  6FAE               	movwf	?_ldexp& (0+255),b
  7706  00AA3E  0EFF               	movlw	255
  7707  00AA40  6FAF               	movwf	(?_ldexp+1)& (0+255),b
  7708  00AA42  0E7F               	movlw	127
  7709  00AA44  6FB0               	movwf	(?_ldexp+2)& (0+255),b
  7710  00AA46  0EFF               	movlw	255
  7711  00AA48  6FB1               	movwf	(?_ldexp+3)& (0+255),b
  7712  00AA4A  EF4E  F055         	goto	l3251
  7713  00AA4E                     l17098:
  7714                           
  7715                           ; BSR set to: 0
  7716  00AA4E  0EFF               	movlw	255
  7717  00AA50  6FAE               	movwf	?_ldexp& (0+255),b
  7718  00AA52  0EFF               	movlw	255
  7719  00AA54  6FAF               	movwf	(?_ldexp+1)& (0+255),b
  7720  00AA56  0E7F               	movlw	127
  7721  00AA58  6FB0               	movwf	(?_ldexp+2)& (0+255),b
  7722  00AA5A  0E7F               	movlw	127
  7723  00AA5C  6FB1               	movwf	(?_ldexp+3)& (0+255),b
  7724  00AA5E  EF4E  F055         	goto	l3251
  7725  00AA62                     l17102:
  7726                           
  7727                           ; BSR set to: 0
  7728  00AA62  35B3               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  7729  00AA64  31B3               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  7730  00AA66  6FB5               	movwf	(??_ldexp+1)& (0+255),b
  7731  00AA68  31B2               	rrcf	ldexp@newexp& (0+255),w,b
  7732  00AA6A  6FB4               	movwf	??_ldexp& (0+255),b
  7733  00AA6C  51B1               	movf	(ldexp@value+3)& (0+255),w,b
  7734  00AA6E  19B4               	xorwf	??_ldexp& (0+255),w,b
  7735  00AA70  0B80               	andlw	-128
  7736  00AA72  19B4               	xorwf	??_ldexp& (0+255),w,b
  7737  00AA74  6FB1               	movwf	(ldexp@value+3)& (0+255),b
  7738  00AA76  C0B2  F0B4         	movff	ldexp@newexp,??_ldexp
  7739  00AA7A  0E01               	movlw	1
  7740  00AA7C  17B4               	andwf	??_ldexp& (0+255),f,b
  7741  00AA7E  33B4               	rrcf	??_ldexp& (0+255),f,b
  7742  00AA80  33B4               	rrcf	??_ldexp& (0+255),f,b
  7743  00AA82  51B0               	movf	(ldexp@value+2)& (0+255),w,b
  7744  00AA84  19B4               	xorwf	??_ldexp& (0+255),w,b
  7745  00AA86  0B7F               	andlw	-129
  7746  00AA88  19B4               	xorwf	??_ldexp& (0+255),w,b
  7747  00AA8A  6FB0               	movwf	(ldexp@value+2)& (0+255),b
  7748  00AA8C                     
  7749                           ; BSR set to: 0
  7750  00AA8C  C0AE  F0AE         	movff	ldexp@value,?_ldexp
  7751  00AA90  C0AF  F0AF         	movff	ldexp@value+1,?_ldexp+1
  7752  00AA94  C0B0  F0B0         	movff	ldexp@value+2,?_ldexp+2
  7753  00AA98  C0B1  F0B1         	movff	ldexp@value+3,?_ldexp+3
  7754  00AA9C                     l3251:
  7755                           
  7756                           ; BSR set to: 0
  7757  00AA9C  0012               	return		;funcret
  7758  00AA9E                     __end_of_ldexp:
  7759                           	callstack 0
  7760                           
  7761 ;; *************** function _floor *****************
  7762 ;; Defined at:
  7763 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\floor.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  x               4   62[BANK0 ] int 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  i               4   66[BANK0 ] int 
  7768 ;;  expon           2   70[BANK0 ] int 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  4   62[BANK0 ] int 
  7771 ;; Registers used:
  7772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7781 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7782 ;;Total ram usage:       10 bytes
  7783 ;; Hardware stack levels used: 1
  7784 ;; Hardware stack levels required when called: 5
  7785 ;; This function calls:
  7786 ;;		___fladd
  7787 ;;		___flge
  7788 ;;		___fltol
  7789 ;;		___xxtofl
  7790 ;;		_frexp
  7791 ;; This function is called by:
  7792 ;;		_gasSensor_read
  7793 ;;		_exp
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text24
  7798  00A590                     __ptext24:
  7799                           	callstack 0
  7800  00A590                     _floor:
  7801                           	callstack 20
  7802  00A590  C09E  F060         	movff	floor@x,frexp@value
  7803  00A594  C09F  F061         	movff	floor@x+1,frexp@value+1
  7804  00A598  C0A0  F062         	movff	floor@x+2,frexp@value+2
  7805  00A59C  C0A1  F063         	movff	floor@x+3,frexp@value+3
  7806  00A5A0  0EA6               	movlw	low floor@expon
  7807  00A5A2  0100               	movlb	0	; () banked
  7808  00A5A4  6F64               	movwf	frexp@eptr& (0+255),b
  7809  00A5A6  0E00               	movlw	high floor@expon
  7810  00A5A8  6F65               	movwf	(frexp@eptr+1)& (0+255),b
  7811  00A5AA  ECC9  F061         	call	_frexp	;wreg free
  7812  00A5AE  0100               	movlb	0	; () banked
  7813  00A5B0  BFA7               	btfsc	(floor@expon+1)& (0+255),7,b
  7814  00A5B2  EFDF  F052         	goto	u18170
  7815  00A5B6  EFDD  F052         	goto	u18171
  7816  00A5BA                     u18171:
  7817  00A5BA  EFFA  F052         	goto	l16910
  7818  00A5BE                     u18170:
  7819  00A5BE                     
  7820                           ; BSR set to: 0
  7821  00A5BE  BFA1               	btfsc	(floor@x+3)& (0+255),7,b
  7822  00A5C0  EFE6  F052         	goto	u18180
  7823  00A5C4  EFE4  F052         	goto	u18181
  7824  00A5C8                     u18181:
  7825  00A5C8  EFF0  F052         	goto	l16906
  7826  00A5CC                     u18180:
  7827  00A5CC                     
  7828                           ; BSR set to: 0
  7829  00A5CC  0E00               	movlw	0
  7830  00A5CE  6F9E               	movwf	?_floor& (0+255),b
  7831  00A5D0  0E00               	movlw	0
  7832  00A5D2  6F9F               	movwf	(?_floor+1)& (0+255),b
  7833  00A5D4  0E80               	movlw	128
  7834  00A5D6  6FA0               	movwf	(?_floor+2)& (0+255),b
  7835  00A5D8  0EBF               	movlw	191
  7836  00A5DA  6FA1               	movwf	(?_floor+3)& (0+255),b
  7837  00A5DC  EF6A  F053         	goto	l3239
  7838  00A5E0                     l16906:
  7839                           
  7840                           ; BSR set to: 0
  7841  00A5E0  0E00               	movlw	0
  7842  00A5E2  6F9E               	movwf	?_floor& (0+255),b
  7843  00A5E4  0E00               	movlw	0
  7844  00A5E6  6F9F               	movwf	(?_floor+1)& (0+255),b
  7845  00A5E8  0E00               	movlw	0
  7846  00A5EA  6FA0               	movwf	(?_floor+2)& (0+255),b
  7847  00A5EC  0E00               	movlw	0
  7848  00A5EE  6FA1               	movwf	(?_floor+3)& (0+255),b
  7849  00A5F0  EF6A  F053         	goto	l3239
  7850  00A5F4                     l16910:
  7851                           
  7852                           ; BSR set to: 0
  7853  00A5F4  51A7               	movf	(floor@expon+1)& (0+255),w,b
  7854  00A5F6  E109               	bnz	u18190
  7855  00A5F8  0E1D               	movlw	29
  7856  00A5FA  5DA6               	subwf	floor@expon& (0+255),w,b
  7857  00A5FC  A0D8               	btfss	status,0,c
  7858  00A5FE  EF03  F053         	goto	u18191
  7859  00A602  EF05  F053         	goto	u18190
  7860  00A606                     u18191:
  7861  00A606  EF0F  F053         	goto	l16914
  7862  00A60A                     u18190:
  7863  00A60A                     
  7864                           ; BSR set to: 0
  7865  00A60A  C09E  F09E         	movff	floor@x,?_floor
  7866  00A60E  C09F  F09F         	movff	floor@x+1,?_floor+1
  7867  00A612  C0A0  F0A0         	movff	floor@x+2,?_floor+2
  7868  00A616  C0A1  F0A1         	movff	floor@x+3,?_floor+3
  7869  00A61A  EF6A  F053         	goto	l3239
  7870  00A61E                     l16914:
  7871                           
  7872                           ; BSR set to: 0
  7873  00A61E  C09E  F01D         	movff	floor@x,___fltol@f1
  7874  00A622  C09F  F01E         	movff	floor@x+1,___fltol@f1+1
  7875  00A626  C0A0  F01F         	movff	floor@x+2,___fltol@f1+2
  7876  00A62A  C0A1  F020         	movff	floor@x+3,___fltol@f1+3
  7877  00A62E  ECE2  F05A         	call	___fltol	;wreg free
  7878  00A632  C01D  F027         	movff	?___fltol,___xxtofl@val
  7879  00A636  C01E  F028         	movff	?___fltol+1,___xxtofl@val+1
  7880  00A63A  C01F  F029         	movff	?___fltol+2,___xxtofl@val+2
  7881  00A63E  C020  F02A         	movff	?___fltol+3,___xxtofl@val+3
  7882  00A642  0E01               	movlw	1
  7883  00A644  ECF6  F048         	call	___xxtofl
  7884  00A648  C027  F0A2         	movff	?___xxtofl,floor@i
  7885  00A64C  C028  F0A3         	movff	?___xxtofl+1,floor@i+1
  7886  00A650  C029  F0A4         	movff	?___xxtofl+2,floor@i+2
  7887  00A654  C02A  F0A5         	movff	?___xxtofl+3,floor@i+3
  7888  00A658  C09E  F00F         	movff	floor@x,___flge@ff1
  7889  00A65C  C09F  F010         	movff	floor@x+1,___flge@ff1+1
  7890  00A660  C0A0  F011         	movff	floor@x+2,___flge@ff1+2
  7891  00A664  C0A1  F012         	movff	floor@x+3,___flge@ff1+3
  7892  00A668  C0A2  F013         	movff	floor@i,___flge@ff2
  7893  00A66C  C0A3  F014         	movff	floor@i+1,___flge@ff2+1
  7894  00A670  C0A4  F015         	movff	floor@i+2,___flge@ff2+2
  7895  00A674  C0A5  F016         	movff	floor@i+3,___flge@ff2+3
  7896  00A678  ECE7  F05B         	call	___flge	;wreg free
  7897  00A67C  B0D8               	btfsc	status,0,c
  7898  00A67E  EF43  F053         	goto	u18201
  7899  00A682  EF45  F053         	goto	u18200
  7900  00A686                     u18201:
  7901  00A686  EF62  F053         	goto	l3241
  7902  00A68A                     u18200:
  7903  00A68A  C0A2  F08E         	movff	floor@i,___fladd@b
  7904  00A68E  C0A3  F08F         	movff	floor@i+1,___fladd@b+1
  7905  00A692  C0A4  F090         	movff	floor@i+2,___fladd@b+2
  7906  00A696  C0A5  F091         	movff	floor@i+3,___fladd@b+3
  7907  00A69A  0E00               	movlw	0
  7908  00A69C  0100               	movlb	0	; () banked
  7909  00A69E  6F92               	movwf	___fladd@a& (0+255),b
  7910  00A6A0  0E00               	movlw	0
  7911  00A6A2  6F93               	movwf	(___fladd@a+1)& (0+255),b
  7912  00A6A4  0E80               	movlw	128
  7913  00A6A6  6F94               	movwf	(___fladd@a+2)& (0+255),b
  7914  00A6A8  0EBF               	movlw	191
  7915  00A6AA  6F95               	movwf	(___fladd@a+3)& (0+255),b
  7916  00A6AC  EC46  F02D         	call	___fladd	;wreg free
  7917  00A6B0  C08E  F09E         	movff	?___fladd,?_floor
  7918  00A6B4  C08F  F09F         	movff	?___fladd+1,?_floor+1
  7919  00A6B8  C090  F0A0         	movff	?___fladd+2,?_floor+2
  7920  00A6BC  C091  F0A1         	movff	?___fladd+3,?_floor+3
  7921  00A6C0  EF6A  F053         	goto	l3239
  7922  00A6C4                     l3241:
  7923  00A6C4  C0A2  F09E         	movff	floor@i,?_floor
  7924  00A6C8  C0A3  F09F         	movff	floor@i+1,?_floor+1
  7925  00A6CC  C0A4  F0A0         	movff	floor@i+2,?_floor+2
  7926  00A6D0  C0A5  F0A1         	movff	floor@i+3,?_floor+3
  7927  00A6D4                     l3239:
  7928  00A6D4  0012               	return		;funcret
  7929  00A6D6                     __end_of_floor:
  7930                           	callstack 0
  7931                           
  7932 ;; *************** function _frexp *****************
  7933 ;; Defined at:
  7934 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  value           4    0[BANK0 ] int 
  7937 ;;  eptr            2    4[BANK0 ] PTR int 
  7938 ;;		 -> log@exponent(2), floor@expon(2), 
  7939 ;; Auto vars:     Size  Location     Type
  7940 ;;		None
  7941 ;; Return value:  Size  Location     Type
  7942 ;;                  4    0[BANK0 ] PTR int 
  7943 ;; Registers used:
  7944 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7945 ;; Tracked objects:
  7946 ;;		On entry : 0/0
  7947 ;;		On exit  : 0/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7950 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7952 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7953 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7954 ;;Total ram usage:        8 bytes
  7955 ;; Hardware stack levels used: 1
  7956 ;; Hardware stack levels required when called: 4
  7957 ;; This function calls:
  7958 ;;		___fleq
  7959 ;; This function is called by:
  7960 ;;		_floor
  7961 ;;		_log
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text25
  7966  00C392                     __ptext25:
  7967                           	callstack 0
  7968  00C392                     _frexp:
  7969                           	callstack 21
  7970  00C392  C060  F035         	movff	frexp@value,___fleq@ff1
  7971  00C396  C061  F036         	movff	frexp@value+1,___fleq@ff1+1
  7972  00C39A  C062  F037         	movff	frexp@value+2,___fleq@ff1+2
  7973  00C39E  C063  F038         	movff	frexp@value+3,___fleq@ff1+3
  7974  00C3A2  0E00               	movlw	0
  7975  00C3A4  6E39               	movwf	___fleq@ff2^0,c
  7976  00C3A6  0E00               	movlw	0
  7977  00C3A8  6E3A               	movwf	(___fleq@ff2+1)^0,c
  7978  00C3AA  0E00               	movlw	0
  7979  00C3AC  6E3B               	movwf	(___fleq@ff2+2)^0,c
  7980  00C3AE  0E00               	movlw	0
  7981  00C3B0  6E3C               	movwf	(___fleq@ff2+3)^0,c
  7982  00C3B2  EC94  F067         	call	___fleq	;wreg free
  7983  00C3B6  A0D8               	btfss	status,0,c
  7984  00C3B8  EFE0  F061         	goto	u17771
  7985  00C3BC  EFE2  F061         	goto	u17770
  7986  00C3C0                     u17771:
  7987  00C3C0  EFF5  F061         	goto	l16672
  7988  00C3C4                     u17770:
  7989  00C3C4  C064  FFD9         	movff	frexp@eptr,fsr2l
  7990  00C3C8  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  7991  00C3CC  0E00               	movlw	0
  7992  00C3CE  6EDE               	movwf	postinc2,c
  7993  00C3D0  0E00               	movlw	0
  7994  00C3D2  6EDD               	movwf	postdec2,c
  7995  00C3D4  0E00               	movlw	0
  7996  00C3D6  0100               	movlb	0	; () banked
  7997  00C3D8  6F60               	movwf	?_frexp& (0+255),b
  7998  00C3DA  0E00               	movlw	0
  7999  00C3DC  6F61               	movwf	(?_frexp+1)& (0+255),b
  8000  00C3DE  0E00               	movlw	0
  8001  00C3E0  6F62               	movwf	(?_frexp+2)& (0+255),b
  8002  00C3E2  0E00               	movlw	0
  8003  00C3E4  6F63               	movwf	(?_frexp+3)& (0+255),b
  8004  00C3E6  EF2D  F062         	goto	l3247
  8005  00C3EA                     l16672:
  8006  00C3EA  0100               	movlb	0	; () banked
  8007  00C3EC  5163               	movf	(frexp@value+3)& (0+255),w,b
  8008  00C3EE  0B7F               	andlw	127
  8009  00C3F0  6F66               	movwf	??_frexp& (0+255),b
  8010  00C3F2  6B67               	clrf	(??_frexp+1)& (0+255),b
  8011  00C3F4  90D8               	bcf	status,0,c
  8012  00C3F6  3766               	rlcf	??_frexp& (0+255),f,b
  8013  00C3F8  3767               	rlcf	(??_frexp+1)& (0+255),f,b
  8014  00C3FA  C064  FFD9         	movff	frexp@eptr,fsr2l
  8015  00C3FE  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  8016  00C402  C066  FFDE         	movff	??_frexp,postinc2
  8017  00C406  C067  FFDD         	movff	??_frexp+1,postdec2
  8018  00C40A  BF62               	btfsc	(frexp@value+2)& (0+255),7,b
  8019  00C40C  EF0A  F062         	goto	u17781
  8020  00C410  EF0E  F062         	goto	u17780
  8021  00C414                     u17781:
  8022  00C414  6B66               	clrf	??_frexp& (0+255),b
  8023  00C416  2B66               	incf	??_frexp& (0+255),f,b
  8024  00C418  EF10  F062         	goto	u17788
  8025  00C41C                     u17780:
  8026  00C41C  0100               	movlb	0	; () banked
  8027  00C41E  6B66               	clrf	??_frexp& (0+255),b
  8028  00C420                     u17788:
  8029  00C420  5166               	movf	??_frexp& (0+255),w,b
  8030  00C422  C064  FFD9         	movff	frexp@eptr,fsr2l
  8031  00C426  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  8032  00C42A  12DE               	iorwf	postinc2,f,c
  8033  00C42C  0E00               	movlw	0
  8034  00C42E  12DD               	iorwf	postdec2,f,c
  8035  00C430                     
  8036                           ; BSR set to: 0
  8037  00C430  C064  FFD9         	movff	frexp@eptr,fsr2l
  8038  00C434  C065  FFDA         	movff	frexp@eptr+1,fsr2h
  8039  00C438  0E82               	movlw	130
  8040  00C43A  26DE               	addwf	postinc2,f,c
  8041  00C43C  0EFF               	movlw	255
  8042  00C43E  22DD               	addwfc	postdec2,f,c
  8043  00C440                     
  8044                           ; BSR set to: 0
  8045  00C440  5163               	movf	(frexp@value+3)& (0+255),w,b
  8046  00C442  0B80               	andlw	-128
  8047  00C444  093F               	iorlw	63
  8048  00C446  6F63               	movwf	(frexp@value+3)& (0+255),b
  8049  00C448                     
  8050                           ; BSR set to: 0
  8051  00C448  9F62               	bcf	(frexp@value+2)& (0+255),7,b
  8052  00C44A                     
  8053                           ; BSR set to: 0
  8054  00C44A  C060  F060         	movff	frexp@value,?_frexp
  8055  00C44E  C061  F061         	movff	frexp@value+1,?_frexp+1
  8056  00C452  C062  F062         	movff	frexp@value+2,?_frexp+2
  8057  00C456  C063  F063         	movff	frexp@value+3,?_frexp+3
  8058  00C45A                     l3247:
  8059                           
  8060                           ; BSR set to: 0
  8061  00C45A  0012               	return		;funcret
  8062  00C45C                     __end_of_frexp:
  8063                           	callstack 0
  8064                           
  8065 ;; *************** function _eval_poly *****************
  8066 ;; Defined at:
  8067 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\evalpoly.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  x               4   62[BANK0 ] PTR int 
  8070 ;;  d               2   66[BANK0 ] PTR const 
  8071 ;;		 -> log@coeff(36), exp@coeff(40), 
  8072 ;;  n               2   68[BANK0 ] int 
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;  res             4   74[BANK0 ] int 
  8075 ;; Return value:  Size  Location     Type
  8076 ;;                  4   62[BANK0 ] int 
  8077 ;; Registers used:
  8078 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8079 ;; Tracked objects:
  8080 ;;		On entry : 0/0
  8081 ;;		On exit  : 0/0
  8082 ;;		Unchanged: 0/0
  8083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8084 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8085 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8086 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8087 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8088 ;;Total ram usage:       16 bytes
  8089 ;; Hardware stack levels used: 1
  8090 ;; Hardware stack levels required when called: 4
  8091 ;; This function calls:
  8092 ;;		___fladd
  8093 ;;		___flmul
  8094 ;; This function is called by:
  8095 ;;		_exp
  8096 ;;		_log
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text26
  8101  00B6CA                     __ptext26:
  8102                           	callstack 0
  8103  00B6CA                     _eval_poly:
  8104                           	callstack 21
  8105  00B6CA  C0A4  F0A6         	movff	eval_poly@n,??_eval_poly
  8106  00B6CE  C0A5  F0A7         	movff	eval_poly@n+1,??_eval_poly+1
  8107  00B6D2  0100               	movlb	0	; () banked
  8108  00B6D4  90D8               	bcf	status,0,c
  8109  00B6D6  37A6               	rlcf	??_eval_poly& (0+255),f,b
  8110  00B6D8  37A7               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8111  00B6DA  90D8               	bcf	status,0,c
  8112  00B6DC  37A6               	rlcf	??_eval_poly& (0+255),f,b
  8113  00B6DE  37A7               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8114  00B6E0  C0A2  F0A8         	movff	eval_poly@d,??_eval_poly+2
  8115  00B6E4  C0A3  F0A9         	movff	eval_poly@d+1,??_eval_poly+3
  8116  00B6E8  51A6               	movf	??_eval_poly& (0+255),w,b
  8117  00B6EA  27A8               	addwf	(??_eval_poly+2)& (0+255),f,b
  8118  00B6EC  51A7               	movf	(??_eval_poly+1)& (0+255),w,b
  8119  00B6EE  23A9               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8120  00B6F0  C0A8  FFF6         	movff	??_eval_poly+2,tblptrl
  8121  00B6F4  C0A9  FFF7         	movff	??_eval_poly+3,tblptrh
  8122  00B6F8                     	if	0	;tblptru may be non-zero
  8123  00B6F8                     	endif
  8124  00B6F8                     	if	0	;tblptru may be non-zero
  8125  00B6F8                     	endif
  8126  00B6F8  0009               	tblrd		*+
  8127  00B6FA  CFF5 F0AA          	movff	tablat,eval_poly@res
  8128  00B6FE  0009               	tblrd		*+
  8129  00B700  CFF5 F0AB          	movff	tablat,eval_poly@res+1
  8130  00B704  0009               	tblrd		*+
  8131  00B706  CFF5 F0AC          	movff	tablat,eval_poly@res+2
  8132  00B70A  000A               	tblrd		*-
  8133  00B70C  CFF5 F0AD          	movff	tablat,eval_poly@res+3
  8134  00B710  EFD4  F05B         	goto	l17112
  8135  00B714                     l17110:
  8136                           
  8137                           ; BSR set to: 0
  8138  00B714  C0AA  F06C         	movff	eval_poly@res,___flmul@a
  8139  00B718  C0AB  F06D         	movff	eval_poly@res+1,___flmul@a+1
  8140  00B71C  C0AC  F06E         	movff	eval_poly@res+2,___flmul@a+2
  8141  00B720  C0AD  F06F         	movff	eval_poly@res+3,___flmul@a+3
  8142  00B724  C09E  F068         	movff	eval_poly@x,___flmul@b
  8143  00B728  C09F  F069         	movff	eval_poly@x+1,___flmul@b+1
  8144  00B72C  C0A0  F06A         	movff	eval_poly@x+2,___flmul@b+2
  8145  00B730  C0A1  F06B         	movff	eval_poly@x+3,___flmul@b+3
  8146  00B734  ECA7  F02F         	call	___flmul	;wreg free
  8147  00B738  C068  F08E         	movff	?___flmul,___fladd@b
  8148  00B73C  C069  F08F         	movff	?___flmul+1,___fladd@b+1
  8149  00B740  C06A  F090         	movff	?___flmul+2,___fladd@b+2
  8150  00B744  C06B  F091         	movff	?___flmul+3,___fladd@b+3
  8151  00B748  0100               	movlb	0	; () banked
  8152  00B74A  07A4               	decf	eval_poly@n& (0+255),f,b
  8153  00B74C  A0D8               	btfss	status,0,c
  8154  00B74E  07A5               	decf	(eval_poly@n+1)& (0+255),f,b
  8155  00B750  C0A4  F0A6         	movff	eval_poly@n,??_eval_poly
  8156  00B754  C0A5  F0A7         	movff	eval_poly@n+1,??_eval_poly+1
  8157  00B758  90D8               	bcf	status,0,c
  8158  00B75A  37A6               	rlcf	??_eval_poly& (0+255),f,b
  8159  00B75C  37A7               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8160  00B75E  90D8               	bcf	status,0,c
  8161  00B760  37A6               	rlcf	??_eval_poly& (0+255),f,b
  8162  00B762  37A7               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8163  00B764  C0A2  F0A8         	movff	eval_poly@d,??_eval_poly+2
  8164  00B768  C0A3  F0A9         	movff	eval_poly@d+1,??_eval_poly+3
  8165  00B76C  51A6               	movf	??_eval_poly& (0+255),w,b
  8166  00B76E  27A8               	addwf	(??_eval_poly+2)& (0+255),f,b
  8167  00B770  51A7               	movf	(??_eval_poly+1)& (0+255),w,b
  8168  00B772  23A9               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8169  00B774  C0A8  FFF6         	movff	??_eval_poly+2,tblptrl
  8170  00B778  C0A9  FFF7         	movff	??_eval_poly+3,tblptrh
  8171  00B77C                     	if	0	;tblptru may be non-zero
  8172  00B77C                     	endif
  8173  00B77C                     	if	0	;tblptru may be non-zero
  8174  00B77C                     	endif
  8175  00B77C  0009               	tblrd		*+
  8176  00B77E  CFF5 F092          	movff	tablat,___fladd@a
  8177  00B782  0009               	tblrd		*+
  8178  00B784  CFF5 F093          	movff	tablat,___fladd@a+1
  8179  00B788  0009               	tblrd		*+
  8180  00B78A  CFF5 F094          	movff	tablat,___fladd@a+2
  8181  00B78E  000A               	tblrd		*-
  8182  00B790  CFF5 F095          	movff	tablat,___fladd@a+3
  8183  00B794  EC46  F02D         	call	___fladd	;wreg free
  8184  00B798  C08E  F0AA         	movff	?___fladd,eval_poly@res
  8185  00B79C  C08F  F0AB         	movff	?___fladd+1,eval_poly@res+1
  8186  00B7A0  C090  F0AC         	movff	?___fladd+2,eval_poly@res+2
  8187  00B7A4  C091  F0AD         	movff	?___fladd+3,eval_poly@res+3
  8188  00B7A8                     l17112:
  8189  00B7A8  0100               	movlb	0	; () banked
  8190  00B7AA  51A4               	movf	eval_poly@n& (0+255),w,b
  8191  00B7AC  11A5               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8192  00B7AE  A4D8               	btfss	status,2,c
  8193  00B7B0  EFDC  F05B         	goto	u18501
  8194  00B7B4  EFDE  F05B         	goto	u18500
  8195  00B7B8                     u18501:
  8196  00B7B8  EF8A  F05B         	goto	l17110
  8197  00B7BC                     u18500:
  8198  00B7BC                     
  8199                           ; BSR set to: 0
  8200  00B7BC  C0AA  F09E         	movff	eval_poly@res,?_eval_poly
  8201  00B7C0  C0AB  F09F         	movff	eval_poly@res+1,?_eval_poly+1
  8202  00B7C4  C0AC  F0A0         	movff	eval_poly@res+2,?_eval_poly+2
  8203  00B7C8  C0AD  F0A1         	movff	eval_poly@res+3,?_eval_poly+3
  8204  00B7CC                     
  8205                           ; BSR set to: 0
  8206  00B7CC  0012               	return		;funcret
  8207  00B7CE                     __end_of_eval_poly:
  8208                           	callstack 0
  8209                           
  8210 ;; *************** function _gasSensor_calib *****************
  8211 ;; Defined at:
  8212 ;;		line 159 in file "sensor.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  chNum           1    wreg     unsigned char 
  8215 ;;  gas_uVolt       4   95[BANK0 ] float 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  chNum           1  147[BANK0 ] unsigned char 
  8218 ;;  baseline       12  135[BANK0 ] float [3]
  8219 ;;  CalibrationG   12  119[BANK0 ] float [3]
  8220 ;;  span           12  107[BANK0 ] float [3]
  8221 ;;  gas_ppm         4  131[BANK0 ] float 
  8222 ;;  gas_percent     4   99[BANK0 ] float 
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  4   95[BANK0 ] float 
  8225 ;; Registers used:
  8226 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8232 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8233 ;;      Locals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8235 ;;      Totals:         0      53       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8236 ;;Total ram usage:       53 bytes
  8237 ;; Hardware stack levels used: 1
  8238 ;; Hardware stack levels required when called: 5
  8239 ;; This function calls:
  8240 ;;		___fladd
  8241 ;;		___fldiv
  8242 ;;		___flmul
  8243 ;;		___flsub
  8244 ;; This function is called by:
  8245 ;;		_gasSensor_read
  8246 ;; This function uses a non-reentrant model
  8247 ;;
  8248                           
  8249                           	psect	text27
  8250  0074FA                     __ptext27:
  8251                           	callstack 0
  8252  0074FA                     _gasSensor_calib:
  8253                           	callstack 23
  8254                           
  8255                           ; BSR set to: 0
  8256                           ;incstack = 0
  8257                           ;gasSensor_calib@chNum stored from wreg
  8258  0074FA  0100               	movlb	0	; () banked
  8259  0074FC  6FF3               	movwf	gasSensor_calib@chNum& (0+255),b
  8260  0074FE                     
  8261                           ;sensor.c: 161: float gas_ppm, gas_percent;;sensor.c: 162: float span[3];;sensor.c: 163:
      +                           float baseline[3];;sensor.c: 164: float CalibrationGas[3];;sensor.c: 166: baseline[chNu
      +                          m] = g_nvm.flash.baseLine_uV[chNum];
  8262  0074FE  0100               	movlb	0	; () banked
  8263  007500  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8264  007502  0D04               	mullw	4
  8265  007504  0E82               	movlw	low (_g_nvm+9)
  8266  007506  24F3               	addwf	243,w,c
  8267  007508  6ED9               	movwf	fsr2l,c
  8268  00750A  0E01               	movlw	high (_g_nvm+9)
  8269  00750C  20F4               	addwfc	prodh,w,c
  8270  00750E  6EDA               	movwf	fsr2h,c
  8271  007510  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8272  007512  0D04               	mullw	4
  8273  007514  0EE7               	movlw	low gasSensor_calib@baseline
  8274  007516  24F3               	addwf	243,w,c
  8275  007518  6EE1               	movwf	fsr1l,c
  8276  00751A  0E00               	movlw	high gasSensor_calib@baseline
  8277  00751C  20F4               	addwfc	prodh,w,c
  8278  00751E  6EE2               	movwf	fsr1h,c
  8279  007520  CFDE FFE6          	movff	postinc2,postinc1
  8280  007524  CFDE FFE6          	movff	postinc2,postinc1
  8281  007528  CFDE FFE6          	movff	postinc2,postinc1
  8282  00752C  CFDE FFE6          	movff	postinc2,postinc1
  8283                           
  8284                           ;sensor.c: 167: span[chNum] = g_nvm.flash.span_uV[chNum];
  8285  007530  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8286  007532  0D04               	mullw	4
  8287  007534  0E8E               	movlw	low (_g_nvm+21)
  8288  007536  24F3               	addwf	243,w,c
  8289  007538  6ED9               	movwf	fsr2l,c
  8290  00753A  0E01               	movlw	high (_g_nvm+21)
  8291  00753C  20F4               	addwfc	prodh,w,c
  8292  00753E  6EDA               	movwf	fsr2h,c
  8293  007540  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8294  007542  0D04               	mullw	4
  8295  007544  0ECB               	movlw	low gasSensor_calib@span
  8296  007546  24F3               	addwf	243,w,c
  8297  007548  6EE1               	movwf	fsr1l,c
  8298  00754A  0E00               	movlw	high gasSensor_calib@span
  8299  00754C  20F4               	addwfc	prodh,w,c
  8300  00754E  6EE2               	movwf	fsr1h,c
  8301  007550  CFDE FFE6          	movff	postinc2,postinc1
  8302  007554  CFDE FFE6          	movff	postinc2,postinc1
  8303  007558  CFDE FFE6          	movff	postinc2,postinc1
  8304  00755C  CFDE FFE6          	movff	postinc2,postinc1
  8305                           
  8306                           ;sensor.c: 168: CalibrationGas[chNum] = g_nvm.flash.CalibrationGas[chNum];
  8307  007560  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8308  007562  0D04               	mullw	4
  8309  007564  0E9A               	movlw	low (_g_nvm+33)
  8310  007566  24F3               	addwf	243,w,c
  8311  007568  6ED9               	movwf	fsr2l,c
  8312  00756A  0E01               	movlw	high (_g_nvm+33)
  8313  00756C  20F4               	addwfc	prodh,w,c
  8314  00756E  6EDA               	movwf	fsr2h,c
  8315  007570  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8316  007572  0D04               	mullw	4
  8317  007574  0ED7               	movlw	low gasSensor_calib@CalibrationGas
  8318  007576  24F3               	addwf	243,w,c
  8319  007578  6EE1               	movwf	fsr1l,c
  8320  00757A  0E00               	movlw	high gasSensor_calib@CalibrationGas
  8321  00757C  20F4               	addwfc	prodh,w,c
  8322  00757E  6EE2               	movwf	fsr1h,c
  8323  007580  CFDE FFE6          	movff	postinc2,postinc1
  8324  007584  CFDE FFE6          	movff	postinc2,postinc1
  8325  007588  CFDE FFE6          	movff	postinc2,postinc1
  8326  00758C  CFDE FFE6          	movff	postinc2,postinc1
  8327  007590                     
  8328                           ; BSR set to: 0
  8329                           ;sensor.c: 170: if (chNum == GAS_CH0) {
  8330  007590  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8331  007592  A4D8               	btfss	status,2,c
  8332  007594  EFCE  F03A         	goto	u20001
  8333  007598  EFD0  F03A         	goto	u20000
  8334  00759C                     u20001:
  8335  00759C  EF4C  F03B         	goto	l18474
  8336  0075A0                     u20000:
  8337  0075A0                     l18466:
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;sensor.c: 171: gas_ppm = CalibrationGas[chNum]/(span[chNum] - baseline[chNum])*(gas_uVo
      +                          lt - baseline[chNum]);
  8341  0075A0  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8342  0075A2  0D04               	mullw	4
  8343  0075A4  0EE7               	movlw	low gasSensor_calib@baseline
  8344  0075A6  24F3               	addwf	243,w,c
  8345  0075A8  6ED9               	movwf	fsr2l,c
  8346  0075AA  0E00               	movlw	high gasSensor_calib@baseline
  8347  0075AC  20F4               	addwfc	prodh,w,c
  8348  0075AE  6EDA               	movwf	fsr2h,c
  8349  0075B0  CFDE F0A2          	movff	postinc2,___flsub@a
  8350  0075B4  CFDE F0A3          	movff	postinc2,___flsub@a+1
  8351  0075B8  CFDE F0A4          	movff	postinc2,___flsub@a+2
  8352  0075BC  CFDE F0A5          	movff	postinc2,___flsub@a+3
  8353  0075C0  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8354  0075C2  0D04               	mullw	4
  8355  0075C4  0ECB               	movlw	low gasSensor_calib@span
  8356  0075C6  24F3               	addwf	243,w,c
  8357  0075C8  6ED9               	movwf	fsr2l,c
  8358  0075CA  0E00               	movlw	high gasSensor_calib@span
  8359  0075CC  20F4               	addwfc	prodh,w,c
  8360  0075CE  6EDA               	movwf	fsr2h,c
  8361  0075D0  CFDE F09E          	movff	postinc2,___flsub@b
  8362  0075D4  CFDE F09F          	movff	postinc2,___flsub@b+1
  8363  0075D8  CFDE F0A0          	movff	postinc2,___flsub@b+2
  8364  0075DC  CFDE F0A1          	movff	postinc2,___flsub@b+3
  8365  0075E0  EC9C  F074         	call	___flsub	;wreg free
  8366  0075E4  C09E  F0AA         	movff	?___flsub,___fldiv@a
  8367  0075E8  C09F  F0AB         	movff	?___flsub+1,___fldiv@a+1
  8368  0075EC  C0A0  F0AC         	movff	?___flsub+2,___fldiv@a+2
  8369  0075F0  C0A1  F0AD         	movff	?___flsub+3,___fldiv@a+3
  8370  0075F4  0100               	movlb	0	; () banked
  8371  0075F6  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8372  0075F8  0D04               	mullw	4
  8373  0075FA  0ED7               	movlw	low gasSensor_calib@CalibrationGas
  8374  0075FC  24F3               	addwf	243,w,c
  8375  0075FE  6ED9               	movwf	fsr2l,c
  8376  007600  0E00               	movlw	high gasSensor_calib@CalibrationGas
  8377  007602  20F4               	addwfc	prodh,w,c
  8378  007604  6EDA               	movwf	fsr2h,c
  8379  007606  CFDE F0A6          	movff	postinc2,___fldiv@b
  8380  00760A  CFDE F0A7          	movff	postinc2,___fldiv@b+1
  8381  00760E  CFDE F0A8          	movff	postinc2,___fldiv@b+2
  8382  007612  CFDE F0A9          	movff	postinc2,___fldiv@b+3
  8383  007616  ECCB  F033         	call	___fldiv	;wreg free
  8384  00761A  C0A6  F068         	movff	?___fldiv,___flmul@b
  8385  00761E  C0A7  F069         	movff	?___fldiv+1,___flmul@b+1
  8386  007622  C0A8  F06A         	movff	?___fldiv+2,___flmul@b+2
  8387  007626  C0A9  F06B         	movff	?___fldiv+3,___flmul@b+3
  8388  00762A  0100               	movlb	0	; () banked
  8389  00762C  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8390  00762E  0D04               	mullw	4
  8391  007630  0EE7               	movlw	low gasSensor_calib@baseline
  8392  007632  24F3               	addwf	243,w,c
  8393  007634  6ED9               	movwf	fsr2l,c
  8394  007636  0E00               	movlw	high gasSensor_calib@baseline
  8395  007638  20F4               	addwfc	prodh,w,c
  8396  00763A  6EDA               	movwf	fsr2h,c
  8397  00763C  CFDE F0A2          	movff	postinc2,___flsub@a
  8398  007640  CFDE F0A3          	movff	postinc2,___flsub@a+1
  8399  007644  CFDE F0A4          	movff	postinc2,___flsub@a+2
  8400  007648  CFDE F0A5          	movff	postinc2,___flsub@a+3
  8401  00764C  C0BF  F09E         	movff	gasSensor_calib@gas_uVolt,___flsub@b
  8402  007650  C0C0  F09F         	movff	gasSensor_calib@gas_uVolt+1,___flsub@b+1
  8403  007654  C0C1  F0A0         	movff	gasSensor_calib@gas_uVolt+2,___flsub@b+2
  8404  007658  C0C2  F0A1         	movff	gasSensor_calib@gas_uVolt+3,___flsub@b+3
  8405  00765C  EC9C  F074         	call	___flsub	;wreg free
  8406  007660  C09E  F06C         	movff	?___flsub,___flmul@a
  8407  007664  C09F  F06D         	movff	?___flsub+1,___flmul@a+1
  8408  007668  C0A0  F06E         	movff	?___flsub+2,___flmul@a+2
  8409  00766C  C0A1  F06F         	movff	?___flsub+3,___flmul@a+3
  8410  007670  ECA7  F02F         	call	___flmul	;wreg free
  8411  007674  C068  F0E3         	movff	?___flmul,gasSensor_calib@gas_ppm
  8412  007678  C069  F0E4         	movff	?___flmul+1,gasSensor_calib@gas_ppm+1
  8413  00767C  C06A  F0E5         	movff	?___flmul+2,gasSensor_calib@gas_ppm+2
  8414  007680  C06B  F0E6         	movff	?___flmul+3,gasSensor_calib@gas_ppm+3
  8415  007684                     
  8416                           ;sensor.c: 172: return gas_ppm;
  8417  007684  C0E3  F0BF         	movff	gasSensor_calib@gas_ppm,?_gasSensor_calib
  8418  007688  C0E4  F0C0         	movff	gasSensor_calib@gas_ppm+1,?_gasSensor_calib+1
  8419  00768C  C0E5  F0C1         	movff	gasSensor_calib@gas_ppm+2,?_gasSensor_calib+2
  8420  007690  C0E6  F0C2         	movff	gasSensor_calib@gas_ppm+3,?_gasSensor_calib+3
  8421  007694  EF08  F03C         	goto	l1384
  8422  007698                     l18474:
  8423                           
  8424                           ; BSR set to: 0
  8425  007698  05F3               	decf	gasSensor_calib@chNum& (0+255),w,b
  8426  00769A  A4D8               	btfss	status,2,c
  8427  00769C  EF52  F03B         	goto	u20011
  8428  0076A0  EF54  F03B         	goto	u20010
  8429  0076A4                     u20011:
  8430  0076A4  EFFD  F03B         	goto	l18486
  8431  0076A8                     u20010:
  8432  0076A8                     
  8433                           ; BSR set to: 0
  8434                           ;sensor.c: 174: gas_percent = ((20.8f - CalibrationGas[chNum])*(gas_uVolt - baseline[chN
      +                          um])/(baseline[chNum] - span[chNum])+ 20.8f);
  8435  0076A8  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8436  0076AA  0D04               	mullw	4
  8437  0076AC  0ECB               	movlw	low gasSensor_calib@span
  8438  0076AE  24F3               	addwf	243,w,c
  8439  0076B0  6ED9               	movwf	fsr2l,c
  8440  0076B2  0E00               	movlw	high gasSensor_calib@span
  8441  0076B4  20F4               	addwfc	prodh,w,c
  8442  0076B6  6EDA               	movwf	fsr2h,c
  8443  0076B8  CFDE F0A2          	movff	postinc2,___flsub@a
  8444  0076BC  CFDE F0A3          	movff	postinc2,___flsub@a+1
  8445  0076C0  CFDE F0A4          	movff	postinc2,___flsub@a+2
  8446  0076C4  CFDE F0A5          	movff	postinc2,___flsub@a+3
  8447  0076C8  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8448  0076CA  0D04               	mullw	4
  8449  0076CC  0EE7               	movlw	low gasSensor_calib@baseline
  8450  0076CE  24F3               	addwf	243,w,c
  8451  0076D0  6ED9               	movwf	fsr2l,c
  8452  0076D2  0E00               	movlw	high gasSensor_calib@baseline
  8453  0076D4  20F4               	addwfc	prodh,w,c
  8454  0076D6  6EDA               	movwf	fsr2h,c
  8455  0076D8  CFDE F09E          	movff	postinc2,___flsub@b
  8456  0076DC  CFDE F09F          	movff	postinc2,___flsub@b+1
  8457  0076E0  CFDE F0A0          	movff	postinc2,___flsub@b+2
  8458  0076E4  CFDE F0A1          	movff	postinc2,___flsub@b+3
  8459  0076E8  EC9C  F074         	call	___flsub	;wreg free
  8460  0076EC  C09E  F0AA         	movff	?___flsub,___fldiv@a
  8461  0076F0  C09F  F0AB         	movff	?___flsub+1,___fldiv@a+1
  8462  0076F4  C0A0  F0AC         	movff	?___flsub+2,___fldiv@a+2
  8463  0076F8  C0A1  F0AD         	movff	?___flsub+3,___fldiv@a+3
  8464  0076FC  0100               	movlb	0	; () banked
  8465  0076FE  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8466  007700  0D04               	mullw	4
  8467  007702  0EE7               	movlw	low gasSensor_calib@baseline
  8468  007704  24F3               	addwf	243,w,c
  8469  007706  6ED9               	movwf	fsr2l,c
  8470  007708  0E00               	movlw	high gasSensor_calib@baseline
  8471  00770A  20F4               	addwfc	prodh,w,c
  8472  00770C  6EDA               	movwf	fsr2h,c
  8473  00770E  CFDE F0A2          	movff	postinc2,___flsub@a
  8474  007712  CFDE F0A3          	movff	postinc2,___flsub@a+1
  8475  007716  CFDE F0A4          	movff	postinc2,___flsub@a+2
  8476  00771A  CFDE F0A5          	movff	postinc2,___flsub@a+3
  8477  00771E  C0BF  F09E         	movff	gasSensor_calib@gas_uVolt,___flsub@b
  8478  007722  C0C0  F09F         	movff	gasSensor_calib@gas_uVolt+1,___flsub@b+1
  8479  007726  C0C1  F0A0         	movff	gasSensor_calib@gas_uVolt+2,___flsub@b+2
  8480  00772A  C0C2  F0A1         	movff	gasSensor_calib@gas_uVolt+3,___flsub@b+3
  8481  00772E  EC9C  F074         	call	___flsub	;wreg free
  8482  007732  C09E  F06C         	movff	?___flsub,___flmul@a
  8483  007736  C09F  F06D         	movff	?___flsub+1,___flmul@a+1
  8484  00773A  C0A0  F06E         	movff	?___flsub+2,___flmul@a+2
  8485  00773E  C0A1  F06F         	movff	?___flsub+3,___flmul@a+3
  8486  007742  0100               	movlb	0	; () banked
  8487  007744  51F3               	movf	gasSensor_calib@chNum& (0+255),w,b
  8488  007746  0D04               	mullw	4
  8489  007748  0ED7               	movlw	low gasSensor_calib@CalibrationGas
  8490  00774A  24F3               	addwf	243,w,c
  8491  00774C  6ED9               	movwf	fsr2l,c
  8492  00774E  0E00               	movlw	high gasSensor_calib@CalibrationGas
  8493  007750  20F4               	addwfc	prodh,w,c
  8494  007752  6EDA               	movwf	fsr2h,c
  8495  007754  CFDE F0A2          	movff	postinc2,___flsub@a
  8496  007758  CFDE F0A3          	movff	postinc2,___flsub@a+1
  8497  00775C  CFDE F0A4          	movff	postinc2,___flsub@a+2
  8498  007760  CFDE F0A5          	movff	postinc2,___flsub@a+3
  8499  007764  0E66               	movlw	102
  8500  007766  6F9E               	movwf	___flsub@b& (0+255),b
  8501  007768  0E66               	movlw	102
  8502  00776A  6F9F               	movwf	(___flsub@b+1)& (0+255),b
  8503  00776C  0EA6               	movlw	166
  8504  00776E  6FA0               	movwf	(___flsub@b+2)& (0+255),b
  8505  007770  0E41               	movlw	65
  8506  007772  6FA1               	movwf	(___flsub@b+3)& (0+255),b
  8507  007774  EC9C  F074         	call	___flsub	;wreg free
  8508  007778  C09E  F068         	movff	?___flsub,___flmul@b
  8509  00777C  C09F  F069         	movff	?___flsub+1,___flmul@b+1
  8510  007780  C0A0  F06A         	movff	?___flsub+2,___flmul@b+2
  8511  007784  C0A1  F06B         	movff	?___flsub+3,___flmul@b+3
  8512  007788  ECA7  F02F         	call	___flmul	;wreg free
  8513  00778C  C068  F0A6         	movff	?___flmul,___fldiv@b
  8514  007790  C069  F0A7         	movff	?___flmul+1,___fldiv@b+1
  8515  007794  C06A  F0A8         	movff	?___flmul+2,___fldiv@b+2
  8516  007798  C06B  F0A9         	movff	?___flmul+3,___fldiv@b+3
  8517  00779C  ECCB  F033         	call	___fldiv	;wreg free
  8518  0077A0  C0A6  F0C7         	movff	?___fldiv,_gasSensor_calib$7081
  8519  0077A4  C0A7  F0C8         	movff	?___fldiv+1,_gasSensor_calib$7081+1
  8520  0077A8  C0A8  F0C9         	movff	?___fldiv+2,_gasSensor_calib$7081+2
  8521  0077AC  C0A9  F0CA         	movff	?___fldiv+3,_gasSensor_calib$7081+3
  8522  0077B0                     
  8523                           ;sensor.c: 174: gas_percent = ((20.8f - CalibrationGas[chNum])*(gas_uVolt - baseline[chN
      +                          um])/(baseline[chNum] - span[chNum])+ 20.8f);
  8524  0077B0  C0C7  F08E         	movff	_gasSensor_calib$7081,___fladd@b
  8525  0077B4  C0C8  F08F         	movff	_gasSensor_calib$7081+1,___fladd@b+1
  8526  0077B8  C0C9  F090         	movff	_gasSensor_calib$7081+2,___fladd@b+2
  8527  0077BC  C0CA  F091         	movff	_gasSensor_calib$7081+3,___fladd@b+3
  8528  0077C0  0E66               	movlw	102
  8529  0077C2  0100               	movlb	0	; () banked
  8530  0077C4  6F92               	movwf	___fladd@a& (0+255),b
  8531  0077C6  0E66               	movlw	102
  8532  0077C8  6F93               	movwf	(___fladd@a+1)& (0+255),b
  8533  0077CA  0EA6               	movlw	166
  8534  0077CC  6F94               	movwf	(___fladd@a+2)& (0+255),b
  8535  0077CE  0E41               	movlw	65
  8536  0077D0  6F95               	movwf	(___fladd@a+3)& (0+255),b
  8537  0077D2  EC46  F02D         	call	___fladd	;wreg free
  8538  0077D6  C08E  F0C3         	movff	?___fladd,gasSensor_calib@gas_percent
  8539  0077DA  C08F  F0C4         	movff	?___fladd+1,gasSensor_calib@gas_percent+1
  8540  0077DE  C090  F0C5         	movff	?___fladd+2,gasSensor_calib@gas_percent+2
  8541  0077E2  C091  F0C6         	movff	?___fladd+3,gasSensor_calib@gas_percent+3
  8542  0077E6                     
  8543                           ;sensor.c: 175: return gas_percent;
  8544  0077E6  C0C3  F0BF         	movff	gasSensor_calib@gas_percent,?_gasSensor_calib
  8545  0077EA  C0C4  F0C0         	movff	gasSensor_calib@gas_percent+1,?_gasSensor_calib+1
  8546  0077EE  C0C5  F0C1         	movff	gasSensor_calib@gas_percent+2,?_gasSensor_calib+2
  8547  0077F2  C0C6  F0C2         	movff	gasSensor_calib@gas_percent+3,?_gasSensor_calib+3
  8548  0077F6  EF08  F03C         	goto	l1384
  8549  0077FA                     l18486:
  8550                           
  8551                           ; BSR set to: 0
  8552  0077FA  0E02               	movlw	2
  8553  0077FC  19F3               	xorwf	gasSensor_calib@chNum& (0+255),w,b
  8554  0077FE  A4D8               	btfss	status,2,c
  8555  007800  EF04  F03C         	goto	u20021
  8556  007804  EF06  F03C         	goto	u20020
  8557  007808                     u20021:
  8558  007808  EF08  F03C         	goto	l1384
  8559  00780C                     u20020:
  8560  00780C  EFD0  F03A         	goto	l18466
  8561  007810                     l1384:
  8562  007810  0012               	return		;funcret
  8563  007812                     __end_of_gasSensor_calib:
  8564                           	callstack 0
  8565                           
  8566 ;; *************** function _GasSensor_Zerofilter *****************
  8567 ;; Defined at:
  8568 ;;		line 215 in file "sensor.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  chNum           1    wreg     unsigned char 
  8571 ;;  gasConcent      4   26[COMRAM] float 
  8572 ;; Auto vars:     Size  Location     Type
  8573 ;;  chNum           1   30[COMRAM] unsigned char 
  8574 ;;  retval          4   31[COMRAM] float 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  4   26[COMRAM] float 
  8577 ;; Registers used:
  8578 ;;		wreg, status,2, status,0, cstack
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8585 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8587 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8588 ;;Total ram usage:        9 bytes
  8589 ;; Hardware stack levels used: 1
  8590 ;; Hardware stack levels required when called: 4
  8591 ;; This function calls:
  8592 ;;		___flge
  8593 ;; This function is called by:
  8594 ;;		_gasSensor_read
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           	psect	text28
  8599  0082F2                     __ptext28:
  8600                           	callstack 0
  8601  0082F2                     _GasSensor_Zerofilter:
  8602                           	callstack 24
  8603                           
  8604                           ;incstack = 0
  8605                           ;GasSensor_Zerofilter@chNum stored from wreg
  8606  0082F2  6E1F               	movwf	GasSensor_Zerofilter@chNum^0,c
  8607  0082F4                     
  8608                           ;sensor.c: 217: float retval;;sensor.c: 218: if (chNum == GAS_CH0 || chNum == GAS_CH2) {
  8609  0082F4  501F               	movf	GasSensor_Zerofilter@chNum^0,w,c
  8610  0082F6  B4D8               	btfsc	status,2,c
  8611  0082F8  EF80  F041         	goto	u20031
  8612  0082FC  EF82  F041         	goto	u20030
  8613  008300                     u20031:
  8614  008300  EF8B  F041         	goto	l18498
  8615  008304                     u20030:
  8616  008304  0E02               	movlw	2
  8617  008306  181F               	xorwf	GasSensor_Zerofilter@chNum^0,w,c
  8618  008308  A4D8               	btfss	status,2,c
  8619  00830A  EF89  F041         	goto	u20041
  8620  00830E  EF8B  F041         	goto	u20040
  8621  008312                     u20041:
  8622  008312  EF9E  F042         	goto	l1426
  8623  008316                     u20040:
  8624  008316                     l18498:
  8625                           
  8626                           ;sensor.c: 219: if (gasConcent > -0.5f && gasConcent < 0.5f)
  8627  008316  0E00               	movlw	0
  8628  008318  6E0F               	movwf	___flge@ff1^0,c
  8629  00831A  0E00               	movlw	0
  8630  00831C  6E10               	movwf	(___flge@ff1+1)^0,c
  8631  00831E  0E00               	movlw	0
  8632  008320  6E11               	movwf	(___flge@ff1+2)^0,c
  8633  008322  0EBF               	movlw	191
  8634  008324  6E12               	movwf	(___flge@ff1+3)^0,c
  8635  008326  C01B  F013         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff2
  8636  00832A  C01C  F014         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff2+1
  8637  00832E  C01D  F015         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff2+2
  8638  008332  C01E  F016         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff2+3
  8639  008336  ECE7  F05B         	call	___flge	;wreg free
  8640  00833A  B0D8               	btfsc	status,0,c
  8641  00833C  EFA2  F041         	goto	u20051
  8642  008340  EFA4  F041         	goto	u20050
  8643  008344                     u20051:
  8644  008344  EFC7  F041         	goto	l18504
  8645  008348                     u20050:
  8646  008348  C01B  F00F         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff1
  8647  00834C  C01C  F010         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff1+1
  8648  008350  C01D  F011         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff1+2
  8649  008354  C01E  F012         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff1+3
  8650  008358  0E00               	movlw	0
  8651  00835A  6E13               	movwf	___flge@ff2^0,c
  8652  00835C  0E00               	movlw	0
  8653  00835E  6E14               	movwf	(___flge@ff2+1)^0,c
  8654  008360  0E00               	movlw	0
  8655  008362  6E15               	movwf	(___flge@ff2+2)^0,c
  8656  008364  0E3F               	movlw	63
  8657  008366  6E16               	movwf	(___flge@ff2+3)^0,c
  8658  008368  ECE7  F05B         	call	___flge	;wreg free
  8659  00836C  B0D8               	btfsc	status,0,c
  8660  00836E  EFBB  F041         	goto	u20061
  8661  008372  EFBD  F041         	goto	u20060
  8662  008376                     u20061:
  8663  008376  EFC7  F041         	goto	l18504
  8664  00837A                     u20060:
  8665  00837A                     
  8666                           ;sensor.c: 220: retval = 0.0f;
  8667  00837A  0E00               	movlw	0
  8668  00837C  6E20               	movwf	GasSensor_Zerofilter@retval^0,c
  8669  00837E  0E00               	movlw	0
  8670  008380  6E21               	movwf	(GasSensor_Zerofilter@retval+1)^0,c
  8671  008382  0E00               	movlw	0
  8672  008384  6E22               	movwf	(GasSensor_Zerofilter@retval+2)^0,c
  8673  008386  0E00               	movlw	0
  8674  008388  6E23               	movwf	(GasSensor_Zerofilter@retval+3)^0,c
  8675  00838A  EFA6  F042         	goto	l1428
  8676  00838E                     l18504:
  8677                           
  8678                           ;sensor.c: 221: else if (gasConcent > -1.0f && gasConcent <= -0.5f)
  8679  00838E  0E00               	movlw	0
  8680  008390  6E0F               	movwf	___flge@ff1^0,c
  8681  008392  0E00               	movlw	0
  8682  008394  6E10               	movwf	(___flge@ff1+1)^0,c
  8683  008396  0E80               	movlw	128
  8684  008398  6E11               	movwf	(___flge@ff1+2)^0,c
  8685  00839A  0EBF               	movlw	191
  8686  00839C  6E12               	movwf	(___flge@ff1+3)^0,c
  8687  00839E  C01B  F013         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff2
  8688  0083A2  C01C  F014         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff2+1
  8689  0083A6  C01D  F015         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff2+2
  8690  0083AA  C01E  F016         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff2+3
  8691  0083AE  ECE7  F05B         	call	___flge	;wreg free
  8692  0083B2  B0D8               	btfsc	status,0,c
  8693  0083B4  EFDE  F041         	goto	u20071
  8694  0083B8  EFE0  F041         	goto	u20070
  8695  0083BC                     u20071:
  8696  0083BC  EF03  F042         	goto	l18510
  8697  0083C0                     u20070:
  8698  0083C0  0E00               	movlw	0
  8699  0083C2  6E0F               	movwf	___flge@ff1^0,c
  8700  0083C4  0E00               	movlw	0
  8701  0083C6  6E10               	movwf	(___flge@ff1+1)^0,c
  8702  0083C8  0E00               	movlw	0
  8703  0083CA  6E11               	movwf	(___flge@ff1+2)^0,c
  8704  0083CC  0EBF               	movlw	191
  8705  0083CE  6E12               	movwf	(___flge@ff1+3)^0,c
  8706  0083D0  C01B  F013         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff2
  8707  0083D4  C01C  F014         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff2+1
  8708  0083D8  C01D  F015         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff2+2
  8709  0083DC  C01E  F016         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff2+3
  8710  0083E0  ECE7  F05B         	call	___flge	;wreg free
  8711  0083E4  A0D8               	btfss	status,0,c
  8712  0083E6  EFF7  F041         	goto	u20081
  8713  0083EA  EFF9  F041         	goto	u20080
  8714  0083EE                     u20081:
  8715  0083EE  EF03  F042         	goto	l18510
  8716  0083F2                     u20080:
  8717  0083F2                     
  8718                           ;sensor.c: 222: retval = 0.01f;
  8719  0083F2  0E0A               	movlw	10
  8720  0083F4  6E20               	movwf	GasSensor_Zerofilter@retval^0,c
  8721  0083F6  0ED7               	movlw	215
  8722  0083F8  6E21               	movwf	(GasSensor_Zerofilter@retval+1)^0,c
  8723  0083FA  0E23               	movlw	35
  8724  0083FC  6E22               	movwf	(GasSensor_Zerofilter@retval+2)^0,c
  8725  0083FE  0E3C               	movlw	60
  8726  008400  6E23               	movwf	(GasSensor_Zerofilter@retval+3)^0,c
  8727  008402  EFA6  F042         	goto	l1428
  8728  008406                     l18510:
  8729                           
  8730                           ;sensor.c: 223: else if (gasConcent > -5.0f && gasConcent <= -1.0f)
  8731  008406  0E00               	movlw	0
  8732  008408  6E0F               	movwf	___flge@ff1^0,c
  8733  00840A  0E00               	movlw	0
  8734  00840C  6E10               	movwf	(___flge@ff1+1)^0,c
  8735  00840E  0EA0               	movlw	160
  8736  008410  6E11               	movwf	(___flge@ff1+2)^0,c
  8737  008412  0EC0               	movlw	192
  8738  008414  6E12               	movwf	(___flge@ff1+3)^0,c
  8739  008416  C01B  F013         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff2
  8740  00841A  C01C  F014         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff2+1
  8741  00841E  C01D  F015         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff2+2
  8742  008422  C01E  F016         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff2+3
  8743  008426  ECE7  F05B         	call	___flge	;wreg free
  8744  00842A  B0D8               	btfsc	status,0,c
  8745  00842C  EF1A  F042         	goto	u20091
  8746  008430  EF1C  F042         	goto	u20090
  8747  008434                     u20091:
  8748  008434  EF3F  F042         	goto	l18516
  8749  008438                     u20090:
  8750  008438  0E00               	movlw	0
  8751  00843A  6E0F               	movwf	___flge@ff1^0,c
  8752  00843C  0E00               	movlw	0
  8753  00843E  6E10               	movwf	(___flge@ff1+1)^0,c
  8754  008440  0E80               	movlw	128
  8755  008442  6E11               	movwf	(___flge@ff1+2)^0,c
  8756  008444  0EBF               	movlw	191
  8757  008446  6E12               	movwf	(___flge@ff1+3)^0,c
  8758  008448  C01B  F013         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff2
  8759  00844C  C01C  F014         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff2+1
  8760  008450  C01D  F015         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff2+2
  8761  008454  C01E  F016         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff2+3
  8762  008458  ECE7  F05B         	call	___flge	;wreg free
  8763  00845C  A0D8               	btfss	status,0,c
  8764  00845E  EF33  F042         	goto	u20101
  8765  008462  EF35  F042         	goto	u20100
  8766  008466                     u20101:
  8767  008466  EF3F  F042         	goto	l18516
  8768  00846A                     u20100:
  8769  00846A                     
  8770                           ;sensor.c: 224: retval = 0.02f;
  8771  00846A  0E0A               	movlw	10
  8772  00846C  6E20               	movwf	GasSensor_Zerofilter@retval^0,c
  8773  00846E  0ED7               	movlw	215
  8774  008470  6E21               	movwf	(GasSensor_Zerofilter@retval+1)^0,c
  8775  008472  0EA3               	movlw	163
  8776  008474  6E22               	movwf	(GasSensor_Zerofilter@retval+2)^0,c
  8777  008476  0E3C               	movlw	60
  8778  008478  6E23               	movwf	(GasSensor_Zerofilter@retval+3)^0,c
  8779  00847A  EFA6  F042         	goto	l1428
  8780  00847E                     l18516:
  8781                           
  8782                           ;sensor.c: 225: else if (gasConcent > -10.0f && gasConcent <= -5.0f)
  8783  00847E  0E00               	movlw	0
  8784  008480  6E0F               	movwf	___flge@ff1^0,c
  8785  008482  0E00               	movlw	0
  8786  008484  6E10               	movwf	(___flge@ff1+1)^0,c
  8787  008486  0E20               	movlw	32
  8788  008488  6E11               	movwf	(___flge@ff1+2)^0,c
  8789  00848A  0EC1               	movlw	193
  8790  00848C  6E12               	movwf	(___flge@ff1+3)^0,c
  8791  00848E  C01B  F013         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff2
  8792  008492  C01C  F014         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff2+1
  8793  008496  C01D  F015         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff2+2
  8794  00849A  C01E  F016         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff2+3
  8795  00849E  ECE7  F05B         	call	___flge	;wreg free
  8796  0084A2  B0D8               	btfsc	status,0,c
  8797  0084A4  EF56  F042         	goto	u20111
  8798  0084A8  EF58  F042         	goto	u20110
  8799  0084AC                     u20111:
  8800  0084AC  EF7B  F042         	goto	l18522
  8801  0084B0                     u20110:
  8802  0084B0  0E00               	movlw	0
  8803  0084B2  6E0F               	movwf	___flge@ff1^0,c
  8804  0084B4  0E00               	movlw	0
  8805  0084B6  6E10               	movwf	(___flge@ff1+1)^0,c
  8806  0084B8  0EA0               	movlw	160
  8807  0084BA  6E11               	movwf	(___flge@ff1+2)^0,c
  8808  0084BC  0EC0               	movlw	192
  8809  0084BE  6E12               	movwf	(___flge@ff1+3)^0,c
  8810  0084C0  C01B  F013         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff2
  8811  0084C4  C01C  F014         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff2+1
  8812  0084C8  C01D  F015         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff2+2
  8813  0084CC  C01E  F016         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff2+3
  8814  0084D0  ECE7  F05B         	call	___flge	;wreg free
  8815  0084D4  A0D8               	btfss	status,0,c
  8816  0084D6  EF6F  F042         	goto	u20121
  8817  0084DA  EF71  F042         	goto	u20120
  8818  0084DE                     u20121:
  8819  0084DE  EF7B  F042         	goto	l18522
  8820  0084E2                     u20120:
  8821  0084E2                     
  8822                           ;sensor.c: 226: retval = 0.03f;
  8823  0084E2  0E8F               	movlw	143
  8824  0084E4  6E20               	movwf	GasSensor_Zerofilter@retval^0,c
  8825  0084E6  0EC2               	movlw	194
  8826  0084E8  6E21               	movwf	(GasSensor_Zerofilter@retval+1)^0,c
  8827  0084EA  0EF5               	movlw	245
  8828  0084EC  6E22               	movwf	(GasSensor_Zerofilter@retval+2)^0,c
  8829  0084EE  0E3C               	movlw	60
  8830  0084F0  6E23               	movwf	(GasSensor_Zerofilter@retval+3)^0,c
  8831  0084F2  EFA6  F042         	goto	l1428
  8832  0084F6                     l18522:
  8833                           
  8834                           ;sensor.c: 227: else if (gasConcent <= -10.0f)
  8835  0084F6  0E00               	movlw	0
  8836  0084F8  6E0F               	movwf	___flge@ff1^0,c
  8837  0084FA  0E00               	movlw	0
  8838  0084FC  6E10               	movwf	(___flge@ff1+1)^0,c
  8839  0084FE  0E20               	movlw	32
  8840  008500  6E11               	movwf	(___flge@ff1+2)^0,c
  8841  008502  0EC1               	movlw	193
  8842  008504  6E12               	movwf	(___flge@ff1+3)^0,c
  8843  008506  C01B  F013         	movff	GasSensor_Zerofilter@gasConcent,___flge@ff2
  8844  00850A  C01C  F014         	movff	GasSensor_Zerofilter@gasConcent+1,___flge@ff2+1
  8845  00850E  C01D  F015         	movff	GasSensor_Zerofilter@gasConcent+2,___flge@ff2+2
  8846  008512  C01E  F016         	movff	GasSensor_Zerofilter@gasConcent+3,___flge@ff2+3
  8847  008516  ECE7  F05B         	call	___flge	;wreg free
  8848  00851A  A0D8               	btfss	status,0,c
  8849  00851C  EF92  F042         	goto	u20131
  8850  008520  EF94  F042         	goto	u20130
  8851  008524                     u20131:
  8852  008524  EF9E  F042         	goto	l1426
  8853  008528                     u20130:
  8854  008528                     
  8855                           ;sensor.c: 228: retval = 0.04f;
  8856  008528  0E0A               	movlw	10
  8857  00852A  6E20               	movwf	GasSensor_Zerofilter@retval^0,c
  8858  00852C  0ED7               	movlw	215
  8859  00852E  6E21               	movwf	(GasSensor_Zerofilter@retval+1)^0,c
  8860  008530  0E23               	movlw	35
  8861  008532  6E22               	movwf	(GasSensor_Zerofilter@retval+2)^0,c
  8862  008534  0E3D               	movlw	61
  8863  008536  6E23               	movwf	(GasSensor_Zerofilter@retval+3)^0,c
  8864  008538  EFA6  F042         	goto	l1428
  8865  00853C                     l1426:
  8866                           
  8867                           ;sensor.c: 229: else;sensor.c: 230: retval = gasConcent;
  8868  00853C  C01B  F020         	movff	GasSensor_Zerofilter@gasConcent,GasSensor_Zerofilter@retval
  8869  008540  C01C  F021         	movff	GasSensor_Zerofilter@gasConcent+1,GasSensor_Zerofilter@retval+1
  8870  008544  C01D  F022         	movff	GasSensor_Zerofilter@gasConcent+2,GasSensor_Zerofilter@retval+2
  8871  008548  C01E  F023         	movff	GasSensor_Zerofilter@gasConcent+3,GasSensor_Zerofilter@retval+3
  8872  00854C                     l1428:
  8873                           
  8874                           ;sensor.c: 233: return retval;
  8875  00854C  C020  F01B         	movff	GasSensor_Zerofilter@retval,?_GasSensor_Zerofilter
  8876  008550  C021  F01C         	movff	GasSensor_Zerofilter@retval+1,?_GasSensor_Zerofilter+1
  8877  008554  C022  F01D         	movff	GasSensor_Zerofilter@retval+2,?_GasSensor_Zerofilter+2
  8878  008558  C023  F01E         	movff	GasSensor_Zerofilter@retval+3,?_GasSensor_Zerofilter+3
  8879  00855C  0012               	return		;funcret
  8880  00855E                     __end_of_GasSensor_Zerofilter:
  8881                           	callstack 0
  8882                           
  8883 ;; *************** function _Sensors_initialize *****************
  8884 ;; Defined at:
  8885 ;;		line 43 in file "sensor.c"
  8886 ;; Parameters:    Size  Location     Type
  8887 ;;		None
  8888 ;; Auto vars:     Size  Location     Type
  8889 ;;		None
  8890 ;; Return value:  Size  Location     Type
  8891 ;;                  1    wreg      void 
  8892 ;; Registers used:
  8893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8894 ;; Tracked objects:
  8895 ;;		On entry : 0/0
  8896 ;;		On exit  : 0/0
  8897 ;;		Unchanged: 0/0
  8898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8903 ;;Total ram usage:        0 bytes
  8904 ;; Hardware stack levels used: 1
  8905 ;; Hardware stack levels required when called: 9
  8906 ;; This function calls:
  8907 ;;		_sensor_lmp_initialize
  8908 ;;		_sensor_sht3x_init
  8909 ;; This function is called by:
  8910 ;;		_sensMeasure_task
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text29
  8915  00EEC6                     __ptext29:
  8916                           	callstack 0
  8917  00EEC6                     _Sensors_initialize:
  8918                           	callstack 20
  8919  00EEC6                     
  8920                           ;sensor.c: 45: g_sens_measure.isLMP_InitDone[0] = sensor_lmp_initialize(0);
  8921  00EEC6  0E00               	movlw	0
  8922  00EEC8  EC93  F060         	call	_sensor_lmp_initialize
  8923  00EECC  0101               	movlb	1	; () banked
  8924  00EECE  6F11               	movwf	(_g_sens_measure+3)& (0+255),b
  8925                           
  8926                           ;sensor.c: 46: g_sens_measure.isLMP_InitDone[1] = sensor_lmp_initialize(1);
  8927  00EED0  0E01               	movlw	1
  8928  00EED2  EC93  F060         	call	_sensor_lmp_initialize
  8929  00EED6  0101               	movlb	1	; () banked
  8930  00EED8  6F12               	movwf	(_g_sens_measure+4)& (0+255),b
  8931                           
  8932                           ;sensor.c: 47: sensor_lmp_initialize(2);
  8933  00EEDA  0E02               	movlw	2
  8934  00EEDC  EC93  F060         	call	_sensor_lmp_initialize
  8935                           
  8936                           ;sensor.c: 48: g_sens_measure.isTemp_InitDone = sensor_sht3x_init();
  8937  00EEE0  ECE3  F06F         	call	_sensor_sht3x_init	;wreg free
  8938  00EEE4  0101               	movlb	1	; () banked
  8939  00EEE6  6F15               	movwf	(_g_sens_measure+7)& (0+255),b
  8940  00EEE8                     
  8941                           ; BSR set to: 1
  8942  00EEE8  0012               	return		;funcret
  8943  00EEEA                     __end_of_Sensors_initialize:
  8944                           	callstack 0
  8945                           
  8946 ;; *************** function _sensor_sht3x_init *****************
  8947 ;; Defined at:
  8948 ;;		line 51 in file "sensor.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;		None
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;		None
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      unsigned char 
  8955 ;; Registers used:
  8956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8964 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8966 ;;Total ram usage:        2 bytes
  8967 ;; Hardware stack levels used: 1
  8968 ;; Hardware stack levels required when called: 7
  8969 ;; This function calls:
  8970 ;;		_sht3x_clear_status_reg
  8971 ;;		_sht3x_heaterOff
  8972 ;;		_sht3x_measure_start
  8973 ;; This function is called by:
  8974 ;;		_Sensors_initialize
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	text30
  8979  00DFC6                     __ptext30:
  8980                           	callstack 0
  8981  00DFC6                     _sensor_sht3x_init:
  8982                           	callstack 21
  8983  00DFC6                     
  8984                           ;sensor.c: 53: if (sht3x_heaterOff() == 0)
  8985  00DFC6  ECDE  F077         	call	_sht3x_heaterOff	;wreg free
  8986  00DFCA  0900               	iorlw	0
  8987  00DFCC  A4D8               	btfss	status,2,c
  8988  00DFCE  EFEB  F06F         	goto	u19851
  8989  00DFD2  EFED  F06F         	goto	u19850
  8990  00DFD6                     u19851:
  8991  00DFD6  EFF0  F06F         	goto	l18354
  8992  00DFDA                     u19850:
  8993  00DFDA                     l18350:
  8994                           
  8995                           ;sensor.c: 54: return 0;
  8996  00DFDA  0E00               	movlw	0
  8997  00DFDC  EF14  F070         	goto	l1338
  8998  00DFE0                     l18354:
  8999                           
  9000                           ;sensor.c: 56: _delay((unsigned long)((50)*(48000000/4000.0)));
  9001  00DFE0  0E04               	movlw	4
  9002  00DFE2  6E1D               	movwf	(??_sensor_sht3x_init+1)^0,c
  9003  00DFE4  0E0C               	movlw	12
  9004  00DFE6  6E1C               	movwf	??_sensor_sht3x_init^0,c
  9005  00DFE8  0E34               	movlw	52
  9006  00DFEA                     u21867:
  9007  00DFEA  2EE8               	decfsz	wreg,f,c
  9008  00DFEC  D7FE               	bra	u21867
  9009  00DFEE  2E1C               	decfsz	??_sensor_sht3x_init^0,f,c
  9010  00DFF0  D7FC               	bra	u21867
  9011  00DFF2  2E1D               	decfsz	(??_sensor_sht3x_init+1)^0,f,c
  9012  00DFF4  D7FA               	bra	u21867
  9013  00DFF6                     
  9014                           ;sensor.c: 58: if (sht3x_clear_status_reg() == 0)
  9015  00DFF6  ECEE  F077         	call	_sht3x_clear_status_reg	;wreg free
  9016  00DFFA  0900               	iorlw	0
  9017  00DFFC  A4D8               	btfss	status,2,c
  9018  00DFFE  EF03  F070         	goto	u19861
  9019  00E002  EF05  F070         	goto	u19860
  9020  00E006                     u19861:
  9021  00E006  EF07  F070         	goto	l18362
  9022  00E00A                     u19860:
  9023  00E00A  EFED  F06F         	goto	l18350
  9024  00E00E                     l18362:
  9025                           
  9026                           ;sensor.c: 61: _delay((unsigned long)((50)*(48000000/4000.0)));
  9027  00E00E  0E04               	movlw	4
  9028  00E010  6E1D               	movwf	(??_sensor_sht3x_init+1)^0,c
  9029  00E012  0E0C               	movlw	12
  9030  00E014  6E1C               	movwf	??_sensor_sht3x_init^0,c
  9031  00E016  0E34               	movlw	52
  9032  00E018                     u21877:
  9033  00E018  2EE8               	decfsz	wreg,f,c
  9034  00E01A  D7FE               	bra	u21877
  9035  00E01C  2E1C               	decfsz	??_sensor_sht3x_init^0,f,c
  9036  00E01E  D7FC               	bra	u21877
  9037  00E020  2E1D               	decfsz	(??_sensor_sht3x_init+1)^0,f,c
  9038  00E022  D7FA               	bra	u21877
  9039  00E024                     
  9040                           ;sensor.c: 64: return sht3x_measure_start();
  9041  00E024  ECCE  F077         	call	_sht3x_measure_start	;wreg free
  9042  00E028                     l1338:
  9043  00E028  0012               	return		;funcret
  9044  00E02A                     __end_of_sensor_sht3x_init:
  9045                           	callstack 0
  9046                           
  9047 ;; *************** function _sht3x_measure_start *****************
  9048 ;; Defined at:
  9049 ;;		line 52 in file "bsp/sht3x.c"
  9050 ;; Parameters:    Size  Location     Type
  9051 ;;		None
  9052 ;; Auto vars:     Size  Location     Type
  9053 ;;  cmd             2   25[COMRAM] unsigned char [2]
  9054 ;; Return value:  Size  Location     Type
  9055 ;;                  1    wreg      unsigned char 
  9056 ;; Registers used:
  9057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9058 ;; Tracked objects:
  9059 ;;		On entry : 0/0
  9060 ;;		On exit  : 0/0
  9061 ;;		Unchanged: 0/0
  9062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9064 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9067 ;;Total ram usage:        2 bytes
  9068 ;; Hardware stack levels used: 1
  9069 ;; Hardware stack levels required when called: 6
  9070 ;; This function calls:
  9071 ;;		_i2c_writeBytes
  9072 ;; This function is called by:
  9073 ;;		_sensor_sht3x_init
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text31
  9078  00EF9C                     __ptext31:
  9079                           	callstack 0
  9080  00EF9C                     _sht3x_measure_start:
  9081                           	callstack 21
  9082  00EF9C                     
  9083                           ;sht3x.c: 54: uint8_t cmd[2];;sht3x.c: 55: cmd[0] = 0x21;
  9084  00EF9C  0E21               	movlw	33
  9085  00EF9E  6E1A               	movwf	sht3x_measure_start@cmd^0,c
  9086                           
  9087                           ;sht3x.c: 56: cmd[1] = 0x2d;
  9088  00EFA0  0E2D               	movlw	45
  9089  00EFA2  6E1B               	movwf	(sht3x_measure_start@cmd+1)^0,c
  9090  00EFA4                     
  9091                           ;sht3x.c: 57: return i2c_writeBytes(0x88, cmd, 2, 1);
  9092  00EFA4  0E1A               	movlw	low sht3x_measure_start@cmd
  9093  00EFA6  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  9094  00EFA8  0E00               	movlw	high sht3x_measure_start@cmd
  9095  00EFAA  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  9096  00EFAC  0E02               	movlw	2
  9097  00EFAE  6E17               	movwf	i2c_writeBytes@len^0,c
  9098  00EFB0  0E01               	movlw	1
  9099  00EFB2  6E18               	movwf	i2c_writeBytes@isStop^0,c
  9100  00EFB4  0E88               	movlw	136
  9101  00EFB6  ECF6  F072         	call	_i2c_writeBytes
  9102  00EFBA  0012               	return		;funcret
  9103  00EFBC                     __end_of_sht3x_measure_start:
  9104                           	callstack 0
  9105                           
  9106 ;; *************** function _sht3x_heaterOff *****************
  9107 ;; Defined at:
  9108 ;;		line 283 in file "bsp/sht3x.c"
  9109 ;; Parameters:    Size  Location     Type
  9110 ;;		None
  9111 ;; Auto vars:     Size  Location     Type
  9112 ;;  cmd             2   25[COMRAM] unsigned char [2]
  9113 ;; Return value:  Size  Location     Type
  9114 ;;                  1    wreg      unsigned char 
  9115 ;; Registers used:
  9116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9117 ;; Tracked objects:
  9118 ;;		On entry : 0/0
  9119 ;;		On exit  : 0/0
  9120 ;;		Unchanged: 0/0
  9121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9123 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9126 ;;Total ram usage:        2 bytes
  9127 ;; Hardware stack levels used: 1
  9128 ;; Hardware stack levels required when called: 6
  9129 ;; This function calls:
  9130 ;;		_i2c_writeBytes
  9131 ;; This function is called by:
  9132 ;;		_sensor_sht3x_init
  9133 ;; This function uses a non-reentrant model
  9134 ;;
  9135                           
  9136                           	psect	text32
  9137  00EFBC                     __ptext32:
  9138                           	callstack 0
  9139  00EFBC                     _sht3x_heaterOff:
  9140                           	callstack 21
  9141  00EFBC                     
  9142                           ;sht3x.c: 285: uint8_t cmd[2];;sht3x.c: 286: cmd[0] = 0X30;
  9143  00EFBC  0E30               	movlw	48
  9144  00EFBE  6E1A               	movwf	sht3x_heaterOff@cmd^0,c
  9145                           
  9146                           ;sht3x.c: 287: cmd[1] = 0X66;
  9147  00EFC0  0E66               	movlw	102
  9148  00EFC2  6E1B               	movwf	(sht3x_heaterOff@cmd+1)^0,c
  9149  00EFC4                     
  9150                           ;sht3x.c: 288: return i2c_writeBytes(0x88, cmd, 2, 1);
  9151  00EFC4  0E1A               	movlw	low sht3x_heaterOff@cmd
  9152  00EFC6  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  9153  00EFC8  0E00               	movlw	high sht3x_heaterOff@cmd
  9154  00EFCA  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  9155  00EFCC  0E02               	movlw	2
  9156  00EFCE  6E17               	movwf	i2c_writeBytes@len^0,c
  9157  00EFD0  0E01               	movlw	1
  9158  00EFD2  6E18               	movwf	i2c_writeBytes@isStop^0,c
  9159  00EFD4  0E88               	movlw	136
  9160  00EFD6  ECF6  F072         	call	_i2c_writeBytes
  9161  00EFDA  0012               	return		;funcret
  9162  00EFDC                     __end_of_sht3x_heaterOff:
  9163                           	callstack 0
  9164                           
  9165 ;; *************** function _sht3x_clear_status_reg *****************
  9166 ;; Defined at:
  9167 ;;		line 249 in file "bsp/sht3x.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;		None
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  cmd             2   25[COMRAM] unsigned char [2]
  9172 ;; Return value:  Size  Location     Type
  9173 ;;                  1    wreg      unsigned char 
  9174 ;; Registers used:
  9175 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9176 ;; Tracked objects:
  9177 ;;		On entry : 0/0
  9178 ;;		On exit  : 0/0
  9179 ;;		Unchanged: 0/0
  9180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9182 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9184 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9185 ;;Total ram usage:        2 bytes
  9186 ;; Hardware stack levels used: 1
  9187 ;; Hardware stack levels required when called: 6
  9188 ;; This function calls:
  9189 ;;		_i2c_writeBytes
  9190 ;; This function is called by:
  9191 ;;		_sensor_sht3x_init
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195                           	psect	text33
  9196  00EFDC                     __ptext33:
  9197                           	callstack 0
  9198  00EFDC                     _sht3x_clear_status_reg:
  9199                           	callstack 21
  9200  00EFDC                     
  9201                           ;sht3x.c: 251: uint8_t cmd[2];;sht3x.c: 252: cmd[0] = 0x30;
  9202  00EFDC  0E30               	movlw	48
  9203  00EFDE  6E1A               	movwf	sht3x_clear_status_reg@cmd^0,c
  9204                           
  9205                           ;sht3x.c: 253: cmd[1] = 0x41;
  9206  00EFE0  0E41               	movlw	65
  9207  00EFE2  6E1B               	movwf	(sht3x_clear_status_reg@cmd+1)^0,c
  9208  00EFE4                     
  9209                           ;sht3x.c: 254: return i2c_writeBytes(0x88, cmd, 2, 1);
  9210  00EFE4  0E1A               	movlw	low sht3x_clear_status_reg@cmd
  9211  00EFE6  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  9212  00EFE8  0E00               	movlw	high sht3x_clear_status_reg@cmd
  9213  00EFEA  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  9214  00EFEC  0E02               	movlw	2
  9215  00EFEE  6E17               	movwf	i2c_writeBytes@len^0,c
  9216  00EFF0  0E01               	movlw	1
  9217  00EFF2  6E18               	movwf	i2c_writeBytes@isStop^0,c
  9218  00EFF4  0E88               	movlw	136
  9219  00EFF6  ECF6  F072         	call	_i2c_writeBytes
  9220  00EFFA  0012               	return		;funcret
  9221  00EFFC                     __end_of_sht3x_clear_status_reg:
  9222                           	callstack 0
  9223                           
  9224 ;; *************** function _sensor_lmp_initialize *****************
  9225 ;; Defined at:
  9226 ;;		line 67 in file "sensor.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;  chNum           1    wreg     unsigned char 
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;  chNum           1   36[COMRAM] unsigned char 
  9231 ;;  lmp_gain        1   35[COMRAM] unsigned char 
  9232 ;; Return value:  Size  Location     Type
  9233 ;;                  1    wreg      unsigned char 
  9234 ;; Registers used:
  9235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9236 ;; Tracked objects:
  9237 ;;		On entry : 0/0
  9238 ;;		On exit  : 0/0
  9239 ;;		Unchanged: 0/0
  9240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9242 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9244 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9245 ;;Total ram usage:        2 bytes
  9246 ;; Hardware stack levels used: 1
  9247 ;; Hardware stack levels required when called: 8
  9248 ;; This function calls:
  9249 ;;		_lmp91000_isReady
  9250 ;;		_lmp91000_set_GainRLoad
  9251 ;;		_lmp91000_set_Mode
  9252 ;;		_lmp91000_set_Reference
  9253 ;;		_lmp91000_unlock
  9254 ;; This function is called by:
  9255 ;;		_Sensors_initialize
  9256 ;; This function uses a non-reentrant model
  9257 ;;
  9258                           
  9259                           	psect	text34
  9260  00C126                     __ptext34:
  9261                           	callstack 0
  9262  00C126                     _sensor_lmp_initialize:
  9263                           	callstack 20
  9264                           
  9265                           ;incstack = 0
  9266                           ;sensor_lmp_initialize@chNum stored from wreg
  9267  00C126  6E25               	movwf	sensor_lmp_initialize@chNum^0,c
  9268  00C128                     
  9269                           ;sensor.c: 69: uint8_t lmp_gain;;sensor.c: 71: switch(chNum)
  9270  00C128  EF9A  F060         	goto	l18312
  9271  00C12C                     l18304:
  9272  00C12C  0E01               	movlw	1
  9273  00C12E  6E24               	movwf	sensor_lmp_initialize@lmp_gain^0,c
  9274  00C130  EFA9  F060         	goto	l18314
  9275  00C134                     l18312:
  9276  00C134  5025               	movf	sensor_lmp_initialize@chNum^0,w,c
  9277                           
  9278                           ; Switch size 1, requested type "simple"
  9279                           ; Number of cases is 3, Range of values is 0 to 2
  9280                           ; switch strategies available:
  9281                           ; Name         Instructions Cycles
  9282                           ; simple_byte           10     6 (average)
  9283                           ;	Chosen strategy is simple_byte
  9284  00C136  0A00               	xorlw	0	; case 0
  9285  00C138  B4D8               	btfsc	status,2,c
  9286  00C13A  EF96  F060         	goto	l18304
  9287  00C13E  0A01               	xorlw	1	; case 1
  9288  00C140  B4D8               	btfsc	status,2,c
  9289  00C142  EF96  F060         	goto	l18304
  9290  00C146  0A03               	xorlw	3	; case 2
  9291  00C148  B4D8               	btfsc	status,2,c
  9292  00C14A  EF96  F060         	goto	l18304
  9293  00C14E  EFA9  F060         	goto	l18314
  9294  00C152                     l18314:
  9295                           
  9296                           ;sensor.c: 78: if (lmp91000_isReady(chNum) == 0)
  9297  00C152  5025               	movf	sensor_lmp_initialize@chNum^0,w,c
  9298  00C154  ECB7  F076         	call	_lmp91000_isReady
  9299  00C158  0900               	iorlw	0
  9300  00C15A  A4D8               	btfss	status,2,c
  9301  00C15C  EFB2  F060         	goto	u19801
  9302  00C160  EFB4  F060         	goto	u19800
  9303  00C164                     u19801:
  9304  00C164  EFB7  F060         	goto	l18320
  9305  00C168                     u19800:
  9306  00C168                     l18316:
  9307                           
  9308                           ;sensor.c: 79: return 0;
  9309  00C168  0E00               	movlw	0
  9310  00C16A  EFFC  F060         	goto	l1348
  9311  00C16E                     l18320:
  9312                           
  9313                           ;sensor.c: 81: if (lmp91000_unlock(chNum) == 0)
  9314  00C16E  5025               	movf	sensor_lmp_initialize@chNum^0,w,c
  9315  00C170  ECE3  F074         	call	_lmp91000_unlock
  9316  00C174  0900               	iorlw	0
  9317  00C176  A4D8               	btfss	status,2,c
  9318  00C178  EFC0  F060         	goto	u19811
  9319  00C17C  EFC2  F060         	goto	u19810
  9320  00C180                     u19811:
  9321  00C180  EFC4  F060         	goto	l18326
  9322  00C184                     u19810:
  9323  00C184  EFB4  F060         	goto	l18316
  9324  00C188                     l18326:
  9325                           
  9326                           ;sensor.c: 84: if (lmp91000_set_GainRLoad(chNum, lmp_gain, R100) == 0)
  9327  00C188  C024  F01A         	movff	sensor_lmp_initialize@lmp_gain,lmp91000_set_GainRLoad@user_gain
  9328  00C18C  0E03               	movlw	3
  9329  00C18E  6E1B               	movwf	lmp91000_set_GainRLoad@RLoad^0,c
  9330  00C190  5025               	movf	sensor_lmp_initialize@chNum^0,w,c
  9331  00C192  EC9A  F071         	call	_lmp91000_set_GainRLoad
  9332  00C196  0900               	iorlw	0
  9333  00C198  A4D8               	btfss	status,2,c
  9334  00C19A  EFD1  F060         	goto	u19821
  9335  00C19E  EFD3  F060         	goto	u19820
  9336  00C1A2                     u19821:
  9337  00C1A2  EFD5  F060         	goto	l18332
  9338  00C1A6                     u19820:
  9339  00C1A6  EFB4  F060         	goto	l18316
  9340  00C1AA                     l18332:
  9341                           
  9342                           ;sensor.c: 89: if (lmp91000_set_Reference(chNum, EXTERNAL, S20P, NAGATIVE, B0P) == 0)
  9343  00C1AA  0E01               	movlw	1
  9344  00C1AC  6E1A               	movwf	lmp91000_set_Reference@source^0,c
  9345  00C1AE  0E00               	movlw	0
  9346  00C1B0  6E1B               	movwf	lmp91000_set_Reference@IntZ^0,c
  9347  00C1B2  0E00               	movlw	0
  9348  00C1B4  6E1C               	movwf	lmp91000_set_Reference@sign^0,c
  9349  00C1B6  0E00               	movlw	0
  9350  00C1B8  6E1D               	movwf	lmp91000_set_Reference@bias^0,c
  9351  00C1BA  5025               	movf	sensor_lmp_initialize@chNum^0,w,c
  9352  00C1BC  EC7D  F06F         	call	_lmp91000_set_Reference
  9353  00C1C0  0900               	iorlw	0
  9354  00C1C2  A4D8               	btfss	status,2,c
  9355  00C1C4  EFE6  F060         	goto	u19831
  9356  00C1C8  EFE8  F060         	goto	u19830
  9357  00C1CC                     u19831:
  9358  00C1CC  EFEA  F060         	goto	l18338
  9359  00C1D0                     u19830:
  9360  00C1D0  EFB4  F060         	goto	l18316
  9361  00C1D4                     l18338:
  9362                           
  9363                           ;sensor.c: 92: if (lmp91000_set_Mode(chNum, DISABLE, AMPEROETRIC_3LEAD) == 0)
  9364  00C1D4  0E00               	movlw	0
  9365  00C1D6  6E1A               	movwf	lmp91000_set_Mode@fet^0,c
  9366  00C1D8  0E03               	movlw	3
  9367  00C1DA  6E1B               	movwf	lmp91000_set_Mode@mode^0,c
  9368  00C1DC  5025               	movf	sensor_lmp_initialize@chNum^0,w,c
  9369  00C1DE  ECA2  F072         	call	_lmp91000_set_Mode
  9370  00C1E2  0900               	iorlw	0
  9371  00C1E4  A4D8               	btfss	status,2,c
  9372  00C1E6  EFF7  F060         	goto	u19841
  9373  00C1EA  EFF9  F060         	goto	u19840
  9374  00C1EE                     u19841:
  9375  00C1EE  EFFB  F060         	goto	l18344
  9376  00C1F2                     u19840:
  9377  00C1F2  EFB4  F060         	goto	l18316
  9378  00C1F6                     l18344:
  9379                           
  9380                           ;sensor.c: 98: return 1;
  9381  00C1F6  0E01               	movlw	1
  9382  00C1F8                     l1348:
  9383  00C1F8  0012               	return		;funcret
  9384  00C1FA                     __end_of_sensor_lmp_initialize:
  9385                           	callstack 0
  9386                           
  9387 ;; *************** function _lmp91000_unlock *****************
  9388 ;; Defined at:
  9389 ;;		line 129 in file "bsp/lmp91000.c"
  9390 ;; Parameters:    Size  Location     Type
  9391 ;;  chNum           1    wreg     unsigned char 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;  chNum           1   27[COMRAM] unsigned char 
  9394 ;;  buff            2   25[COMRAM] unsigned char [2]
  9395 ;; Return value:  Size  Location     Type
  9396 ;;                  1    wreg      unsigned char 
  9397 ;; Registers used:
  9398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9399 ;; Tracked objects:
  9400 ;;		On entry : 0/0
  9401 ;;		On exit  : 0/0
  9402 ;;		Unchanged: 0/0
  9403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9405 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9407 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9408 ;;Total ram usage:        3 bytes
  9409 ;; Hardware stack levels used: 1
  9410 ;; Hardware stack levels required when called: 6
  9411 ;; This function calls:
  9412 ;;		_i2c_writeBytes
  9413 ;;		_lmp91000_disable
  9414 ;;		_lmp91000_enable
  9415 ;; This function is called by:
  9416 ;;		_sensor_lmp_initialize
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420                           	psect	text35
  9421  00E9C6                     __ptext35:
  9422                           	callstack 0
  9423  00E9C6                     _lmp91000_unlock:
  9424                           	callstack 21
  9425                           
  9426                           ;incstack = 0
  9427                           ;lmp91000_unlock@chNum stored from wreg
  9428  00E9C6  6E1C               	movwf	lmp91000_unlock@chNum^0,c
  9429  00E9C8                     
  9430                           ;lmp91000.c: 131: uint8_t buff[2];;lmp91000.c: 132: buff[0] = 0x01;
  9431  00E9C8  0E01               	movlw	1
  9432  00E9CA  6E1A               	movwf	lmp91000_unlock@buff^0,c
  9433                           
  9434                           ;lmp91000.c: 133: buff[1] = 0x00;
  9435  00E9CC  0E00               	movlw	0
  9436  00E9CE  6E1B               	movwf	(lmp91000_unlock@buff+1)^0,c
  9437  00E9D0                     
  9438                           ;lmp91000.c: 135: lmp91000_enable(chNum);
  9439  00E9D0  501C               	movf	lmp91000_unlock@chNum^0,w,c
  9440  00E9D2  EC7E  F075         	call	_lmp91000_enable
  9441  00E9D6                     
  9442                           ;lmp91000.c: 136: if (i2c_writeBytes(0x90, buff, 2, 1) == 0)
  9443  00E9D6  0E1A               	movlw	low lmp91000_unlock@buff
  9444  00E9D8  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  9445  00E9DA  0E00               	movlw	high lmp91000_unlock@buff
  9446  00E9DC  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  9447  00E9DE  0E02               	movlw	2
  9448  00E9E0  6E17               	movwf	i2c_writeBytes@len^0,c
  9449  00E9E2  0E01               	movlw	1
  9450  00E9E4  6E18               	movwf	i2c_writeBytes@isStop^0,c
  9451  00E9E6  0E90               	movlw	144
  9452  00E9E8  ECF6  F072         	call	_i2c_writeBytes
  9453  00E9EC  0900               	iorlw	0
  9454  00E9EE  A4D8               	btfss	status,2,c
  9455  00E9F0  EFFC  F074         	goto	u18951
  9456  00E9F4  EFFE  F074         	goto	u18950
  9457  00E9F8                     u18951:
  9458  00E9F8  EF01  F075         	goto	l17440
  9459  00E9FC                     u18950:
  9460  00E9FC                     
  9461                           ;lmp91000.c: 137: return 0;
  9462  00E9FC  0E00               	movlw	0
  9463  00E9FE  EF05  F075         	goto	l236
  9464  00EA02                     l17440:
  9465                           
  9466                           ;lmp91000.c: 138: lmp91000_disable(chNum);
  9467  00EA02  501C               	movf	lmp91000_unlock@chNum^0,w,c
  9468  00EA04  ECD2  F075         	call	_lmp91000_disable
  9469  00EA08                     
  9470                           ;lmp91000.c: 140: return 1;
  9471  00EA08  0E01               	movlw	1
  9472  00EA0A                     l236:
  9473  00EA0A  0012               	return		;funcret
  9474  00EA0C                     __end_of_lmp91000_unlock:
  9475                           	callstack 0
  9476                           
  9477 ;; *************** function _lmp91000_set_Reference *****************
  9478 ;; Defined at:
  9479 ;;		line 211 in file "bsp/lmp91000.c"
  9480 ;; Parameters:    Size  Location     Type
  9481 ;;  chNum           1    wreg     unsigned char 
  9482 ;;  source          1   25[COMRAM] unsigned char 
  9483 ;;  IntZ            1   26[COMRAM] unsigned char 
  9484 ;;  sign            1   27[COMRAM] unsigned char 
  9485 ;;  bias            1   28[COMRAM] unsigned char 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;  chNum           1   31[COMRAM] unsigned char 
  9488 ;;  buff            2   29[COMRAM] unsigned char [2]
  9489 ;;  reg             1   32[COMRAM] unsigned char 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;                  1    wreg      unsigned char 
  9492 ;; Registers used:
  9493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9500 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9502 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9503 ;;Total ram usage:        8 bytes
  9504 ;; Hardware stack levels used: 1
  9505 ;; Hardware stack levels required when called: 6
  9506 ;; This function calls:
  9507 ;;		_i2c_writeBytes
  9508 ;;		_lmp91000_disable
  9509 ;;		_lmp91000_enable
  9510 ;; This function is called by:
  9511 ;;		_sensor_lmp_initialize
  9512 ;; This function uses a non-reentrant model
  9513 ;;
  9514                           
  9515                           	psect	text36
  9516  00DEFA                     __ptext36:
  9517                           	callstack 0
  9518  00DEFA                     _lmp91000_set_Reference:
  9519                           	callstack 21
  9520                           
  9521                           ;incstack = 0
  9522                           ;lmp91000_set_Reference@chNum stored from wreg
  9523  00DEFA  6E20               	movwf	lmp91000_set_Reference@chNum^0,c
  9524  00DEFC                     
  9525                           ;lmp91000.c: 213: uint8_t reg;;lmp91000.c: 214: uint8_t buff[2];;lmp91000.c: 216: reg = 
      +                          0x20;
  9526  00DEFC  0E20               	movlw	32
  9527  00DEFE  6E21               	movwf	lmp91000_set_Reference@reg^0,c
  9528  00DF00                     
  9529                           ;lmp91000.c: 217: reg &= ~(3 << 5);
  9530  00DF00  0E9F               	movlw	159
  9531  00DF02  1621               	andwf	lmp91000_set_Reference@reg^0,f,c
  9532  00DF04                     
  9533                           ;lmp91000.c: 218: reg |= source << 7;
  9534  00DF04  401A               	rrncf	lmp91000_set_Reference@source^0,w,c
  9535  00DF06  0B80               	andlw	128
  9536  00DF08  1221               	iorwf	lmp91000_set_Reference@reg^0,f,c
  9537  00DF0A                     
  9538                           ;lmp91000.c: 219: reg |= IntZ << 5;
  9539  00DF0A  381B               	swapf	lmp91000_set_Reference@IntZ^0,w,c
  9540  00DF0C  46E8               	rlncf	wreg,f,c
  9541  00DF0E  0BE0               	andlw	224
  9542  00DF10  1221               	iorwf	lmp91000_set_Reference@reg^0,f,c
  9543  00DF12                     
  9544                           ;lmp91000.c: 220: reg |= sign << 4;
  9545  00DF12  381C               	swapf	lmp91000_set_Reference@sign^0,w,c
  9546  00DF14  0BF0               	andlw	240
  9547  00DF16  1221               	iorwf	lmp91000_set_Reference@reg^0,f,c
  9548  00DF18                     
  9549                           ;lmp91000.c: 221: reg |= bias;
  9550  00DF18  501D               	movf	lmp91000_set_Reference@bias^0,w,c
  9551  00DF1A  1221               	iorwf	lmp91000_set_Reference@reg^0,f,c
  9552  00DF1C                     
  9553                           ;lmp91000.c: 223: buff[0] = 0x11;;
  9554  00DF1C  0E11               	movlw	17
  9555  00DF1E  6E1E               	movwf	lmp91000_set_Reference@buff^0,c
  9556  00DF20                     
  9557                           ;lmp91000.c: 224: buff[1] = reg;
  9558  00DF20  C021  F01F         	movff	lmp91000_set_Reference@reg,lmp91000_set_Reference@buff+1
  9559  00DF24                     
  9560                           ;lmp91000.c: 226: lmp91000_enable(chNum);
  9561  00DF24  5020               	movf	lmp91000_set_Reference@chNum^0,w,c
  9562  00DF26  EC7E  F075         	call	_lmp91000_enable
  9563  00DF2A                     
  9564                           ;lmp91000.c: 227: if (i2c_writeBytes(0x90, buff, 2, 1) == 0)
  9565  00DF2A  0E1E               	movlw	low lmp91000_set_Reference@buff
  9566  00DF2C  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  9567  00DF2E  0E00               	movlw	high lmp91000_set_Reference@buff
  9568  00DF30  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  9569  00DF32  0E02               	movlw	2
  9570  00DF34  6E17               	movwf	i2c_writeBytes@len^0,c
  9571  00DF36  0E01               	movlw	1
  9572  00DF38  6E18               	movwf	i2c_writeBytes@isStop^0,c
  9573  00DF3A  0E90               	movlw	144
  9574  00DF3C  ECF6  F072         	call	_i2c_writeBytes
  9575  00DF40  0900               	iorlw	0
  9576  00DF42  A4D8               	btfss	status,2,c
  9577  00DF44  EFA6  F06F         	goto	u18981
  9578  00DF48  EFA8  F06F         	goto	u18980
  9579  00DF4C                     u18981:
  9580  00DF4C  EFAB  F06F         	goto	l17506
  9581  00DF50                     u18980:
  9582  00DF50                     
  9583                           ;lmp91000.c: 228: return 0;
  9584  00DF50  0E00               	movlw	0
  9585  00DF52  EFAF  F06F         	goto	l252
  9586  00DF56                     l17506:
  9587                           
  9588                           ;lmp91000.c: 229: lmp91000_disable(chNum);
  9589  00DF56  5020               	movf	lmp91000_set_Reference@chNum^0,w,c
  9590  00DF58  ECD2  F075         	call	_lmp91000_disable
  9591  00DF5C                     
  9592                           ;lmp91000.c: 231: return 1;
  9593  00DF5C  0E01               	movlw	1
  9594  00DF5E                     l252:
  9595  00DF5E  0012               	return		;funcret
  9596  00DF60                     __end_of_lmp91000_set_Reference:
  9597                           	callstack 0
  9598                           
  9599 ;; *************** function _lmp91000_set_Mode *****************
  9600 ;; Defined at:
  9601 ;;		line 241 in file "bsp/lmp91000.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;  chNum           1    wreg     unsigned char 
  9604 ;;  fet             1   25[COMRAM] unsigned char 
  9605 ;;  mode            1   26[COMRAM] unsigned char 
  9606 ;; Auto vars:     Size  Location     Type
  9607 ;;  chNum           1   30[COMRAM] unsigned char 
  9608 ;;  buff            2   27[COMRAM] unsigned char [2]
  9609 ;;  reg             1   29[COMRAM] unsigned char 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  1    wreg      unsigned char 
  9612 ;; Registers used:
  9613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9620 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9623 ;;Total ram usage:        6 bytes
  9624 ;; Hardware stack levels used: 1
  9625 ;; Hardware stack levels required when called: 6
  9626 ;; This function calls:
  9627 ;;		_i2c_writeBytes
  9628 ;;		_lmp91000_disable
  9629 ;;		_lmp91000_enable
  9630 ;; This function is called by:
  9631 ;;		_sensor_lmp_initialize
  9632 ;;		_sensor_temp_mode
  9633 ;;		_sensor_gas_mode
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           	psect	text37
  9638  00E544                     __ptext37:
  9639                           	callstack 0
  9640  00E544                     _lmp91000_set_Mode:
  9641                           	callstack 22
  9642                           
  9643                           ;incstack = 0
  9644                           ;lmp91000_set_Mode@chNum stored from wreg
  9645  00E544  6E1F               	movwf	lmp91000_set_Mode@chNum^0,c
  9646  00E546                     
  9647                           ;lmp91000.c: 243: uint8_t reg;;lmp91000.c: 244: uint8_t buff[2];;lmp91000.c: 246: reg = 
      +                          0x00;
  9648  00E546  0E00               	movlw	0
  9649  00E548  6E1E               	movwf	lmp91000_set_Mode@reg^0,c
  9650  00E54A                     
  9651                           ;lmp91000.c: 247: reg |= fet << 7;
  9652  00E54A  401A               	rrncf	lmp91000_set_Mode@fet^0,w,c
  9653  00E54C  0B80               	andlw	128
  9654  00E54E  121E               	iorwf	lmp91000_set_Mode@reg^0,f,c
  9655  00E550                     
  9656                           ;lmp91000.c: 248: reg |= mode;
  9657  00E550  501B               	movf	lmp91000_set_Mode@mode^0,w,c
  9658  00E552  121E               	iorwf	lmp91000_set_Mode@reg^0,f,c
  9659  00E554                     
  9660                           ;lmp91000.c: 250: buff[0] = 0x12;;
  9661  00E554  0E12               	movlw	18
  9662  00E556  6E1C               	movwf	lmp91000_set_Mode@buff^0,c
  9663  00E558                     
  9664                           ;lmp91000.c: 251: buff[1] = reg;
  9665  00E558  C01E  F01D         	movff	lmp91000_set_Mode@reg,lmp91000_set_Mode@buff+1
  9666  00E55C                     
  9667                           ;lmp91000.c: 253: lmp91000_enable(chNum);
  9668  00E55C  501F               	movf	lmp91000_set_Mode@chNum^0,w,c
  9669  00E55E  EC7E  F075         	call	_lmp91000_enable
  9670  00E562                     
  9671                           ;lmp91000.c: 254: if (i2c_writeBytes(0x90, buff, 2, 1) == 0)
  9672  00E562  0E1C               	movlw	low lmp91000_set_Mode@buff
  9673  00E564  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  9674  00E566  0E00               	movlw	high lmp91000_set_Mode@buff
  9675  00E568  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  9676  00E56A  0E02               	movlw	2
  9677  00E56C  6E17               	movwf	i2c_writeBytes@len^0,c
  9678  00E56E  0E01               	movlw	1
  9679  00E570  6E18               	movwf	i2c_writeBytes@isStop^0,c
  9680  00E572  0E90               	movlw	144
  9681  00E574  ECF6  F072         	call	_i2c_writeBytes
  9682  00E578  0900               	iorlw	0
  9683  00E57A  A4D8               	btfss	status,2,c
  9684  00E57C  EFC2  F072         	goto	u18991
  9685  00E580  EFC4  F072         	goto	u18990
  9686  00E584                     u18991:
  9687  00E584  EFC7  F072         	goto	l17530
  9688  00E588                     u18990:
  9689  00E588                     
  9690                           ;lmp91000.c: 255: return 0;
  9691  00E588  0E00               	movlw	0
  9692  00E58A  EFCB  F072         	goto	l256
  9693  00E58E                     l17530:
  9694                           
  9695                           ;lmp91000.c: 256: lmp91000_disable(chNum);
  9696  00E58E  501F               	movf	lmp91000_set_Mode@chNum^0,w,c
  9697  00E590  ECD2  F075         	call	_lmp91000_disable
  9698  00E594                     
  9699                           ;lmp91000.c: 258: return 1;
  9700  00E594  0E01               	movlw	1
  9701  00E596                     l256:
  9702  00E596  0012               	return		;funcret
  9703  00E598                     __end_of_lmp91000_set_Mode:
  9704                           	callstack 0
  9705                           
  9706 ;; *************** function _lmp91000_set_GainRLoad *****************
  9707 ;; Defined at:
  9708 ;;		line 183 in file "bsp/lmp91000.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  chNum           1    wreg     unsigned char 
  9711 ;;  user_gain       1   25[COMRAM] unsigned char 
  9712 ;;  RLoad           1   26[COMRAM] unsigned char 
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;  chNum           1   29[COMRAM] unsigned char 
  9715 ;;  buff            2   27[COMRAM] unsigned char [2]
  9716 ;;  reg             1   30[COMRAM] unsigned char 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  1    wreg      unsigned char 
  9719 ;; Registers used:
  9720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9727 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9729 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9730 ;;Total ram usage:        6 bytes
  9731 ;; Hardware stack levels used: 1
  9732 ;; Hardware stack levels required when called: 6
  9733 ;; This function calls:
  9734 ;;		_i2c_writeBytes
  9735 ;;		_lmp91000_disable
  9736 ;;		_lmp91000_enable
  9737 ;; This function is called by:
  9738 ;;		_sensor_lmp_initialize
  9739 ;; This function uses a non-reentrant model
  9740 ;;
  9741                           
  9742                           	psect	text38
  9743  00E334                     __ptext38:
  9744                           	callstack 0
  9745  00E334                     _lmp91000_set_GainRLoad:
  9746                           	callstack 21
  9747                           
  9748                           ;incstack = 0
  9749                           ;lmp91000_set_GainRLoad@chNum stored from wreg
  9750  00E334  6E1E               	movwf	lmp91000_set_GainRLoad@chNum^0,c
  9751  00E336                     
  9752                           ;lmp91000.c: 185: uint8_t reg;;lmp91000.c: 186: uint8_t buff[2];;lmp91000.c: 188: reg = 
      +                          0x03;
  9753  00E336  0E03               	movlw	3
  9754  00E338  6E1F               	movwf	lmp91000_set_GainRLoad@reg^0,c
  9755  00E33A                     
  9756                           ;lmp91000.c: 189: reg &= ~3;
  9757  00E33A  0EFC               	movlw	252
  9758  00E33C  161F               	andwf	lmp91000_set_GainRLoad@reg^0,f,c
  9759  00E33E                     
  9760                           ;lmp91000.c: 190: reg |= (user_gain << 2);
  9761  00E33E  441A               	rlncf	lmp91000_set_GainRLoad@user_gain^0,w,c
  9762  00E340  46E8               	rlncf	wreg,f,c
  9763  00E342  0BFC               	andlw	252
  9764  00E344  121F               	iorwf	lmp91000_set_GainRLoad@reg^0,f,c
  9765  00E346                     
  9766                           ;lmp91000.c: 191: reg |= RLoad;
  9767  00E346  501B               	movf	lmp91000_set_GainRLoad@RLoad^0,w,c
  9768  00E348  121F               	iorwf	lmp91000_set_GainRLoad@reg^0,f,c
  9769  00E34A                     
  9770                           ;lmp91000.c: 193: buff[0] = 0x10;;
  9771  00E34A  0E10               	movlw	16
  9772  00E34C  6E1C               	movwf	lmp91000_set_GainRLoad@buff^0,c
  9773  00E34E                     
  9774                           ;lmp91000.c: 194: buff[1] = reg;
  9775  00E34E  C01F  F01D         	movff	lmp91000_set_GainRLoad@reg,lmp91000_set_GainRLoad@buff+1
  9776  00E352                     
  9777                           ;lmp91000.c: 196: lmp91000_enable(chNum);
  9778  00E352  501E               	movf	lmp91000_set_GainRLoad@chNum^0,w,c
  9779  00E354  EC7E  F075         	call	_lmp91000_enable
  9780  00E358                     
  9781                           ;lmp91000.c: 197: if (i2c_writeBytes(0x90, buff, 2, 1) == 0)
  9782  00E358  0E1C               	movlw	low lmp91000_set_GainRLoad@buff
  9783  00E35A  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  9784  00E35C  0E00               	movlw	high lmp91000_set_GainRLoad@buff
  9785  00E35E  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  9786  00E360  0E02               	movlw	2
  9787  00E362  6E17               	movwf	i2c_writeBytes@len^0,c
  9788  00E364  0E01               	movlw	1
  9789  00E366  6E18               	movwf	i2c_writeBytes@isStop^0,c
  9790  00E368  0E90               	movlw	144
  9791  00E36A  ECF6  F072         	call	_i2c_writeBytes
  9792  00E36E  0900               	iorlw	0
  9793  00E370  A4D8               	btfss	status,2,c
  9794  00E372  EFBD  F071         	goto	u18971
  9795  00E376  EFBF  F071         	goto	u18970
  9796  00E37A                     u18971:
  9797  00E37A  EFC2  F071         	goto	l17476
  9798  00E37E                     u18970:
  9799  00E37E                     
  9800                           ;lmp91000.c: 198: return 0;
  9801  00E37E  0E00               	movlw	0
  9802  00E380  EFC6  F071         	goto	l248
  9803  00E384                     l17476:
  9804                           
  9805                           ;lmp91000.c: 199: lmp91000_disable(chNum);
  9806  00E384  501E               	movf	lmp91000_set_GainRLoad@chNum^0,w,c
  9807  00E386  ECD2  F075         	call	_lmp91000_disable
  9808  00E38A                     
  9809                           ;lmp91000.c: 201: return 1;
  9810  00E38A  0E01               	movlw	1
  9811  00E38C                     l248:
  9812  00E38C  0012               	return		;funcret
  9813  00E38E                     __end_of_lmp91000_set_GainRLoad:
  9814                           	callstack 0
  9815                           
  9816 ;; *************** function _lmp91000_isReady *****************
  9817 ;; Defined at:
  9818 ;;		line 166 in file "bsp/lmp91000.c"
  9819 ;; Parameters:    Size  Location     Type
  9820 ;;  chNum           1    wreg     unsigned char 
  9821 ;; Auto vars:     Size  Location     Type
  9822 ;;  chNum           1   33[COMRAM] unsigned char 
  9823 ;;  rBuff           1   34[COMRAM] unsigned char 
  9824 ;; Return value:  Size  Location     Type
  9825 ;;                  1    wreg      unsigned char 
  9826 ;; Registers used:
  9827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9828 ;; Tracked objects:
  9829 ;;		On entry : 0/0
  9830 ;;		On exit  : 0/0
  9831 ;;		Unchanged: 0/0
  9832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9834 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9836 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9837 ;;Total ram usage:        2 bytes
  9838 ;; Hardware stack levels used: 1
  9839 ;; Hardware stack levels required when called: 7
  9840 ;; This function calls:
  9841 ;;		_lmp91000_get_status
  9842 ;; This function is called by:
  9843 ;;		_sensor_lmp_initialize
  9844 ;; This function uses a non-reentrant model
  9845 ;;
  9846                           
  9847                           	psect	text39
  9848  00ED6E                     __ptext39:
  9849                           	callstack 0
  9850  00ED6E                     _lmp91000_isReady:
  9851                           	callstack 20
  9852                           
  9853                           ;incstack = 0
  9854                           ;lmp91000_isReady@chNum stored from wreg
  9855  00ED6E  6E22               	movwf	lmp91000_isReady@chNum^0,c
  9856  00ED70                     
  9857                           ;lmp91000.c: 168: uint8_t rBuff;;lmp91000.c: 170: if (lmp91000_get_status(&rBuff, chNum)
      +                           == 0)
  9858  00ED70  0E23               	movlw	low lmp91000_isReady@rBuff
  9859  00ED72  6E1D               	movwf	lmp91000_get_status@preg^0,c
  9860  00ED74  0E00               	movlw	high lmp91000_isReady@rBuff
  9861  00ED76  6E1E               	movwf	(lmp91000_get_status@preg+1)^0,c
  9862  00ED78  C022  F01F         	movff	lmp91000_isReady@chNum,lmp91000_get_status@chNum
  9863  00ED7C  ECCC  F06D         	call	_lmp91000_get_status	;wreg free
  9864  00ED80  0900               	iorlw	0
  9865  00ED82  A4D8               	btfss	status,2,c
  9866  00ED84  EFC6  F076         	goto	u18961
  9867  00ED88  EFC8  F076         	goto	u18960
  9868  00ED8C                     u18961:
  9869  00ED8C  EFCB  F076         	goto	l17452
  9870  00ED90                     u18960:
  9871  00ED90                     
  9872                           ;lmp91000.c: 171: return 0;
  9873  00ED90  0E00               	movlw	0
  9874  00ED92  EFCD  F076         	goto	l244
  9875  00ED96                     l17452:
  9876                           
  9877                           ;lmp91000.c: 173: return (rBuff & 0x01);
  9878  00ED96  5023               	movf	lmp91000_isReady@rBuff^0,w,c
  9879  00ED98  0B01               	andlw	1
  9880  00ED9A                     l244:
  9881  00ED9A  0012               	return		;funcret
  9882  00ED9C                     __end_of_lmp91000_isReady:
  9883                           	callstack 0
  9884                           
  9885 ;; *************** function _lmp91000_get_status *****************
  9886 ;; Defined at:
  9887 ;;		line 12 in file "bsp/lmp91000.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  preg            2   28[COMRAM] PTR unsigned char 
  9890 ;;		 -> lmp91000_isReady@rBuff(1), 
  9891 ;;  chNum           1   30[COMRAM] unsigned char 
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;  rBuff           1   32[COMRAM] unsigned char 
  9894 ;;  wBuff           1   31[COMRAM] unsigned char 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      unsigned char 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9904 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9907 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9908 ;;Total ram usage:        5 bytes
  9909 ;; Hardware stack levels used: 1
  9910 ;; Hardware stack levels required when called: 6
  9911 ;; This function calls:
  9912 ;;		_i2c_readBytes
  9913 ;;		_i2c_writeBytes
  9914 ;;		_lmp91000_disable
  9915 ;;		_lmp91000_enable
  9916 ;; This function is called by:
  9917 ;;		_lmp91000_isReady
  9918 ;; This function uses a non-reentrant model
  9919 ;;
  9920                           
  9921                           	psect	text40
  9922  00DB98                     __ptext40:
  9923                           	callstack 0
  9924  00DB98                     _lmp91000_get_status:
  9925                           	callstack 20
  9926  00DB98                     
  9927                           ;lmp91000.c: 14: uint8_t wBuff = 0x00;
  9928  00DB98  0E00               	movlw	0
  9929  00DB9A  6E20               	movwf	lmp91000_get_status@wBuff^0,c
  9930  00DB9C                     
  9931                           ;lmp91000.c: 15: uint8_t rBuff;;lmp91000.c: 17: lmp91000_enable(chNum);
  9932  00DB9C  501F               	movf	lmp91000_get_status@chNum^0,w,c
  9933  00DB9E  EC7E  F075         	call	_lmp91000_enable
  9934  00DBA2                     
  9935                           ;lmp91000.c: 18: if (i2c_writeBytes(0x90, &wBuff, 1, 0) == 0) {
  9936  00DBA2  0E20               	movlw	low lmp91000_get_status@wBuff
  9937  00DBA4  6E15               	movwf	i2c_writeBytes@wrptr^0,c
  9938  00DBA6  0E00               	movlw	high lmp91000_get_status@wBuff
  9939  00DBA8  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
  9940  00DBAA  0E01               	movlw	1
  9941  00DBAC  6E17               	movwf	i2c_writeBytes@len^0,c
  9942  00DBAE  0E00               	movlw	0
  9943  00DBB0  6E18               	movwf	i2c_writeBytes@isStop^0,c
  9944  00DBB2  0E90               	movlw	144
  9945  00DBB4  ECF6  F072         	call	_i2c_writeBytes
  9946  00DBB8  0900               	iorlw	0
  9947  00DBBA  A4D8               	btfss	status,2,c
  9948  00DBBC  EFE2  F06D         	goto	u18531
  9949  00DBC0  EFE4  F06D         	goto	u18530
  9950  00DBC4                     u18531:
  9951  00DBC4  EFE7  F06D         	goto	l17142
  9952  00DBC8                     u18530:
  9953  00DBC8                     l17138:
  9954                           
  9955                           ;lmp91000.c: 19: return 0;
  9956  00DBC8  0E00               	movlw	0
  9957  00DBCA  EF04  F06E         	goto	l207
  9958  00DBCE                     l17142:
  9959                           
  9960                           ;lmp91000.c: 20: };lmp91000.c: 22: if (i2c_readBytes(0x90, &rBuff, 1) == 0) {
  9961  00DBCE  0E21               	movlw	low lmp91000_get_status@rBuff
  9962  00DBD0  6E11               	movwf	i2c_readBytes@rdptr^0,c
  9963  00DBD2  0E00               	movlw	high lmp91000_get_status@rBuff
  9964  00DBD4  6E12               	movwf	(i2c_readBytes@rdptr+1)^0,c
  9965  00DBD6  0E01               	movlw	1
  9966  00DBD8  6E13               	movwf	i2c_readBytes@len^0,c
  9967  00DBDA  0E90               	movlw	144
  9968  00DBDC  ECE8  F066         	call	_i2c_readBytes
  9969  00DBE0  0900               	iorlw	0
  9970  00DBE2  A4D8               	btfss	status,2,c
  9971  00DBE4  EFF6  F06D         	goto	u18541
  9972  00DBE8  EFF8  F06D         	goto	u18540
  9973  00DBEC                     u18541:
  9974  00DBEC  EFFA  F06D         	goto	l17148
  9975  00DBF0                     u18540:
  9976  00DBF0  EFE4  F06D         	goto	l17138
  9977  00DBF4                     l17148:
  9978                           
  9979                           ;lmp91000.c: 24: };lmp91000.c: 25: lmp91000_disable(chNum);
  9980  00DBF4  501F               	movf	lmp91000_get_status@chNum^0,w,c
  9981  00DBF6  ECD2  F075         	call	_lmp91000_disable
  9982  00DBFA                     
  9983                           ;lmp91000.c: 27: *preg = rBuff;
  9984  00DBFA  C01D  FFD9         	movff	lmp91000_get_status@preg,fsr2l
  9985  00DBFE  C01E  FFDA         	movff	lmp91000_get_status@preg+1,fsr2h
  9986  00DC02  C021  FFDF         	movff	lmp91000_get_status@rBuff,indf2
  9987  00DC06                     
  9988                           ;lmp91000.c: 29: return 1;
  9989  00DC06  0E01               	movlw	1
  9990  00DC08                     l207:
  9991  00DC08  0012               	return		;funcret
  9992  00DC0A                     __end_of_lmp91000_get_status:
  9993                           	callstack 0
  9994                           
  9995 ;; *************** function _lmp91000_enable *****************
  9996 ;; Defined at:
  9997 ;;		line 268 in file "bsp/lmp91000.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;  chNum           1    wreg     enum E5258
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;  chNum           1   14[COMRAM] enum E5258
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      void 
 10004 ;; Registers used:
 10005 ;;		wreg, status,2, status,0
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10015 ;;Total ram usage:        1 bytes
 10016 ;; Hardware stack levels used: 1
 10017 ;; Hardware stack levels required when called: 3
 10018 ;; This function calls:
 10019 ;;		Nothing
 10020 ;; This function is called by:
 10021 ;;		_lmp91000_get_status
 10022 ;;		_lmp91000_unlock
 10023 ;;		_lmp91000_set_GainRLoad
 10024 ;;		_lmp91000_set_Reference
 10025 ;;		_lmp91000_set_Mode
 10026 ;;		_lmp91000_lock
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           	psect	text41
 10031  00EAFC                     __ptext41:
 10032                           	callstack 0
 10033  00EAFC                     _lmp91000_enable:
 10034                           	callstack 24
 10035                           
 10036                           ;incstack = 0
 10037                           ;lmp91000_enable@chNum stored from wreg
 10038  00EAFC  6E0F               	movwf	lmp91000_enable@chNum^0,c
 10039  00EAFE                     
 10040                           ;lmp91000.c: 270: switch(chNum)
 10041  00EAFE  EF8A  F075         	goto	l10682
 10042  00EB02                     l263:
 10043  00EB02  908A               	bcf	138,0,c	;volatile
 10044  00EB04  EF99  F075         	goto	l267
 10045  00EB08                     l265:
 10046  00EB08  928A               	bcf	138,1,c	;volatile
 10047  00EB0A  EF99  F075         	goto	l267
 10048  00EB0E                     l266:
 10049  00EB0E  948A               	bcf	138,2,c	;volatile
 10050  00EB10  EF99  F075         	goto	l267
 10051  00EB14                     l10682:
 10052  00EB14  500F               	movf	lmp91000_enable@chNum^0,w,c
 10053                           
 10054                           ; Switch size 1, requested type "simple"
 10055                           ; Number of cases is 3, Range of values is 0 to 2
 10056                           ; switch strategies available:
 10057                           ; Name         Instructions Cycles
 10058                           ; simple_byte           10     6 (average)
 10059                           ;	Chosen strategy is simple_byte
 10060  00EB16  0A00               	xorlw	0	; case 0
 10061  00EB18  B4D8               	btfsc	status,2,c
 10062  00EB1A  EF81  F075         	goto	l263
 10063  00EB1E  0A01               	xorlw	1	; case 1
 10064  00EB20  B4D8               	btfsc	status,2,c
 10065  00EB22  EF84  F075         	goto	l265
 10066  00EB26  0A03               	xorlw	3	; case 2
 10067  00EB28  B4D8               	btfsc	status,2,c
 10068  00EB2A  EF87  F075         	goto	l266
 10069  00EB2E  EF99  F075         	goto	l267
 10070  00EB32                     l267:
 10071  00EB32  0012               	return		;funcret
 10072  00EB34                     __end_of_lmp91000_enable:
 10073                           	callstack 0
 10074                           
 10075 ;; *************** function _CMP_temp_read *****************
 10076 ;; Defined at:
 10077 ;;		line 331 in file "sensor.c"
 10078 ;; Parameters:    Size  Location     Type
 10079 ;;  chNum           1    wreg     unsigned char 
 10080 ;; Auto vars:     Size  Location     Type
 10081 ;;  chNum           1   99[BANK0 ] unsigned char 
 10082 ;;  volt            4  100[BANK0 ] float 
 10083 ;;  raw             2  104[BANK0 ] int 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      unsigned char 
 10086 ;; Registers used:
 10087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10094 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10096 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10097 ;;Total ram usage:       11 bytes
 10098 ;; Hardware stack levels used: 1
 10099 ;; Hardware stack levels required when called: 8
 10100 ;; This function calls:
 10101 ;;		_ADCto_uVoltage
 10102 ;;		___fladd
 10103 ;;		___fldiv
 10104 ;;		___flmul
 10105 ;;		_sensor_ADC_read
 10106 ;; This function is called by:
 10107 ;;		_sensMeasure_task
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text42
 10112  00B2A6                     __ptext42:
 10113                           	callstack 0
 10114  00B2A6                     _CMP_temp_read:
 10115                           	callstack 21
 10116                           
 10117                           ;incstack = 0
 10118                           ;CMP_temp_read@chNum stored from wreg
 10119  00B2A6  0100               	movlb	0	; () banked
 10120  00B2A8  6FC3               	movwf	CMP_temp_read@chNum& (0+255),b
 10121  00B2AA                     
 10122                           ;sensor.c: 333: int16_t raw;;sensor.c: 335: if (sensor_ADC_read(chNum, &raw)) {
 10123  00B2AA  0EC8               	movlw	low CMP_temp_read@raw
 10124  00B2AC  6E25               	movwf	sensor_ADC_read@raw_adc^0,c
 10125  00B2AE  0E00               	movlw	high CMP_temp_read@raw
 10126  00B2B0  6E26               	movwf	(sensor_ADC_read@raw_adc+1)^0,c
 10127  00B2B2  0100               	movlb	0	; () banked
 10128  00B2B4  51C3               	movf	CMP_temp_read@chNum& (0+255),w,b
 10129  00B2B6  ECCE  F076         	call	_sensor_ADC_read
 10130  00B2BA  0900               	iorlw	0
 10131  00B2BC  B4D8               	btfsc	status,2,c
 10132  00B2BE  EF63  F059         	goto	u20981
 10133  00B2C2  EF65  F059         	goto	u20980
 10134  00B2C6                     u20981:
 10135  00B2C6  EFD8  F059         	goto	l1478
 10136  00B2CA                     u20980:
 10137  00B2CA                     
 10138                           ;sensor.c: 336: float volt = ADCto_uVoltage(raw, FSR_2p048V);
 10139  00B2CA  C0C8  F081         	movff	CMP_temp_read@raw,ADCto_uVoltage@raw_adc
 10140  00B2CE  C0C9  F082         	movff	CMP_temp_read@raw+1,ADCto_uVoltage@raw_adc+1
 10141  00B2D2  0E02               	movlw	2
 10142  00B2D4  0100               	movlb	0	; () banked
 10143  00B2D6  6F83               	movwf	ADCto_uVoltage@gain& (0+255),b
 10144  00B2D8  EC1C  F06D         	call	_ADCto_uVoltage	;wreg free
 10145  00B2DC  C081  F0C4         	movff	?_ADCto_uVoltage,CMP_temp_read@volt
 10146  00B2E0  C082  F0C5         	movff	?_ADCto_uVoltage+1,CMP_temp_read@volt+1
 10147  00B2E4  C083  F0C6         	movff	?_ADCto_uVoltage+2,CMP_temp_read@volt+2
 10148  00B2E8  C084  F0C7         	movff	?_ADCto_uVoltage+3,CMP_temp_read@volt+3
 10149  00B2EC                     
 10150                           ;sensor.c: 337: gTemp_volt = volt;
 10151  00B2EC  C0C4  F13E         	movff	CMP_temp_read@volt,_gTemp_volt
 10152  00B2F0  C0C5  F13F         	movff	CMP_temp_read@volt+1,_gTemp_volt+1
 10153  00B2F4  C0C6  F140         	movff	CMP_temp_read@volt+2,_gTemp_volt+2
 10154  00B2F8  C0C7  F141         	movff	CMP_temp_read@volt+3,_gTemp_volt+3
 10155                           
 10156                           ;sensor.c: 338: sens_value.tempHumi[CMP_TEMP] = -0.123f *(volt/1000.0f + 500.0f) + 192.1
      +                          f;
 10157  00B2FC  0E6D               	movlw	109
 10158  00B2FE  0100               	movlb	0	; () banked
 10159  00B300  6F6C               	movwf	___flmul@a& (0+255),b
 10160  00B302  0EE7               	movlw	231
 10161  00B304  6F6D               	movwf	(___flmul@a+1)& (0+255),b
 10162  00B306  0EFB               	movlw	251
 10163  00B308  6F6E               	movwf	(___flmul@a+2)& (0+255),b
 10164  00B30A  0EBD               	movlw	189
 10165  00B30C  6F6F               	movwf	(___flmul@a+3)& (0+255),b
 10166  00B30E  0E00               	movlw	0
 10167  00B310  6F92               	movwf	___fladd@a& (0+255),b
 10168  00B312  0E00               	movlw	0
 10169  00B314  6F93               	movwf	(___fladd@a+1)& (0+255),b
 10170  00B316  0EFA               	movlw	250
 10171  00B318  6F94               	movwf	(___fladd@a+2)& (0+255),b
 10172  00B31A  0E43               	movlw	67
 10173  00B31C  6F95               	movwf	(___fladd@a+3)& (0+255),b
 10174  00B31E  0E00               	movlw	0
 10175  00B320  6FAA               	movwf	___fldiv@a& (0+255),b
 10176  00B322  0E00               	movlw	0
 10177  00B324  6FAB               	movwf	(___fldiv@a+1)& (0+255),b
 10178  00B326  0E7A               	movlw	122
 10179  00B328  6FAC               	movwf	(___fldiv@a+2)& (0+255),b
 10180  00B32A  0E44               	movlw	68
 10181  00B32C  6FAD               	movwf	(___fldiv@a+3)& (0+255),b
 10182  00B32E  C0C4  F0A6         	movff	CMP_temp_read@volt,___fldiv@b
 10183  00B332  C0C5  F0A7         	movff	CMP_temp_read@volt+1,___fldiv@b+1
 10184  00B336  C0C6  F0A8         	movff	CMP_temp_read@volt+2,___fldiv@b+2
 10185  00B33A  C0C7  F0A9         	movff	CMP_temp_read@volt+3,___fldiv@b+3
 10186  00B33E  ECCB  F033         	call	___fldiv	;wreg free
 10187  00B342  C0A6  F08E         	movff	?___fldiv,___fladd@b
 10188  00B346  C0A7  F08F         	movff	?___fldiv+1,___fladd@b+1
 10189  00B34A  C0A8  F090         	movff	?___fldiv+2,___fladd@b+2
 10190  00B34E  C0A9  F091         	movff	?___fldiv+3,___fladd@b+3
 10191  00B352  EC46  F02D         	call	___fladd	;wreg free
 10192  00B356  C08E  F068         	movff	?___fladd,___flmul@b
 10193  00B35A  C08F  F069         	movff	?___fladd+1,___flmul@b+1
 10194  00B35E  C090  F06A         	movff	?___fladd+2,___flmul@b+2
 10195  00B362  C091  F06B         	movff	?___fladd+3,___flmul@b+3
 10196  00B366  ECA7  F02F         	call	___flmul	;wreg free
 10197  00B36A  C068  F0BF         	movff	?___flmul,_CMP_temp_read$7084
 10198  00B36E  C069  F0C0         	movff	?___flmul+1,_CMP_temp_read$7084+1
 10199  00B372  C06A  F0C1         	movff	?___flmul+2,_CMP_temp_read$7084+2
 10200  00B376  C06B  F0C2         	movff	?___flmul+3,_CMP_temp_read$7084+3
 10201  00B37A                     
 10202                           ;sensor.c: 338: sens_value.tempHumi[CMP_TEMP] = -0.123f *(volt/1000.0f + 500.0f) + 192.1
      +                          f;
 10203  00B37A  C0BF  F08E         	movff	_CMP_temp_read$7084,___fladd@b
 10204  00B37E  C0C0  F08F         	movff	_CMP_temp_read$7084+1,___fladd@b+1
 10205  00B382  C0C1  F090         	movff	_CMP_temp_read$7084+2,___fladd@b+2
 10206  00B386  C0C2  F091         	movff	_CMP_temp_read$7084+3,___fladd@b+3
 10207  00B38A  0E9A               	movlw	154
 10208  00B38C  0100               	movlb	0	; () banked
 10209  00B38E  6F92               	movwf	___fladd@a& (0+255),b
 10210  00B390  0E19               	movlw	25
 10211  00B392  6F93               	movwf	(___fladd@a+1)& (0+255),b
 10212  00B394  0E40               	movlw	64
 10213  00B396  6F94               	movwf	(___fladd@a+2)& (0+255),b
 10214  00B398  0E43               	movlw	67
 10215  00B39A  6F95               	movwf	(___fladd@a+3)& (0+255),b
 10216  00B39C  EC46  F02D         	call	___fladd	;wreg free
 10217  00B3A0  C08E  F222         	movff	?___fladd,_sens_value+34
 10218  00B3A4  C08F  F223         	movff	?___fladd+1,_sens_value+35
 10219  00B3A8  C090  F224         	movff	?___fladd+2,_sens_value+36
 10220  00B3AC  C091  F225         	movff	?___fladd+3,_sens_value+37
 10221  00B3B0                     l1478:
 10222  00B3B0  0012               	return		;funcret
 10223  00B3B2                     __end_of_CMP_temp_read:
 10224                           	callstack 0
 10225                           
 10226 ;; *************** function _sensor_ADC_read *****************
 10227 ;; Defined at:
 10228 ;;		line 236 in file "sensor.c"
 10229 ;; Parameters:    Size  Location     Type
 10230 ;;  chNum           1    wreg     unsigned char 
 10231 ;;  raw_adc         2   36[COMRAM] PTR int 
 10232 ;;		 -> CMP_temp_read@raw(2), gasSensor_read@raw(2), 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  chNum           1   38[COMRAM] unsigned char 
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      unsigned char 
 10237 ;; Registers used:
 10238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10248 ;;Total ram usage:        3 bytes
 10249 ;; Hardware stack levels used: 1
 10250 ;; Hardware stack levels required when called: 7
 10251 ;; This function calls:
 10252 ;;		_ads1114_read
 10253 ;;		_ads1114_read_ready
 10254 ;; This function is called by:
 10255 ;;		_gasSensor_read
 10256 ;;		_CMP_temp_read
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           	psect	text43
 10261  00ED9C                     __ptext43:
 10262                           	callstack 0
 10263  00ED9C                     _sensor_ADC_read:
 10264                           	callstack 21
 10265                           
 10266                           ;incstack = 0
 10267                           ;sensor_ADC_read@chNum stored from wreg
 10268  00ED9C  6E27               	movwf	sensor_ADC_read@chNum^0,c
 10269  00ED9E                     
 10270                           ;sensor.c: 238: if (ads1114_read_ready(chNum) == 0)
 10271  00ED9E  5027               	movf	sensor_ADC_read@chNum^0,w,c
 10272  00EDA0  EC66  F06B         	call	_ads1114_read_ready
 10273  00EDA4  0900               	iorlw	0
 10274  00EDA6  A4D8               	btfss	status,2,c
 10275  00EDA8  EFD8  F076         	goto	u19871
 10276  00EDAC  EFDA  F076         	goto	u19870
 10277  00EDB0                     u19871:
 10278  00EDB0  EFDD  F076         	goto	l18390
 10279  00EDB4                     u19870:
 10280  00EDB4                     
 10281                           ;sensor.c: 239: return 0;
 10282  00EDB4  0E00               	movlw	0
 10283  00EDB6  EFE4  F076         	goto	l1433
 10284  00EDBA                     l18390:
 10285                           
 10286                           ;sensor.c: 241: return ads1114_read(chNum, raw_adc);
 10287  00EDBA  C025  F01D         	movff	sensor_ADC_read@raw_adc,ads1114_read@raw_adc
 10288  00EDBE  C026  F01E         	movff	sensor_ADC_read@raw_adc+1,ads1114_read@raw_adc+1
 10289  00EDC2  5027               	movf	sensor_ADC_read@chNum^0,w,c
 10290  00EDC4  ECDE  F068         	call	_ads1114_read
 10291  00EDC8                     l1433:
 10292  00EDC8  0012               	return		;funcret
 10293  00EDCA                     __end_of_sensor_ADC_read:
 10294                           	callstack 0
 10295                           
 10296 ;; *************** function _ads1114_read_ready *****************
 10297 ;; Defined at:
 10298 ;;		line 18 in file "bsp/ads1114.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  chNum           1    wreg     unsigned char 
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;  chNum           1   31[COMRAM] unsigned char 
 10303 ;;  rbuff           2   28[COMRAM] unsigned char [2]
 10304 ;;  wbuff           1   30[COMRAM] unsigned char 
 10305 ;; Return value:  Size  Location     Type
 10306 ;;                  1    wreg      unsigned char 
 10307 ;; Registers used:
 10308 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10309 ;; Tracked objects:
 10310 ;;		On entry : 0/0
 10311 ;;		On exit  : 0/0
 10312 ;;		Unchanged: 0/0
 10313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10315 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10317 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10318 ;;Total ram usage:        4 bytes
 10319 ;; Hardware stack levels used: 1
 10320 ;; Hardware stack levels required when called: 6
 10321 ;; This function calls:
 10322 ;;		_i2c_readBytes
 10323 ;;		_i2c_writeBytes
 10324 ;; This function is called by:
 10325 ;;		_sensor_ADC_read
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text44
 10330  00D6CC                     __ptext44:
 10331                           	callstack 0
 10332  00D6CC                     _ads1114_read_ready:
 10333                           	callstack 21
 10334                           
 10335                           ;incstack = 0
 10336                           ;ads1114_read_ready@chNum stored from wreg
 10337  00D6CC  6E20               	movwf	ads1114_read_ready@chNum^0,c
 10338  00D6CE                     
 10339                           ;ads1114.c: 20: uint8_t wbuff = 0x01;
 10340  00D6CE  0E01               	movlw	1
 10341  00D6D0  6E1F               	movwf	ads1114_read_ready@wbuff^0,c
 10342  00D6D2                     
 10343                           ;ads1114.c: 21: uint8_t rbuff[2];;ads1114.c: 23: if (i2c_writeBytes(ADS1115_I2C_ADDRESS[
      +                          chNum], &wbuff, 1, 1) == 0)
 10344  00D6D2  0E1F               	movlw	low ads1114_read_ready@wbuff
 10345  00D6D4  6E15               	movwf	i2c_writeBytes@wrptr^0,c
 10346  00D6D6  0E00               	movlw	high ads1114_read_ready@wbuff
 10347  00D6D8  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
 10348  00D6DA  0E01               	movlw	1
 10349  00D6DC  6E17               	movwf	i2c_writeBytes@len^0,c
 10350  00D6DE  0E01               	movlw	1
 10351  00D6E0  6E18               	movwf	i2c_writeBytes@isStop^0,c
 10352  00D6E2  0EFB               	movlw	low _ADS1115_I2C_ADDRESS
 10353  00D6E4  2420               	addwf	ads1114_read_ready@chNum^0,w,c
 10354  00D6E6  6ED9               	movwf	fsr2l,c
 10355  00D6E8  6ADA               	clrf	fsr2h,c
 10356  00D6EA  0E01               	movlw	high _ADS1115_I2C_ADDRESS
 10357  00D6EC  22DA               	addwfc	fsr2h,f,c
 10358  00D6EE  50DF               	movf	indf2,w,c
 10359  00D6F0  ECF6  F072         	call	_i2c_writeBytes
 10360  00D6F4  0900               	iorlw	0
 10361  00D6F6  A4D8               	btfss	status,2,c
 10362  00D6F8  EF80  F06B         	goto	u19021
 10363  00D6FC  EF82  F06B         	goto	u19020
 10364  00D700                     u19021:
 10365  00D700  EF85  F06B         	goto	l17618
 10366  00D704                     u19020:
 10367  00D704                     l17614:
 10368                           
 10369                           ;ads1114.c: 24: return 0;
 10370  00D704  0E00               	movlw	0
 10371  00D706  EFA8  F06B         	goto	l490
 10372  00D70A                     l17618:
 10373                           
 10374                           ;ads1114.c: 26: if (i2c_readBytes(ADS1115_I2C_ADDRESS[chNum], rbuff, 2) == 0)
 10375  00D70A  0E1D               	movlw	low ads1114_read_ready@rbuff
 10376  00D70C  6E11               	movwf	i2c_readBytes@rdptr^0,c
 10377  00D70E  0E00               	movlw	high ads1114_read_ready@rbuff
 10378  00D710  6E12               	movwf	(i2c_readBytes@rdptr+1)^0,c
 10379  00D712  0E02               	movlw	2
 10380  00D714  6E13               	movwf	i2c_readBytes@len^0,c
 10381  00D716  0EFB               	movlw	low _ADS1115_I2C_ADDRESS
 10382  00D718  2420               	addwf	ads1114_read_ready@chNum^0,w,c
 10383  00D71A  6ED9               	movwf	fsr2l,c
 10384  00D71C  6ADA               	clrf	fsr2h,c
 10385  00D71E  0E01               	movlw	high _ADS1115_I2C_ADDRESS
 10386  00D720  22DA               	addwfc	fsr2h,f,c
 10387  00D722  50DF               	movf	indf2,w,c
 10388  00D724  ECE8  F066         	call	_i2c_readBytes
 10389  00D728  0900               	iorlw	0
 10390  00D72A  A4D8               	btfss	status,2,c
 10391  00D72C  EF9A  F06B         	goto	u19031
 10392  00D730  EF9C  F06B         	goto	u19030
 10393  00D734                     u19031:
 10394  00D734  EF9E  F06B         	goto	l491
 10395  00D738                     u19030:
 10396  00D738  EF82  F06B         	goto	l17614
 10397  00D73C                     l491:
 10398                           
 10399                           ;ads1114.c: 29: if (rbuff[0] & 0x80)
 10400  00D73C  AE1D               	btfss	ads1114_read_ready@rbuff^0,7,c
 10401  00D73E  EFA3  F06B         	goto	u19041
 10402  00D742  EFA5  F06B         	goto	u19040
 10403  00D746                     u19041:
 10404  00D746  EFA7  F06B         	goto	l17628
 10405  00D74A                     u19040:
 10406  00D74A  EF82  F06B         	goto	l17614
 10407  00D74E                     l17628:
 10408                           
 10409                           ;ads1114.c: 32: return 1;
 10410  00D74E  0E01               	movlw	1
 10411  00D750                     l490:
 10412  00D750  0012               	return		;funcret
 10413  00D752                     __end_of_ads1114_read_ready:
 10414                           	callstack 0
 10415                           
 10416 ;; *************** function _ads1114_read *****************
 10417 ;; Defined at:
 10418 ;;		line 47 in file "bsp/ads1114.c"
 10419 ;; Parameters:    Size  Location     Type
 10420 ;;  chNum           1    wreg     unsigned char 
 10421 ;;  raw_adc         2   28[COMRAM] PTR int 
 10422 ;;		 -> CMP_temp_read@raw(2), gasSensor_read@raw(2), 
 10423 ;; Auto vars:     Size  Location     Type
 10424 ;;  chNum           1   35[COMRAM] unsigned char 
 10425 ;;  rbuff           2   33[COMRAM] unsigned char [2]
 10426 ;;  wbuff           1   32[COMRAM] unsigned char 
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      unsigned char 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10437 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;Total ram usage:        8 bytes
 10441 ;; Hardware stack levels used: 1
 10442 ;; Hardware stack levels required when called: 6
 10443 ;; This function calls:
 10444 ;;		_i2c_readBytes
 10445 ;;		_i2c_writeBytes
 10446 ;; This function is called by:
 10447 ;;		_sensor_ADC_read
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           	psect	text45
 10452  00D1BC                     __ptext45:
 10453                           	callstack 0
 10454  00D1BC                     _ads1114_read:
 10455                           	callstack 21
 10456                           
 10457                           ;incstack = 0
 10458                           ;ads1114_read@chNum stored from wreg
 10459  00D1BC  6E24               	movwf	ads1114_read@chNum^0,c
 10460  00D1BE                     
 10461                           ;ads1114.c: 49: uint8_t wbuff = 0x00;
 10462  00D1BE  0E00               	movlw	0
 10463  00D1C0  6E21               	movwf	ads1114_read@wbuff^0,c
 10464  00D1C2                     
 10465                           ;ads1114.c: 50: uint8_t rbuff[2];;ads1114.c: 52: if (i2c_writeBytes(ADS1115_I2C_ADDRESS[
      +                          chNum], &wbuff, 1, 1) == 0)
 10466  00D1C2  0E21               	movlw	low ads1114_read@wbuff
 10467  00D1C4  6E15               	movwf	i2c_writeBytes@wrptr^0,c
 10468  00D1C6  0E00               	movlw	high ads1114_read@wbuff
 10469  00D1C8  6E16               	movwf	(i2c_writeBytes@wrptr+1)^0,c
 10470  00D1CA  0E01               	movlw	1
 10471  00D1CC  6E17               	movwf	i2c_writeBytes@len^0,c
 10472  00D1CE  0E01               	movlw	1
 10473  00D1D0  6E18               	movwf	i2c_writeBytes@isStop^0,c
 10474  00D1D2  0EFB               	movlw	low _ADS1115_I2C_ADDRESS
 10475  00D1D4  2424               	addwf	ads1114_read@chNum^0,w,c
 10476  00D1D6  6ED9               	movwf	fsr2l,c
 10477  00D1D8  6ADA               	clrf	fsr2h,c
 10478  00D1DA  0E01               	movlw	high _ADS1115_I2C_ADDRESS
 10479  00D1DC  22DA               	addwfc	fsr2h,f,c
 10480  00D1DE  50DF               	movf	indf2,w,c
 10481  00D1E0  ECF6  F072         	call	_i2c_writeBytes
 10482  00D1E4  0900               	iorlw	0
 10483  00D1E6  A4D8               	btfss	status,2,c
 10484  00D1E8  EFF8  F068         	goto	u19051
 10485  00D1EC  EFFA  F068         	goto	u19050
 10486  00D1F0                     u19051:
 10487  00D1F0  EFFD  F068         	goto	l17652
 10488  00D1F4                     u19050:
 10489  00D1F4                     l17648:
 10490                           
 10491                           ;ads1114.c: 53: return 0;
 10492  00D1F4  0E00               	movlw	0
 10493  00D1F6  EF29  F069         	goto	l501
 10494  00D1FA                     l17652:
 10495                           
 10496                           ;ads1114.c: 55: if (i2c_readBytes(ADS1115_I2C_ADDRESS[chNum], rbuff, 2) == 0)
 10497  00D1FA  0E22               	movlw	low ads1114_read@rbuff
 10498  00D1FC  6E11               	movwf	i2c_readBytes@rdptr^0,c
 10499  00D1FE  0E00               	movlw	high ads1114_read@rbuff
 10500  00D200  6E12               	movwf	(i2c_readBytes@rdptr+1)^0,c
 10501  00D202  0E02               	movlw	2
 10502  00D204  6E13               	movwf	i2c_readBytes@len^0,c
 10503  00D206  0EFB               	movlw	low _ADS1115_I2C_ADDRESS
 10504  00D208  2424               	addwf	ads1114_read@chNum^0,w,c
 10505  00D20A  6ED9               	movwf	fsr2l,c
 10506  00D20C  6ADA               	clrf	fsr2h,c
 10507  00D20E  0E01               	movlw	high _ADS1115_I2C_ADDRESS
 10508  00D210  22DA               	addwfc	fsr2h,f,c
 10509  00D212  50DF               	movf	indf2,w,c
 10510  00D214  ECE8  F066         	call	_i2c_readBytes
 10511  00D218  0900               	iorlw	0
 10512  00D21A  A4D8               	btfss	status,2,c
 10513  00D21C  EF12  F069         	goto	u19061
 10514  00D220  EF14  F069         	goto	u19060
 10515  00D224                     u19061:
 10516  00D224  EF16  F069         	goto	l17658
 10517  00D228                     u19060:
 10518  00D228  EFFA  F068         	goto	l17648
 10519  00D22C                     l17658:
 10520                           
 10521                           ;ads1114.c: 58: *raw_adc = ((int16_t)rbuff[0] << 8) | rbuff[1];
 10522  00D22C  5023               	movf	(ads1114_read@rbuff+1)^0,w,c
 10523  00D22E  C022  F01F         	movff	ads1114_read@rbuff,??_ads1114_read
 10524  00D232  6A20               	clrf	(??_ads1114_read+1)^0,c
 10525  00D234  C01F  F020         	movff	??_ads1114_read,??_ads1114_read+1
 10526  00D238  6A1F               	clrf	??_ads1114_read^0,c
 10527  00D23A  121F               	iorwf	??_ads1114_read^0,f,c
 10528  00D23C  0E00               	movlw	0
 10529  00D23E  1220               	iorwf	(??_ads1114_read+1)^0,f,c
 10530  00D240  C01D  FFD9         	movff	ads1114_read@raw_adc,fsr2l
 10531  00D244  C01E  FFDA         	movff	ads1114_read@raw_adc+1,fsr2h
 10532  00D248  C01F  FFDE         	movff	??_ads1114_read,postinc2
 10533  00D24C  C020  FFDD         	movff	??_ads1114_read+1,postdec2
 10534  00D250                     
 10535                           ;ads1114.c: 59: return 1;
 10536  00D250  0E01               	movlw	1
 10537  00D252                     l501:
 10538  00D252  0012               	return		;funcret
 10539  00D254                     __end_of_ads1114_read:
 10540                           	callstack 0
 10541                           
 10542 ;; *************** function _i2c_writeBytes *****************
 10543 ;; Defined at:
 10544 ;;		line 57 in file "bsp/i2c.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;  address         1    wreg     const unsigned char 
 10547 ;;  wrptr           2   20[COMRAM] PTR const unsigned char 
 10548 ;;		 -> ads1114_Comparator_SetUp@wbuff(1), ads1114_read@wbuff(1), ads1115_SetUp@wraddr(1), ads1114_read_ready@wbuff(1), 
 10549 ;;		 -> sht3x_write_alert_limits@cmd(2), sht3x_heaterOff@cmd(2), sht3x_heaterOn@cmd(2), sht3x_read_status_reg@cmd(2), 
 10550 ;;		 -> sht3x_clear_status_reg@cmd(2), sht3x_break_cmd@cmd(2), sht3x_art_cmd@cmd(2), sht3x_measure_block_read@cmd(2), 
 10551 ;;		 -> sht3x_measure_nonblock_read@cmd(2), sht3x_measure_start@cmd(2), sht3x_softreset@cmd(2), lmp91000_set_Mode@buff(2
      +), 
 10552 ;;		 -> lmp91000_set_Reference@buff(2), lmp91000_set_GainRLoad@buff(2), lmp91000_unlock@buff(2), lmp91000_lock@buff(2), 
 10553 ;;		 -> lmp91000_get_Modecn@wBuff(1), lmp91000_get_Refcn@wBuff(1), lmp91000_get_Tiacn@wBuff(1), lmp91000_get_lock@wBuff(
      +1), 
 10554 ;;		 -> lmp91000_get_status@wBuff(1), 
 10555 ;;  len             1   22[COMRAM] const unsigned char 
 10556 ;;  isStop          1   23[COMRAM] unsigned char 
 10557 ;; Auto vars:     Size  Location     Type
 10558 ;;  address         1   24[COMRAM] const unsigned char 
 10559 ;; Return value:  Size  Location     Type
 10560 ;;                  1    wreg      unsigned char 
 10561 ;; Registers used:
 10562 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10563 ;; Tracked objects:
 10564 ;;		On entry : 0/0
 10565 ;;		On exit  : 0/0
 10566 ;;		Unchanged: 0/0
 10567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10571 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10572 ;;Total ram usage:        5 bytes
 10573 ;; Hardware stack levels used: 1
 10574 ;; Hardware stack levels required when called: 5
 10575 ;; This function calls:
 10576 ;;		_I2C_Start
 10577 ;;		_I2C_Stop
 10578 ;;		_I2C_Write
 10579 ;;		_i2c_writeData
 10580 ;; This function is called by:
 10581 ;;		_i2c_writeBytes_to
 10582 ;;		_lmp91000_get_status
 10583 ;;		_lmp91000_unlock
 10584 ;;		_lmp91000_set_GainRLoad
 10585 ;;		_lmp91000_set_Reference
 10586 ;;		_lmp91000_set_Mode
 10587 ;;		_sht3x_measure_start
 10588 ;;		_sht3x_measure_nonblock_read
 10589 ;;		_sht3x_clear_status_reg
 10590 ;;		_sht3x_heaterOff
 10591 ;;		_ads1114_read_ready
 10592 ;;		_ads1114_read
 10593 ;;		_i2c_readBytes_from
 10594 ;;		_lmp91000_get_lock
 10595 ;;		_lmp91000_get_Tiacn
 10596 ;;		_lmp91000_get_Refcn
 10597 ;;		_lmp91000_get_Modecn
 10598 ;;		_lmp91000_lock
 10599 ;;		_sht3x_softreset
 10600 ;;		_sht3x_measure_block_read
 10601 ;;		_sht3x_art_cmd
 10602 ;;		_sht3x_break_cmd
 10603 ;;		_sht3x_heaterOn
 10604 ;;		_ads1114_Comparator_SetUp
 10605 ;; This function uses a non-reentrant model
 10606 ;;
 10607                           
 10608                           	psect	text46
 10609  00E5EC                     __ptext46:
 10610                           	callstack 0
 10611  00E5EC                     _i2c_writeBytes:
 10612                           	callstack 21
 10613                           
 10614                           ;incstack = 0
 10615                           ;i2c_writeBytes@address stored from wreg
 10616  00E5EC  6E19               	movwf	i2c_writeBytes@address^0,c
 10617  00E5EE                     
 10618                           ;i2c.c: 59: I2C_Start();
 10619  00E5EE  EC87  F077         	call	_I2C_Start	;wreg free
 10620  00E5F2                     
 10621                           ;i2c.c: 61: if (I2C_Write(address | 0x00)) {
 10622  00E5F2  5019               	movf	i2c_writeBytes@address^0,w,c
 10623  00E5F4  EC28  F075         	call	_I2C_Write
 10624  00E5F8  0900               	iorlw	0
 10625  00E5FA  B4D8               	btfsc	status,2,c
 10626  00E5FC  EF02  F073         	goto	u17791
 10627  00E600  EF04  F073         	goto	u17790
 10628  00E604                     u17791:
 10629  00E604  EF09  F073         	goto	l16694
 10630  00E608                     u17790:
 10631  00E608                     
 10632                           ;i2c.c: 62: I2C_Stop();
 10633  00E608  EC75  F077         	call	_I2C_Stop	;wreg free
 10634  00E60C                     l16690:
 10635                           
 10636                           ;i2c.c: 63: return 0;
 10637  00E60C  0E00               	movlw	0
 10638  00E60E  EF1E  F073         	goto	l85
 10639  00E612                     l16694:
 10640                           
 10641                           ;i2c.c: 64: };i2c.c: 66: if (i2c_writeData(wrptr, len, isStop) == 0) {
 10642  00E612  C015  F010         	movff	i2c_writeBytes@wrptr,i2c_writeData@wrptr
 10643  00E616  C016  F011         	movff	i2c_writeBytes@wrptr+1,i2c_writeData@wrptr+1
 10644  00E61A  C017  F012         	movff	i2c_writeBytes@len,i2c_writeData@len
 10645  00E61E  C018  F013         	movff	i2c_writeBytes@isStop,i2c_writeData@isStop
 10646  00E622  EC05  F06E         	call	_i2c_writeData	;wreg free
 10647  00E626  0900               	iorlw	0
 10648  00E628  A4D8               	btfss	status,2,c
 10649  00E62A  EF19  F073         	goto	u17801
 10650  00E62E  EF1B  F073         	goto	u17800
 10651  00E632                     u17801:
 10652  00E632  EF1D  F073         	goto	l16700
 10653  00E636                     u17800:
 10654  00E636  EF06  F073         	goto	l16690
 10655  00E63A                     l16700:
 10656                           
 10657                           ;i2c.c: 68: };i2c.c: 70: return 1;
 10658  00E63A  0E01               	movlw	1
 10659  00E63C                     l85:
 10660  00E63C  0012               	return		;funcret
 10661  00E63E                     __end_of_i2c_writeBytes:
 10662                           	callstack 0
 10663                           
 10664 ;; *************** function _i2c_writeData *****************
 10665 ;; Defined at:
 10666 ;;		line 42 in file "bsp/i2c.c"
 10667 ;; Parameters:    Size  Location     Type
 10668 ;;  wrptr           2   15[COMRAM] PTR const unsigned char 
 10669 ;;		 -> ads1114_Comparator_SetUp@rbuff(2), ads1114_Comparator_SetUp@wbuff(1), ads1114_read@wbuff(1), ads1115_SetUp@buff(
      +2), 
 10670 ;;		 -> ads1115_SetUp@wraddr(1), ads1114_read_ready@wbuff(1), sht3x_write_alert_limits@buff(3), sht3x_write_alert_limits
      +@cmd(2), 
 10671 ;;		 -> sht3x_heaterOff@cmd(2), sht3x_heaterOn@cmd(2), sht3x_read_status_reg@cmd(2), sht3x_clear_status_reg@cmd(2), 
 10672 ;;		 -> sht3x_break_cmd@cmd(2), sht3x_art_cmd@cmd(2), sht3x_measure_block_read@cmd(2), sht3x_measure_nonblock_read@cmd(2
      +), 
 10673 ;;		 -> sht3x_measure_start@cmd(2), sht3x_softreset@cmd(2), lmp91000_set_Mode@buff(2), lmp91000_set_Reference@buff(2), 
 10674 ;;		 -> lmp91000_set_GainRLoad@buff(2), lmp91000_unlock@buff(2), lmp91000_lock@buff(2), lmp91000_get_Modecn@wBuff(1), 
 10675 ;;		 -> lmp91000_get_Refcn@wBuff(1), lmp91000_get_Tiacn@wBuff(1), lmp91000_get_lock@wBuff(1), lmp91000_get_status@wBuff(
      +1), 
 10676 ;;  len             1   17[COMRAM] const unsigned char 
 10677 ;;  isStop          1   18[COMRAM] unsigned char 
 10678 ;; Auto vars:     Size  Location     Type
 10679 ;;  i               1   19[COMRAM] unsigned char 
 10680 ;; Return value:  Size  Location     Type
 10681 ;;                  1    wreg      unsigned char 
 10682 ;; Registers used:
 10683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10684 ;; Tracked objects:
 10685 ;;		On entry : 0/0
 10686 ;;		On exit  : 0/0
 10687 ;;		Unchanged: 0/0
 10688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10692 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10693 ;;Total ram usage:        5 bytes
 10694 ;; Hardware stack levels used: 1
 10695 ;; Hardware stack levels required when called: 4
 10696 ;; This function calls:
 10697 ;;		_I2C_Stop
 10698 ;;		_I2C_Write
 10699 ;; This function is called by:
 10700 ;;		_i2c_writeBytes
 10701 ;;		_i2c_writeBytes_to
 10702 ;; This function uses a non-reentrant model
 10703 ;;
 10704                           
 10705                           	psect	text47
 10706  00DC0A                     __ptext47:
 10707                           	callstack 0
 10708  00DC0A                     _i2c_writeData:
 10709                           	callstack 21
 10710  00DC0A                     
 10711                           ;i2c.c: 44: for(uint8_t i = 0 ; i < len ; i++)
 10712  00DC0A  0E00               	movlw	0
 10713  00DC0C  6E14               	movwf	i2c_writeData@i^0,c
 10714  00DC0E  5012               	movf	i2c_writeData@len^0,w,c
 10715  00DC10  A4D8               	btfss	status,2,c
 10716  00DC12  EF0D  F06E         	goto	u16861
 10717  00DC16  EF0F  F06E         	goto	u16860
 10718  00DC1A                     u16861:
 10719  00DC1A  EF11  F06E         	goto	l16140
 10720  00DC1E                     u16860:
 10721  00DC1E  EF31  F06E         	goto	l16152
 10722  00DC22                     l16140:
 10723                           
 10724                           ;i2c.c: 45: {;i2c.c: 46: if(I2C_Write(wrptr[i])) {
 10725  00DC22  5014               	movf	i2c_writeData@i^0,w,c
 10726  00DC24  2410               	addwf	i2c_writeData@wrptr^0,w,c
 10727  00DC26  6ED9               	movwf	fsr2l,c
 10728  00DC28  0E00               	movlw	0
 10729  00DC2A  2011               	addwfc	(i2c_writeData@wrptr+1)^0,w,c
 10730  00DC2C  6EDA               	movwf	fsr2h,c
 10731  00DC2E  50DF               	movf	indf2,w,c
 10732  00DC30  EC28  F075         	call	_I2C_Write
 10733  00DC34  0900               	iorlw	0
 10734  00DC36  B4D8               	btfsc	status,2,c
 10735  00DC38  EF20  F06E         	goto	u16871
 10736  00DC3C  EF22  F06E         	goto	u16870
 10737  00DC40                     u16871:
 10738  00DC40  EF27  F06E         	goto	l16148
 10739  00DC44                     u16870:
 10740  00DC44                     
 10741                           ;i2c.c: 47: I2C_Stop();
 10742  00DC44  EC75  F077         	call	_I2C_Stop	;wreg free
 10743  00DC48                     
 10744                           ;i2c.c: 48: return 0;
 10745  00DC48  0E00               	movlw	0
 10746  00DC4A  EF3C  F06E         	goto	l80
 10747  00DC4E                     l16148:
 10748  00DC4E  2A14               	incf	i2c_writeData@i^0,f,c
 10749  00DC50  5012               	movf	i2c_writeData@len^0,w,c
 10750  00DC52  5C14               	subwf	i2c_writeData@i^0,w,c
 10751  00DC54  A0D8               	btfss	status,0,c
 10752  00DC56  EF2F  F06E         	goto	u16881
 10753  00DC5A  EF31  F06E         	goto	u16880
 10754  00DC5E                     u16881:
 10755  00DC5E  EF11  F06E         	goto	l16140
 10756  00DC62                     u16880:
 10757  00DC62                     l16152:
 10758                           
 10759                           ;i2c.c: 49: };i2c.c: 50: };i2c.c: 52: if (isStop) I2C_Stop();
 10760  00DC62  5013               	movf	i2c_writeData@isStop^0,w,c
 10761  00DC64  B4D8               	btfsc	status,2,c
 10762  00DC66  EF37  F06E         	goto	u16891
 10763  00DC6A  EF39  F06E         	goto	u16890
 10764  00DC6E                     u16891:
 10765  00DC6E  EF3B  F06E         	goto	l16156
 10766  00DC72                     u16890:
 10767  00DC72  EC75  F077         	call	_I2C_Stop	;wreg free
 10768  00DC76                     l16156:
 10769                           
 10770                           ;i2c.c: 54: return 1;
 10771  00DC76  0E01               	movlw	1
 10772  00DC78                     l80:
 10773  00DC78  0012               	return		;funcret
 10774  00DC7A                     __end_of_i2c_writeData:
 10775                           	callstack 0
 10776                           
 10777 ;; *************** function _i2c_readBytes *****************
 10778 ;; Defined at:
 10779 ;;		line 87 in file "bsp/i2c.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;  address         1    wreg     const unsigned char 
 10782 ;;  rdptr           2   16[COMRAM] PTR unsigned char 
 10783 ;;		 -> ads1114_Comparator_SetUp@rbuff(2), ads1114_read@rbuff(2), ads1114_read_ready@rbuff(2), sht3x_read_status_reg@buf
      +f(3), 
 10784 ;;		 -> sht3x_common_read@buff(6), lmp91000_get_Modecn@rBuff(1), lmp91000_get_Refcn@rBuff(1), lmp91000_get_Tiacn@rBuff(1
      +), 
 10785 ;;		 -> lmp91000_get_lock@rBuff(1), lmp91000_get_status@rBuff(1), 
 10786 ;;  len             1   18[COMRAM] const unsigned char 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;  address         1   25[COMRAM] const unsigned char 
 10789 ;;  i               1   27[COMRAM] unsigned char 
 10790 ;;  ackbit          1   26[COMRAM] unsigned char 
 10791 ;; Return value:  Size  Location     Type
 10792 ;;                  1    wreg      unsigned char 
 10793 ;; Registers used:
 10794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10795 ;; Tracked objects:
 10796 ;;		On entry : 0/0
 10797 ;;		On exit  : 0/0
 10798 ;;		Unchanged: 0/0
 10799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10800 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10801 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10802 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10803 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10804 ;;Total ram usage:       12 bytes
 10805 ;; Hardware stack levels used: 1
 10806 ;; Hardware stack levels required when called: 4
 10807 ;; This function calls:
 10808 ;;		_I2C_Read
 10809 ;;		_I2C_Start
 10810 ;;		_I2C_Stop
 10811 ;;		_I2C_Write
 10812 ;; This function is called by:
 10813 ;;		_lmp91000_get_status
 10814 ;;		_sht3x_common_read
 10815 ;;		_ads1114_read_ready
 10816 ;;		_ads1114_read
 10817 ;;		_i2c_readBytes_from
 10818 ;;		_lmp91000_get_lock
 10819 ;;		_lmp91000_get_Tiacn
 10820 ;;		_lmp91000_get_Refcn
 10821 ;;		_lmp91000_get_Modecn
 10822 ;;		_ads1114_Comparator_SetUp
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826                           	psect	text48
 10827  00CDD0                     __ptext48:
 10828                           	callstack 0
 10829  00CDD0                     _i2c_readBytes:
 10830                           	callstack 20
 10831                           
 10832                           ;incstack = 0
 10833                           ;i2c_readBytes@address stored from wreg
 10834  00CDD0  6E1A               	movwf	i2c_readBytes@address^0,c
 10835  00CDD2                     
 10836                           ;i2c.c: 89: I2C_Start();
 10837  00CDD2  EC87  F077         	call	_I2C_Start	;wreg free
 10838  00CDD6                     
 10839                           ;i2c.c: 91: if(I2C_Write(address | 0x01)) {
 10840  00CDD6  501A               	movf	i2c_readBytes@address^0,w,c
 10841  00CDD8  0901               	iorlw	1
 10842  00CDDA  EC28  F075         	call	_I2C_Write
 10843  00CDDE  0900               	iorlw	0
 10844  00CDE0  B4D8               	btfsc	status,2,c
 10845  00CDE2  EFF5  F066         	goto	u16901
 10846  00CDE6  EFF7  F066         	goto	u16900
 10847  00CDEA                     u16901:
 10848  00CDEA  EFFC  F066         	goto	l16170
 10849  00CDEE                     u16900:
 10850  00CDEE                     
 10851                           ;i2c.c: 92: I2C_Stop();
 10852  00CDEE  EC75  F077         	call	_I2C_Stop	;wreg free
 10853  00CDF2                     
 10854                           ;i2c.c: 93: return 0;
 10855  00CDF2  0E00               	movlw	0
 10856  00CDF4  EF3D  F067         	goto	l95
 10857  00CDF8                     l16170:
 10858                           
 10859                           ;i2c.c: 94: };i2c.c: 96: uint8_t ackbit = I2C_ACK;
 10860  00CDF8  0E00               	movlw	0
 10861  00CDFA  6E1B               	movwf	i2c_readBytes@ackbit^0,c
 10862                           
 10863                           ;i2c.c: 97: for(uint8_t i = 0 ; i < len ; i++)
 10864  00CDFC  0E00               	movlw	0
 10865  00CDFE  6E1C               	movwf	i2c_readBytes@i^0,c
 10866  00CE00  5013               	movf	i2c_readBytes@len^0,w,c
 10867  00CE02  A4D8               	btfss	status,2,c
 10868  00CE04  EF06  F067         	goto	u16911
 10869  00CE08  EF08  F067         	goto	u16910
 10870  00CE0C                     u16911:
 10871  00CE0C  EF0A  F067         	goto	l16176
 10872  00CE10                     u16910:
 10873  00CE10  EF3A  F067         	goto	l16186
 10874  00CE14                     l16176:
 10875                           
 10876                           ;i2c.c: 98: {;i2c.c: 99: if (i == len - 1) ackbit = I2C_NACK;
 10877  00CE14  501C               	movf	i2c_readBytes@i^0,w,c
 10878  00CE16  6E14               	movwf	??_i2c_readBytes^0,c
 10879  00CE18  6A15               	clrf	(??_i2c_readBytes+1)^0,c
 10880  00CE1A  0EFF               	movlw	255
 10881  00CE1C  6E16               	movwf	(??_i2c_readBytes+2)^0,c
 10882  00CE1E  0EFF               	movlw	255
 10883  00CE20  6E17               	movwf	(??_i2c_readBytes+3)^0,c
 10884  00CE22  5013               	movf	i2c_readBytes@len^0,w,c
 10885  00CE24  6E18               	movwf	(??_i2c_readBytes+4)^0,c
 10886  00CE26  6A19               	clrf	(??_i2c_readBytes+5)^0,c
 10887  00CE28  5016               	movf	(??_i2c_readBytes+2)^0,w,c
 10888  00CE2A  2618               	addwf	(??_i2c_readBytes+4)^0,f,c
 10889  00CE2C  5017               	movf	(??_i2c_readBytes+3)^0,w,c
 10890  00CE2E  2219               	addwfc	(??_i2c_readBytes+5)^0,f,c
 10891  00CE30  5014               	movf	??_i2c_readBytes^0,w,c
 10892  00CE32  1818               	xorwf	(??_i2c_readBytes+4)^0,w,c
 10893  00CE34  E107               	bnz	u16921
 10894  00CE36  5015               	movf	(??_i2c_readBytes+1)^0,w,c
 10895  00CE38  1819               	xorwf	(??_i2c_readBytes+5)^0,w,c
 10896  00CE3A  A4D8               	btfss	status,2,c
 10897  00CE3C  EF22  F067         	goto	u16921
 10898  00CE40  EF24  F067         	goto	u16920
 10899  00CE44                     u16921:
 10900  00CE44  EF26  F067         	goto	l16180
 10901  00CE48                     u16920:
 10902  00CE48  0E01               	movlw	1
 10903  00CE4A  6E1B               	movwf	i2c_readBytes@ackbit^0,c
 10904  00CE4C                     l16180:
 10905                           
 10906                           ;i2c.c: 100: rdptr[i] = I2C_Read(ackbit);
 10907  00CE4C  501C               	movf	i2c_readBytes@i^0,w,c
 10908  00CE4E  2411               	addwf	i2c_readBytes@rdptr^0,w,c
 10909  00CE50  6ED9               	movwf	fsr2l,c
 10910  00CE52  0E00               	movlw	0
 10911  00CE54  2012               	addwfc	(i2c_readBytes@rdptr+1)^0,w,c
 10912  00CE56  6EDA               	movwf	fsr2h,c
 10913  00CE58  501B               	movf	i2c_readBytes@ackbit^0,w,c
 10914  00CE5A  EC77  F072         	call	_I2C_Read
 10915  00CE5E  6EDF               	movwf	indf2,c
 10916  00CE60  2A1C               	incf	i2c_readBytes@i^0,f,c
 10917  00CE62  5013               	movf	i2c_readBytes@len^0,w,c
 10918  00CE64  5C1C               	subwf	i2c_readBytes@i^0,w,c
 10919  00CE66  A0D8               	btfss	status,0,c
 10920  00CE68  EF38  F067         	goto	u16931
 10921  00CE6C  EF3A  F067         	goto	u16930
 10922  00CE70                     u16931:
 10923  00CE70  EF0A  F067         	goto	l16176
 10924  00CE74                     u16930:
 10925  00CE74                     l16186:
 10926                           
 10927                           ;i2c.c: 101: };i2c.c: 103: I2C_Stop();
 10928  00CE74  EC75  F077         	call	_I2C_Stop	;wreg free
 10929  00CE78                     
 10930                           ;i2c.c: 105: return 1;
 10931  00CE78  0E01               	movlw	1
 10932  00CE7A                     l95:
 10933  00CE7A  0012               	return		;funcret
 10934  00CE7C                     __end_of_i2c_readBytes:
 10935                           	callstack 0
 10936                           
 10937 ;; *************** function _I2C_Write *****************
 10938 ;; Defined at:
 10939 ;;		line 152 in file "bsp/i2c.c"
 10940 ;; Parameters:    Size  Location     Type
 10941 ;;  I2cWriteData    1    wreg     unsigned char 
 10942 ;; Auto vars:     Size  Location     Type
 10943 ;;  I2cWriteData    1   14[COMRAM] unsigned char 
 10944 ;; Return value:  Size  Location     Type
 10945 ;;                  1    wreg      unsigned char 
 10946 ;; Registers used:
 10947 ;;		wreg
 10948 ;; Tracked objects:
 10949 ;;		On entry : 0/0
 10950 ;;		On exit  : 0/0
 10951 ;;		Unchanged: 0/0
 10952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10957 ;;Total ram usage:        1 bytes
 10958 ;; Hardware stack levels used: 1
 10959 ;; Hardware stack levels required when called: 3
 10960 ;; This function calls:
 10961 ;;		Nothing
 10962 ;; This function is called by:
 10963 ;;		_i2c_writeData
 10964 ;;		_i2c_writeBytes
 10965 ;;		_i2c_readBytes
 10966 ;; This function uses a non-reentrant model
 10967 ;;
 10968                           
 10969                           	psect	text49
 10970  00EA50                     __ptext49:
 10971                           	callstack 0
 10972  00EA50                     _I2C_Write:
 10973                           	callstack 20
 10974                           
 10975                           ;incstack = 0
 10976                           ;I2C_Write@I2cWriteData stored from wreg
 10977  00EA50  6E0F               	movwf	I2C_Write@I2cWriteData^0,c
 10978  00EA52                     
 10979                           ;i2c.c: 154: PIR1bits.SSP1IF = 0;
 10980  00EA52  969E               	bcf	158,3,c	;volatile
 10981  00EA54                     l132:
 10982  00EA54  B0C7               	btfsc	199,0,c	;volatile
 10983  00EA56  EF2F  F075         	goto	u16701
 10984  00EA5A  EF31  F075         	goto	u16700
 10985  00EA5E                     u16701:
 10986  00EA5E  EF2A  F075         	goto	l132
 10987  00EA62                     u16700:
 10988  00EA62                     
 10989                           ;i2c.c: 157: SSP1BUF = I2cWriteData;
 10990  00EA62  C00F  FFC9         	movff	I2C_Write@I2cWriteData,4041	;volatile
 10991  00EA66                     l135:
 10992  00EA66  A69E               	btfss	158,3,c	;volatile
 10993  00EA68  EF38  F075         	goto	u16711
 10994  00EA6C  EF3A  F075         	goto	u16710
 10995  00EA70                     u16711:
 10996  00EA70  EF33  F075         	goto	l135
 10997  00EA74                     u16710:
 10998  00EA74                     
 10999                           ;i2c.c: 160: PIR1bits.SSP1IF = 0;
 11000  00EA74  969E               	bcf	158,3,c	;volatile
 11001                           
 11002                           ;i2c.c: 162: return (SSP1CON2bits.ACKSTAT);
 11003  00EA76  BCC5               	btfsc	197,6,c	;volatile
 11004  00EA78  EF40  F075         	goto	u16721
 11005  00EA7C  EF43  F075         	goto	u16720
 11006  00EA80                     u16721:
 11007  00EA80  0E01               	movlw	1
 11008  00EA82  EF44  F075         	goto	u16726
 11009  00EA86                     u16720:
 11010  00EA86  0E00               	movlw	0
 11011  00EA88                     u16726:
 11012  00EA88  0012               	return		;funcret
 11013  00EA8A                     __end_of_I2C_Write:
 11014                           	callstack 0
 11015                           
 11016 ;; *************** function _I2C_Stop *****************
 11017 ;; Defined at:
 11018 ;;		line 130 in file "bsp/i2c.c"
 11019 ;; Parameters:    Size  Location     Type
 11020 ;;		None
 11021 ;; Auto vars:     Size  Location     Type
 11022 ;;		None
 11023 ;; Return value:  Size  Location     Type
 11024 ;;                  1    wreg      void 
 11025 ;; Registers used:
 11026 ;;		None
 11027 ;; Tracked objects:
 11028 ;;		On entry : 0/0
 11029 ;;		On exit  : 0/0
 11030 ;;		Unchanged: 0/0
 11031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11036 ;;Total ram usage:        0 bytes
 11037 ;; Hardware stack levels used: 1
 11038 ;; Hardware stack levels required when called: 3
 11039 ;; This function calls:
 11040 ;;		Nothing
 11041 ;; This function is called by:
 11042 ;;		_i2c_writeData
 11043 ;;		_i2c_writeBytes
 11044 ;;		_i2c_writeBytes_to
 11045 ;;		_i2c_readBytes
 11046 ;;		_i2c_readBytes_from
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           	psect	text50
 11051  00EEEA                     __ptext50:
 11052                           	callstack 0
 11053  00EEEA                     _I2C_Stop:
 11054                           	callstack 20
 11055  00EEEA                     
 11056                           ;i2c.c: 132: PIR1bits.SSP1IF = 0;
 11057  00EEEA  969E               	bcf	158,3,c	;volatile
 11058  00EEEC                     l114:
 11059  00EEEC  B0C7               	btfsc	199,0,c	;volatile
 11060  00EEEE  EF7B  F077         	goto	u16731
 11061  00EEF2  EF7D  F077         	goto	u16730
 11062  00EEF6                     u16731:
 11063  00EEF6  EF76  F077         	goto	l114
 11064  00EEFA                     u16730:
 11065  00EEFA                     
 11066                           ;i2c.c: 135: SSP1CON2bits.PEN = 1;
 11067  00EEFA  84C5               	bsf	197,2,c	;volatile
 11068  00EEFC                     l117:
 11069  00EEFC  A69E               	btfss	158,3,c	;volatile
 11070  00EEFE  EF83  F077         	goto	u16741
 11071  00EF02  EF85  F077         	goto	u16740
 11072  00EF06                     u16741:
 11073  00EF06  EF7E  F077         	goto	l117
 11074  00EF0A                     u16740:
 11075  00EF0A                     
 11076                           ;i2c.c: 138: PIR1bits.SSP1IF = 0;
 11077  00EF0A  969E               	bcf	158,3,c	;volatile
 11078  00EF0C  0012               	return		;funcret
 11079  00EF0E                     __end_of_I2C_Stop:
 11080                           	callstack 0
 11081                           
 11082 ;; *************** function _I2C_Start *****************
 11083 ;; Defined at:
 11084 ;;		line 119 in file "bsp/i2c.c"
 11085 ;; Parameters:    Size  Location     Type
 11086 ;;		None
 11087 ;; Auto vars:     Size  Location     Type
 11088 ;;		None
 11089 ;; Return value:  Size  Location     Type
 11090 ;;                  1    wreg      void 
 11091 ;; Registers used:
 11092 ;;		None
 11093 ;; Tracked objects:
 11094 ;;		On entry : 0/0
 11095 ;;		On exit  : 0/0
 11096 ;;		Unchanged: 0/0
 11097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11102 ;;Total ram usage:        0 bytes
 11103 ;; Hardware stack levels used: 1
 11104 ;; Hardware stack levels required when called: 3
 11105 ;; This function calls:
 11106 ;;		Nothing
 11107 ;; This function is called by:
 11108 ;;		_i2c_writeBytes
 11109 ;;		_i2c_readBytes
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text51
 11114  00EF0E                     __ptext51:
 11115                           	callstack 0
 11116  00EF0E                     _I2C_Start:
 11117                           	callstack 20
 11118  00EF0E                     
 11119                           ;i2c.c: 121: PIR1bits.SSP1IF = 0;
 11120  00EF0E  969E               	bcf	158,3,c	;volatile
 11121  00EF10                     l105:
 11122  00EF10  B0C7               	btfsc	199,0,c	;volatile
 11123  00EF12  EF8D  F077         	goto	u16751
 11124  00EF16  EF8F  F077         	goto	u16750
 11125  00EF1A                     u16751:
 11126  00EF1A  EF88  F077         	goto	l105
 11127  00EF1E                     u16750:
 11128  00EF1E                     
 11129                           ;i2c.c: 124: SSP1CON2bits.SEN = 1;
 11130  00EF1E  80C5               	bsf	197,0,c	;volatile
 11131  00EF20                     l108:
 11132  00EF20  A69E               	btfss	158,3,c	;volatile
 11133  00EF22  EF95  F077         	goto	u16761
 11134  00EF26  EF97  F077         	goto	u16760
 11135  00EF2A                     u16761:
 11136  00EF2A  EF90  F077         	goto	l108
 11137  00EF2E                     u16760:
 11138  00EF2E                     
 11139                           ;i2c.c: 127: PIR1bits.SSP1IF = 0;
 11140  00EF2E  969E               	bcf	158,3,c	;volatile
 11141  00EF30  0012               	return		;funcret
 11142  00EF32                     __end_of_I2C_Start:
 11143                           	callstack 0
 11144                           
 11145 ;; *************** function _I2C_Read *****************
 11146 ;; Defined at:
 11147 ;;		line 166 in file "bsp/i2c.c"
 11148 ;; Parameters:    Size  Location     Type
 11149 ;;  ack             1    wreg     enum E5227
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  ack             1   14[COMRAM] enum E5227
 11152 ;;  I2CReadData     1   15[COMRAM] unsigned char 
 11153 ;; Return value:  Size  Location     Type
 11154 ;;                  1    wreg      unsigned char 
 11155 ;; Registers used:
 11156 ;;		wreg, status,2, status,0
 11157 ;; Tracked objects:
 11158 ;;		On entry : 0/0
 11159 ;;		On exit  : 0/0
 11160 ;;		Unchanged: 0/0
 11161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11163 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11166 ;;Total ram usage:        2 bytes
 11167 ;; Hardware stack levels used: 1
 11168 ;; Hardware stack levels required when called: 3
 11169 ;; This function calls:
 11170 ;;		Nothing
 11171 ;; This function is called by:
 11172 ;;		_i2c_readBytes
 11173 ;; This function uses a non-reentrant model
 11174 ;;
 11175                           
 11176                           	psect	text52
 11177  00E4EE                     __ptext52:
 11178                           	callstack 0
 11179  00E4EE                     _I2C_Read:
 11180                           	callstack 20
 11181                           
 11182                           ;incstack = 0
 11183                           ;I2C_Read@ack stored from wreg
 11184  00E4EE  6E0F               	movwf	I2C_Read@ack^0,c
 11185  00E4F0                     
 11186                           ;i2c.c: 168: uint8_t I2CReadData;;i2c.c: 170: PIR1bits.SSP1IF = 0;
 11187  00E4F0  969E               	bcf	158,3,c	;volatile
 11188  00E4F2                     l141:
 11189  00E4F2  B0C7               	btfsc	199,0,c	;volatile
 11190  00E4F4  EF7E  F072         	goto	u16771
 11191  00E4F8  EF80  F072         	goto	u16770
 11192  00E4FC                     u16771:
 11193  00E4FC  EF79  F072         	goto	l141
 11194  00E500                     u16770:
 11195  00E500                     
 11196                           ;i2c.c: 173: SSP1CON2bits.RCEN = 1;
 11197  00E500  86C5               	bsf	197,3,c	;volatile
 11198  00E502                     l144:
 11199  00E502  A69E               	btfss	158,3,c	;volatile
 11200  00E504  EF86  F072         	goto	u16781
 11201  00E508  EF88  F072         	goto	u16780
 11202  00E50C                     u16781:
 11203  00E50C  EF81  F072         	goto	l144
 11204  00E510                     u16780:
 11205  00E510                     
 11206                           ;i2c.c: 176: PIR1bits.SSP1IF = 0;
 11207  00E510  969E               	bcf	158,3,c	;volatile
 11208                           
 11209                           ;i2c.c: 178: I2CReadData = SSP1BUF;
 11210  00E512  CFC9 F010          	movff	4041,I2C_Read@I2CReadData	;volatile
 11211  00E516                     
 11212                           ;i2c.c: 180: if (ack == I2C_NACK)
 11213  00E516  040F               	decf	I2C_Read@ack^0,w,c
 11214  00E518  A4D8               	btfss	status,2,c
 11215  00E51A  EF91  F072         	goto	u16791
 11216  00E51E  EF93  F072         	goto	u16790
 11217  00E522                     u16791:
 11218  00E522  EF96  F072         	goto	l147
 11219  00E526                     u16790:
 11220  00E526                     
 11221                           ;i2c.c: 181: {;i2c.c: 182: SSP1CON2bits.ACKDT = 1;
 11222  00E526  8AC5               	bsf	197,5,c	;volatile
 11223                           
 11224                           ;i2c.c: 183: }
 11225  00E528  EF97  F072         	goto	l148
 11226  00E52C                     l147:
 11227                           
 11228                           ;i2c.c: 184: else;i2c.c: 185: {;i2c.c: 186: SSP1CON2bits.ACKDT = 0;
 11229  00E52C  9AC5               	bcf	197,5,c	;volatile
 11230  00E52E                     l148:
 11231                           
 11232                           ;i2c.c: 187: };i2c.c: 189: SSP1CON2bits.ACKEN = 1;
 11233  00E52E  88C5               	bsf	197,4,c	;volatile
 11234                           
 11235                           ;i2c.c: 191: PIR1bits.SSP1IF = 0;
 11236  00E530  969E               	bcf	158,3,c	;volatile
 11237  00E532                     l149:
 11238  00E532  A69E               	btfss	158,3,c	;volatile
 11239  00E534  EF9E  F072         	goto	u16801
 11240  00E538  EFA0  F072         	goto	u16800
 11241  00E53C                     u16801:
 11242  00E53C  EF99  F072         	goto	l149
 11243  00E540                     u16800:
 11244  00E540                     
 11245                           ;i2c.c: 194: return I2CReadData;
 11246  00E540  5010               	movf	I2C_Read@I2CReadData^0,w,c
 11247  00E542  0012               	return		;funcret
 11248  00E544                     __end_of_I2C_Read:
 11249                           	callstack 0
 11250                           
 11251 ;; *************** function _ADCto_uVoltage *****************
 11252 ;; Defined at:
 11253 ;;		line 244 in file "sensor.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;  raw_adc         2   33[BANK0 ] int 
 11256 ;;  gain            1   35[BANK0 ] unsigned char 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;  lsb             4   41[BANK0 ] float 
 11259 ;;  uVolt           4   37[BANK0 ] float 
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  4   33[BANK0 ] float 
 11262 ;; Registers used:
 11263 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11269 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11270 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11272 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11273 ;;Total ram usage:       12 bytes
 11274 ;; Hardware stack levels used: 1
 11275 ;; Hardware stack levels required when called: 4
 11276 ;; This function calls:
 11277 ;;		_FSR_set_LSB
 11278 ;;		___flmul
 11279 ;;		___xxtofl
 11280 ;; This function is called by:
 11281 ;;		_gasSensor_read
 11282 ;;		_CMP_temp_read
 11283 ;; This function uses a non-reentrant model
 11284 ;;
 11285                           
 11286                           	psect	text53
 11287  00DA38                     __ptext53:
 11288                           	callstack 0
 11289  00DA38                     _ADCto_uVoltage:
 11290                           	callstack 24
 11291  00DA38                     
 11292                           ;sensor.c: 246: float uVolt;;sensor.c: 247: float lsb = FSR_set_LSB(gain);
 11293  00DA38  0100               	movlb	0	; () banked
 11294  00DA3A  5183               	movf	ADCto_uVoltage@gain& (0+255),w,b
 11295  00DA3C  ECFD  F060         	call	_FSR_set_LSB
 11296  00DA40  C00F  F089         	movff	?_FSR_set_LSB,ADCto_uVoltage@lsb
 11297  00DA44  C010  F08A         	movff	?_FSR_set_LSB+1,ADCto_uVoltage@lsb+1
 11298  00DA48  C011  F08B         	movff	?_FSR_set_LSB+2,ADCto_uVoltage@lsb+2
 11299  00DA4C  C012  F08C         	movff	?_FSR_set_LSB+3,ADCto_uVoltage@lsb+3
 11300  00DA50                     
 11301                           ;sensor.c: 248: uVolt = (float)raw_adc * lsb;
 11302  00DA50  C081  F027         	movff	ADCto_uVoltage@raw_adc,___xxtofl@val
 11303  00DA54  C082  F028         	movff	ADCto_uVoltage@raw_adc+1,___xxtofl@val+1
 11304  00DA58  0E00               	movlw	0
 11305  00DA5A  BE28               	btfsc	(___xxtofl@val+1)^0,7,c
 11306  00DA5C  0EFF               	movlw	-1
 11307  00DA5E  6E29               	movwf	(___xxtofl@val+2)^0,c
 11308  00DA60  6E2A               	movwf	(___xxtofl@val+3)^0,c
 11309  00DA62  0E01               	movlw	1
 11310  00DA64  ECF6  F048         	call	___xxtofl
 11311  00DA68  C027  F068         	movff	?___xxtofl,___flmul@b
 11312  00DA6C  C028  F069         	movff	?___xxtofl+1,___flmul@b+1
 11313  00DA70  C029  F06A         	movff	?___xxtofl+2,___flmul@b+2
 11314  00DA74  C02A  F06B         	movff	?___xxtofl+3,___flmul@b+3
 11315  00DA78  C089  F06C         	movff	ADCto_uVoltage@lsb,___flmul@a
 11316  00DA7C  C08A  F06D         	movff	ADCto_uVoltage@lsb+1,___flmul@a+1
 11317  00DA80  C08B  F06E         	movff	ADCto_uVoltage@lsb+2,___flmul@a+2
 11318  00DA84  C08C  F06F         	movff	ADCto_uVoltage@lsb+3,___flmul@a+3
 11319  00DA88  ECA7  F02F         	call	___flmul	;wreg free
 11320  00DA8C  C068  F085         	movff	?___flmul,ADCto_uVoltage@uVolt
 11321  00DA90  C069  F086         	movff	?___flmul+1,ADCto_uVoltage@uVolt+1
 11322  00DA94  C06A  F087         	movff	?___flmul+2,ADCto_uVoltage@uVolt+2
 11323  00DA98  C06B  F088         	movff	?___flmul+3,ADCto_uVoltage@uVolt+3
 11324  00DA9C                     
 11325                           ;sensor.c: 249: return uVolt;
 11326  00DA9C  C085  F081         	movff	ADCto_uVoltage@uVolt,?_ADCto_uVoltage
 11327  00DAA0  C086  F082         	movff	ADCto_uVoltage@uVolt+1,?_ADCto_uVoltage+1
 11328  00DAA4  C087  F083         	movff	ADCto_uVoltage@uVolt+2,?_ADCto_uVoltage+2
 11329  00DAA8  C088  F084         	movff	ADCto_uVoltage@uVolt+3,?_ADCto_uVoltage+3
 11330  00DAAC  0012               	return		;funcret
 11331  00DAAE                     __end_of_ADCto_uVoltage:
 11332                           	callstack 0
 11333                           
 11334 ;; *************** function _FSR_set_LSB *****************
 11335 ;; Defined at:
 11336 ;;		line 252 in file "sensor.c"
 11337 ;; Parameters:    Size  Location     Type
 11338 ;;  gain            1    wreg     unsigned char 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;  gain            1   18[COMRAM] unsigned char 
 11341 ;; Return value:  Size  Location     Type
 11342 ;;                  4   14[COMRAM] float 
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, status,0
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11351 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11353 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11354 ;;Total ram usage:        5 bytes
 11355 ;; Hardware stack levels used: 1
 11356 ;; Hardware stack levels required when called: 3
 11357 ;; This function calls:
 11358 ;;		Nothing
 11359 ;; This function is called by:
 11360 ;;		_ADCto_uVoltage
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text54
 11365  00C1FA                     __ptext54:
 11366                           	callstack 0
 11367  00C1FA                     _FSR_set_LSB:
 11368                           	callstack 24
 11369                           
 11370                           ;incstack = 0
 11371                           ;FSR_set_LSB@gain stored from wreg
 11372  00C1FA  6E13               	movwf	FSR_set_LSB@gain^0,c
 11373  00C1FC                     
 11374                           ;sensor.c: 254: if(gain == FSR_6p144V)
 11375  00C1FC  5013               	movf	FSR_set_LSB@gain^0,w,c
 11376  00C1FE  A4D8               	btfss	status,2,c
 11377  00C200  EF04  F061         	goto	u19491
 11378  00C204  EF06  F061         	goto	u19490
 11379  00C208                     u19491:
 11380  00C208  EF10  F061         	goto	l17962
 11381  00C20C                     u19490:
 11382  00C20C                     
 11383                           ;sensor.c: 255: return 187.5f;
 11384  00C20C  0E00               	movlw	0
 11385  00C20E  6E0F               	movwf	?_FSR_set_LSB^0,c
 11386  00C210  0E80               	movlw	128
 11387  00C212  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
 11388  00C214  0E3B               	movlw	59
 11389  00C216  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
 11390  00C218  0E43               	movlw	67
 11391  00C21A  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
 11392  00C21C  EF63  F061         	goto	l1440
 11393  00C220                     l17962:
 11394                           
 11395                           ;sensor.c: 256: else if(gain == FSR_4p096V)
 11396  00C220  0413               	decf	FSR_set_LSB@gain^0,w,c
 11397  00C222  A4D8               	btfss	status,2,c
 11398  00C224  EF16  F061         	goto	u19501
 11399  00C228  EF18  F061         	goto	u19500
 11400  00C22C                     u19501:
 11401  00C22C  EF22  F061         	goto	l17970
 11402  00C230                     u19500:
 11403  00C230                     
 11404                           ;sensor.c: 257: return 125.0f;
 11405  00C230  0E00               	movlw	0
 11406  00C232  6E0F               	movwf	?_FSR_set_LSB^0,c
 11407  00C234  0E00               	movlw	0
 11408  00C236  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
 11409  00C238  0EFA               	movlw	250
 11410  00C23A  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
 11411  00C23C  0E42               	movlw	66
 11412  00C23E  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
 11413  00C240  EF63  F061         	goto	l1440
 11414  00C244                     l17970:
 11415                           
 11416                           ;sensor.c: 258: else if(gain == FSR_1p024V)
 11417  00C244  0E03               	movlw	3
 11418  00C246  1813               	xorwf	FSR_set_LSB@gain^0,w,c
 11419  00C248  A4D8               	btfss	status,2,c
 11420  00C24A  EF29  F061         	goto	u19511
 11421  00C24E  EF2B  F061         	goto	u19510
 11422  00C252                     u19511:
 11423  00C252  EF35  F061         	goto	l17978
 11424  00C256                     u19510:
 11425  00C256                     
 11426                           ;sensor.c: 259: return 31.25f;
 11427  00C256  0E00               	movlw	0
 11428  00C258  6E0F               	movwf	?_FSR_set_LSB^0,c
 11429  00C25A  0E00               	movlw	0
 11430  00C25C  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
 11431  00C25E  0EFA               	movlw	250
 11432  00C260  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
 11433  00C262  0E41               	movlw	65
 11434  00C264  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
 11435  00C266  EF63  F061         	goto	l1440
 11436  00C26A                     l17978:
 11437                           
 11438                           ;sensor.c: 260: else if(gain == FSR_0p512V)
 11439  00C26A  0E04               	movlw	4
 11440  00C26C  1813               	xorwf	FSR_set_LSB@gain^0,w,c
 11441  00C26E  A4D8               	btfss	status,2,c
 11442  00C270  EF3C  F061         	goto	u19521
 11443  00C274  EF3E  F061         	goto	u19520
 11444  00C278                     u19521:
 11445  00C278  EF48  F061         	goto	l17986
 11446  00C27C                     u19520:
 11447  00C27C                     
 11448                           ;sensor.c: 261: return 15.62f;
 11449  00C27C  0E85               	movlw	133
 11450  00C27E  6E0F               	movwf	?_FSR_set_LSB^0,c
 11451  00C280  0EEB               	movlw	235
 11452  00C282  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
 11453  00C284  0E79               	movlw	121
 11454  00C286  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
 11455  00C288  0E41               	movlw	65
 11456  00C28A  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
 11457  00C28C  EF63  F061         	goto	l1440
 11458  00C290                     l17986:
 11459                           
 11460                           ;sensor.c: 262: else if(gain == FSR_0p256V)
 11461  00C290  0E05               	movlw	5
 11462  00C292  1813               	xorwf	FSR_set_LSB@gain^0,w,c
 11463  00C294  A4D8               	btfss	status,2,c
 11464  00C296  EF4F  F061         	goto	u19531
 11465  00C29A  EF51  F061         	goto	u19530
 11466  00C29E                     u19531:
 11467  00C29E  EF5B  F061         	goto	l1443
 11468  00C2A2                     u19530:
 11469  00C2A2                     
 11470                           ;sensor.c: 263: return 7.81f;
 11471  00C2A2  0E85               	movlw	133
 11472  00C2A4  6E0F               	movwf	?_FSR_set_LSB^0,c
 11473  00C2A6  0EEB               	movlw	235
 11474  00C2A8  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
 11475  00C2AA  0EF9               	movlw	249
 11476  00C2AC  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
 11477  00C2AE  0E40               	movlw	64
 11478  00C2B0  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
 11479  00C2B2  EF63  F061         	goto	l1440
 11480  00C2B6                     l1443:
 11481  00C2B6                     
 11482                           ;sensor.c: 265: return 62.5f;
 11483  00C2B6  0E00               	movlw	0
 11484  00C2B8  6E0F               	movwf	?_FSR_set_LSB^0,c
 11485  00C2BA  0E00               	movlw	0
 11486  00C2BC  6E10               	movwf	(?_FSR_set_LSB+1)^0,c
 11487  00C2BE  0E7A               	movlw	122
 11488  00C2C0  6E11               	movwf	(?_FSR_set_LSB+2)^0,c
 11489  00C2C2  0E42               	movlw	66
 11490  00C2C4  6E12               	movwf	(?_FSR_set_LSB+3)^0,c
 11491  00C2C6                     l1440:
 11492  00C2C6  0012               	return		;funcret
 11493  00C2C8                     __end_of_FSR_set_LSB:
 11494                           	callstack 0
 11495                           
 11496 ;; *************** function _led_task *****************
 11497 ;; Defined at:
 11498 ;;		line 76 in file "app_led_task.c"
 11499 ;; Parameters:    Size  Location     Type
 11500 ;;		None
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;		None
 11503 ;; Return value:  Size  Location     Type
 11504 ;;                  1    wreg      void 
 11505 ;; Registers used:
 11506 ;;		wreg, status,2, status,0, cstack
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11516 ;;Total ram usage:        2 bytes
 11517 ;; Hardware stack levels used: 1
 11518 ;; Hardware stack levels required when called: 5
 11519 ;; This function calls:
 11520 ;;		_LED_Off
 11521 ;;		_LED_On
 11522 ;;		_led_fail
 11523 ;;		_led_warmup
 11524 ;;		_led_zerocal_end
 11525 ;; This function is called by:
 11526 ;;		_main
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530                           	psect	text55
 11531  009014                     __ptext55:
 11532                           	callstack 0
 11533  009014                     _led_task:
 11534                           	callstack 25
 11535  009014                     
 11536                           ;app_led_task.c: 78: switch (g_led_status.seq) {
 11537  009014  EFC9  F048         	goto	l19540
 11538  009018                     l19482:
 11539                           
 11540                           ; BSR set to: 1
 11541                           ;app_led_task.c: 80: g_led_counter = 0;
 11542  009018  0E00               	movlw	0
 11543  00901A  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 11544  00901C  0E00               	movlw	0
 11545  00901E  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11546  009020  0E00               	movlw	0
 11547  009022  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11548  009024  0E00               	movlw	0
 11549  009026  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11550                           
 11551                           ;app_led_task.c: 81: g_led_status.toggle = 0;
 11552  009028  0E00               	movlw	0
 11553  00902A  6F2C               	movwf	(_g_led_status+3)& (0+255),b
 11554                           
 11555                           ;app_led_task.c: 82: g_led_status.seq = LED_READY;
 11556  00902C  0E01               	movlw	1
 11557  00902E  6F29               	movwf	_g_led_status& (0+255),b
 11558                           
 11559                           ;app_led_task.c: 83: break;
 11560  009030  EFF5  F048         	goto	l1081
 11561  009034                     l19484:
 11562                           
 11563                           ; BSR set to: 1
 11564                           ;app_led_task.c: 85: if (USBDeviceState == CONFIGURED_STATE) {
 11565  009034  0E20               	movlw	32
 11566  009036  184F               	xorwf	_USBDeviceState^0,w,c
 11567  009038  A4D8               	btfss	status,2,c
 11568  00903A  EF21  F048         	goto	u21141
 11569  00903E  EF23  F048         	goto	u21140
 11570  009042                     u21141:
 11571  009042  EFF5  F048         	goto	l1081
 11572  009046                     u21140:
 11573  009046                     
 11574                           ; BSR set to: 1
 11575                           ;app_led_task.c: 86: g_led_counter = 0;
 11576  009046  0E00               	movlw	0
 11577  009048  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 11578  00904A  0E00               	movlw	0
 11579  00904C  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11580  00904E  0E00               	movlw	0
 11581  009050  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11582  009052  0E00               	movlw	0
 11583  009054  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11584                           
 11585                           ;app_led_task.c: 87: g_led_status.seq = LED_WAIT_OFF;
 11586  009056  0E02               	movlw	2
 11587  009058  6F29               	movwf	_g_led_status& (0+255),b
 11588                           
 11589                           ;app_led_task.c: 88: g_led_status.isBlink = 1;
 11590  00905A  0E01               	movlw	1
 11591  00905C  6F2B               	movwf	(_g_led_status+2)& (0+255),b
 11592                           
 11593                           ;app_led_task.c: 89: g_led_status.last_state = LED_WARMUP;
 11594  00905E  0E04               	movlw	4
 11595  009060  6F2A               	movwf	(_g_led_status+1)& (0+255),b
 11596  009062  EFF5  F048         	goto	l1081
 11597  009066                     l19488:
 11598                           
 11599                           ; BSR set to: 1
 11600                           ;app_led_task.c: 93: if (g_led_counter > 10) {
 11601  009066  5149               	movf	(_g_led_counter+3)& (0+255),w,b	;volatile
 11602  009068  1148               	iorwf	(_g_led_counter+2)& (0+255),w,b	;volatile
 11603  00906A  1147               	iorwf	(_g_led_counter+1)& (0+255),w,b	;volatile
 11604  00906C  E109               	bnz	u21150
 11605  00906E  0E0B               	movlw	11
 11606  009070  5D46               	subwf	_g_led_counter& (0+255),w,b	;volatile
 11607  009072  A0D8               	btfss	status,0,c
 11608  009074  EF3E  F048         	goto	u21151
 11609  009078  EF40  F048         	goto	u21150
 11610  00907C                     u21151:
 11611  00907C  EFF5  F048         	goto	l1081
 11612  009080                     u21150:
 11613  009080                     
 11614                           ; BSR set to: 1
 11615                           ;app_led_task.c: 94: g_led_counter = 0;
 11616  009080  0E00               	movlw	0
 11617  009082  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 11618  009084  0E00               	movlw	0
 11619  009086  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11620  009088  0E00               	movlw	0
 11621  00908A  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11622  00908C  0E00               	movlw	0
 11623  00908E  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11624                           
 11625                           ;app_led_task.c: 95: g_led_status.seq = LED_ALLOFF;
 11626  009090  0E09               	movlw	9
 11627  009092  6F29               	movwf	_g_led_status& (0+255),b
 11628  009094  EFF5  F048         	goto	l1081
 11629  009098                     l19492:
 11630                           
 11631                           ; BSR set to: 1
 11632                           ;app_led_task.c: 99: g_led_counter = 0;
 11633  009098  0E00               	movlw	0
 11634  00909A  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 11635  00909C  0E00               	movlw	0
 11636  00909E  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11637  0090A0  0E00               	movlw	0
 11638  0090A2  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11639  0090A4  0E00               	movlw	0
 11640  0090A6  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11641                           
 11642                           ;app_led_task.c: 100: g_led_status.last_state = LED_WARMUP;
 11643  0090A8  0E04               	movlw	4
 11644  0090AA  6F2A               	movwf	(_g_led_status+1)& (0+255),b
 11645                           
 11646                           ;app_led_task.c: 101: g_led_status.seq = LED_NOTHING;
 11647  0090AC  0E0A               	movlw	10
 11648  0090AE  6F29               	movwf	_g_led_status& (0+255),b
 11649                           
 11650                           ;app_led_task.c: 102: break;
 11651  0090B0  EFF5  F048         	goto	l1081
 11652  0090B4                     l19494:
 11653                           
 11654                           ; BSR set to: 1
 11655                           ;app_led_task.c: 104: LED_Off();
 11656  0090B4  ECD7  F078         	call	_LED_Off	;wreg free
 11657  0090B8                     
 11658                           ;app_led_task.c: 105: LED_On((g_led_status.twoYear==1)?LED_RED:LED_GREEN);
 11659  0090B8  0101               	movlb	1	; () banked
 11660  0090BA  052D               	decf	(_g_led_status+4)& (0+255),w,b
 11661  0090BC  B4D8               	btfsc	status,2,c
 11662  0090BE  EF63  F048         	goto	u21161
 11663  0090C2  EF65  F048         	goto	u21160
 11664  0090C6                     u21161:
 11665  0090C6  EF6B  F048         	goto	l19500
 11666  0090CA                     u21160:
 11667  0090CA                     
 11668                           ; BSR set to: 1
 11669  0090CA  0E00               	movlw	0
 11670  0090CC  6E13               	movwf	(_led_task$2572+1)^0,c
 11671  0090CE  0E02               	movlw	2
 11672  0090D0  6E12               	movwf	_led_task$2572^0,c
 11673  0090D2  EF6F  F048         	goto	l19502
 11674  0090D6                     l19500:
 11675                           
 11676                           ; BSR set to: 1
 11677  0090D6  0E00               	movlw	0
 11678  0090D8  6E13               	movwf	(_led_task$2572+1)^0,c
 11679  0090DA  0E01               	movlw	1
 11680  0090DC  6E12               	movwf	_led_task$2572^0,c
 11681  0090DE                     l19502:
 11682                           
 11683                           ; BSR set to: 1
 11684  0090DE  5012               	movf	_led_task$2572^0,w,c
 11685  0090E0  EC56  F076         	call	_LED_On
 11686  0090E4                     l19504:
 11687                           
 11688                           ;app_led_task.c: 106: g_led_counter = 0;
 11689  0090E4  0E00               	movlw	0
 11690  0090E6  0101               	movlb	1	; () banked
 11691  0090E8  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 11692  0090EA  0E00               	movlw	0
 11693  0090EC  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11694  0090EE  0E00               	movlw	0
 11695  0090F0  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11696  0090F2  0E00               	movlw	0
 11697  0090F4  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11698  0090F6                     
 11699                           ; BSR set to: 1
 11700                           ;app_led_task.c: 107: g_led_status.seq = LED_NOTHING;
 11701  0090F6  0E0A               	movlw	10
 11702  0090F8  6F29               	movwf	_g_led_status& (0+255),b
 11703                           
 11704                           ;app_led_task.c: 108: break;
 11705  0090FA  EFF5  F048         	goto	l1081
 11706  0090FE                     l19508:
 11707                           
 11708                           ; BSR set to: 1
 11709                           ;app_led_task.c: 110: LED_Off();
 11710  0090FE  ECD7  F078         	call	_LED_Off	;wreg free
 11711  009102                     
 11712                           ;app_led_task.c: 111: LED_On(LED_GREEN);
 11713  009102  0E02               	movlw	2
 11714  009104  EC56  F076         	call	_LED_On
 11715  009108  EF72  F048         	goto	l19504
 11716  00910C                     l19516:
 11717                           
 11718                           ; BSR set to: 1
 11719                           ;app_led_task.c: 116: g_led_counter = 0;
 11720  00910C  0E00               	movlw	0
 11721  00910E  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 11722  009110  0E00               	movlw	0
 11723  009112  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11724  009114  0E00               	movlw	0
 11725  009116  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11726  009118  0E00               	movlw	0
 11727  00911A  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11728                           
 11729                           ;app_led_task.c: 117: g_led_status.last_state = LED_ZEROCAL_END;
 11730  00911C  0E07               	movlw	7
 11731  00911E  6F2A               	movwf	(_g_led_status+1)& (0+255),b
 11732                           
 11733                           ;app_led_task.c: 118: g_led_status.seq = LED_NOTHING;
 11734  009120  0E0A               	movlw	10
 11735  009122  6F29               	movwf	_g_led_status& (0+255),b
 11736                           
 11737                           ;app_led_task.c: 119: break;
 11738  009124  EFF5  F048         	goto	l1081
 11739  009128                     l19518:
 11740                           
 11741                           ; BSR set to: 1
 11742                           ;app_led_task.c: 121: g_led_counter = 0;
 11743  009128  0E00               	movlw	0
 11744  00912A  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 11745  00912C  0E00               	movlw	0
 11746  00912E  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11747  009130  0E00               	movlw	0
 11748  009132  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11749  009134  0E00               	movlw	0
 11750  009136  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11751                           
 11752                           ;app_led_task.c: 122: g_led_status.last_state = LED_FAIL;
 11753  009138  0E08               	movlw	8
 11754  00913A  6F2A               	movwf	(_g_led_status+1)& (0+255),b
 11755                           
 11756                           ;app_led_task.c: 123: g_led_status.seq = LED_NOTHING;
 11757  00913C  0E0A               	movlw	10
 11758  00913E  6F29               	movwf	_g_led_status& (0+255),b
 11759                           
 11760                           ;app_led_task.c: 124: break;
 11761  009140  EFF5  F048         	goto	l1081
 11762  009144                     l19520:
 11763                           
 11764                           ; BSR set to: 1
 11765                           ;app_led_task.c: 126: LED_Off();
 11766  009144  ECD7  F078         	call	_LED_Off	;wreg free
 11767  009148  EF72  F048         	goto	l19504
 11768  00914C                     l19526:
 11769                           
 11770                           ; BSR set to: 1
 11771  00914C  512B               	movf	(_g_led_status+2)& (0+255),w,b
 11772  00914E  B4D8               	btfsc	status,2,c
 11773  009150  EFAC  F048         	goto	u21171
 11774  009154  EFAE  F048         	goto	u21170
 11775  009158                     u21171:
 11776  009158  EFF5  F048         	goto	l1081
 11777  00915C                     u21170:
 11778  00915C                     
 11779                           ; BSR set to: 1
 11780  00915C  EC57  F06D         	call	_led_warmup	;wreg free
 11781  009160  EFF5  F048         	goto	l1081
 11782  009164                     l19530:
 11783                           
 11784                           ; BSR set to: 1
 11785  009164  ECC7  F071         	call	_led_zerocal_end	;wreg free
 11786  009168  EFF5  F048         	goto	l1081
 11787  00916C                     l19532:
 11788                           
 11789                           ; BSR set to: 1
 11790  00916C  ECF3  F071         	call	_led_fail	;wreg free
 11791  009170  EFF5  F048         	goto	l1081
 11792  009174                     l19536:
 11793                           
 11794                           ; BSR set to: 1
 11795  009174  512A               	movf	(_g_led_status+1)& (0+255),w,b
 11796                           
 11797                           ; Switch size 1, requested type "simple"
 11798                           ; Number of cases is 3, Range of values is 4 to 8
 11799                           ; switch strategies available:
 11800                           ; Name         Instructions Cycles
 11801                           ; simple_byte           10     6 (average)
 11802                           ;	Chosen strategy is simple_byte
 11803  009176  0A04               	xorlw	4	; case 4
 11804  009178  B4D8               	btfsc	status,2,c
 11805  00917A  EFA6  F048         	goto	l19526
 11806  00917E  0A03               	xorlw	3	; case 7
 11807  009180  B4D8               	btfsc	status,2,c
 11808  009182  EFB2  F048         	goto	l19530
 11809  009186  0A0F               	xorlw	15	; case 8
 11810  009188  B4D8               	btfsc	status,2,c
 11811  00918A  EFB6  F048         	goto	l19532
 11812  00918E  EFF5  F048         	goto	l1081
 11813  009192                     l19540:
 11814  009192  0101               	movlb	1	; () banked
 11815  009194  5129               	movf	_g_led_status& (0+255),w,b
 11816                           
 11817                           ; Switch size 1, requested type "simple"
 11818                           ; Number of cases is 10, Range of values is 0 to 10
 11819                           ; switch strategies available:
 11820                           ; Name         Instructions Cycles
 11821                           ; simple_byte           31    16 (average)
 11822                           ;	Chosen strategy is simple_byte
 11823  009196  0A00               	xorlw	0	; case 0
 11824  009198  B4D8               	btfsc	status,2,c
 11825  00919A  EF0C  F048         	goto	l19482
 11826  00919E  0A01               	xorlw	1	; case 1
 11827  0091A0  B4D8               	btfsc	status,2,c
 11828  0091A2  EF1A  F048         	goto	l19484
 11829  0091A6  0A03               	xorlw	3	; case 2
 11830  0091A8  B4D8               	btfsc	status,2,c
 11831  0091AA  EF33  F048         	goto	l19488
 11832  0091AE  0A06               	xorlw	6	; case 4
 11833  0091B0  B4D8               	btfsc	status,2,c
 11834  0091B2  EF4C  F048         	goto	l19492
 11835  0091B6  0A01               	xorlw	1	; case 5
 11836  0091B8  B4D8               	btfsc	status,2,c
 11837  0091BA  EF5A  F048         	goto	l19494
 11838  0091BE  0A03               	xorlw	3	; case 6
 11839  0091C0  B4D8               	btfsc	status,2,c
 11840  0091C2  EF7F  F048         	goto	l19508
 11841  0091C6  0A01               	xorlw	1	; case 7
 11842  0091C8  B4D8               	btfsc	status,2,c
 11843  0091CA  EF86  F048         	goto	l19516
 11844  0091CE  0A0F               	xorlw	15	; case 8
 11845  0091D0  B4D8               	btfsc	status,2,c
 11846  0091D2  EF94  F048         	goto	l19518
 11847  0091D6  0A01               	xorlw	1	; case 9
 11848  0091D8  B4D8               	btfsc	status,2,c
 11849  0091DA  EFA2  F048         	goto	l19520
 11850  0091DE  0A03               	xorlw	3	; case 10
 11851  0091E0  B4D8               	btfsc	status,2,c
 11852  0091E2  EFBA  F048         	goto	l19536
 11853  0091E6  EFF5  F048         	goto	l1081
 11854  0091EA                     l1081:
 11855  0091EA  0012               	return		;funcret
 11856  0091EC                     __end_of_led_task:
 11857                           	callstack 0
 11858                           
 11859 ;; *************** function _led_zerocal_end *****************
 11860 ;; Defined at:
 11861 ;;		line 31 in file "app_led_task.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;		None
 11864 ;; Auto vars:     Size  Location     Type
 11865 ;;		None
 11866 ;; Return value:  Size  Location     Type
 11867 ;;                  1    wreg      void 
 11868 ;; Registers used:
 11869 ;;		wreg, status,2, status,0, cstack
 11870 ;; Tracked objects:
 11871 ;;		On entry : 0/0
 11872 ;;		On exit  : 0/0
 11873 ;;		Unchanged: 0/0
 11874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11879 ;;Total ram usage:        0 bytes
 11880 ;; Hardware stack levels used: 1
 11881 ;; Hardware stack levels required when called: 4
 11882 ;; This function calls:
 11883 ;;		_LED_Off
 11884 ;;		_LED_On
 11885 ;; This function is called by:
 11886 ;;		_led_task
 11887 ;; This function uses a non-reentrant model
 11888 ;;
 11889                           
 11890                           	psect	text56
 11891  00E38E                     __ptext56:
 11892                           	callstack 0
 11893  00E38E                     _led_zerocal_end:
 11894                           	callstack 25
 11895  00E38E                     
 11896                           ;app_led_task.c: 33: if (g_led_counter > 10) {
 11897  00E38E  0101               	movlb	1	; () banked
 11898  00E390  5149               	movf	(_g_led_counter+3)& (0+255),w,b	;volatile
 11899  00E392  1148               	iorwf	(_g_led_counter+2)& (0+255),w,b	;volatile
 11900  00E394  1147               	iorwf	(_g_led_counter+1)& (0+255),w,b	;volatile
 11901  00E396  E109               	bnz	u20910
 11902  00E398  0E0B               	movlw	11
 11903  00E39A  5D46               	subwf	_g_led_counter& (0+255),w,b	;volatile
 11904  00E39C  A0D8               	btfss	status,0,c
 11905  00E39E  EFD3  F071         	goto	u20911
 11906  00E3A2  EFD5  F071         	goto	u20910
 11907  00E3A6                     u20911:
 11908  00E3A6  EFF2  F071         	goto	l1043
 11909  00E3AA                     u20910:
 11910  00E3AA                     
 11911                           ; BSR set to: 1
 11912                           ;app_led_task.c: 34: g_led_counter = 0;
 11913  00E3AA  0E00               	movlw	0
 11914  00E3AC  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 11915  00E3AE  0E00               	movlw	0
 11916  00E3B0  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 11917  00E3B2  0E00               	movlw	0
 11918  00E3B4  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 11919  00E3B6  0E00               	movlw	0
 11920  00E3B8  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 11921  00E3BA                     
 11922                           ; BSR set to: 1
 11923                           ;app_led_task.c: 35: if (g_led_status.toggle == 1) {
 11924  00E3BA  052C               	decf	(_g_led_status+3)& (0+255),w,b
 11925  00E3BC  A4D8               	btfss	status,2,c
 11926  00E3BE  EFE3  F071         	goto	u20921
 11927  00E3C2  EFE5  F071         	goto	u20920
 11928  00E3C6                     u20921:
 11929  00E3C6  EFEC  F071         	goto	l19188
 11930  00E3CA                     u20920:
 11931  00E3CA                     
 11932                           ; BSR set to: 1
 11933                           ;app_led_task.c: 36: LED_Off();
 11934  00E3CA  ECD7  F078         	call	_LED_Off	;wreg free
 11935  00E3CE                     
 11936                           ;app_led_task.c: 37: g_led_status.toggle = 0;
 11937  00E3CE  0E00               	movlw	0
 11938  00E3D0  0101               	movlb	1	; () banked
 11939  00E3D2  6F2C               	movwf	(_g_led_status+3)& (0+255),b
 11940                           
 11941                           ;app_led_task.c: 38: } else {
 11942  00E3D4  EFF2  F071         	goto	l1043
 11943  00E3D8                     l19188:
 11944                           
 11945                           ; BSR set to: 1
 11946                           ;app_led_task.c: 39: LED_On(LED_GREEN);
 11947  00E3D8  0E02               	movlw	2
 11948  00E3DA  EC56  F076         	call	_LED_On
 11949  00E3DE                     
 11950                           ;app_led_task.c: 40: g_led_status.toggle = 1;
 11951  00E3DE  0E01               	movlw	1
 11952  00E3E0  0101               	movlb	1	; () banked
 11953  00E3E2  6F2C               	movwf	(_g_led_status+3)& (0+255),b
 11954  00E3E4                     l1043:
 11955                           
 11956                           ; BSR set to: 1
 11957  00E3E4  0012               	return		;funcret
 11958  00E3E6                     __end_of_led_zerocal_end:
 11959                           	callstack 0
 11960                           
 11961 ;; *************** function _led_warmup *****************
 11962 ;; Defined at:
 11963 ;;		line 21 in file "app_led_task.c"
 11964 ;; Parameters:    Size  Location     Type
 11965 ;;		None
 11966 ;; Auto vars:     Size  Location     Type
 11967 ;;		None
 11968 ;; Return value:  Size  Location     Type
 11969 ;;                  1    wreg      void 
 11970 ;; Registers used:
 11971 ;;		wreg, status,2, status,0, cstack
 11972 ;; Tracked objects:
 11973 ;;		On entry : 0/0
 11974 ;;		On exit  : 0/0
 11975 ;;		Unchanged: 0/0
 11976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11980 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11981 ;;Total ram usage:        2 bytes
 11982 ;; Hardware stack levels used: 1
 11983 ;; Hardware stack levels required when called: 4
 11984 ;; This function calls:
 11985 ;;		_LED_Off
 11986 ;;		_LED_On
 11987 ;; This function is called by:
 11988 ;;		_led_task
 11989 ;; This function uses a non-reentrant model
 11990 ;;
 11991                           
 11992                           	psect	text57
 11993  00DAAE                     __ptext57:
 11994                           	callstack 0
 11995  00DAAE                     _led_warmup:
 11996                           	callstack 25
 11997  00DAAE                     
 11998                           ;app_led_task.c: 23: if (g_led_counter > 50) {
 11999  00DAAE  0101               	movlb	1	; () banked
 12000  00DAB0  5149               	movf	(_g_led_counter+3)& (0+255),w,b	;volatile
 12001  00DAB2  1148               	iorwf	(_g_led_counter+2)& (0+255),w,b	;volatile
 12002  00DAB4  1147               	iorwf	(_g_led_counter+1)& (0+255),w,b	;volatile
 12003  00DAB6  E109               	bnz	u20870
 12004  00DAB8  0E33               	movlw	51
 12005  00DABA  5D46               	subwf	_g_led_counter& (0+255),w,b	;volatile
 12006  00DABC  A0D8               	btfss	status,0,c
 12007  00DABE  EF63  F06D         	goto	u20871
 12008  00DAC2  EF65  F06D         	goto	u20870
 12009  00DAC6                     u20871:
 12010  00DAC6  EF91  F06D         	goto	l1037
 12011  00DACA                     u20870:
 12012  00DACA                     
 12013                           ; BSR set to: 1
 12014                           ;app_led_task.c: 24: LED_Off();
 12015  00DACA  ECD7  F078         	call	_LED_Off	;wreg free
 12016  00DACE                     
 12017                           ;app_led_task.c: 25: LED_On((g_led_status.toggle==1)?LED_RED:LED_GREEN);
 12018  00DACE  0101               	movlb	1	; () banked
 12019  00DAD0  052C               	decf	(_g_led_status+3)& (0+255),w,b
 12020  00DAD2  B4D8               	btfsc	status,2,c
 12021  00DAD4  EF6E  F06D         	goto	u20881
 12022  00DAD8  EF70  F06D         	goto	u20880
 12023  00DADC                     u20881:
 12024  00DADC  EF76  F06D         	goto	l19170
 12025  00DAE0                     u20880:
 12026  00DAE0                     
 12027                           ; BSR set to: 1
 12028  00DAE0  0E00               	movlw	0
 12029  00DAE2  6E11               	movwf	(_led_warmup$2567+1)^0,c
 12030  00DAE4  0E02               	movlw	2
 12031  00DAE6  6E10               	movwf	_led_warmup$2567^0,c
 12032  00DAE8  EF7A  F06D         	goto	l19172
 12033  00DAEC                     l19170:
 12034                           
 12035                           ; BSR set to: 1
 12036  00DAEC  0E00               	movlw	0
 12037  00DAEE  6E11               	movwf	(_led_warmup$2567+1)^0,c
 12038  00DAF0  0E01               	movlw	1
 12039  00DAF2  6E10               	movwf	_led_warmup$2567^0,c
 12040  00DAF4                     l19172:
 12041                           
 12042                           ; BSR set to: 1
 12043  00DAF4  5010               	movf	_led_warmup$2567^0,w,c
 12044  00DAF6  EC56  F076         	call	_LED_On
 12045  00DAFA                     
 12046                           ;app_led_task.c: 26: g_led_status.toggle = (g_led_status.toggle)?0:1;
 12047  00DAFA  0101               	movlb	1	; () banked
 12048  00DAFC  512C               	movf	(_g_led_status+3)& (0+255),w,b
 12049  00DAFE  B4D8               	btfsc	status,2,c
 12050  00DB00  EF84  F06D         	goto	u20891
 12051  00DB04  EF87  F06D         	goto	u20890
 12052  00DB08                     u20891:
 12053  00DB08  0E01               	movlw	1
 12054  00DB0A  EF88  F06D         	goto	u20900
 12055  00DB0E                     u20890:
 12056  00DB0E  0E00               	movlw	0
 12057  00DB10                     u20900:
 12058  00DB10  6F2C               	movwf	(_g_led_status+3)& (0+255),b
 12059  00DB12                     
 12060                           ; BSR set to: 1
 12061                           ;app_led_task.c: 27: g_led_counter = 0;
 12062  00DB12  0E00               	movlw	0
 12063  00DB14  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 12064  00DB16  0E00               	movlw	0
 12065  00DB18  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 12066  00DB1A  0E00               	movlw	0
 12067  00DB1C  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 12068  00DB1E  0E00               	movlw	0
 12069  00DB20  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 12070  00DB22                     l1037:
 12071                           
 12072                           ; BSR set to: 1
 12073  00DB22  0012               	return		;funcret
 12074  00DB24                     __end_of_led_warmup:
 12075                           	callstack 0
 12076                           
 12077 ;; *************** function _led_fail *****************
 12078 ;; Defined at:
 12079 ;;		line 45 in file "app_led_task.c"
 12080 ;; Parameters:    Size  Location     Type
 12081 ;;		None
 12082 ;; Auto vars:     Size  Location     Type
 12083 ;;		None
 12084 ;; Return value:  Size  Location     Type
 12085 ;;                  1    wreg      void 
 12086 ;; Registers used:
 12087 ;;		wreg, status,2, status,0, cstack
 12088 ;; Tracked objects:
 12089 ;;		On entry : 0/0
 12090 ;;		On exit  : 0/0
 12091 ;;		Unchanged: 0/0
 12092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12097 ;;Total ram usage:        0 bytes
 12098 ;; Hardware stack levels used: 1
 12099 ;; Hardware stack levels required when called: 4
 12100 ;; This function calls:
 12101 ;;		_LED_Off
 12102 ;;		_LED_On
 12103 ;; This function is called by:
 12104 ;;		_led_task
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           	psect	text58
 12109  00E3E6                     __ptext58:
 12110                           	callstack 0
 12111  00E3E6                     _led_fail:
 12112                           	callstack 25
 12113  00E3E6                     
 12114                           ;app_led_task.c: 47: if (g_led_counter > 10) {
 12115  00E3E6  0101               	movlb	1	; () banked
 12116  00E3E8  5149               	movf	(_g_led_counter+3)& (0+255),w,b	;volatile
 12117  00E3EA  1148               	iorwf	(_g_led_counter+2)& (0+255),w,b	;volatile
 12118  00E3EC  1147               	iorwf	(_g_led_counter+1)& (0+255),w,b	;volatile
 12119  00E3EE  E109               	bnz	u20930
 12120  00E3F0  0E0B               	movlw	11
 12121  00E3F2  5D46               	subwf	_g_led_counter& (0+255),w,b	;volatile
 12122  00E3F4  A0D8               	btfss	status,0,c
 12123  00E3F6  EFFF  F071         	goto	u20931
 12124  00E3FA  EF01  F072         	goto	u20930
 12125  00E3FE                     u20931:
 12126  00E3FE  EF1E  F072         	goto	l1049
 12127  00E402                     u20930:
 12128  00E402                     
 12129                           ; BSR set to: 1
 12130                           ;app_led_task.c: 48: g_led_counter = 0;
 12131  00E402  0E00               	movlw	0
 12132  00E404  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 12133  00E406  0E00               	movlw	0
 12134  00E408  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 12135  00E40A  0E00               	movlw	0
 12136  00E40C  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 12137  00E40E  0E00               	movlw	0
 12138  00E410  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 12139  00E412                     
 12140                           ; BSR set to: 1
 12141                           ;app_led_task.c: 49: if (g_led_status.toggle == 1) {
 12142  00E412  052C               	decf	(_g_led_status+3)& (0+255),w,b
 12143  00E414  A4D8               	btfss	status,2,c
 12144  00E416  EF0F  F072         	goto	u20941
 12145  00E41A  EF11  F072         	goto	u20940
 12146  00E41E                     u20941:
 12147  00E41E  EF18  F072         	goto	l19202
 12148  00E422                     u20940:
 12149  00E422                     
 12150                           ; BSR set to: 1
 12151                           ;app_led_task.c: 50: LED_Off();
 12152  00E422  ECD7  F078         	call	_LED_Off	;wreg free
 12153  00E426                     
 12154                           ;app_led_task.c: 51: g_led_status.toggle = 0;
 12155  00E426  0E00               	movlw	0
 12156  00E428  0101               	movlb	1	; () banked
 12157  00E42A  6F2C               	movwf	(_g_led_status+3)& (0+255),b
 12158                           
 12159                           ;app_led_task.c: 52: } else {
 12160  00E42C  EF1E  F072         	goto	l1049
 12161  00E430                     l19202:
 12162                           
 12163                           ; BSR set to: 1
 12164                           ;app_led_task.c: 53: LED_On(LED_RED);
 12165  00E430  0E01               	movlw	1
 12166  00E432  EC56  F076         	call	_LED_On
 12167  00E436                     
 12168                           ;app_led_task.c: 54: g_led_status.toggle = 1;
 12169  00E436  0E01               	movlw	1
 12170  00E438  0101               	movlb	1	; () banked
 12171  00E43A  6F2C               	movwf	(_g_led_status+3)& (0+255),b
 12172  00E43C                     l1049:
 12173                           
 12174                           ; BSR set to: 1
 12175  00E43C  0012               	return		;funcret
 12176  00E43E                     __end_of_led_fail:
 12177                           	callstack 0
 12178                           
 12179 ;; *************** function _changeUsbState_task *****************
 12180 ;; Defined at:
 12181 ;;		line 188 in file "main.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;		None
 12184 ;; Auto vars:     Size  Location     Type
 12185 ;;		None
 12186 ;; Return value:  Size  Location     Type
 12187 ;;                  1    wreg      void 
 12188 ;; Registers used:
 12189 ;;		wreg, status,2, status,0
 12190 ;; Tracked objects:
 12191 ;;		On entry : 0/0
 12192 ;;		On exit  : 0/0
 12193 ;;		Unchanged: 0/0
 12194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12199 ;;Total ram usage:        0 bytes
 12200 ;; Hardware stack levels used: 1
 12201 ;; Hardware stack levels required when called: 3
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		_main
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text59
 12210  00EF32                     __ptext59:
 12211                           	callstack 0
 12212  00EF32                     _changeUsbState_task:
 12213                           	callstack 27
 12214  00EF32                     
 12215                           ;main.c: 190: if (USBDeviceState == CONFIGURED_STATE) g_usb_state = USB_ATTACHED;
 12216  00EF32  0E20               	movlw	32
 12217  00EF34  184F               	xorwf	_USBDeviceState^0,w,c
 12218  00EF36  A4D8               	btfss	status,2,c
 12219  00EF38  EFA0  F077         	goto	u15721
 12220  00EF3C  EFA2  F077         	goto	u15720
 12221  00EF40                     u15721:
 12222  00EF40  EFA7  F077         	goto	l15158
 12223  00EF44                     u15720:
 12224  00EF44  0E02               	movlw	2
 12225  00EF46  0101               	movlb	1	; () banked
 12226  00EF48  6F77               	movwf	_g_usb_state& (0+255),b
 12227  00EF4A  EFAA  F077         	goto	l641
 12228  00EF4E                     l15158:
 12229                           
 12230                           ;main.c: 191: else g_usb_state = USB_DETACHED;
 12231  00EF4E  0E01               	movlw	1
 12232  00EF50  0101               	movlb	1	; () banked
 12233  00EF52  6F77               	movwf	_g_usb_state& (0+255),b
 12234  00EF54                     l641:
 12235                           
 12236                           ; BSR set to: 1
 12237  00EF54  0012               	return		;funcret
 12238  00EF56                     __end_of_changeUsbState_task:
 12239                           	callstack 0
 12240                           
 12241 ;; *************** function _atcommand_task *****************
 12242 ;; Defined at:
 12243 ;;		line 129 in file "app_atcommand.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;		None
 12246 ;; Auto vars:     Size  Location     Type
 12247 ;;  ch              1  139[BANK0 ] unsigned char 
 12248 ;; Return value:  Size  Location     Type
 12249 ;;                  1    wreg      void 
 12250 ;; Registers used:
 12251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12252 ;; Tracked objects:
 12253 ;;		On entry : 0/0
 12254 ;;		On exit  : 0/0
 12255 ;;		Unchanged: 0/0
 12256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12258 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12260 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12261 ;;Total ram usage:        3 bytes
 12262 ;; Hardware stack levels used: 1
 12263 ;; Hardware stack levels required when called: 12
 12264 ;; This function calls:
 12265 ;;		__strclr
 12266 ;;		_buffer_de_queue
 12267 ;;		_build_response
 12268 ;;		_clear_command
 12269 ;;		_parse_command
 12270 ;;		_update_command
 12271 ;; This function is called by:
 12272 ;;		_main
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           	psect	text60
 12277  008E3A                     __ptext60:
 12278                           	callstack 0
 12279  008E3A                     _atcommand_task:
 12280                           	callstack 18
 12281  008E3A                     
 12282                           ;app_atcommand.c: 131: uint8_t ch;;app_atcommand.c: 132: if (g_usb_state != USB_ATTACHED
      +                          ) return;
 12283  008E3A  0E02               	movlw	2
 12284  008E3C  0101               	movlb	1	; () banked
 12285  008E3E  1977               	xorwf	_g_usb_state& (0+255),w,b
 12286  008E40  B4D8               	btfsc	status,2,c
 12287  008E42  EF25  F047         	goto	u21391
 12288  008E46  EF27  F047         	goto	u21390
 12289  008E4A                     u21391:
 12290  008E4A  EFED  F047         	goto	l19802
 12291  008E4E                     u21390:
 12292  008E4E  EF09  F048         	goto	l724
 12293  008E52                     l19734:
 12294                           
 12295                           ; BSR set to: 1
 12296  008E52  EF09  F048         	goto	l724
 12297  008E56                     l19736:
 12298                           
 12299                           ;app_atcommand.c: 136: g_atcommand.seq = AT_START;
 12300  008E56  0E01               	movlw	1
 12301  008E58  0105               	movlb	5	; () banked
 12302  008E5A  6F00               	movwf	_g_atcommand& (0+255),b
 12303                           
 12304                           ;app_atcommand.c: 137: break;
 12305  008E5C  EF09  F048         	goto	l724
 12306  008E60                     l19738:
 12307                           
 12308                           ; BSR set to: 5
 12309                           ;app_atcommand.c: 139: ch = buffer_de_queue(&g_usb_queue);
 12310  008E60  0E40               	movlw	low _g_usb_queue
 12311  008E62  6E0F               	movwf	buffer_de_queue@queue^0,c
 12312  008E64  0E04               	movlw	high _g_usb_queue
 12313  008E66  6E10               	movwf	(buffer_de_queue@queue+1)^0,c
 12314  008E68  ECEA  F06B         	call	_buffer_de_queue	;wreg free
 12315  008E6C  0100               	movlb	0	; () banked
 12316  008E6E  6FEB               	movwf	atcommand_task@ch& (0+255),b
 12317  008E70                     
 12318                           ; BSR set to: 0
 12319                           ;app_atcommand.c: 140: if (ch) {
 12320  008E70  51EB               	movf	atcommand_task@ch& (0+255),w,b
 12321  008E72  B4D8               	btfsc	status,2,c
 12322  008E74  EF3E  F047         	goto	u21401
 12323  008E78  EF40  F047         	goto	u21400
 12324  008E7C                     u21401:
 12325  008E7C  EF09  F048         	goto	l724
 12326  008E80                     u21400:
 12327  008E80                     
 12328                           ; BSR set to: 0
 12329                           ;app_atcommand.c: 141: if (ch == '\r' || ch == '\n') {
 12330  008E80  0E0D               	movlw	13
 12331  008E82  19EB               	xorwf	atcommand_task@ch& (0+255),w,b
 12332  008E84  B4D8               	btfsc	status,2,c
 12333  008E86  EF47  F047         	goto	u21411
 12334  008E8A  EF49  F047         	goto	u21410
 12335  008E8E                     u21411:
 12336  008E8E  EF52  F047         	goto	l19746
 12337  008E92                     u21410:
 12338  008E92                     
 12339                           ; BSR set to: 0
 12340  008E92  0E0A               	movlw	10
 12341  008E94  19EB               	xorwf	atcommand_task@ch& (0+255),w,b
 12342  008E96  A4D8               	btfss	status,2,c
 12343  008E98  EF50  F047         	goto	u21421
 12344  008E9C  EF52  F047         	goto	u21420
 12345  008EA0                     u21421:
 12346  008EA0  EF83  F047         	goto	l19764
 12347  008EA4                     u21420:
 12348  008EA4                     l19746:
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;app_atcommand.c: 142: if (g_atcommand.readidx > 2) {
 12352  008EA4  0E02               	movlw	2
 12353  008EA6  0105               	movlb	5	; () banked
 12354  008EA8  6541               	cpfsgt	(_g_atcommand+65)& (0+255),b
 12355  008EAA  EF59  F047         	goto	u21431
 12356  008EAE  EF5B  F047         	goto	u21430
 12357  008EB2                     u21431:
 12358  008EB2  EF75  F047         	goto	l19760
 12359  008EB6                     u21430:
 12360  008EB6                     
 12361                           ; BSR set to: 5
 12362                           ;app_atcommand.c: 143: g_atcommand.read_cmd[g_atcommand.readidx++] = ch;
 12363  008EB6  0E01               	movlw	low (_g_atcommand+1)
 12364  008EB8  2541               	addwf	(_g_atcommand+65)& (0+255),w,b
 12365  008EBA  6ED9               	movwf	fsr2l,c
 12366  008EBC  6ADA               	clrf	fsr2h,c
 12367  008EBE  0E05               	movlw	high (_g_atcommand+1)
 12368  008EC0  22DA               	addwfc	fsr2h,f,c
 12369  008EC2  C0EB  FFDF         	movff	atcommand_task@ch,indf2
 12370  008EC6                     
 12371                           ; BSR set to: 5
 12372  008EC6  2B41               	incf	(_g_atcommand+65)& (0+255),f,b
 12373  008EC8                     
 12374                           ; BSR set to: 5
 12375                           ;app_atcommand.c: 144: g_atcommand.readidx = 0;
 12376  008EC8  0E00               	movlw	0
 12377  008ECA  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 12378  008ECC                     
 12379                           ; BSR set to: 5
 12380                           ;app_atcommand.c: 145: g_atcommand.seq = AT_PARSE;
 12381  008ECC  0E02               	movlw	2
 12382  008ECE  6F00               	movwf	_g_atcommand& (0+255),b
 12383  008ED0                     
 12384                           ; BSR set to: 5
 12385                           ;app_atcommand.c: 146: if (g_led_status.isBlink == 0)
 12386  008ED0  0101               	movlb	1	; () banked
 12387  008ED2  512B               	movf	(_g_led_status+2)& (0+255),w,b
 12388  008ED4  A4D8               	btfss	status,2,c
 12389  008ED6  EF6F  F047         	goto	u21441
 12390  008EDA  EF71  F047         	goto	u21440
 12391  008EDE                     u21441:
 12392  008EDE  EF29  F047         	goto	l19734
 12393  008EE2                     u21440:
 12394  008EE2                     
 12395                           ; BSR set to: 1
 12396                           ;app_atcommand.c: 147: g_led_status.seq = LED_COMMAND;
 12397  008EE2  0E05               	movlw	5
 12398  008EE4  6F29               	movwf	_g_led_status& (0+255),b
 12399  008EE6  EF09  F048         	goto	l724
 12400  008EEA                     l19760:
 12401                           
 12402                           ; BSR set to: 5
 12403                           ;app_atcommand.c: 149: g_atcommand.readidx = 0;
 12404  008EEA  0E00               	movlw	0
 12405  008EEC  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 12406  008EEE                     
 12407                           ; BSR set to: 5
 12408                           ;app_atcommand.c: 150: _strclr(g_atcommand.read_cmd, sizeof(g_atcommand.read_cmd));
 12409  008EEE  0E01               	movlw	low (_g_atcommand+1)
 12410  008EF0  6E0F               	movwf	__strclr@dest^0,c
 12411  008EF2  0E05               	movlw	high (_g_atcommand+1)
 12412  008EF4  6E10               	movwf	(__strclr@dest+1)^0,c
 12413  008EF6  0E00               	movlw	0
 12414  008EF8  6E12               	movwf	(__strclr@n+1)^0,c
 12415  008EFA  0E40               	movlw	64
 12416  008EFC  6E11               	movwf	__strclr@n^0,c
 12417  008EFE  EC0C  F071         	call	__strclr	;wreg free
 12418  008F02  EF09  F048         	goto	l724
 12419  008F06                     l19764:
 12420                           
 12421                           ; BSR set to: 0
 12422                           ;app_atcommand.c: 153: if (g_atcommand.readidx >= sizeof(g_atcommand.read_cmd)) g_atcomm
      +                          and.readidx = 0;
 12423  008F06  0E3F               	movlw	63
 12424  008F08  0105               	movlb	5	; () banked
 12425  008F0A  6541               	cpfsgt	(_g_atcommand+65)& (0+255),b
 12426  008F0C  EF8A  F047         	goto	u21451
 12427  008F10  EF8C  F047         	goto	u21450
 12428  008F14                     u21451:
 12429  008F14  EF8E  F047         	goto	l19768
 12430  008F18                     u21450:
 12431  008F18                     
 12432                           ; BSR set to: 5
 12433  008F18  0E00               	movlw	0
 12434  008F1A  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 12435  008F1C                     l19768:
 12436                           
 12437                           ; BSR set to: 5
 12438                           ;app_atcommand.c: 154: g_atcommand.read_cmd[g_atcommand.readidx++] = ch;
 12439  008F1C  0E01               	movlw	low (_g_atcommand+1)
 12440  008F1E  2541               	addwf	(_g_atcommand+65)& (0+255),w,b
 12441  008F20  6ED9               	movwf	fsr2l,c
 12442  008F22  6ADA               	clrf	fsr2h,c
 12443  008F24  0E05               	movlw	high (_g_atcommand+1)
 12444  008F26  22DA               	addwfc	fsr2h,f,c
 12445  008F28  C0EB  FFDF         	movff	atcommand_task@ch,indf2
 12446  008F2C                     
 12447                           ; BSR set to: 5
 12448  008F2C  2B41               	incf	(_g_atcommand+65)& (0+255),f,b
 12449  008F2E  EF09  F048         	goto	l724
 12450  008F32                     l19772:
 12451                           
 12452                           ; BSR set to: 5
 12453                           ;app_atcommand.c: 158: if (parse_command(g_atcommand.read_cmd, &g_atcommand.status) == A
      +                          T_PARSE_OK)
 12454  008F32  0E01               	movlw	low (_g_atcommand+1)
 12455  008F34  6E29               	movwf	parse_command@buff^0,c
 12456  008F36  0E05               	movlw	high (_g_atcommand+1)
 12457  008F38  6E2A               	movwf	(parse_command@buff+1)^0,c
 12458  008F3A  0E42               	movlw	low (_g_atcommand+66)
 12459  008F3C  6E2B               	movwf	parse_command@status^0,c
 12460  008F3E  0E05               	movlw	high (_g_atcommand+66)
 12461  008F40  6E2C               	movwf	(parse_command@status+1)^0,c
 12462  008F42  ECBA  F02A         	call	_parse_command	;wreg free
 12463  008F46  06E8               	decf	wreg,f,c
 12464  008F48  A4D8               	btfss	status,2,c
 12465  008F4A  EFA9  F047         	goto	u21461
 12466  008F4E  EFAB  F047         	goto	u21460
 12467  008F52                     u21461:
 12468  008F52  EFC4  F047         	goto	l19782
 12469  008F56                     u21460:
 12470  008F56                     
 12471                           ;app_atcommand.c: 159: g_atcommand.seq = (g_atcommand.status.isApply) ? AT_APPLY : AT_ME
      +                          SSAGE;
 12472  008F56  0105               	movlb	5	; () banked
 12473  008F58  5150               	movf	(_g_atcommand+80)& (0+255),w,b
 12474  008F5A  A4D8               	btfss	status,2,c
 12475  008F5C  EFB2  F047         	goto	u21471
 12476  008F60  EFB4  F047         	goto	u21470
 12477  008F64                     u21471:
 12478  008F64  EFBB  F047         	goto	l19778
 12479  008F68                     u21470:
 12480  008F68                     
 12481                           ; BSR set to: 5
 12482  008F68  0E00               	movlw	0
 12483  008F6A  0100               	movlb	0	; () banked
 12484  008F6C  6FEA               	movwf	(_atcommand_task$2398+1)& (0+255),b
 12485  008F6E  0E04               	movlw	4
 12486  008F70  6FE9               	movwf	_atcommand_task$2398& (0+255),b
 12487  008F72  EFC0  F047         	goto	l19780
 12488  008F76                     l19778:
 12489                           
 12490                           ; BSR set to: 5
 12491  008F76  0E00               	movlw	0
 12492  008F78  0100               	movlb	0	; () banked
 12493  008F7A  6FEA               	movwf	(_atcommand_task$2398+1)& (0+255),b
 12494  008F7C  0E03               	movlw	3
 12495  008F7E  6FE9               	movwf	_atcommand_task$2398& (0+255),b
 12496  008F80                     l19780:
 12497                           
 12498                           ; BSR set to: 0
 12499  008F80  C0E9  F500         	movff	_atcommand_task$2398,_g_atcommand
 12500  008F84  EF09  F048         	goto	l724
 12501  008F88                     l19782:
 12502                           
 12503                           ;app_atcommand.c: 160: else g_atcommand.seq = AT_END;
 12504  008F88  0E05               	movlw	5
 12505  008F8A  0105               	movlb	5	; () banked
 12506  008F8C  6F00               	movwf	_g_atcommand& (0+255),b
 12507  008F8E  EF09  F048         	goto	l724
 12508  008F92                     l19784:
 12509                           
 12510                           ; BSR set to: 5
 12511                           ;app_atcommand.c: 163: update_command(&g_atcommand.status);
 12512  008F92  0E42               	movlw	low (_g_atcommand+66)
 12513  008F94  0100               	movlb	0	; () banked
 12514  008F96  6FD3               	movwf	update_command@status& (0+255),b
 12515  008F98  0E05               	movlw	high (_g_atcommand+66)
 12516  008F9A  6FD4               	movwf	(update_command@status+1)& (0+255),b
 12517  008F9C  EC68  F019         	call	_update_command	;wreg free
 12518  008FA0                     
 12519                           ;app_atcommand.c: 164: g_atcommand.seq = AT_MESSAGE;
 12520  008FA0  0E04               	movlw	4
 12521  008FA2  0105               	movlb	5	; () banked
 12522  008FA4  6F00               	movwf	_g_atcommand& (0+255),b
 12523                           
 12524                           ;app_atcommand.c: 165: break;
 12525  008FA6  EF09  F048         	goto	l724
 12526  008FAA                     l19788:
 12527                           
 12528                           ; BSR set to: 5
 12529                           ;app_atcommand.c: 167: build_response(&g_atcommand.status);
 12530  008FAA  0E42               	movlw	low (_g_atcommand+66)
 12531  008FAC  0100               	movlb	0	; () banked
 12532  008FAE  6FD5               	movwf	build_response@status& (0+255),b
 12533  008FB0  0E05               	movlw	high (_g_atcommand+66)
 12534  008FB2  6FD6               	movwf	(build_response@status+1)& (0+255),b
 12535  008FB4  ECC2  F011         	call	_build_response	;wreg free
 12536  008FB8  EFC4  F047         	goto	l19782
 12537  008FBC                     l19792:
 12538                           
 12539                           ; BSR set to: 5
 12540                           ;app_atcommand.c: 171: if (g_led_status.isBlink == 0)
 12541  008FBC  0101               	movlb	1	; () banked
 12542  008FBE  512B               	movf	(_g_led_status+2)& (0+255),w,b
 12543  008FC0  A4D8               	btfss	status,2,c
 12544  008FC2  EFE5  F047         	goto	u21481
 12545  008FC6  EFE7  F047         	goto	u21480
 12546  008FCA                     u21481:
 12547  008FCA  EFE9  F047         	goto	l19796
 12548  008FCE                     u21480:
 12549  008FCE                     
 12550                           ; BSR set to: 1
 12551                           ;app_atcommand.c: 172: g_led_status.seq = LED_WAIT_OFF;
 12552  008FCE  0E02               	movlw	2
 12553  008FD0  6F29               	movwf	_g_led_status& (0+255),b
 12554  008FD2                     l19796:
 12555                           
 12556                           ; BSR set to: 1
 12557                           ;app_atcommand.c: 173: clear_command();
 12558  008FD2  EC75  F06E         	call	_clear_command	;wreg free
 12559  008FD6  EF2B  F047         	goto	l19736
 12560  008FDA                     l19802:
 12561                           
 12562                           ; BSR set to: 1
 12563  008FDA  0105               	movlb	5	; () banked
 12564  008FDC  5100               	movf	_g_atcommand& (0+255),w,b
 12565                           
 12566                           ; Switch size 1, requested type "simple"
 12567                           ; Number of cases is 6, Range of values is 0 to 5
 12568                           ; switch strategies available:
 12569                           ; Name         Instructions Cycles
 12570                           ; simple_byte           19    10 (average)
 12571                           ;	Chosen strategy is simple_byte
 12572  008FDE  0A00               	xorlw	0	; case 0
 12573  008FE0  B4D8               	btfsc	status,2,c
 12574  008FE2  EF2B  F047         	goto	l19736
 12575  008FE6  0A01               	xorlw	1	; case 1
 12576  008FE8  B4D8               	btfsc	status,2,c
 12577  008FEA  EF30  F047         	goto	l19738
 12578  008FEE  0A03               	xorlw	3	; case 2
 12579  008FF0  B4D8               	btfsc	status,2,c
 12580  008FF2  EF99  F047         	goto	l19772
 12581  008FF6  0A01               	xorlw	1	; case 3
 12582  008FF8  B4D8               	btfsc	status,2,c
 12583  008FFA  EFC9  F047         	goto	l19784
 12584  008FFE  0A07               	xorlw	7	; case 4
 12585  009000  B4D8               	btfsc	status,2,c
 12586  009002  EFD5  F047         	goto	l19788
 12587  009006  0A01               	xorlw	1	; case 5
 12588  009008  B4D8               	btfsc	status,2,c
 12589  00900A  EFDE  F047         	goto	l19792
 12590  00900E  EF09  F048         	goto	l724
 12591  009012                     l724:
 12592  009012  0012               	return		;funcret
 12593  009014                     __end_of_atcommand_task:
 12594                           	callstack 0
 12595                           
 12596 ;; *************** function _update_command *****************
 12597 ;; Defined at:
 12598 ;;		line 345 in file "app_atcommand.c"
 12599 ;; Parameters:    Size  Location     Type
 12600 ;;  status          2  115[BANK0 ] PTR struct .
 12601 ;;		 -> g_atcommand(242), 
 12602 ;; Auto vars:     Size  Location     Type
 12603 ;;  i               2  121[BANK0 ] int 
 12604 ;;  chno            1  124[BANK0 ] unsigned char 
 12605 ;;  apply           1  123[BANK0 ] unsigned char 
 12606 ;; Return value:  Size  Location     Type
 12607 ;;                  1    wreg      void 
 12608 ;; Registers used:
 12609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12610 ;; Tracked objects:
 12611 ;;		On entry : 0/0
 12612 ;;		On exit  : 0/0
 12613 ;;		Unchanged: 0/0
 12614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12615 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12616 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12617 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12618 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12619 ;;Total ram usage:       10 bytes
 12620 ;; Hardware stack levels used: 1
 12621 ;; Hardware stack levels required when called: 11
 12622 ;; This function calls:
 12623 ;;		_CMD_manual_cal
 12624 ;;		_Kalman_setMeasurementError
 12625 ;;		_ResetBootloaderCleanly
 12626 ;;		_ResetDeviceCleanly
 12627 ;;		_Set_KalmanFilter_Sensitivity
 12628 ;;		___fldiv
 12629 ;;		___fleq
 12630 ;;		___flsub
 12631 ;;		__atof
 12632 ;;		__atoi
 12633 ;;		__isdigit
 12634 ;;		__strlen
 12635 ;;		_nvm_clear_all
 12636 ;;		_nvm_write_flash_all
 12637 ;;		_split_param
 12638 ;;		_tes0902_ABC_OFF
 12639 ;; This function is called by:
 12640 ;;		_atcommand_task
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           	psect	text61
 12645  0032D0                     __ptext61:
 12646                           	callstack 0
 12647  0032D0                     _update_command:
 12648                           	callstack 18
 12649  0032D0                     
 12650                           ;app_atcommand.c: 347: uint8_t apply;;app_atcommand.c: 348: uint8_t chno = ((status->cha
      +                          nnelno - 1) < 0) ? 0 : status->channelno - 1;
 12651  0032D0  C0D3  FFD9         	movff	update_command@status,fsr2l
 12652  0032D4  C0D4  FFDA         	movff	update_command@status+1,fsr2h
 12653  0032D8  50DF               	movf	indf2,w,c
 12654  0032DA  0100               	movlb	0	; () banked
 12655  0032DC  6FD5               	movwf	??_update_command& (0+255),b
 12656  0032DE  6BD6               	clrf	(??_update_command+1)& (0+255),b
 12657  0032E0  0EFF               	movlw	255
 12658  0032E2  25D5               	addwf	??_update_command& (0+255),w,b
 12659  0032E4  0EFF               	movlw	255
 12660  0032E6  21D6               	addwfc	(??_update_command+1)& (0+255),w,b
 12661  0032E8  0B80               	andlw	128
 12662  0032EA  A4D8               	btfss	status,2,c
 12663  0032EC  EF7A  F019         	goto	u20211
 12664  0032F0  EF7C  F019         	goto	u20210
 12665  0032F4                     u20211:
 12666  0032F4  EF8A  F019         	goto	l18666
 12667  0032F8                     u20210:
 12668  0032F8                     
 12669                           ; BSR set to: 0
 12670  0032F8  C0D3  FFD9         	movff	update_command@status,fsr2l
 12671  0032FC  C0D4  FFDA         	movff	update_command@status+1,fsr2h
 12672  003300  50DF               	movf	indf2,w,c
 12673  003302  6FD5               	movwf	??_update_command& (0+255),b
 12674  003304  0EFF               	movlw	255
 12675  003306  25D5               	addwf	??_update_command& (0+255),w,b
 12676  003308  6FD7               	movwf	_update_command$2465& (0+255),b
 12677  00330A  6BD8               	clrf	(_update_command$2465+1)& (0+255),b
 12678  00330C  0EFF               	movlw	255
 12679  00330E  23D8               	addwfc	(_update_command$2465+1)& (0+255),f,b
 12680  003310  EF8E  F019         	goto	l18668
 12681  003314                     l18666:
 12682                           
 12683                           ; BSR set to: 0
 12684  003314  0E00               	movlw	0
 12685  003316  6FD8               	movwf	(_update_command$2465+1)& (0+255),b
 12686  003318  0E00               	movlw	0
 12687  00331A  6FD7               	movwf	_update_command$2465& (0+255),b
 12688  00331C                     l18668:
 12689                           
 12690                           ; BSR set to: 0
 12691  00331C  C0D7  F0DC         	movff	_update_command$2465,update_command@chno
 12692                           
 12693                           ;app_atcommand.c: 350: switch (status->atcommand)
 12694  003320  EF40  F01F         	goto	l18830
 12695  003324                     l18670:
 12696                           
 12697                           ; BSR set to: 0
 12698                           ;app_atcommand.c: 354: ResetDeviceCleanly();
 12699  003324  ECB7  F078         	call	_ResetDeviceCleanly	;wreg free
 12700  003328  EFBE  F01F         	goto	l871
 12701  00332C                     l18674:
 12702                           
 12703                           ; BSR set to: 0
 12704                           ;app_atcommand.c: 359: ResetBootloaderCleanly();
 12705  00332C  ECB0  F078         	call	_ResetBootloaderCleanly	;wreg free
 12706  003330  EFBE  F01F         	goto	l871
 12707  003334                     l18678:
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;app_atcommand.c: 363: if (_strlen(status->apply_params) != 8) break;
 12711  003334  0E0F               	movlw	15
 12712  003336  25D3               	addwf	update_command@status& (0+255),w,b
 12713  003338  6E0F               	movwf	__strlen@source^0,c
 12714  00333A  0E00               	movlw	0
 12715  00333C  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12716  00333E  6E10               	movwf	(__strlen@source+1)^0,c
 12717  003340  EC6F  F073         	call	__strlen	;wreg free
 12718  003344  0E08               	movlw	8
 12719  003346  180F               	xorwf	?__strlen^0,w,c
 12720  003348  1010               	iorwf	(?__strlen+1)^0,w,c
 12721  00334A  B4D8               	btfsc	status,2,c
 12722  00334C  EFAA  F019         	goto	u20221
 12723  003350  EFAC  F019         	goto	u20220
 12724  003354                     u20221:
 12725  003354  EFB0  F019         	goto	l18682
 12726  003358                     u20220:
 12727  003358  EF91  F01F         	goto	l18832
 12728  00335C                     l18680:
 12729  00335C  EF91  F01F         	goto	l18832
 12730  003360                     l18682:
 12731                           
 12732                           ;app_atcommand.c: 364: if (_isdigit(status->apply_params, 8)) {
 12733  003360  0E0F               	movlw	15
 12734  003362  0100               	movlb	0	; () banked
 12735  003364  25D3               	addwf	update_command@status& (0+255),w,b
 12736  003366  6E0F               	movwf	__isdigit@src^0,c
 12737  003368  0E00               	movlw	0
 12738  00336A  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12739  00336C  6E10               	movwf	(__isdigit@src+1)^0,c
 12740  00336E  0E00               	movlw	0
 12741  003370  6E12               	movwf	(__isdigit@n+1)^0,c
 12742  003372  0E08               	movlw	8
 12743  003374  6E11               	movwf	__isdigit@n^0,c
 12744  003376  EC0A  F074         	call	__isdigit	;wreg free
 12745  00337A  0900               	iorlw	0
 12746  00337C  B4D8               	btfsc	status,2,c
 12747  00337E  EFC3  F019         	goto	u20231
 12748  003382  EFC5  F019         	goto	u20230
 12749  003386                     u20231:
 12750  003386  EF91  F01F         	goto	l18832
 12751  00338A                     u20230:
 12752  00338A                     
 12753                           ;app_atcommand.c: 365: nvm_clear_all();
 12754  00338A  EC13  F077         	call	_nvm_clear_all	;wreg free
 12755  00338E                     
 12756                           ;app_atcommand.c: 366: for (int i = 0 ; i < 8 ; i++) g_nvm.flash.serialNum[i] = status->
      +                          apply_params[i];
 12757  00338E  0E00               	movlw	0
 12758  003390  0100               	movlb	0	; () banked
 12759  003392  6FDA               	movwf	(update_command@i+1)& (0+255),b
 12760  003394  0E00               	movlw	0
 12761  003396  6FD9               	movwf	update_command@i& (0+255),b
 12762  003398                     l18692:
 12763                           
 12764                           ; BSR set to: 0
 12765  003398  51D9               	movf	update_command@i& (0+255),w,b
 12766  00339A  25D3               	addwf	update_command@status& (0+255),w,b
 12767  00339C  6FD5               	movwf	??_update_command& (0+255),b
 12768  00339E  51DA               	movf	(update_command@i+1)& (0+255),w,b
 12769  0033A0  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12770  0033A2  6FD6               	movwf	(??_update_command+1)& (0+255),b
 12771  0033A4  0E0F               	movlw	15
 12772  0033A6  25D5               	addwf	??_update_command& (0+255),w,b
 12773  0033A8  6ED9               	movwf	fsr2l,c
 12774  0033AA  0E00               	movlw	0
 12775  0033AC  21D6               	addwfc	(??_update_command+1)& (0+255),w,b
 12776  0033AE  6EDA               	movwf	fsr2h,c
 12777  0033B0  0EDE               	movlw	low (_g_nvm+101)
 12778  0033B2  25D9               	addwf	update_command@i& (0+255),w,b
 12779  0033B4  6EE1               	movwf	fsr1l,c
 12780  0033B6  0E01               	movlw	high (_g_nvm+101)
 12781  0033B8  21DA               	addwfc	(update_command@i+1)& (0+255),w,b
 12782  0033BA  6EE2               	movwf	fsr1h,c
 12783  0033BC  CFDF FFE7          	movff	indf2,indf1
 12784  0033C0                     
 12785                           ; BSR set to: 0
 12786  0033C0  4BD9               	infsnz	update_command@i& (0+255),f,b
 12787  0033C2  2BDA               	incf	(update_command@i+1)& (0+255),f,b
 12788  0033C4                     
 12789                           ; BSR set to: 0
 12790  0033C4  BFDA               	btfsc	(update_command@i+1)& (0+255),7,b
 12791  0033C6  EFEE  F019         	goto	u20241
 12792  0033CA  51DA               	movf	(update_command@i+1)& (0+255),w,b
 12793  0033CC  E109               	bnz	u20240
 12794  0033CE  0E08               	movlw	8
 12795  0033D0  5DD9               	subwf	update_command@i& (0+255),w,b
 12796  0033D2  A0D8               	btfss	status,0,c
 12797  0033D4  EFEE  F019         	goto	u20241
 12798  0033D8  EFF0  F019         	goto	u20240
 12799  0033DC                     u20241:
 12800  0033DC  EFCC  F019         	goto	l18692
 12801  0033E0                     u20240:
 12802  0033E0  EF91  F01F         	goto	l18832
 12803  0033E4                     l18698:
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;app_atcommand.c: 369: apply = (uint8_t)_atoi(status->apply_params);
 12807  0033E4  0E0F               	movlw	15
 12808  0033E6  25D3               	addwf	update_command@status& (0+255),w,b
 12809  0033E8  6E1B               	movwf	__atoi@str^0,c
 12810  0033EA  0E00               	movlw	0
 12811  0033EC  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12812  0033EE  6E1C               	movwf	(__atoi@str+1)^0,c
 12813  0033F0  EC6B  F053         	call	__atoi	;wreg free
 12814  0033F4  501B               	movf	?__atoi^0,w,c
 12815  0033F6  0100               	movlb	0	; () banked
 12816  0033F8  6FDB               	movwf	update_command@apply& (0+255),b
 12817  0033FA                     
 12818                           ; BSR set to: 0
 12819                           ;app_atcommand.c: 370: if (apply >= RAW_MODE && apply <= FIL_MODE) g_nvm.flash.filter_mo
      +                          de = apply; break;
 12820  0033FA  0E02               	movlw	2
 12821  0033FC  61DB               	cpfslt	update_command@apply& (0+255),b
 12822  0033FE  EF03  F01A         	goto	u20251
 12823  003402  EF05  F01A         	goto	u20250
 12824  003406                     u20251:
 12825  003406  EF91  F01F         	goto	l18832
 12826  00340A                     u20250:
 12827  00340A                     
 12828                           ; BSR set to: 0
 12829  00340A  C0DB  F17A         	movff	update_command@apply,_g_nvm+1
 12830  00340E  EF91  F01F         	goto	l18832
 12831  003412                     l18704:
 12832                           
 12833                           ; BSR set to: 0
 12834                           ;app_atcommand.c: 372: apply = (uint8_t)_atoi(status->apply_params);
 12835  003412  0E0F               	movlw	15
 12836  003414  25D3               	addwf	update_command@status& (0+255),w,b
 12837  003416  6E1B               	movwf	__atoi@str^0,c
 12838  003418  0E00               	movlw	0
 12839  00341A  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12840  00341C  6E1C               	movwf	(__atoi@str+1)^0,c
 12841  00341E  EC6B  F053         	call	__atoi	;wreg free
 12842  003422  501B               	movf	?__atoi^0,w,c
 12843  003424  0100               	movlb	0	; () banked
 12844  003426  6FDB               	movwf	update_command@apply& (0+255),b
 12845  003428                     
 12846                           ; BSR set to: 0
 12847                           ;app_atcommand.c: 373: if (apply >= TEMP_CMP_OFF && apply <= TEMP_CMP_ON) g_nvm.flash.te
      +                          mp_cmp = apply; break;
 12848  003428  0E02               	movlw	2
 12849  00342A  61DB               	cpfslt	update_command@apply& (0+255),b
 12850  00342C  EF1A  F01A         	goto	u20261
 12851  003430  EF1C  F01A         	goto	u20260
 12852  003434                     u20261:
 12853  003434  EF91  F01F         	goto	l18832
 12854  003438                     u20260:
 12855  003438                     
 12856                           ; BSR set to: 0
 12857  003438  C0DB  F17B         	movff	update_command@apply,_g_nvm+2
 12858  00343C  EF91  F01F         	goto	l18832
 12859  003440                     l18710:
 12860                           
 12861                           ; BSR set to: 0
 12862  003440  0E00               	movlw	0
 12863  003442  0101               	movlb	1	; () banked
 12864  003444  6F7C               	movwf	(_g_nvm+3)& (0+255),b
 12865  003446  EF91  F01F         	goto	l18832
 12866  00344A                     l18712:
 12867                           
 12868                           ; BSR set to: 0
 12869  00344A  0E01               	movlw	1
 12870  00344C  0101               	movlb	1	; () banked
 12871  00344E  6F7C               	movwf	(_g_nvm+3)& (0+255),b
 12872  003450  EF91  F01F         	goto	l18832
 12873  003454                     l18714:
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;app_atcommand.c: 377: {;app_atcommand.c: 378: if (chno == 0) g_nvm.flash.gasOffset[0] =
      +                           _atof(status->apply_params);
 12877  003454  51DC               	movf	update_command@chno& (0+255),w,b
 12878  003456  A4D8               	btfss	status,2,c
 12879  003458  EF30  F01A         	goto	u20271
 12880  00345C  EF32  F01A         	goto	u20270
 12881  003460                     u20271:
 12882  003460  EF44  F01A         	goto	l18718
 12883  003464                     u20270:
 12884  003464                     
 12885                           ; BSR set to: 0
 12886  003464  0E0F               	movlw	15
 12887  003466  25D3               	addwf	update_command@status& (0+255),w,b
 12888  003468  6FBF               	movwf	__atof@str& (0+255),b
 12889  00346A  0E00               	movlw	0
 12890  00346C  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12891  00346E  6FC0               	movwf	(__atof@str+1)& (0+255),b
 12892  003470  ECAF  F042         	call	__atof	;wreg free
 12893  003474  C0BF  F1B2         	movff	?__atof,_g_nvm+57
 12894  003478  C0C0  F1B3         	movff	?__atof+1,_g_nvm+58
 12895  00347C  C0C1  F1B4         	movff	?__atof+2,_g_nvm+59
 12896  003480  C0C2  F1B5         	movff	?__atof+3,_g_nvm+60
 12897  003484  EF91  F01F         	goto	l18832
 12898  003488                     l18718:
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;app_atcommand.c: 379: else if (chno == 1) g_nvm.flash.gasOffset[1] = _atof(status->appl
      +                          y_params);
 12902  003488  05DC               	decf	update_command@chno& (0+255),w,b
 12903  00348A  A4D8               	btfss	status,2,c
 12904  00348C  EF4A  F01A         	goto	u20281
 12905  003490  EF4C  F01A         	goto	u20280
 12906  003494                     u20281:
 12907  003494  EF5E  F01A         	goto	l18722
 12908  003498                     u20280:
 12909  003498                     
 12910                           ; BSR set to: 0
 12911  003498  0E0F               	movlw	15
 12912  00349A  25D3               	addwf	update_command@status& (0+255),w,b
 12913  00349C  6FBF               	movwf	__atof@str& (0+255),b
 12914  00349E  0E00               	movlw	0
 12915  0034A0  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12916  0034A2  6FC0               	movwf	(__atof@str+1)& (0+255),b
 12917  0034A4  ECAF  F042         	call	__atof	;wreg free
 12918  0034A8  C0BF  F1B6         	movff	?__atof,_g_nvm+61
 12919  0034AC  C0C0  F1B7         	movff	?__atof+1,_g_nvm+62
 12920  0034B0  C0C1  F1B8         	movff	?__atof+2,_g_nvm+63
 12921  0034B4  C0C2  F1B9         	movff	?__atof+3,_g_nvm+64
 12922  0034B8  EF91  F01F         	goto	l18832
 12923  0034BC                     l18722:
 12924                           
 12925                           ; BSR set to: 0
 12926                           ;app_atcommand.c: 380: else if (chno == 2) g_nvm.flash.gasOffset[2] = _atof(status->appl
      +                          y_params);
 12927  0034BC  0E02               	movlw	2
 12928  0034BE  19DC               	xorwf	update_command@chno& (0+255),w,b
 12929  0034C0  A4D8               	btfss	status,2,c
 12930  0034C2  EF65  F01A         	goto	u20291
 12931  0034C6  EF67  F01A         	goto	u20290
 12932  0034CA                     u20291:
 12933  0034CA  EF79  F01A         	goto	l18726
 12934  0034CE                     u20290:
 12935  0034CE                     
 12936                           ; BSR set to: 0
 12937  0034CE  0E0F               	movlw	15
 12938  0034D0  25D3               	addwf	update_command@status& (0+255),w,b
 12939  0034D2  6FBF               	movwf	__atof@str& (0+255),b
 12940  0034D4  0E00               	movlw	0
 12941  0034D6  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12942  0034D8  6FC0               	movwf	(__atof@str+1)& (0+255),b
 12943  0034DA  ECAF  F042         	call	__atof	;wreg free
 12944  0034DE  C0BF  F1BA         	movff	?__atof,_g_nvm+65
 12945  0034E2  C0C0  F1BB         	movff	?__atof+1,_g_nvm+66
 12946  0034E6  C0C1  F1BC         	movff	?__atof+2,_g_nvm+67
 12947  0034EA  C0C2  F1BD         	movff	?__atof+3,_g_nvm+68
 12948  0034EE  EF91  F01F         	goto	l18832
 12949  0034F2                     l18726:
 12950                           
 12951                           ; BSR set to: 0
 12952                           ;app_atcommand.c: 381: else if (chno == 3) g_nvm.flash.co2Offset = _atoi(status->apply_p
      +                          arams);
 12953  0034F2  0E03               	movlw	3
 12954  0034F4  19DC               	xorwf	update_command@chno& (0+255),w,b
 12955  0034F6  A4D8               	btfss	status,2,c
 12956  0034F8  EF80  F01A         	goto	u20301
 12957  0034FC  EF82  F01A         	goto	u20300
 12958  003500                     u20301:
 12959  003500  EF94  F01A         	goto	l18730
 12960  003504                     u20300:
 12961  003504                     
 12962                           ; BSR set to: 0
 12963  003504  0E0F               	movlw	15
 12964  003506  25D3               	addwf	update_command@status& (0+255),w,b
 12965  003508  6E1B               	movwf	__atoi@str^0,c
 12966  00350A  0E00               	movlw	0
 12967  00350C  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12968  00350E  6E1C               	movwf	(__atoi@str+1)^0,c
 12969  003510  EC6B  F053         	call	__atoi	;wreg free
 12970  003514  C01B  F1BE         	movff	?__atoi,_g_nvm+69
 12971  003518  C01C  F1BF         	movff	?__atoi+1,_g_nvm+70
 12972  00351C  C01D  F1C0         	movff	?__atoi+2,_g_nvm+71
 12973  003520  C01E  F1C1         	movff	?__atoi+3,_g_nvm+72
 12974  003524  EF91  F01F         	goto	l18832
 12975  003528                     l18730:
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;app_atcommand.c: 382: else if (chno == 4) g_nvm.flash.tempOffset = _atof(status->apply_
      +                          params);
 12979  003528  0E04               	movlw	4
 12980  00352A  19DC               	xorwf	update_command@chno& (0+255),w,b
 12981  00352C  A4D8               	btfss	status,2,c
 12982  00352E  EF9B  F01A         	goto	u20311
 12983  003532  EF9D  F01A         	goto	u20310
 12984  003536                     u20311:
 12985  003536  EFAF  F01A         	goto	l18734
 12986  00353A                     u20310:
 12987  00353A                     
 12988                           ; BSR set to: 0
 12989  00353A  0E0F               	movlw	15
 12990  00353C  25D3               	addwf	update_command@status& (0+255),w,b
 12991  00353E  6FBF               	movwf	__atof@str& (0+255),b
 12992  003540  0E00               	movlw	0
 12993  003542  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 12994  003544  6FC0               	movwf	(__atof@str+1)& (0+255),b
 12995  003546  ECAF  F042         	call	__atof	;wreg free
 12996  00354A  C0BF  F1C2         	movff	?__atof,_g_nvm+73
 12997  00354E  C0C0  F1C3         	movff	?__atof+1,_g_nvm+74
 12998  003552  C0C1  F1C4         	movff	?__atof+2,_g_nvm+75
 12999  003556  C0C2  F1C5         	movff	?__atof+3,_g_nvm+76
 13000  00355A  EF91  F01F         	goto	l18832
 13001  00355E                     l18734:
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;app_atcommand.c: 383: else if (chno == 5) g_nvm.flash.humiOffset = _atof(status->apply_
      +                          params);
 13005  00355E  0E05               	movlw	5
 13006  003560  19DC               	xorwf	update_command@chno& (0+255),w,b
 13007  003562  A4D8               	btfss	status,2,c
 13008  003564  EFB6  F01A         	goto	u20321
 13009  003568  EFB8  F01A         	goto	u20320
 13010  00356C                     u20321:
 13011  00356C  EFAE  F019         	goto	l18680
 13012  003570                     u20320:
 13013  003570                     
 13014                           ; BSR set to: 0
 13015  003570  0E0F               	movlw	15
 13016  003572  25D3               	addwf	update_command@status& (0+255),w,b
 13017  003574  6FBF               	movwf	__atof@str& (0+255),b
 13018  003576  0E00               	movlw	0
 13019  003578  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13020  00357A  6FC0               	movwf	(__atof@str+1)& (0+255),b
 13021  00357C  ECAF  F042         	call	__atof	;wreg free
 13022  003580  C0BF  F1C6         	movff	?__atof,_g_nvm+77
 13023  003584  C0C0  F1C7         	movff	?__atof+1,_g_nvm+78
 13024  003588  C0C1  F1C8         	movff	?__atof+2,_g_nvm+79
 13025  00358C  C0C2  F1C9         	movff	?__atof+3,_g_nvm+80
 13026  003590  EF91  F01F         	goto	l18832
 13027  003594                     l18738:
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;app_atcommand.c: 386: if (chno >= 0 && chno <= 2) {
 13031  003594  0E03               	movlw	3
 13032  003596  61DC               	cpfslt	update_command@chno& (0+255),b
 13033  003598  EFD0  F01A         	goto	u20331
 13034  00359C  EFD2  F01A         	goto	u20330
 13035  0035A0                     u20331:
 13036  0035A0  EF91  F01F         	goto	l18832
 13037  0035A4                     u20330:
 13038  0035A4                     
 13039                           ; BSR set to: 0
 13040                           ;app_atcommand.c: 387: if (split_param(status->apply_params, status->manual_params, 3, 3
      +                          2) >= 3) {
 13041  0035A4  0E0F               	movlw	15
 13042  0035A6  25D3               	addwf	update_command@status& (0+255),w,b
 13043  0035A8  6E13               	movwf	split_param@src^0,c
 13044  0035AA  0E00               	movlw	0
 13045  0035AC  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13046  0035AE  6E14               	movwf	(split_param@src+1)^0,c
 13047  0035B0  0E2F               	movlw	47
 13048  0035B2  25D3               	addwf	update_command@status& (0+255),w,b
 13049  0035B4  6E15               	movwf	split_param@params^0,c
 13050  0035B6  0E00               	movlw	0
 13051  0035B8  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13052  0035BA  6E16               	movwf	(split_param@params+1)^0,c
 13053  0035BC  0E03               	movlw	3
 13054  0035BE  6E17               	movwf	split_param@m^0,c
 13055  0035C0  0E20               	movlw	32
 13056  0035C2  6E18               	movwf	split_param@n^0,c
 13057  0035C4  EC22  F057         	call	_split_param	;wreg free
 13058  0035C8  0100               	movlb	0	; () banked
 13059  0035CA  6FD5               	movwf	??_update_command& (0+255),b
 13060  0035CC  0E02               	movlw	2
 13061  0035CE  65D5               	cpfsgt	??_update_command& (0+255),b
 13062  0035D0  EFEC  F01A         	goto	u20341
 13063  0035D4  EFEE  F01A         	goto	u20340
 13064  0035D8                     u20341:
 13065  0035D8  EF91  F01F         	goto	l18832
 13066  0035DC                     u20340:
 13067  0035DC                     
 13068                           ; BSR set to: 0
 13069                           ;app_atcommand.c: 388: g_nvm.flash.baseLine_uV[chno] = _atof(status->manual_params[0]);
 13070  0035DC  0E2F               	movlw	47
 13071  0035DE  25D3               	addwf	update_command@status& (0+255),w,b
 13072  0035E0  6FBF               	movwf	__atof@str& (0+255),b
 13073  0035E2  0E00               	movlw	0
 13074  0035E4  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13075  0035E6  6FC0               	movwf	(__atof@str+1)& (0+255),b
 13076  0035E8  ECAF  F042         	call	__atof	;wreg free
 13077  0035EC  0100               	movlb	0	; () banked
 13078  0035EE  51DC               	movf	update_command@chno& (0+255),w,b
 13079  0035F0  0D04               	mullw	4
 13080  0035F2  0E82               	movlw	low (_g_nvm+9)
 13081  0035F4  24F3               	addwf	243,w,c
 13082  0035F6  6ED9               	movwf	fsr2l,c
 13083  0035F8  0E01               	movlw	high (_g_nvm+9)
 13084  0035FA  20F4               	addwfc	prodh,w,c
 13085  0035FC  6EDA               	movwf	fsr2h,c
 13086  0035FE  C0BF  FFDE         	movff	?__atof,postinc2
 13087  003602  C0C0  FFDE         	movff	?__atof+1,postinc2
 13088  003606  C0C1  FFDE         	movff	?__atof+2,postinc2
 13089  00360A  C0C2  FFDE         	movff	?__atof+3,postinc2
 13090                           
 13091                           ;app_atcommand.c: 389: g_nvm.flash.span_uV[chno] = _atof(status->manual_params[1]);
 13092  00360E  0E4F               	movlw	79
 13093  003610  25D3               	addwf	update_command@status& (0+255),w,b
 13094  003612  6FBF               	movwf	__atof@str& (0+255),b
 13095  003614  0E00               	movlw	0
 13096  003616  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13097  003618  6FC0               	movwf	(__atof@str+1)& (0+255),b
 13098  00361A  ECAF  F042         	call	__atof	;wreg free
 13099  00361E  0100               	movlb	0	; () banked
 13100  003620  51DC               	movf	update_command@chno& (0+255),w,b
 13101  003622  0D04               	mullw	4
 13102  003624  0E8E               	movlw	low (_g_nvm+21)
 13103  003626  24F3               	addwf	243,w,c
 13104  003628  6ED9               	movwf	fsr2l,c
 13105  00362A  0E01               	movlw	high (_g_nvm+21)
 13106  00362C  20F4               	addwfc	prodh,w,c
 13107  00362E  6EDA               	movwf	fsr2h,c
 13108  003630  C0BF  FFDE         	movff	?__atof,postinc2
 13109  003634  C0C0  FFDE         	movff	?__atof+1,postinc2
 13110  003638  C0C1  FFDE         	movff	?__atof+2,postinc2
 13111  00363C  C0C2  FFDE         	movff	?__atof+3,postinc2
 13112                           
 13113                           ;app_atcommand.c: 390: g_nvm.flash.CalibrationGas[chno] = _atof(status->manual_params[2]
      +                          );
 13114  003640  0E6F               	movlw	111
 13115  003642  25D3               	addwf	update_command@status& (0+255),w,b
 13116  003644  6FBF               	movwf	__atof@str& (0+255),b
 13117  003646  0E00               	movlw	0
 13118  003648  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13119  00364A  6FC0               	movwf	(__atof@str+1)& (0+255),b
 13120  00364C  ECAF  F042         	call	__atof	;wreg free
 13121  003650  0100               	movlb	0	; () banked
 13122  003652  51DC               	movf	update_command@chno& (0+255),w,b
 13123  003654  0D04               	mullw	4
 13124  003656  0E9A               	movlw	low (_g_nvm+33)
 13125  003658  24F3               	addwf	243,w,c
 13126  00365A  6ED9               	movwf	fsr2l,c
 13127  00365C  0E01               	movlw	high (_g_nvm+33)
 13128  00365E  20F4               	addwfc	prodh,w,c
 13129  003660  6EDA               	movwf	fsr2h,c
 13130  003662  C0BF  FFDE         	movff	?__atof,postinc2
 13131  003666  C0C0  FFDE         	movff	?__atof+1,postinc2
 13132  00366A  C0C1  FFDE         	movff	?__atof+2,postinc2
 13133  00366E  C0C2  FFDE         	movff	?__atof+3,postinc2
 13134  003672                     
 13135                           ; BSR set to: 0
 13136                           ;app_atcommand.c: 391: g_nvm.flash.calib_temp = Last_value.tempHumi[CMP_TEMP];
 13137  003672  C248  F1CA         	movff	_Last_value+34,_g_nvm+81
 13138  003676  C249  F1CB         	movff	_Last_value+35,_g_nvm+82
 13139  00367A  C24A  F1CC         	movff	_Last_value+36,_g_nvm+83
 13140  00367E  C24B  F1CD         	movff	_Last_value+37,_g_nvm+84
 13141  003682                     
 13142                           ; BSR set to: 0
 13143                           ;app_atcommand.c: 392: if (chno == 0 || chno == 2) {
 13144  003682  51DC               	movf	update_command@chno& (0+255),w,b
 13145  003684  B4D8               	btfsc	status,2,c
 13146  003686  EF47  F01B         	goto	u20351
 13147  00368A  EF49  F01B         	goto	u20350
 13148  00368E                     u20351:
 13149  00368E  EF52  F01B         	goto	l18750
 13150  003692                     u20350:
 13151  003692                     
 13152                           ; BSR set to: 0
 13153  003692  0E02               	movlw	2
 13154  003694  19DC               	xorwf	update_command@chno& (0+255),w,b
 13155  003696  A4D8               	btfss	status,2,c
 13156  003698  EF50  F01B         	goto	u20361
 13157  00369C  EF52  F01B         	goto	u20360
 13158  0036A0                     u20361:
 13159  0036A0  EFC4  F01B         	goto	l18754
 13160  0036A4                     u20360:
 13161  0036A4                     l18750:
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;app_atcommand.c: 393: if (g_nvm.flash.CalibrationGas[chno] != 0.0f)
 13165  0036A4  51DC               	movf	update_command@chno& (0+255),w,b
 13166  0036A6  0D04               	mullw	4
 13167  0036A8  0E9A               	movlw	low (_g_nvm+33)
 13168  0036AA  24F3               	addwf	243,w,c
 13169  0036AC  6ED9               	movwf	fsr2l,c
 13170  0036AE  0E01               	movlw	high (_g_nvm+33)
 13171  0036B0  20F4               	addwfc	prodh,w,c
 13172  0036B2  6EDA               	movwf	fsr2h,c
 13173  0036B4  CFDE F035          	movff	postinc2,___fleq@ff1
 13174  0036B8  CFDE F036          	movff	postinc2,___fleq@ff1+1
 13175  0036BC  CFDE F037          	movff	postinc2,___fleq@ff1+2
 13176  0036C0  CFDE F038          	movff	postinc2,___fleq@ff1+3
 13177  0036C4  0E00               	movlw	0
 13178  0036C6  6E39               	movwf	___fleq@ff2^0,c
 13179  0036C8  0E00               	movlw	0
 13180  0036CA  6E3A               	movwf	(___fleq@ff2+1)^0,c
 13181  0036CC  0E00               	movlw	0
 13182  0036CE  6E3B               	movwf	(___fleq@ff2+2)^0,c
 13183  0036D0  0E00               	movlw	0
 13184  0036D2  6E3C               	movwf	(___fleq@ff2+3)^0,c
 13185  0036D4  EC94  F067         	call	___fleq	;wreg free
 13186  0036D8  B0D8               	btfsc	status,0,c
 13187  0036DA  EF71  F01B         	goto	u20371
 13188  0036DE  EF73  F01B         	goto	u20370
 13189  0036E2                     u20371:
 13190  0036E2  EFAE  F019         	goto	l18680
 13191  0036E6                     u20370:
 13192  0036E6                     l18752:
 13193                           
 13194                           ;app_atcommand.c: 394: g_nvm.flash.gas_slope[chno] = (g_nvm.flash.span_uV[chno] - g_nvm.
      +                          flash.baseLine_uV[chno]) / g_nvm.flash.CalibrationGas[chno];
 13195  0036E6  0100               	movlb	0	; () banked
 13196  0036E8  51DC               	movf	update_command@chno& (0+255),w,b
 13197  0036EA  0D04               	mullw	4
 13198  0036EC  0E82               	movlw	low (_g_nvm+9)
 13199  0036EE  24F3               	addwf	243,w,c
 13200  0036F0  6ED9               	movwf	fsr2l,c
 13201  0036F2  0E01               	movlw	high (_g_nvm+9)
 13202  0036F4  20F4               	addwfc	prodh,w,c
 13203  0036F6  6EDA               	movwf	fsr2h,c
 13204  0036F8  CFDE F0A2          	movff	postinc2,___flsub@a
 13205  0036FC  CFDE F0A3          	movff	postinc2,___flsub@a+1
 13206  003700  CFDE F0A4          	movff	postinc2,___flsub@a+2
 13207  003704  CFDE F0A5          	movff	postinc2,___flsub@a+3
 13208  003708  51DC               	movf	update_command@chno& (0+255),w,b
 13209  00370A  0D04               	mullw	4
 13210  00370C  0E8E               	movlw	low (_g_nvm+21)
 13211  00370E  24F3               	addwf	243,w,c
 13212  003710  6ED9               	movwf	fsr2l,c
 13213  003712  0E01               	movlw	high (_g_nvm+21)
 13214  003714  20F4               	addwfc	prodh,w,c
 13215  003716  6EDA               	movwf	fsr2h,c
 13216  003718  CFDE F09E          	movff	postinc2,___flsub@b
 13217  00371C  CFDE F09F          	movff	postinc2,___flsub@b+1
 13218  003720  CFDE F0A0          	movff	postinc2,___flsub@b+2
 13219  003724  CFDE F0A1          	movff	postinc2,___flsub@b+3
 13220  003728  EC9C  F074         	call	___flsub	;wreg free
 13221  00372C  C09E  F0A6         	movff	?___flsub,___fldiv@b
 13222  003730  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
 13223  003734  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
 13224  003738  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
 13225  00373C  0100               	movlb	0	; () banked
 13226  00373E  51DC               	movf	update_command@chno& (0+255),w,b
 13227  003740  0D04               	mullw	4
 13228  003742  0E9A               	movlw	low (_g_nvm+33)
 13229  003744  24F3               	addwf	243,w,c
 13230  003746  6ED9               	movwf	fsr2l,c
 13231  003748  0E01               	movlw	high (_g_nvm+33)
 13232  00374A  20F4               	addwfc	prodh,w,c
 13233  00374C  6EDA               	movwf	fsr2h,c
 13234  00374E  CFDE F0AA          	movff	postinc2,___fldiv@a
 13235  003752  CFDE F0AB          	movff	postinc2,___fldiv@a+1
 13236  003756  CFDE F0AC          	movff	postinc2,___fldiv@a+2
 13237  00375A  CFDE F0AD          	movff	postinc2,___fldiv@a+3
 13238  00375E  ECCB  F033         	call	___fldiv	;wreg free
 13239  003762  0100               	movlb	0	; () banked
 13240  003764  51DC               	movf	update_command@chno& (0+255),w,b
 13241  003766  0D04               	mullw	4
 13242  003768  0EA6               	movlw	low (_g_nvm+45)
 13243  00376A  24F3               	addwf	243,w,c
 13244  00376C  6ED9               	movwf	fsr2l,c
 13245  00376E  0E01               	movlw	high (_g_nvm+45)
 13246  003770  20F4               	addwfc	prodh,w,c
 13247  003772  6EDA               	movwf	fsr2h,c
 13248  003774  C0A6  FFDE         	movff	?___fldiv,postinc2
 13249  003778  C0A7  FFDE         	movff	?___fldiv+1,postinc2
 13250  00377C  C0A8  FFDE         	movff	?___fldiv+2,postinc2
 13251  003780  C0A9  FFDE         	movff	?___fldiv+3,postinc2
 13252  003784  EF91  F01F         	goto	l18832
 13253  003788                     l18754:
 13254                           
 13255                           ; BSR set to: 0
 13256                           ;app_atcommand.c: 396: g_nvm.flash.gas_slope[chno] = (g_nvm.flash.baseLine_uV[chno] - g_
      +                          nvm.flash.span_uV[chno]) / (20.8f - g_nvm.flash.CalibrationGas[chno]);
 13257  003788  51DC               	movf	update_command@chno& (0+255),w,b
 13258  00378A  0D04               	mullw	4
 13259  00378C  0E8E               	movlw	low (_g_nvm+21)
 13260  00378E  24F3               	addwf	243,w,c
 13261  003790  6ED9               	movwf	fsr2l,c
 13262  003792  0E01               	movlw	high (_g_nvm+21)
 13263  003794  20F4               	addwfc	prodh,w,c
 13264  003796  6EDA               	movwf	fsr2h,c
 13265  003798  CFDE F0A2          	movff	postinc2,___flsub@a
 13266  00379C  CFDE F0A3          	movff	postinc2,___flsub@a+1
 13267  0037A0  CFDE F0A4          	movff	postinc2,___flsub@a+2
 13268  0037A4  CFDE F0A5          	movff	postinc2,___flsub@a+3
 13269  0037A8  51DC               	movf	update_command@chno& (0+255),w,b
 13270  0037AA  0D04               	mullw	4
 13271  0037AC  0E82               	movlw	low (_g_nvm+9)
 13272  0037AE  24F3               	addwf	243,w,c
 13273  0037B0  6ED9               	movwf	fsr2l,c
 13274  0037B2  0E01               	movlw	high (_g_nvm+9)
 13275  0037B4  20F4               	addwfc	prodh,w,c
 13276  0037B6  6EDA               	movwf	fsr2h,c
 13277  0037B8  CFDE F09E          	movff	postinc2,___flsub@b
 13278  0037BC  CFDE F09F          	movff	postinc2,___flsub@b+1
 13279  0037C0  CFDE F0A0          	movff	postinc2,___flsub@b+2
 13280  0037C4  CFDE F0A1          	movff	postinc2,___flsub@b+3
 13281  0037C8  EC9C  F074         	call	___flsub	;wreg free
 13282  0037CC  C09E  F0A6         	movff	?___flsub,___fldiv@b
 13283  0037D0  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
 13284  0037D4  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
 13285  0037D8  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
 13286  0037DC  0100               	movlb	0	; () banked
 13287  0037DE  51DC               	movf	update_command@chno& (0+255),w,b
 13288  0037E0  0D04               	mullw	4
 13289  0037E2  0E9A               	movlw	low (_g_nvm+33)
 13290  0037E4  24F3               	addwf	243,w,c
 13291  0037E6  6ED9               	movwf	fsr2l,c
 13292  0037E8  0E01               	movlw	high (_g_nvm+33)
 13293  0037EA  20F4               	addwfc	prodh,w,c
 13294  0037EC  6EDA               	movwf	fsr2h,c
 13295  0037EE  CFDE F0A2          	movff	postinc2,___flsub@a
 13296  0037F2  CFDE F0A3          	movff	postinc2,___flsub@a+1
 13297  0037F6  CFDE F0A4          	movff	postinc2,___flsub@a+2
 13298  0037FA  CFDE F0A5          	movff	postinc2,___flsub@a+3
 13299  0037FE  0E66               	movlw	102
 13300  003800  6F9E               	movwf	___flsub@b& (0+255),b
 13301  003802  0E66               	movlw	102
 13302  003804  6F9F               	movwf	(___flsub@b+1)& (0+255),b
 13303  003806  0EA6               	movlw	166
 13304  003808  6FA0               	movwf	(___flsub@b+2)& (0+255),b
 13305  00380A  0E41               	movlw	65
 13306  00380C  6FA1               	movwf	(___flsub@b+3)& (0+255),b
 13307  00380E  EC9C  F074         	call	___flsub	;wreg free
 13308  003812  C09E  F0AA         	movff	?___flsub,___fldiv@a
 13309  003816  C09F  F0AB         	movff	?___flsub+1,___fldiv@a+1
 13310  00381A  C0A0  F0AC         	movff	?___flsub+2,___fldiv@a+2
 13311  00381E  C0A1  F0AD         	movff	?___flsub+3,___fldiv@a+3
 13312  003822  ECCB  F033         	call	___fldiv	;wreg free
 13313  003826  0100               	movlb	0	; () banked
 13314  003828  51DC               	movf	update_command@chno& (0+255),w,b
 13315  00382A  0D04               	mullw	4
 13316  00382C  0EA6               	movlw	low (_g_nvm+45)
 13317  00382E  24F3               	addwf	243,w,c
 13318  003830  6ED9               	movwf	fsr2l,c
 13319  003832  0E01               	movlw	high (_g_nvm+45)
 13320  003834  20F4               	addwfc	prodh,w,c
 13321  003836  6EDA               	movwf	fsr2h,c
 13322  003838  C0A6  FFDE         	movff	?___fldiv,postinc2
 13323  00383C  C0A7  FFDE         	movff	?___fldiv+1,postinc2
 13324  003840  C0A8  FFDE         	movff	?___fldiv+2,postinc2
 13325  003844  C0A9  FFDE         	movff	?___fldiv+3,postinc2
 13326  003848  EF91  F01F         	goto	l18832
 13327  00384C                     l18756:
 13328  00384C  ECBF  F069         	call	_CMD_manual_cal	;wreg free
 13329  003850  EF91  F01F         	goto	l18832
 13330  003854                     l18758:
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;app_atcommand.c: 401: if (chno >= 0 && chno <= 2) {
 13334  003854  0E03               	movlw	3
 13335  003856  61DC               	cpfslt	update_command@chno& (0+255),b
 13336  003858  EF30  F01C         	goto	u20381
 13337  00385C  EF32  F01C         	goto	u20380
 13338  003860                     u20381:
 13339  003860  EF91  F01F         	goto	l18832
 13340  003864                     u20380:
 13341  003864                     
 13342                           ; BSR set to: 0
 13343                           ;app_atcommand.c: 402: g_nvm.flash.CalibrationGas[chno] = _atof(status->apply_params);
 13344  003864  0E0F               	movlw	15
 13345  003866  25D3               	addwf	update_command@status& (0+255),w,b
 13346  003868  6FBF               	movwf	__atof@str& (0+255),b
 13347  00386A  0E00               	movlw	0
 13348  00386C  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13349  00386E  6FC0               	movwf	(__atof@str+1)& (0+255),b
 13350  003870  ECAF  F042         	call	__atof	;wreg free
 13351  003874  0100               	movlb	0	; () banked
 13352  003876  51DC               	movf	update_command@chno& (0+255),w,b
 13353  003878  0D04               	mullw	4
 13354  00387A  0E9A               	movlw	low (_g_nvm+33)
 13355  00387C  24F3               	addwf	243,w,c
 13356  00387E  6ED9               	movwf	fsr2l,c
 13357  003880  0E01               	movlw	high (_g_nvm+33)
 13358  003882  20F4               	addwfc	prodh,w,c
 13359  003884  6EDA               	movwf	fsr2h,c
 13360  003886  C0BF  FFDE         	movff	?__atof,postinc2
 13361  00388A  C0C0  FFDE         	movff	?__atof+1,postinc2
 13362  00388E  C0C1  FFDE         	movff	?__atof+2,postinc2
 13363  003892  C0C2  FFDE         	movff	?__atof+3,postinc2
 13364  003896                     
 13365                           ; BSR set to: 0
 13366                           ;app_atcommand.c: 403: g_nvm.flash.span_uV[chno] = Last_value.toxic_gas[chno][LV_GAS_VOL
      +                          T];
 13367  003896  51DC               	movf	update_command@chno& (0+255),w,b
 13368  003898  0D08               	mullw	8
 13369  00389A  0E26               	movlw	low _Last_value
 13370  00389C  24F3               	addwf	243,w,c
 13371  00389E  6ED9               	movwf	fsr2l,c
 13372  0038A0  0E02               	movlw	high _Last_value
 13373  0038A2  20F4               	addwfc	prodh,w,c
 13374  0038A4  6EDA               	movwf	fsr2h,c
 13375  0038A6  51DC               	movf	update_command@chno& (0+255),w,b
 13376  0038A8  0D04               	mullw	4
 13377  0038AA  0E8E               	movlw	low (_g_nvm+21)
 13378  0038AC  24F3               	addwf	243,w,c
 13379  0038AE  6EE1               	movwf	fsr1l,c
 13380  0038B0  0E01               	movlw	high (_g_nvm+21)
 13381  0038B2  20F4               	addwfc	prodh,w,c
 13382  0038B4  6EE2               	movwf	fsr1h,c
 13383  0038B6  CFDE FFE6          	movff	postinc2,postinc1
 13384  0038BA  CFDE FFE6          	movff	postinc2,postinc1
 13385  0038BE  CFDE FFE6          	movff	postinc2,postinc1
 13386  0038C2  CFDE FFE6          	movff	postinc2,postinc1
 13387  0038C6                     
 13388                           ; BSR set to: 0
 13389                           ;app_atcommand.c: 404: if (chno == 0 || chno == 2) {
 13390  0038C6  51DC               	movf	update_command@chno& (0+255),w,b
 13391  0038C8  B4D8               	btfsc	status,2,c
 13392  0038CA  EF69  F01C         	goto	u20391
 13393  0038CE  EF6B  F01C         	goto	u20390
 13394  0038D2                     u20391:
 13395  0038D2  EF74  F01C         	goto	l18768
 13396  0038D6                     u20390:
 13397  0038D6                     
 13398                           ; BSR set to: 0
 13399  0038D6  0E02               	movlw	2
 13400  0038D8  19DC               	xorwf	update_command@chno& (0+255),w,b
 13401  0038DA  A4D8               	btfss	status,2,c
 13402  0038DC  EF72  F01C         	goto	u20401
 13403  0038E0  EF74  F01C         	goto	u20400
 13404  0038E4                     u20401:
 13405  0038E4  EF97  F01C         	goto	l18772
 13406  0038E8                     u20400:
 13407  0038E8                     l18768:
 13408                           
 13409                           ; BSR set to: 0
 13410                           ;app_atcommand.c: 405: if (g_nvm.flash.CalibrationGas[chno] != 0.0f)
 13411  0038E8  51DC               	movf	update_command@chno& (0+255),w,b
 13412  0038EA  0D04               	mullw	4
 13413  0038EC  0E9A               	movlw	low (_g_nvm+33)
 13414  0038EE  24F3               	addwf	243,w,c
 13415  0038F0  6ED9               	movwf	fsr2l,c
 13416  0038F2  0E01               	movlw	high (_g_nvm+33)
 13417  0038F4  20F4               	addwfc	prodh,w,c
 13418  0038F6  6EDA               	movwf	fsr2h,c
 13419  0038F8  CFDE F035          	movff	postinc2,___fleq@ff1
 13420  0038FC  CFDE F036          	movff	postinc2,___fleq@ff1+1
 13421  003900  CFDE F037          	movff	postinc2,___fleq@ff1+2
 13422  003904  CFDE F038          	movff	postinc2,___fleq@ff1+3
 13423  003908  0E00               	movlw	0
 13424  00390A  6E39               	movwf	___fleq@ff2^0,c
 13425  00390C  0E00               	movlw	0
 13426  00390E  6E3A               	movwf	(___fleq@ff2+1)^0,c
 13427  003910  0E00               	movlw	0
 13428  003912  6E3B               	movwf	(___fleq@ff2+2)^0,c
 13429  003914  0E00               	movlw	0
 13430  003916  6E3C               	movwf	(___fleq@ff2+3)^0,c
 13431  003918  EC94  F067         	call	___fleq	;wreg free
 13432  00391C  B0D8               	btfsc	status,0,c
 13433  00391E  EF93  F01C         	goto	u20411
 13434  003922  EF95  F01C         	goto	u20410
 13435  003926                     u20411:
 13436  003926  EF91  F01F         	goto	l18832
 13437  00392A                     u20410:
 13438  00392A  EF73  F01B         	goto	l18752
 13439  00392E                     l18772:
 13440                           
 13441                           ; BSR set to: 0
 13442                           ;app_atcommand.c: 408: g_nvm.flash.gas_slope[chno] = (g_nvm.flash.baseLine_uV[chno] - g_
      +                          nvm.flash.span_uV[chno]) / (20.8f - g_nvm.flash.CalibrationGas[chno]);
 13443  00392E  51DC               	movf	update_command@chno& (0+255),w,b
 13444  003930  0D04               	mullw	4
 13445  003932  0E8E               	movlw	low (_g_nvm+21)
 13446  003934  24F3               	addwf	243,w,c
 13447  003936  6ED9               	movwf	fsr2l,c
 13448  003938  0E01               	movlw	high (_g_nvm+21)
 13449  00393A  20F4               	addwfc	prodh,w,c
 13450  00393C  6EDA               	movwf	fsr2h,c
 13451  00393E  CFDE F0A2          	movff	postinc2,___flsub@a
 13452  003942  CFDE F0A3          	movff	postinc2,___flsub@a+1
 13453  003946  CFDE F0A4          	movff	postinc2,___flsub@a+2
 13454  00394A  CFDE F0A5          	movff	postinc2,___flsub@a+3
 13455  00394E  51DC               	movf	update_command@chno& (0+255),w,b
 13456  003950  0D04               	mullw	4
 13457  003952  0E82               	movlw	low (_g_nvm+9)
 13458  003954  24F3               	addwf	243,w,c
 13459  003956  6ED9               	movwf	fsr2l,c
 13460  003958  0E01               	movlw	high (_g_nvm+9)
 13461  00395A  20F4               	addwfc	prodh,w,c
 13462  00395C  6EDA               	movwf	fsr2h,c
 13463  00395E  CFDE F09E          	movff	postinc2,___flsub@b
 13464  003962  CFDE F09F          	movff	postinc2,___flsub@b+1
 13465  003966  CFDE F0A0          	movff	postinc2,___flsub@b+2
 13466  00396A  CFDE F0A1          	movff	postinc2,___flsub@b+3
 13467  00396E  EC9C  F074         	call	___flsub	;wreg free
 13468  003972  C09E  F0A6         	movff	?___flsub,___fldiv@b
 13469  003976  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
 13470  00397A  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
 13471  00397E  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
 13472  003982  0100               	movlb	0	; () banked
 13473  003984  51DC               	movf	update_command@chno& (0+255),w,b
 13474  003986  0D04               	mullw	4
 13475  003988  0E9A               	movlw	low (_g_nvm+33)
 13476  00398A  24F3               	addwf	243,w,c
 13477  00398C  6ED9               	movwf	fsr2l,c
 13478  00398E  0E01               	movlw	high (_g_nvm+33)
 13479  003990  20F4               	addwfc	prodh,w,c
 13480  003992  6EDA               	movwf	fsr2h,c
 13481  003994  CFDE F0A2          	movff	postinc2,___flsub@a
 13482  003998  CFDE F0A3          	movff	postinc2,___flsub@a+1
 13483  00399C  CFDE F0A4          	movff	postinc2,___flsub@a+2
 13484  0039A0  CFDE F0A5          	movff	postinc2,___flsub@a+3
 13485  0039A4  0E66               	movlw	102
 13486  0039A6  6F9E               	movwf	___flsub@b& (0+255),b
 13487  0039A8  0E66               	movlw	102
 13488  0039AA  6F9F               	movwf	(___flsub@b+1)& (0+255),b
 13489  0039AC  0EA6               	movlw	166
 13490  0039AE  6FA0               	movwf	(___flsub@b+2)& (0+255),b
 13491  0039B0  0E41               	movlw	65
 13492  0039B2  6FA1               	movwf	(___flsub@b+3)& (0+255),b
 13493  0039B4  EC9C  F074         	call	___flsub	;wreg free
 13494  0039B8  C09E  F0AA         	movff	?___flsub,___fldiv@a
 13495  0039BC  C09F  F0AB         	movff	?___flsub+1,___fldiv@a+1
 13496  0039C0  C0A0  F0AC         	movff	?___flsub+2,___fldiv@a+2
 13497  0039C4  C0A1  F0AD         	movff	?___flsub+3,___fldiv@a+3
 13498  0039C8  ECCB  F033         	call	___fldiv	;wreg free
 13499  0039CC  0100               	movlb	0	; () banked
 13500  0039CE  51DC               	movf	update_command@chno& (0+255),w,b
 13501  0039D0  0D04               	mullw	4
 13502  0039D2  0EA6               	movlw	low (_g_nvm+45)
 13503  0039D4  24F3               	addwf	243,w,c
 13504  0039D6  6ED9               	movwf	fsr2l,c
 13505  0039D8  0E01               	movlw	high (_g_nvm+45)
 13506  0039DA  20F4               	addwfc	prodh,w,c
 13507  0039DC  6EDA               	movwf	fsr2h,c
 13508  0039DE  C0A6  FFDE         	movff	?___fldiv,postinc2
 13509  0039E2  C0A7  FFDE         	movff	?___fldiv+1,postinc2
 13510  0039E6  C0A8  FFDE         	movff	?___fldiv+2,postinc2
 13511  0039EA  C0A9  FFDE         	movff	?___fldiv+3,postinc2
 13512  0039EE  EF91  F01F         	goto	l18832
 13513  0039F2                     l913:
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;app_atcommand.c: 411: {;app_atcommand.c: 412: g_nvm.flash.baseLine_uV[0] = Last_value.t
      +                          oxic_gas[0][LV_GAS_VOLT];
 13517  0039F2  C226  F182         	movff	_Last_value,_g_nvm+9
 13518  0039F6  C227  F183         	movff	_Last_value+1,_g_nvm+10
 13519  0039FA  C228  F184         	movff	_Last_value+2,_g_nvm+11
 13520  0039FE  C229  F185         	movff	_Last_value+3,_g_nvm+12
 13521                           
 13522                           ;app_atcommand.c: 413: g_nvm.flash.baseLine_uV[1] = Last_value.toxic_gas[1][LV_GAS_VOLT]
      +                          ;
 13523  003A02  C22E  F186         	movff	_Last_value+8,_g_nvm+13
 13524  003A06  C22F  F187         	movff	_Last_value+9,_g_nvm+14
 13525  003A0A  C230  F188         	movff	_Last_value+10,_g_nvm+15
 13526  003A0E  C231  F189         	movff	_Last_value+11,_g_nvm+16
 13527                           
 13528                           ;app_atcommand.c: 414: g_nvm.flash.baseLine_uV[2] = Last_value.toxic_gas[2][LV_GAS_VOLT]
      +                          ;
 13529  003A12  C236  F18A         	movff	_Last_value+16,_g_nvm+17
 13530  003A16  C237  F18B         	movff	_Last_value+17,_g_nvm+18
 13531  003A1A  C238  F18C         	movff	_Last_value+18,_g_nvm+19
 13532  003A1E  C239  F18D         	movff	_Last_value+19,_g_nvm+20
 13533  003A22                     
 13534                           ; BSR set to: 0
 13535                           ;app_atcommand.c: 415: if (g_nvm.flash.CalibrationGas[0] != 0.0f)
 13536  003A22  C19A  F035         	movff	_g_nvm+33,___fleq@ff1
 13537  003A26  C19B  F036         	movff	_g_nvm+34,___fleq@ff1+1
 13538  003A2A  C19C  F037         	movff	_g_nvm+35,___fleq@ff1+2
 13539  003A2E  C19D  F038         	movff	_g_nvm+36,___fleq@ff1+3
 13540  003A32  0E00               	movlw	0
 13541  003A34  6E39               	movwf	___fleq@ff2^0,c
 13542  003A36  0E00               	movlw	0
 13543  003A38  6E3A               	movwf	(___fleq@ff2+1)^0,c
 13544  003A3A  0E00               	movlw	0
 13545  003A3C  6E3B               	movwf	(___fleq@ff2+2)^0,c
 13546  003A3E  0E00               	movlw	0
 13547  003A40  6E3C               	movwf	(___fleq@ff2+3)^0,c
 13548  003A42  EC94  F067         	call	___fleq	;wreg free
 13549  003A46  B0D8               	btfsc	status,0,c
 13550  003A48  EF28  F01D         	goto	u20421
 13551  003A4C  EF2A  F01D         	goto	u20420
 13552  003A50                     u20421:
 13553  003A50  EF56  F01D         	goto	l914
 13554  003A54                     u20420:
 13555  003A54                     
 13556                           ;app_atcommand.c: 416: g_nvm.flash.gas_slope[0] = (g_nvm.flash.span_uV[0] - g_nvm.flash.
      +                          baseLine_uV[0]) / g_nvm.flash.CalibrationGas[0];
 13557  003A54  C182  F0A2         	movff	_g_nvm+9,___flsub@a
 13558  003A58  C183  F0A3         	movff	_g_nvm+10,___flsub@a+1
 13559  003A5C  C184  F0A4         	movff	_g_nvm+11,___flsub@a+2
 13560  003A60  C185  F0A5         	movff	_g_nvm+12,___flsub@a+3
 13561  003A64  C18E  F09E         	movff	_g_nvm+21,___flsub@b
 13562  003A68  C18F  F09F         	movff	_g_nvm+22,___flsub@b+1
 13563  003A6C  C190  F0A0         	movff	_g_nvm+23,___flsub@b+2
 13564  003A70  C191  F0A1         	movff	_g_nvm+24,___flsub@b+3
 13565  003A74  EC9C  F074         	call	___flsub	;wreg free
 13566  003A78  C09E  F0A6         	movff	?___flsub,___fldiv@b
 13567  003A7C  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
 13568  003A80  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
 13569  003A84  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
 13570  003A88  C19A  F0AA         	movff	_g_nvm+33,___fldiv@a
 13571  003A8C  C19B  F0AB         	movff	_g_nvm+34,___fldiv@a+1
 13572  003A90  C19C  F0AC         	movff	_g_nvm+35,___fldiv@a+2
 13573  003A94  C19D  F0AD         	movff	_g_nvm+36,___fldiv@a+3
 13574  003A98  ECCB  F033         	call	___fldiv	;wreg free
 13575  003A9C  C0A6  F1A6         	movff	?___fldiv,_g_nvm+45
 13576  003AA0  C0A7  F1A7         	movff	?___fldiv+1,_g_nvm+46
 13577  003AA4  C0A8  F1A8         	movff	?___fldiv+2,_g_nvm+47
 13578  003AA8  C0A9  F1A9         	movff	?___fldiv+3,_g_nvm+48
 13579  003AAC                     l914:
 13580                           
 13581                           ;app_atcommand.c: 417: if (g_nvm.flash.CalibrationGas[2] != 0.0f)
 13582  003AAC  C1A2  F035         	movff	_g_nvm+41,___fleq@ff1
 13583  003AB0  C1A3  F036         	movff	_g_nvm+42,___fleq@ff1+1
 13584  003AB4  C1A4  F037         	movff	_g_nvm+43,___fleq@ff1+2
 13585  003AB8  C1A5  F038         	movff	_g_nvm+44,___fleq@ff1+3
 13586  003ABC  0E00               	movlw	0
 13587  003ABE  6E39               	movwf	___fleq@ff2^0,c
 13588  003AC0  0E00               	movlw	0
 13589  003AC2  6E3A               	movwf	(___fleq@ff2+1)^0,c
 13590  003AC4  0E00               	movlw	0
 13591  003AC6  6E3B               	movwf	(___fleq@ff2+2)^0,c
 13592  003AC8  0E00               	movlw	0
 13593  003ACA  6E3C               	movwf	(___fleq@ff2+3)^0,c
 13594  003ACC  EC94  F067         	call	___fleq	;wreg free
 13595  003AD0  B0D8               	btfsc	status,0,c
 13596  003AD2  EF6D  F01D         	goto	u20431
 13597  003AD6  EF6F  F01D         	goto	u20430
 13598  003ADA                     u20431:
 13599  003ADA  EF9B  F01D         	goto	l915
 13600  003ADE                     u20430:
 13601  003ADE                     
 13602                           ;app_atcommand.c: 418: g_nvm.flash.gas_slope[2] = (g_nvm.flash.span_uV[2] - g_nvm.flash.
      +                          baseLine_uV[2]) / g_nvm.flash.CalibrationGas[2];
 13603  003ADE  C18A  F0A2         	movff	_g_nvm+17,___flsub@a
 13604  003AE2  C18B  F0A3         	movff	_g_nvm+18,___flsub@a+1
 13605  003AE6  C18C  F0A4         	movff	_g_nvm+19,___flsub@a+2
 13606  003AEA  C18D  F0A5         	movff	_g_nvm+20,___flsub@a+3
 13607  003AEE  C196  F09E         	movff	_g_nvm+29,___flsub@b
 13608  003AF2  C197  F09F         	movff	_g_nvm+30,___flsub@b+1
 13609  003AF6  C198  F0A0         	movff	_g_nvm+31,___flsub@b+2
 13610  003AFA  C199  F0A1         	movff	_g_nvm+32,___flsub@b+3
 13611  003AFE  EC9C  F074         	call	___flsub	;wreg free
 13612  003B02  C09E  F0A6         	movff	?___flsub,___fldiv@b
 13613  003B06  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
 13614  003B0A  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
 13615  003B0E  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
 13616  003B12  C1A2  F0AA         	movff	_g_nvm+41,___fldiv@a
 13617  003B16  C1A3  F0AB         	movff	_g_nvm+42,___fldiv@a+1
 13618  003B1A  C1A4  F0AC         	movff	_g_nvm+43,___fldiv@a+2
 13619  003B1E  C1A5  F0AD         	movff	_g_nvm+44,___fldiv@a+3
 13620  003B22  ECCB  F033         	call	___fldiv	;wreg free
 13621  003B26  C0A6  F1AE         	movff	?___fldiv,_g_nvm+53
 13622  003B2A  C0A7  F1AF         	movff	?___fldiv+1,_g_nvm+54
 13623  003B2E  C0A8  F1B0         	movff	?___fldiv+2,_g_nvm+55
 13624  003B32  C0A9  F1B1         	movff	?___fldiv+3,_g_nvm+56
 13625  003B36                     l915:
 13626                           
 13627                           ;app_atcommand.c: 419: g_nvm.flash.gas_slope[1] = (g_nvm.flash.baseLine_uV[1] - g_nvm.fl
      +                          ash.span_uV[1]) / (20.8f - g_nvm.flash.CalibrationGas[1]);
 13628  003B36  C192  F0A2         	movff	_g_nvm+25,___flsub@a
 13629  003B3A  C193  F0A3         	movff	_g_nvm+26,___flsub@a+1
 13630  003B3E  C194  F0A4         	movff	_g_nvm+27,___flsub@a+2
 13631  003B42  C195  F0A5         	movff	_g_nvm+28,___flsub@a+3
 13632  003B46  C186  F09E         	movff	_g_nvm+13,___flsub@b
 13633  003B4A  C187  F09F         	movff	_g_nvm+14,___flsub@b+1
 13634  003B4E  C188  F0A0         	movff	_g_nvm+15,___flsub@b+2
 13635  003B52  C189  F0A1         	movff	_g_nvm+16,___flsub@b+3
 13636  003B56  EC9C  F074         	call	___flsub	;wreg free
 13637  003B5A  C09E  F0A6         	movff	?___flsub,___fldiv@b
 13638  003B5E  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
 13639  003B62  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
 13640  003B66  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
 13641  003B6A  C19E  F0A2         	movff	_g_nvm+37,___flsub@a
 13642  003B6E  C19F  F0A3         	movff	_g_nvm+38,___flsub@a+1
 13643  003B72  C1A0  F0A4         	movff	_g_nvm+39,___flsub@a+2
 13644  003B76  C1A1  F0A5         	movff	_g_nvm+40,___flsub@a+3
 13645  003B7A  0E66               	movlw	102
 13646  003B7C  0100               	movlb	0	; () banked
 13647  003B7E  6F9E               	movwf	___flsub@b& (0+255),b
 13648  003B80  0E66               	movlw	102
 13649  003B82  6F9F               	movwf	(___flsub@b+1)& (0+255),b
 13650  003B84  0EA6               	movlw	166
 13651  003B86  6FA0               	movwf	(___flsub@b+2)& (0+255),b
 13652  003B88  0E41               	movlw	65
 13653  003B8A  6FA1               	movwf	(___flsub@b+3)& (0+255),b
 13654  003B8C  EC9C  F074         	call	___flsub	;wreg free
 13655  003B90  C09E  F0AA         	movff	?___flsub,___fldiv@a
 13656  003B94  C09F  F0AB         	movff	?___flsub+1,___fldiv@a+1
 13657  003B98  C0A0  F0AC         	movff	?___flsub+2,___fldiv@a+2
 13658  003B9C  C0A1  F0AD         	movff	?___flsub+3,___fldiv@a+3
 13659  003BA0  ECCB  F033         	call	___fldiv	;wreg free
 13660  003BA4  C0A6  F1AA         	movff	?___fldiv,_g_nvm+49
 13661  003BA8  C0A7  F1AB         	movff	?___fldiv+1,_g_nvm+50
 13662  003BAC  C0A8  F1AC         	movff	?___fldiv+2,_g_nvm+51
 13663  003BB0  C0A9  F1AD         	movff	?___fldiv+3,_g_nvm+52
 13664  003BB4                     
 13665                           ;app_atcommand.c: 420: g_nvm.flash.calib_temp = Last_value.tempHumi[CMP_TEMP];
 13666  003BB4  C248  F1CA         	movff	_Last_value+34,_g_nvm+81
 13667  003BB8  C249  F1CB         	movff	_Last_value+35,_g_nvm+82
 13668  003BBC  C24A  F1CC         	movff	_Last_value+36,_g_nvm+83
 13669  003BC0  C24B  F1CD         	movff	_Last_value+37,_g_nvm+84
 13670  003BC4  EF26  F01C         	goto	l18756
 13671  003BC8                     l18784:
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;app_atcommand.c: 424: if (chno >= 0 && chno <= 2) {
 13675  003BC8  0E03               	movlw	3
 13676  003BCA  61DC               	cpfslt	update_command@chno& (0+255),b
 13677  003BCC  EFEA  F01D         	goto	u20441
 13678  003BD0  EFEC  F01D         	goto	u20440
 13679  003BD4                     u20441:
 13680  003BD4  EF91  F01F         	goto	l18832
 13681  003BD8                     u20440:
 13682  003BD8                     
 13683                           ; BSR set to: 0
 13684                           ;app_atcommand.c: 425: g_nvm.flash.baseLine_uV[chno] = Last_value.toxic_gas[chno][LV_GAS
      +                          _VOLT];
 13685  003BD8  51DC               	movf	update_command@chno& (0+255),w,b
 13686  003BDA  0D08               	mullw	8
 13687  003BDC  0E26               	movlw	low _Last_value
 13688  003BDE  24F3               	addwf	243,w,c
 13689  003BE0  6ED9               	movwf	fsr2l,c
 13690  003BE2  0E02               	movlw	high _Last_value
 13691  003BE4  20F4               	addwfc	prodh,w,c
 13692  003BE6  6EDA               	movwf	fsr2h,c
 13693  003BE8  51DC               	movf	update_command@chno& (0+255),w,b
 13694  003BEA  0D04               	mullw	4
 13695  003BEC  0E82               	movlw	low (_g_nvm+9)
 13696  003BEE  24F3               	addwf	243,w,c
 13697  003BF0  6EE1               	movwf	fsr1l,c
 13698  003BF2  0E01               	movlw	high (_g_nvm+9)
 13699  003BF4  20F4               	addwfc	prodh,w,c
 13700  003BF6  6EE2               	movwf	fsr1h,c
 13701  003BF8  CFDE FFE6          	movff	postinc2,postinc1
 13702  003BFC  CFDE FFE6          	movff	postinc2,postinc1
 13703  003C00  CFDE FFE6          	movff	postinc2,postinc1
 13704  003C04  CFDE FFE6          	movff	postinc2,postinc1
 13705  003C08                     
 13706                           ; BSR set to: 0
 13707                           ;app_atcommand.c: 426: g_nvm.flash.calib_temp = Last_value.tempHumi[CMP_TEMP];
 13708  003C08  C248  F1CA         	movff	_Last_value+34,_g_nvm+81
 13709  003C0C  C249  F1CB         	movff	_Last_value+35,_g_nvm+82
 13710  003C10  C24A  F1CC         	movff	_Last_value+36,_g_nvm+83
 13711  003C14  C24B  F1CD         	movff	_Last_value+37,_g_nvm+84
 13712  003C18                     
 13713                           ; BSR set to: 0
 13714                           ;app_atcommand.c: 427: if (chno == 0 || chno == 2) {
 13715  003C18  51DC               	movf	update_command@chno& (0+255),w,b
 13716  003C1A  B4D8               	btfsc	status,2,c
 13717  003C1C  EF12  F01E         	goto	u20451
 13718  003C20  EF14  F01E         	goto	u20450
 13719  003C24                     u20451:
 13720  003C24  EF1D  F01E         	goto	l18794
 13721  003C28                     u20450:
 13722  003C28                     
 13723                           ; BSR set to: 0
 13724  003C28  0E02               	movlw	2
 13725  003C2A  19DC               	xorwf	update_command@chno& (0+255),w,b
 13726  003C2C  A4D8               	btfss	status,2,c
 13727  003C2E  EF1B  F01E         	goto	u20461
 13728  003C32  EF1D  F01E         	goto	u20460
 13729  003C36                     u20461:
 13730  003C36  EF40  F01E         	goto	l18798
 13731  003C3A                     u20460:
 13732  003C3A                     l18794:
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;app_atcommand.c: 428: if (g_nvm.flash.CalibrationGas[chno] != 0.0f)
 13736  003C3A  51DC               	movf	update_command@chno& (0+255),w,b
 13737  003C3C  0D04               	mullw	4
 13738  003C3E  0E9A               	movlw	low (_g_nvm+33)
 13739  003C40  24F3               	addwf	243,w,c
 13740  003C42  6ED9               	movwf	fsr2l,c
 13741  003C44  0E01               	movlw	high (_g_nvm+33)
 13742  003C46  20F4               	addwfc	prodh,w,c
 13743  003C48  6EDA               	movwf	fsr2h,c
 13744  003C4A  CFDE F035          	movff	postinc2,___fleq@ff1
 13745  003C4E  CFDE F036          	movff	postinc2,___fleq@ff1+1
 13746  003C52  CFDE F037          	movff	postinc2,___fleq@ff1+2
 13747  003C56  CFDE F038          	movff	postinc2,___fleq@ff1+3
 13748  003C5A  0E00               	movlw	0
 13749  003C5C  6E39               	movwf	___fleq@ff2^0,c
 13750  003C5E  0E00               	movlw	0
 13751  003C60  6E3A               	movwf	(___fleq@ff2+1)^0,c
 13752  003C62  0E00               	movlw	0
 13753  003C64  6E3B               	movwf	(___fleq@ff2+2)^0,c
 13754  003C66  0E00               	movlw	0
 13755  003C68  6E3C               	movwf	(___fleq@ff2+3)^0,c
 13756  003C6A  EC94  F067         	call	___fleq	;wreg free
 13757  003C6E  B0D8               	btfsc	status,0,c
 13758  003C70  EF3C  F01E         	goto	u20471
 13759  003C74  EF3E  F01E         	goto	u20470
 13760  003C78                     u20471:
 13761  003C78  EF91  F01F         	goto	l18832
 13762  003C7C                     u20470:
 13763  003C7C  EF73  F01B         	goto	l18752
 13764  003C80                     l18798:
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;app_atcommand.c: 431: g_nvm.flash.gas_slope[chno] = (g_nvm.flash.baseLine_uV[chno] - g_
      +                          nvm.flash.span_uV[chno]) / (20.8f - g_nvm.flash.CalibrationGas[chno]);
 13768  003C80  51DC               	movf	update_command@chno& (0+255),w,b
 13769  003C82  0D04               	mullw	4
 13770  003C84  0E8E               	movlw	low (_g_nvm+21)
 13771  003C86  24F3               	addwf	243,w,c
 13772  003C88  6ED9               	movwf	fsr2l,c
 13773  003C8A  0E01               	movlw	high (_g_nvm+21)
 13774  003C8C  20F4               	addwfc	prodh,w,c
 13775  003C8E  6EDA               	movwf	fsr2h,c
 13776  003C90  CFDE F0A2          	movff	postinc2,___flsub@a
 13777  003C94  CFDE F0A3          	movff	postinc2,___flsub@a+1
 13778  003C98  CFDE F0A4          	movff	postinc2,___flsub@a+2
 13779  003C9C  CFDE F0A5          	movff	postinc2,___flsub@a+3
 13780  003CA0  51DC               	movf	update_command@chno& (0+255),w,b
 13781  003CA2  0D04               	mullw	4
 13782  003CA4  0E82               	movlw	low (_g_nvm+9)
 13783  003CA6  24F3               	addwf	243,w,c
 13784  003CA8  6ED9               	movwf	fsr2l,c
 13785  003CAA  0E01               	movlw	high (_g_nvm+9)
 13786  003CAC  20F4               	addwfc	prodh,w,c
 13787  003CAE  6EDA               	movwf	fsr2h,c
 13788  003CB0  CFDE F09E          	movff	postinc2,___flsub@b
 13789  003CB4  CFDE F09F          	movff	postinc2,___flsub@b+1
 13790  003CB8  CFDE F0A0          	movff	postinc2,___flsub@b+2
 13791  003CBC  CFDE F0A1          	movff	postinc2,___flsub@b+3
 13792  003CC0  EC9C  F074         	call	___flsub	;wreg free
 13793  003CC4  C09E  F0A6         	movff	?___flsub,___fldiv@b
 13794  003CC8  C09F  F0A7         	movff	?___flsub+1,___fldiv@b+1
 13795  003CCC  C0A0  F0A8         	movff	?___flsub+2,___fldiv@b+2
 13796  003CD0  C0A1  F0A9         	movff	?___flsub+3,___fldiv@b+3
 13797  003CD4  0100               	movlb	0	; () banked
 13798  003CD6  51DC               	movf	update_command@chno& (0+255),w,b
 13799  003CD8  0D04               	mullw	4
 13800  003CDA  0E9A               	movlw	low (_g_nvm+33)
 13801  003CDC  24F3               	addwf	243,w,c
 13802  003CDE  6ED9               	movwf	fsr2l,c
 13803  003CE0  0E01               	movlw	high (_g_nvm+33)
 13804  003CE2  20F4               	addwfc	prodh,w,c
 13805  003CE4  6EDA               	movwf	fsr2h,c
 13806  003CE6  CFDE F0A2          	movff	postinc2,___flsub@a
 13807  003CEA  CFDE F0A3          	movff	postinc2,___flsub@a+1
 13808  003CEE  CFDE F0A4          	movff	postinc2,___flsub@a+2
 13809  003CF2  CFDE F0A5          	movff	postinc2,___flsub@a+3
 13810  003CF6  0E66               	movlw	102
 13811  003CF8  6F9E               	movwf	___flsub@b& (0+255),b
 13812  003CFA  0E66               	movlw	102
 13813  003CFC  6F9F               	movwf	(___flsub@b+1)& (0+255),b
 13814  003CFE  0EA6               	movlw	166
 13815  003D00  6FA0               	movwf	(___flsub@b+2)& (0+255),b
 13816  003D02  0E41               	movlw	65
 13817  003D04  6FA1               	movwf	(___flsub@b+3)& (0+255),b
 13818  003D06  EC9C  F074         	call	___flsub	;wreg free
 13819  003D0A  C09E  F0AA         	movff	?___flsub,___fldiv@a
 13820  003D0E  C09F  F0AB         	movff	?___flsub+1,___fldiv@a+1
 13821  003D12  C0A0  F0AC         	movff	?___flsub+2,___fldiv@a+2
 13822  003D16  C0A1  F0AD         	movff	?___flsub+3,___fldiv@a+3
 13823  003D1A  ECCB  F033         	call	___fldiv	;wreg free
 13824  003D1E  0100               	movlb	0	; () banked
 13825  003D20  51DC               	movf	update_command@chno& (0+255),w,b
 13826  003D22  0D04               	mullw	4
 13827  003D24  0EA6               	movlw	low (_g_nvm+45)
 13828  003D26  24F3               	addwf	243,w,c
 13829  003D28  6ED9               	movwf	fsr2l,c
 13830  003D2A  0E01               	movlw	high (_g_nvm+45)
 13831  003D2C  20F4               	addwfc	prodh,w,c
 13832  003D2E  6EDA               	movwf	fsr2h,c
 13833  003D30  C0A6  FFDE         	movff	?___fldiv,postinc2
 13834  003D34  C0A7  FFDE         	movff	?___fldiv+1,postinc2
 13835  003D38  C0A8  FFDE         	movff	?___fldiv+2,postinc2
 13836  003D3C  C0A9  FFDE         	movff	?___fldiv+3,postinc2
 13837  003D40  EF91  F01F         	goto	l18832
 13838  003D44                     l18800:
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;app_atcommand.c: 434: if (chno >= 0 && chno <= 3) {
 13842  003D44  0E04               	movlw	4
 13843  003D46  61DC               	cpfslt	update_command@chno& (0+255),b
 13844  003D48  EFA8  F01E         	goto	u20481
 13845  003D4C  EFAA  F01E         	goto	u20480
 13846  003D50                     u20481:
 13847  003D50  EF91  F01F         	goto	l18832
 13848  003D54                     u20480:
 13849  003D54                     
 13850                           ; BSR set to: 0
 13851                           ;app_atcommand.c: 435: apply = (uint8_t)_atoi(status->apply_params);
 13852  003D54  0E0F               	movlw	15
 13853  003D56  25D3               	addwf	update_command@status& (0+255),w,b
 13854  003D58  6E1B               	movwf	__atoi@str^0,c
 13855  003D5A  0E00               	movlw	0
 13856  003D5C  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13857  003D5E  6E1C               	movwf	(__atoi@str+1)^0,c
 13858  003D60  EC6B  F053         	call	__atoi	;wreg free
 13859  003D64  501B               	movf	?__atoi^0,w,c
 13860  003D66  0100               	movlb	0	; () banked
 13861  003D68  6FDB               	movwf	update_command@apply& (0+255),b
 13862  003D6A                     
 13863                           ; BSR set to: 0
 13864                           ;app_atcommand.c: 436: if (apply >= LEVEL_1 && apply <= LEVEL_15) {
 13865  003D6A  51DB               	movf	update_command@apply& (0+255),w,b
 13866  003D6C  B4D8               	btfsc	status,2,c
 13867  003D6E  EFBB  F01E         	goto	u20491
 13868  003D72  EFBD  F01E         	goto	u20490
 13869  003D76                     u20491:
 13870  003D76  EF91  F01F         	goto	l18832
 13871  003D7A                     u20490:
 13872  003D7A                     
 13873                           ; BSR set to: 0
 13874  003D7A  0E10               	movlw	16
 13875  003D7C  61DB               	cpfslt	update_command@apply& (0+255),b
 13876  003D7E  EFC3  F01E         	goto	u20501
 13877  003D82  EFC5  F01E         	goto	u20500
 13878  003D86                     u20501:
 13879  003D86  EF91  F01F         	goto	l18832
 13880  003D8A                     u20500:
 13881  003D8A                     
 13882                           ; BSR set to: 0
 13883                           ;app_atcommand.c: 437: g_nvm.flash.window_size[chno] = apply;
 13884  003D8A  0E7E               	movlw	low (_g_nvm+5)
 13885  003D8C  25DC               	addwf	update_command@chno& (0+255),w,b
 13886  003D8E  6ED9               	movwf	fsr2l,c
 13887  003D90  6ADA               	clrf	fsr2h,c
 13888  003D92  0E01               	movlw	high (_g_nvm+5)
 13889  003D94  22DA               	addwfc	fsr2h,f,c
 13890  003D96  C0DB  FFDF         	movff	update_command@apply,indf2
 13891  003D9A                     
 13892                           ; BSR set to: 0
 13893                           ;app_atcommand.c: 438: Set_KalmanFilter_Sensitivity(&kalmanFilter[chno], g_nvm.flash.win
      +                          dow_size[chno]);
 13894  003D9A  51DC               	movf	update_command@chno& (0+255),w,b
 13895  003D9C  0D18               	mullw	24
 13896  003D9E  0E50               	movlw	low _kalmanFilter
 13897  003DA0  24F3               	addwf	243,w,c
 13898  003DA2  6E15               	movwf	Set_KalmanFilter_Sensitivity@pObj^0,c
 13899  003DA4  0E02               	movlw	high _kalmanFilter
 13900  003DA6  20F4               	addwfc	prodh,w,c
 13901  003DA8  6E16               	movwf	(Set_KalmanFilter_Sensitivity@pObj+1)^0,c
 13902  003DAA  0E7E               	movlw	low (_g_nvm+5)
 13903  003DAC  25DC               	addwf	update_command@chno& (0+255),w,b
 13904  003DAE  6ED9               	movwf	fsr2l,c
 13905  003DB0  6ADA               	clrf	fsr2h,c
 13906  003DB2  0E01               	movlw	high (_g_nvm+5)
 13907  003DB4  22DA               	addwfc	fsr2h,f,c
 13908  003DB6  50DF               	movf	indf2,w,c
 13909  003DB8  6E17               	movwf	Set_KalmanFilter_Sensitivity@e_level^0,c
 13910  003DBA  EC2D  F046         	call	_Set_KalmanFilter_Sensitivity	;wreg free
 13911  003DBE  EF91  F01F         	goto	l18832
 13912  003DC2                     l18812:
 13913                           
 13914                           ; BSR set to: 0
 13915  003DC2  0E0F               	movlw	15
 13916  003DC4  25D3               	addwf	update_command@status& (0+255),w,b
 13917  003DC6  6E1B               	movwf	__atoi@str^0,c
 13918  003DC8  0E00               	movlw	0
 13919  003DCA  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13920  003DCC  6E1C               	movwf	(__atoi@str+1)^0,c
 13921  003DCE  EC6B  F053         	call	__atoi	;wreg free
 13922  003DD2  C01B  F1D6         	movff	?__atoi,_g_nvm+93
 13923  003DD6  C01C  F1D7         	movff	?__atoi+1,_g_nvm+94
 13924  003DDA  C01D  F1D8         	movff	?__atoi+2,_g_nvm+95
 13925  003DDE  C01E  F1D9         	movff	?__atoi+3,_g_nvm+96
 13926  003DE2  EF91  F01F         	goto	l18832
 13927  003DE6                     l18814:
 13928                           
 13929                           ; BSR set to: 0
 13930  003DE6  0E0F               	movlw	15
 13931  003DE8  25D3               	addwf	update_command@status& (0+255),w,b
 13932  003DEA  6E1B               	movwf	__atoi@str^0,c
 13933  003DEC  0E00               	movlw	0
 13934  003DEE  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13935  003DF0  6E1C               	movwf	(__atoi@str+1)^0,c
 13936  003DF2  EC6B  F053         	call	__atoi	;wreg free
 13937  003DF6  C01B  F1D2         	movff	?__atoi,_g_nvm+89
 13938  003DFA  C01C  F1D3         	movff	?__atoi+1,_g_nvm+90
 13939  003DFE  C01D  F1D4         	movff	?__atoi+2,_g_nvm+91
 13940  003E02  C01E  F1D5         	movff	?__atoi+3,_g_nvm+92
 13941  003E06  EF91  F01F         	goto	l18832
 13942  003E0A                     l18816:
 13943                           
 13944                           ; BSR set to: 0
 13945  003E0A  0E0F               	movlw	15
 13946  003E0C  25D3               	addwf	update_command@status& (0+255),w,b
 13947  003E0E  6E1B               	movwf	__atoi@str^0,c
 13948  003E10  0E00               	movlw	0
 13949  003E12  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13950  003E14  6E1C               	movwf	(__atoi@str+1)^0,c
 13951  003E16  EC6B  F053         	call	__atoi	;wreg free
 13952  003E1A  501B               	movf	?__atoi^0,w,c
 13953  003E1C  0100               	movlb	0	; () banked
 13954  003E1E  6FDB               	movwf	update_command@apply& (0+255),b
 13955  003E20                     
 13956                           ; BSR set to: 0
 13957                           ;app_atcommand.c: 444: if (apply >= OFF && apply <= ON) {
 13958  003E20  0E02               	movlw	2
 13959  003E22  61DB               	cpfslt	update_command@apply& (0+255),b
 13960  003E24  EF16  F01F         	goto	u20511
 13961  003E28  EF18  F01F         	goto	u20510
 13962  003E2C                     u20511:
 13963  003E2C  EF91  F01F         	goto	l18832
 13964  003E30                     u20510:
 13965  003E30                     
 13966                           ; BSR set to: 0
 13967                           ;app_atcommand.c: 445: g_nvm.flash.CO2_ABC = apply;
 13968  003E30  C0DB  F17D         	movff	update_command@apply,_g_nvm+4
 13969  003E34                     
 13970                           ; BSR set to: 0
 13971                           ;app_atcommand.c: 446: tes0902_ABC_OFF(g_nvm.flash.CO2_ABC);
 13972  003E34  0101               	movlb	1	; () banked
 13973  003E36  517D               	movf	(_g_nvm+4)& (0+255),w,b
 13974  003E38  ECC3  F078         	call	_tes0902_ABC_OFF
 13975  003E3C  EF91  F01F         	goto	l18832
 13976  003E40                     l18824:
 13977                           
 13978                           ; BSR set to: 0
 13979                           ;app_atcommand.c: 449: g_nvm.flash.KMf_e_measure = _atof(status->apply_params);
 13980  003E40  0E0F               	movlw	15
 13981  003E42  25D3               	addwf	update_command@status& (0+255),w,b
 13982  003E44  6FBF               	movwf	__atof@str& (0+255),b
 13983  003E46  0E00               	movlw	0
 13984  003E48  21D4               	addwfc	(update_command@status+1)& (0+255),w,b
 13985  003E4A  6FC0               	movwf	(__atof@str+1)& (0+255),b
 13986  003E4C  ECAF  F042         	call	__atof	;wreg free
 13987  003E50  C0BF  F1CE         	movff	?__atof,_g_nvm+85
 13988  003E54  C0C0  F1CF         	movff	?__atof+1,_g_nvm+86
 13989  003E58  C0C1  F1D0         	movff	?__atof+2,_g_nvm+87
 13990  003E5C  C0C2  F1D1         	movff	?__atof+3,_g_nvm+88
 13991  003E60                     
 13992                           ;app_atcommand.c: 450: Kalman_setMeasurementError(&kalmanFilter[1], g_nvm.flash.KMf_e_me
      +                          asure);
 13993  003E60  0E68               	movlw	low (_kalmanFilter+24)
 13994  003E62  6E0F               	movwf	Kalman_setMeasurementError@pObj^0,c
 13995  003E64  0E02               	movlw	high (_kalmanFilter+24)
 13996  003E66  6E10               	movwf	(Kalman_setMeasurementError@pObj+1)^0,c
 13997  003E68  C1CE  F011         	movff	_g_nvm+85,Kalman_setMeasurementError@mea_e
 13998  003E6C  C1CF  F012         	movff	_g_nvm+86,Kalman_setMeasurementError@mea_e+1
 13999  003E70  C1D0  F013         	movff	_g_nvm+87,Kalman_setMeasurementError@mea_e+2
 14000  003E74  C1D1  F014         	movff	_g_nvm+88,Kalman_setMeasurementError@mea_e+3
 14001  003E78  EC75  F078         	call	_Kalman_setMeasurementError	;wreg free
 14002                           
 14003                           ;app_atcommand.c: 451: break;
 14004  003E7C  EF91  F01F         	goto	l18832
 14005  003E80                     l18830:
 14006                           
 14007                           ; BSR set to: 0
 14008  003E80  EE20 F002          	lfsr	2,2
 14009  003E84  51D3               	movf	update_command@status& (0+255),w,b
 14010  003E86  26D9               	addwf	fsr2l,f,c
 14011  003E88  51D4               	movf	(update_command@status+1)& (0+255),w,b
 14012  003E8A  22DA               	addwfc	fsr2h,f,c
 14013  003E8C  50DF               	movf	indf2,w,c
 14014                           
 14015                           ; Switch size 1, requested type "simple"
 14016                           ; Number of cases is 18, Range of values is 3 to 25
 14017                           ; switch strategies available:
 14018                           ; Name         Instructions Cycles
 14019                           ; simple_byte           55    28 (average)
 14020                           ;	Chosen strategy is simple_byte
 14021  003E8E  0A03               	xorlw	3	; case 3
 14022  003E90  B4D8               	btfsc	status,2,c
 14023  003E92  EF92  F019         	goto	l18670
 14024  003E96  0A07               	xorlw	7	; case 4
 14025  003E98  B4D8               	btfsc	status,2,c
 14026  003E9A  EF96  F019         	goto	l18674
 14027  003E9E  0A0E               	xorlw	14	; case 10
 14028  003EA0  B4D8               	btfsc	status,2,c
 14029  003EA2  EF9A  F019         	goto	l18678
 14030  003EA6  0A01               	xorlw	1	; case 11
 14031  003EA8  B4D8               	btfsc	status,2,c
 14032  003EAA  EF05  F01F         	goto	l18816
 14033  003EAE  0A07               	xorlw	7	; case 12
 14034  003EB0  B4D8               	btfsc	status,2,c
 14035  003EB2  EF20  F01A         	goto	l18710
 14036  003EB6  0A01               	xorlw	1	; case 13
 14037  003EB8  B4D8               	btfsc	status,2,c
 14038  003EBA  EF25  F01A         	goto	l18712
 14039  003EBE  0A03               	xorlw	3	; case 14
 14040  003EC0  B4D8               	btfsc	status,2,c
 14041  003EC2  EFCA  F01A         	goto	l18738
 14042  003EC6  0A01               	xorlw	1	; case 15
 14043  003EC8  B4D8               	btfsc	status,2,c
 14044  003ECA  EF26  F01C         	goto	l18756
 14045  003ECE  0A1F               	xorlw	31	; case 16
 14046  003ED0  B4D8               	btfsc	status,2,c
 14047  003ED2  EFF9  F01C         	goto	l913
 14048  003ED6  0A01               	xorlw	1	; case 17
 14049  003ED8  B4D8               	btfsc	status,2,c
 14050  003EDA  EFE4  F01D         	goto	l18784
 14051  003EDE  0A03               	xorlw	3	; case 18
 14052  003EE0  B4D8               	btfsc	status,2,c
 14053  003EE2  EF2A  F01C         	goto	l18758
 14054  003EE6  0A01               	xorlw	1	; case 19
 14055  003EE8  B4D8               	btfsc	status,2,c
 14056  003EEA  EF2A  F01A         	goto	l18714
 14057  003EEE  0A07               	xorlw	7	; case 20
 14058  003EF0  B4D8               	btfsc	status,2,c
 14059  003EF2  EFF2  F019         	goto	l18698
 14060  003EF6  0A01               	xorlw	1	; case 21
 14061  003EF8  B4D8               	btfsc	status,2,c
 14062  003EFA  EF09  F01A         	goto	l18704
 14063  003EFE  0A03               	xorlw	3	; case 22
 14064  003F00  B4D8               	btfsc	status,2,c
 14065  003F02  EFA2  F01E         	goto	l18800
 14066  003F06  0A01               	xorlw	1	; case 23
 14067  003F08  B4D8               	btfsc	status,2,c
 14068  003F0A  EF20  F01F         	goto	l18824
 14069  003F0E  0A0F               	xorlw	15	; case 24
 14070  003F10  B4D8               	btfsc	status,2,c
 14071  003F12  EFE1  F01E         	goto	l18812
 14072  003F16  0A01               	xorlw	1	; case 25
 14073  003F18  B4D8               	btfsc	status,2,c
 14074  003F1A  EFF3  F01E         	goto	l18814
 14075  003F1E  EF91  F01F         	goto	l18832
 14076  003F22                     l18832:
 14077                           
 14078                           ;app_atcommand.c: 454: if (status->atcommand >= ATCSMODEL && status->atcommand <= ATCEXT
      +                          M)
 14079  003F22  0100               	movlb	0	; () banked
 14080  003F24  EE20 F002          	lfsr	2,2
 14081  003F28  51D3               	movf	update_command@status& (0+255),w,b
 14082  003F2A  26D9               	addwf	fsr2l,f,c
 14083  003F2C  51D4               	movf	(update_command@status+1)& (0+255),w,b
 14084  003F2E  22DA               	addwfc	fsr2h,f,c
 14085  003F30  0E09               	movlw	9
 14086  003F32  64DF               	cpfsgt	indf2,c
 14087  003F34  EF9E  F01F         	goto	u20521
 14088  003F38  EFA0  F01F         	goto	u20520
 14089  003F3C                     u20521:
 14090  003F3C  EFBE  F01F         	goto	l871
 14091  003F40                     u20520:
 14092  003F40                     
 14093                           ; BSR set to: 0
 14094  003F40  EE20 F002          	lfsr	2,2
 14095  003F44  51D3               	movf	update_command@status& (0+255),w,b
 14096  003F46  26D9               	addwf	fsr2l,f,c
 14097  003F48  51D4               	movf	(update_command@status+1)& (0+255),w,b
 14098  003F4A  22DA               	addwfc	fsr2h,f,c
 14099  003F4C  0E1A               	movlw	26
 14100  003F4E  60DF               	cpfslt	indf2,c
 14101  003F50  EFAC  F01F         	goto	u20531
 14102  003F54  EFAE  F01F         	goto	u20530
 14103  003F58                     u20531:
 14104  003F58  EFBE  F01F         	goto	l871
 14105  003F5C                     u20530:
 14106  003F5C                     
 14107                           ; BSR set to: 0
 14108                           ;app_atcommand.c: 455: status->last_update = nvm_write_flash_all(&g_nvm.flash);
 14109  003F5C  0E7A               	movlw	low (_g_nvm+1)
 14110  003F5E  6E1F               	movwf	nvm_write_flash_all@flash^0,c
 14111  003F60  0E01               	movlw	high (_g_nvm+1)
 14112  003F62  6E20               	movwf	(nvm_write_flash_all@flash+1)^0,c
 14113  003F64  EC2F  F074         	call	_nvm_write_flash_all	;wreg free
 14114  003F68  0100               	movlb	0	; () banked
 14115  003F6A  6FD5               	movwf	??_update_command& (0+255),b
 14116  003F6C  EE20 F001          	lfsr	2,1
 14117  003F70  51D3               	movf	update_command@status& (0+255),w,b
 14118  003F72  26D9               	addwf	fsr2l,f,c
 14119  003F74  51D4               	movf	(update_command@status+1)& (0+255),w,b
 14120  003F76  22DA               	addwfc	fsr2h,f,c
 14121  003F78  C0D5  FFDF         	movff	??_update_command,indf2
 14122  003F7C                     l871:
 14123  003F7C  0012               	return		;funcret
 14124  003F7E                     __end_of_update_command:
 14125                           	callstack 0
 14126                           
 14127 ;; *************** function _split_param *****************
 14128 ;; Defined at:
 14129 ;;		line 322 in file "app_atcommand.c"
 14130 ;; Parameters:    Size  Location     Type
 14131 ;;  src             2   18[COMRAM] PTR unsigned char 
 14132 ;;		 -> g_atcommand(242), 
 14133 ;;  params          2   20[COMRAM] PTR unsigned char 
 14134 ;;		 -> g_atcommand(242), 
 14135 ;;  m               1   22[COMRAM] unsigned char 
 14136 ;;  n               1   23[COMRAM] unsigned char 
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;  ch              1   27[COMRAM] unsigned char 
 14139 ;;  cnt             1   29[COMRAM] unsigned char 
 14140 ;;  i               1   28[COMRAM] unsigned char 
 14141 ;;  len             1   26[COMRAM] unsigned char 
 14142 ;; Return value:  Size  Location     Type
 14143 ;;                  1    wreg      unsigned char 
 14144 ;; Registers used:
 14145 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14146 ;; Tracked objects:
 14147 ;;		On entry : 0/0
 14148 ;;		On exit  : 0/0
 14149 ;;		Unchanged: 0/0
 14150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14151 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14152 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14153 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14154 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14155 ;;Total ram usage:       12 bytes
 14156 ;; Hardware stack levels used: 1
 14157 ;; Hardware stack levels required when called: 4
 14158 ;; This function calls:
 14159 ;;		__strlen
 14160 ;; This function is called by:
 14161 ;;		_update_command
 14162 ;; This function uses a non-reentrant model
 14163 ;;
 14164                           
 14165                           	psect	text62
 14166  00AE44                     __ptext62:
 14167                           	callstack 0
 14168  00AE44                     _split_param:
 14169                           	callstack 24
 14170  00AE44                     
 14171                           ;app_atcommand.c: 324: if(!src || !params) return 0;
 14172  00AE44  5013               	movf	split_param@src^0,w,c
 14173  00AE46  1014               	iorwf	(split_param@src+1)^0,w,c
 14174  00AE48  B4D8               	btfsc	status,2,c
 14175  00AE4A  EF29  F057         	goto	u12901
 14176  00AE4E  EF2B  F057         	goto	u12900
 14177  00AE52                     u12901:
 14178  00AE52  EF34  F057         	goto	l12990
 14179  00AE56                     u12900:
 14180  00AE56  5015               	movf	split_param@params^0,w,c
 14181  00AE58  1016               	iorwf	(split_param@params+1)^0,w,c
 14182  00AE5A  A4D8               	btfss	status,2,c
 14183  00AE5C  EF32  F057         	goto	u12911
 14184  00AE60  EF34  F057         	goto	u12910
 14185  00AE64                     u12911:
 14186  00AE64  EF37  F057         	goto	l12994
 14187  00AE68                     u12910:
 14188  00AE68                     l12990:
 14189  00AE68  0E00               	movlw	0
 14190  00AE6A  EFB4  F057         	goto	l855
 14191  00AE6E                     l12994:
 14192                           
 14193                           ;app_atcommand.c: 325: uint8_t len = _strlen(src);
 14194  00AE6E  C013  F00F         	movff	split_param@src,__strlen@source
 14195  00AE72  C014  F010         	movff	split_param@src+1,__strlen@source+1
 14196  00AE76  EC6F  F073         	call	__strlen	;wreg free
 14197  00AE7A  500F               	movf	?__strlen^0,w,c
 14198  00AE7C  6E1B               	movwf	split_param@len^0,c
 14199  00AE7E                     
 14200                           ;app_atcommand.c: 326: uint8_t i = 0, cnt = 0;
 14201  00AE7E  0E00               	movlw	0
 14202  00AE80  6E1D               	movwf	split_param@i^0,c
 14203  00AE82  0E00               	movlw	0
 14204  00AE84  6E1E               	movwf	split_param@cnt^0,c
 14205                           
 14206                           ;app_atcommand.c: 327: while (len--) {
 14207  00AE86  EF97  F057         	goto	l13030
 14208  00AE8A                     l13000:
 14209                           
 14210                           ;app_atcommand.c: 328: char ch = *src;
 14211  00AE8A  C013  FFD9         	movff	split_param@src,fsr2l
 14212  00AE8E  C014  FFDA         	movff	split_param@src+1,fsr2h
 14213  00AE92  50DF               	movf	indf2,w,c
 14214  00AE94  6E1C               	movwf	split_param@ch^0,c
 14215  00AE96                     
 14216                           ;app_atcommand.c: 329: if (ch == ',') {
 14217  00AE96  0E2C               	movlw	44
 14218  00AE98  181C               	xorwf	split_param@ch^0,w,c
 14219  00AE9A  A4D8               	btfss	status,2,c
 14220  00AE9C  EF52  F057         	goto	u12921
 14221  00AEA0  EF54  F057         	goto	u12920
 14222  00AEA4                     u12921:
 14223  00AEA4  EF77  F057         	goto	l13018
 14224  00AEA8                     u12920:
 14225  00AEA8                     
 14226                           ;app_atcommand.c: 330: if (cnt >= m) return 0;
 14227  00AEA8  5017               	movf	split_param@m^0,w,c
 14228  00AEAA  5C1E               	subwf	split_param@cnt^0,w,c
 14229  00AEAC  A0D8               	btfss	status,0,c
 14230  00AEAE  EF5B  F057         	goto	u12931
 14231  00AEB2  EF5D  F057         	goto	u12930
 14232  00AEB6                     u12931:
 14233  00AEB6  EF5F  F057         	goto	l13010
 14234  00AEBA                     u12930:
 14235  00AEBA  EF34  F057         	goto	l12990
 14236  00AEBE                     l13010:
 14237                           
 14238                           ;app_atcommand.c: 331: *((params + (n * cnt++)) + i++) = '\0';
 14239  00AEBE  5018               	movf	split_param@n^0,w,c
 14240  00AEC0  021E               	mulwf	split_param@cnt^0,c
 14241  00AEC2  C015  F019         	movff	split_param@params,??_split_param
 14242  00AEC6  C016  F01A         	movff	split_param@params+1,??_split_param+1
 14243  00AECA  50F3               	movf	243,w,c
 14244  00AECC  2619               	addwf	??_split_param^0,f,c
 14245  00AECE  50F4               	movf	244,w,c
 14246  00AED0  221A               	addwfc	(??_split_param+1)^0,f,c
 14247  00AED2  501D               	movf	split_param@i^0,w,c
 14248  00AED4  2419               	addwf	??_split_param^0,w,c
 14249  00AED6  6ED9               	movwf	fsr2l,c
 14250  00AED8  0E00               	movlw	0
 14251  00AEDA  201A               	addwfc	(??_split_param+1)^0,w,c
 14252  00AEDC  6EDA               	movwf	fsr2h,c
 14253  00AEDE  0E00               	movlw	0
 14254  00AEE0  6EDF               	movwf	indf2,c
 14255  00AEE2  2A1D               	incf	split_param@i^0,f,c
 14256  00AEE4  2A1E               	incf	split_param@cnt^0,f,c
 14257  00AEE6                     
 14258                           ;app_atcommand.c: 332: i = 0;
 14259  00AEE6  0E00               	movlw	0
 14260  00AEE8  6E1D               	movwf	split_param@i^0,c
 14261                           
 14262                           ;app_atcommand.c: 333: } else {
 14263  00AEEA  EF95  F057         	goto	l13028
 14264  00AEEE                     l13018:
 14265                           
 14266                           ;app_atcommand.c: 334: *((params + (n * cnt)) + i++) = ch;
 14267  00AEEE  5018               	movf	split_param@n^0,w,c
 14268  00AEF0  021E               	mulwf	split_param@cnt^0,c
 14269  00AEF2  C015  F019         	movff	split_param@params,??_split_param
 14270  00AEF6  C016  F01A         	movff	split_param@params+1,??_split_param+1
 14271  00AEFA  50F3               	movf	243,w,c
 14272  00AEFC  2619               	addwf	??_split_param^0,f,c
 14273  00AEFE  50F4               	movf	244,w,c
 14274  00AF00  221A               	addwfc	(??_split_param+1)^0,f,c
 14275  00AF02  501D               	movf	split_param@i^0,w,c
 14276  00AF04  2419               	addwf	??_split_param^0,w,c
 14277  00AF06  6ED9               	movwf	fsr2l,c
 14278  00AF08  0E00               	movlw	0
 14279  00AF0A  201A               	addwfc	(??_split_param+1)^0,w,c
 14280  00AF0C  6EDA               	movwf	fsr2h,c
 14281  00AF0E  C01C  FFDF         	movff	split_param@ch,indf2
 14282  00AF12  2A1D               	incf	split_param@i^0,f,c
 14283  00AF14                     
 14284                           ;app_atcommand.c: 335: if (i >= n) return 0;
 14285  00AF14  5018               	movf	split_param@n^0,w,c
 14286  00AF16  5C1D               	subwf	split_param@i^0,w,c
 14287  00AF18  A0D8               	btfss	status,0,c
 14288  00AF1A  EF91  F057         	goto	u12941
 14289  00AF1E  EF93  F057         	goto	u12940
 14290  00AF22                     u12941:
 14291  00AF22  EF95  F057         	goto	l13028
 14292  00AF26                     u12940:
 14293  00AF26  EF34  F057         	goto	l12990
 14294  00AF2A                     l13028:
 14295                           
 14296                           ;app_atcommand.c: 336: };app_atcommand.c: 337: src++;
 14297  00AF2A  4A13               	infsnz	split_param@src^0,f,c
 14298  00AF2C  2A14               	incf	(split_param@src+1)^0,f,c
 14299  00AF2E                     l13030:
 14300  00AF2E  061B               	decf	split_param@len^0,f,c
 14301  00AF30  281B               	incf	split_param@len^0,w,c
 14302  00AF32  A4D8               	btfss	status,2,c
 14303  00AF34  EF9E  F057         	goto	u12951
 14304  00AF38  EFA0  F057         	goto	u12950
 14305  00AF3C                     u12951:
 14306  00AF3C  EF45  F057         	goto	l13000
 14307  00AF40                     u12950:
 14308  00AF40                     
 14309                           ;app_atcommand.c: 338: };app_atcommand.c: 339: *((params + (n * cnt)) + i++) = '\0';
 14310  00AF40  5018               	movf	split_param@n^0,w,c
 14311  00AF42  021E               	mulwf	split_param@cnt^0,c
 14312  00AF44  C015  F019         	movff	split_param@params,??_split_param
 14313  00AF48  C016  F01A         	movff	split_param@params+1,??_split_param+1
 14314  00AF4C  50F3               	movf	243,w,c
 14315  00AF4E  2619               	addwf	??_split_param^0,f,c
 14316  00AF50  50F4               	movf	244,w,c
 14317  00AF52  221A               	addwfc	(??_split_param+1)^0,f,c
 14318  00AF54  501D               	movf	split_param@i^0,w,c
 14319  00AF56  2419               	addwf	??_split_param^0,w,c
 14320  00AF58  6ED9               	movwf	fsr2l,c
 14321  00AF5A  0E00               	movlw	0
 14322  00AF5C  201A               	addwfc	(??_split_param+1)^0,w,c
 14323  00AF5E  6EDA               	movwf	fsr2h,c
 14324  00AF60  0E00               	movlw	0
 14325  00AF62  6EDF               	movwf	indf2,c
 14326  00AF64  2A1D               	incf	split_param@i^0,f,c
 14327  00AF66                     
 14328                           ;app_atcommand.c: 340: return cnt+1;
 14329  00AF66  281E               	incf	split_param@cnt^0,w,c
 14330  00AF68                     l855:
 14331  00AF68  0012               	return		;funcret
 14332  00AF6A                     __end_of_split_param:
 14333                           	callstack 0
 14334                           
 14335 ;; *************** function _nvm_clear_all *****************
 14336 ;; Defined at:
 14337 ;;		line 70 in file "nvm.c"
 14338 ;; Parameters:    Size  Location     Type
 14339 ;;		None
 14340 ;; Auto vars:     Size  Location     Type
 14341 ;;  i               1   63[COMRAM] unsigned char 
 14342 ;; Return value:  Size  Location     Type
 14343 ;;                  1    wreg      void 
 14344 ;; Registers used:
 14345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14346 ;; Tracked objects:
 14347 ;;		On entry : 0/0
 14348 ;;		On exit  : 0/0
 14349 ;;		Unchanged: 0/0
 14350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14354 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14355 ;;Total ram usage:        1 bytes
 14356 ;; Hardware stack levels used: 1
 14357 ;; Hardware stack levels required when called: 10
 14358 ;; This function calls:
 14359 ;;		_nvm_clear
 14360 ;; This function is called by:
 14361 ;;		_update_command
 14362 ;; This function uses a non-reentrant model
 14363 ;;
 14364                           
 14365                           	psect	text63
 14366  00EE26                     __ptext63:
 14367                           	callstack 0
 14368  00EE26                     _nvm_clear_all:
 14369                           	callstack 18
 14370  00EE26                     
 14371                           ;nvm.c: 72: uint8_t i;;nvm.c: 73: nvm_clear();
 14372  00EE26  ECD4  F078         	call	_nvm_clear	;wreg free
 14373  00EE2A                     
 14374                           ;nvm.c: 74: for (i = 0 ; i < 8 ; i++) g_nvm.flash.serialNum[i] = 0xff;
 14375  00EE2A  0E00               	movlw	0
 14376  00EE2C  6E40               	movwf	nvm_clear_all@i^0,c
 14377  00EE2E                     l18092:
 14378  00EE2E  0EDE               	movlw	low (_g_nvm+101)
 14379  00EE30  2440               	addwf	nvm_clear_all@i^0,w,c
 14380  00EE32  6ED9               	movwf	fsr2l,c
 14381  00EE34  6ADA               	clrf	fsr2h,c
 14382  00EE36  0E01               	movlw	high (_g_nvm+101)
 14383  00EE38  22DA               	addwfc	fsr2h,f,c
 14384  00EE3A  0EFF               	movlw	255
 14385  00EE3C  6EDF               	movwf	indf2,c
 14386  00EE3E  2A40               	incf	nvm_clear_all@i^0,f,c
 14387  00EE40  0E07               	movlw	7
 14388  00EE42  6440               	cpfsgt	nvm_clear_all@i^0,c
 14389  00EE44  EF26  F077         	goto	u19581
 14390  00EE48  EF28  F077         	goto	u19580
 14391  00EE4C                     u19581:
 14392  00EE4C  EF17  F077         	goto	l18092
 14393  00EE50                     u19580:
 14394  00EE50  0012               	return		;funcret
 14395  00EE52                     __end_of_nvm_clear_all:
 14396                           	callstack 0
 14397                           
 14398 ;; *************** function __isdigit *****************
 14399 ;; Defined at:
 14400 ;;		line 53 in file "util/_string.c"
 14401 ;; Parameters:    Size  Location     Type
 14402 ;;  src             2   14[COMRAM] PTR const unsigned char 
 14403 ;;		 -> g_atcommand.apply_params(32), g_atcommand(242), 
 14404 ;;  n               2   16[COMRAM] int 
 14405 ;; Auto vars:     Size  Location     Type
 14406 ;;  ch              1   18[COMRAM] unsigned char 
 14407 ;; Return value:  Size  Location     Type
 14408 ;;                  1    wreg      unsigned char 
 14409 ;; Registers used:
 14410 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14411 ;; Tracked objects:
 14412 ;;		On entry : 0/0
 14413 ;;		On exit  : 0/0
 14414 ;;		Unchanged: 0/0
 14415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14419 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14420 ;;Total ram usage:        5 bytes
 14421 ;; Hardware stack levels used: 1
 14422 ;; Hardware stack levels required when called: 3
 14423 ;; This function calls:
 14424 ;;		Nothing
 14425 ;; This function is called by:
 14426 ;;		_update_command
 14427 ;; This function uses a non-reentrant model
 14428 ;;
 14429                           
 14430                           	psect	text64
 14431  00E814                     __ptext64:
 14432                           	callstack 0
 14433  00E814                     __isdigit:
 14434                           	callstack 25
 14435  00E814                     
 14436                           ;_string.c: 55: while (n--) {
 14437  00E814  EF20  F074         	goto	l13064
 14438  00E818                     l13054:
 14439                           
 14440                           ;_string.c: 56: char ch = *src - '0';
 14441  00E818  C00F  FFD9         	movff	__isdigit@src,fsr2l
 14442  00E81C  C010  FFDA         	movff	__isdigit@src+1,fsr2h
 14443  00E820  50DF               	movf	indf2,w,c
 14444  00E822  0FD0               	addlw	208
 14445  00E824  6E13               	movwf	__isdigit@ch^0,c
 14446  00E826                     
 14447                           ;_string.c: 57: if (!(ch >= 0 && ch <= 9))
 14448  00E826  0E09               	movlw	9
 14449  00E828  6413               	cpfsgt	__isdigit@ch^0,c
 14450  00E82A  EF19  F074         	goto	u12961
 14451  00E82E  EF1B  F074         	goto	u12960
 14452  00E832                     u12961:
 14453  00E832  EF1E  F074         	goto	l13062
 14454  00E836                     u12960:
 14455  00E836                     
 14456                           ;_string.c: 58: return 0;
 14457  00E836  0E00               	movlw	0
 14458  00E838  EF2E  F074         	goto	l2325
 14459  00E83C                     l13062:
 14460                           
 14461                           ;_string.c: 59: src++;
 14462  00E83C  4A0F               	infsnz	__isdigit@src^0,f,c
 14463  00E83E  2A10               	incf	(__isdigit@src+1)^0,f,c
 14464  00E840                     l13064:
 14465  00E840  0611               	decf	__isdigit@n^0,f,c
 14466  00E842  A0D8               	btfss	status,0,c
 14467  00E844  0612               	decf	(__isdigit@n+1)^0,f,c
 14468  00E846  2811               	incf	__isdigit@n^0,w,c
 14469  00E848  E106               	bnz	u12971
 14470  00E84A  2812               	incf	(__isdigit@n+1)^0,w,c
 14471  00E84C  A4D8               	btfss	status,2,c
 14472  00E84E  EF2B  F074         	goto	u12971
 14473  00E852  EF2D  F074         	goto	u12970
 14474  00E856                     u12971:
 14475  00E856  EF0C  F074         	goto	l13054
 14476  00E85A                     u12970:
 14477  00E85A                     
 14478                           ;_string.c: 60: };_string.c: 61: return 1;
 14479  00E85A  0E01               	movlw	1
 14480  00E85C                     l2325:
 14481  00E85C  0012               	return		;funcret
 14482  00E85E                     __end_of__isdigit:
 14483                           	callstack 0
 14484                           
 14485 ;; *************** function __atoi *****************
 14486 ;; Defined at:
 14487 ;;		line 4 in file "util/_atoi.c"
 14488 ;; Parameters:    Size  Location     Type
 14489 ;;  str             2   26[COMRAM] PTR const unsigned char 
 14490 ;;		 -> g_atcommand.apply_params(32), g_atcommand(242), 
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;  ret             4   36[COMRAM] long 
 14493 ;;  p               2   40[COMRAM] PTR unsigned char 
 14494 ;;		 -> g_atcommand.apply_params(32), g_atcommand(242), 
 14495 ;;  sign            2   34[COMRAM] int 
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  4   26[COMRAM] long 
 14498 ;; Registers used:
 14499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14500 ;; Tracked objects:
 14501 ;;		On entry : 0/0
 14502 ;;		On exit  : 0/0
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14506 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14507 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14508 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14509 ;;Total ram usage:       16 bytes
 14510 ;; Hardware stack levels used: 1
 14511 ;; Hardware stack levels required when called: 4
 14512 ;; This function calls:
 14513 ;;		___lmul
 14514 ;; This function is called by:
 14515 ;;		_update_command
 14516 ;; This function uses a non-reentrant model
 14517 ;;
 14518                           
 14519                           	psect	text65
 14520  00A6D6                     __ptext65:
 14521                           	callstack 0
 14522  00A6D6                     __atoi:
 14523                           	callstack 24
 14524  00A6D6                     
 14525                           ;_atoi.c: 6: long ret = 0;
 14526  00A6D6  0E00               	movlw	0
 14527  00A6D8  6E25               	movwf	__atoi@ret^0,c
 14528  00A6DA  0E00               	movlw	0
 14529  00A6DC  6E26               	movwf	(__atoi@ret+1)^0,c
 14530  00A6DE  0E00               	movlw	0
 14531  00A6E0  6E27               	movwf	(__atoi@ret+2)^0,c
 14532  00A6E2  0E00               	movlw	0
 14533  00A6E4  6E28               	movwf	(__atoi@ret+3)^0,c
 14534                           
 14535                           ;_atoi.c: 7: int sign = 1;
 14536  00A6E6  0E00               	movlw	0
 14537  00A6E8  6E24               	movwf	(__atoi@sign+1)^0,c
 14538  00A6EA  0E01               	movlw	1
 14539  00A6EC  6E23               	movwf	__atoi@sign^0,c
 14540  00A6EE                     
 14541                           ;_atoi.c: 8: char* p = (char*)str;
 14542  00A6EE  C01B  F029         	movff	__atoi@str,__atoi@p
 14543  00A6F2  C01C  F02A         	movff	__atoi@str+1,__atoi@p+1
 14544                           
 14545                           ;_atoi.c: 10: while (('-' == *p) || (*p == '+')) {
 14546  00A6F6  EF8E  F053         	goto	l18108
 14547  00A6FA                     l18102:
 14548                           
 14549                           ;_atoi.c: 11: if (*p == '-') sign = -1;
 14550  00A6FA  C029  FFD9         	movff	__atoi@p,fsr2l
 14551  00A6FE  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 14552  00A702  0E2D               	movlw	45
 14553  00A704  18DE               	xorwf	postinc2,w,c
 14554  00A706  A4D8               	btfss	status,2,c
 14555  00A708  EF88  F053         	goto	u19591
 14556  00A70C  EF8A  F053         	goto	u19590
 14557  00A710                     u19591:
 14558  00A710  EF8C  F053         	goto	l18106
 14559  00A714                     u19590:
 14560  00A714  6823               	setf	__atoi@sign^0,c
 14561  00A716  6824               	setf	(__atoi@sign+1)^0,c
 14562  00A718                     l18106:
 14563                           
 14564                           ;_atoi.c: 12: p++;
 14565  00A718  4A29               	infsnz	__atoi@p^0,f,c
 14566  00A71A  2A2A               	incf	(__atoi@p+1)^0,f,c
 14567  00A71C                     l18108:
 14568  00A71C  C029  FFD9         	movff	__atoi@p,fsr2l
 14569  00A720  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 14570  00A724  0E2D               	movlw	45
 14571  00A726  18DE               	xorwf	postinc2,w,c
 14572  00A728  B4D8               	btfsc	status,2,c
 14573  00A72A  EF99  F053         	goto	u19601
 14574  00A72E  EF9B  F053         	goto	u19600
 14575  00A732                     u19601:
 14576  00A732  EF7D  F053         	goto	l18102
 14577  00A736                     u19600:
 14578  00A736  C029  FFD9         	movff	__atoi@p,fsr2l
 14579  00A73A  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 14580  00A73E  0E2B               	movlw	43
 14581  00A740  18DE               	xorwf	postinc2,w,c
 14582  00A742  B4D8               	btfsc	status,2,c
 14583  00A744  EFA6  F053         	goto	u19611
 14584  00A748  EFA8  F053         	goto	u19610
 14585  00A74C                     u19611:
 14586  00A74C  EF7D  F053         	goto	l18102
 14587  00A750                     u19610:
 14588  00A750  EFD9  F053         	goto	l18116
 14589  00A754                     l18112:
 14590                           
 14591                           ;_atoi.c: 16: ret = (ret * 10) + (*p - '0');
 14592  00A754  0ED0               	movlw	208
 14593  00A756  6E1F               	movwf	??__atoi^0,c
 14594  00A758  0EFF               	movlw	255
 14595  00A75A  6E20               	movwf	(??__atoi+1)^0,c
 14596  00A75C  C029  FFD9         	movff	__atoi@p,fsr2l
 14597  00A760  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 14598  00A764  50DF               	movf	indf2,w,c
 14599  00A766  6E21               	movwf	(??__atoi+2)^0,c
 14600  00A768  6A22               	clrf	(??__atoi+3)^0,c
 14601  00A76A  501F               	movf	??__atoi^0,w,c
 14602  00A76C  2621               	addwf	(??__atoi+2)^0,f,c
 14603  00A76E  5020               	movf	(??__atoi+1)^0,w,c
 14604  00A770  2222               	addwfc	(??__atoi+3)^0,f,c
 14605  00A772  C025  F00F         	movff	__atoi@ret,___lmul@multiplier
 14606  00A776  C026  F010         	movff	__atoi@ret+1,___lmul@multiplier+1
 14607  00A77A  C027  F011         	movff	__atoi@ret+2,___lmul@multiplier+2
 14608  00A77E  C028  F012         	movff	__atoi@ret+3,___lmul@multiplier+3
 14609  00A782  0E0A               	movlw	10
 14610  00A784  6E13               	movwf	___lmul@multiplicand^0,c
 14611  00A786  0E00               	movlw	0
 14612  00A788  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 14613  00A78A  0E00               	movlw	0
 14614  00A78C  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 14615  00A78E  0E00               	movlw	0
 14616  00A790  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 14617  00A792  ECE0  F06E         	call	___lmul	;wreg free
 14618  00A796  5021               	movf	(??__atoi+2)^0,w,c
 14619  00A798  240F               	addwf	?___lmul^0,w,c
 14620  00A79A  6E25               	movwf	__atoi@ret^0,c
 14621  00A79C  5022               	movf	(??__atoi+3)^0,w,c
 14622  00A79E  2010               	addwfc	(?___lmul+1)^0,w,c
 14623  00A7A0  6E26               	movwf	(__atoi@ret+1)^0,c
 14624  00A7A2  0E00               	movlw	0
 14625  00A7A4  2011               	addwfc	(?___lmul+2)^0,w,c
 14626  00A7A6  6E27               	movwf	(__atoi@ret+2)^0,c
 14627  00A7A8  0E00               	movlw	0
 14628  00A7AA  2012               	addwfc	(?___lmul+3)^0,w,c
 14629  00A7AC  6E28               	movwf	(__atoi@ret+3)^0,c
 14630  00A7AE                     
 14631                           ;_atoi.c: 17: p++;
 14632  00A7AE  4A29               	infsnz	__atoi@p^0,f,c
 14633  00A7B0  2A2A               	incf	(__atoi@p+1)^0,f,c
 14634  00A7B2                     l18116:
 14635  00A7B2  C029  FFD9         	movff	__atoi@p,fsr2l
 14636  00A7B6  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 14637  00A7BA  0E2F               	movlw	47
 14638  00A7BC  64DF               	cpfsgt	indf2,c
 14639  00A7BE  EFE3  F053         	goto	u19621
 14640  00A7C2  EFE5  F053         	goto	u19620
 14641  00A7C6                     u19621:
 14642  00A7C6  EFF1  F053         	goto	l18120
 14643  00A7CA                     u19620:
 14644  00A7CA  C029  FFD9         	movff	__atoi@p,fsr2l
 14645  00A7CE  C02A  FFDA         	movff	__atoi@p+1,fsr2h
 14646  00A7D2  0E39               	movlw	57
 14647  00A7D4  64DF               	cpfsgt	indf2,c
 14648  00A7D6  EFEF  F053         	goto	u19631
 14649  00A7DA  EFF1  F053         	goto	u19630
 14650  00A7DE                     u19631:
 14651  00A7DE  EFAA  F053         	goto	l18112
 14652  00A7E2                     u19630:
 14653  00A7E2                     l18120:
 14654                           
 14655                           ;_atoi.c: 18: };_atoi.c: 20: return (ret * sign);
 14656  00A7E2  C023  F00F         	movff	__atoi@sign,___lmul@multiplier
 14657  00A7E6  C024  F010         	movff	__atoi@sign+1,___lmul@multiplier+1
 14658  00A7EA  0E00               	movlw	0
 14659  00A7EC  BE10               	btfsc	(___lmul@multiplier+1)^0,7,c
 14660  00A7EE  0EFF               	movlw	-1
 14661  00A7F0  6E11               	movwf	(___lmul@multiplier+2)^0,c
 14662  00A7F2  6E12               	movwf	(___lmul@multiplier+3)^0,c
 14663  00A7F4  C025  F013         	movff	__atoi@ret,___lmul@multiplicand
 14664  00A7F8  C026  F014         	movff	__atoi@ret+1,___lmul@multiplicand+1
 14665  00A7FC  C027  F015         	movff	__atoi@ret+2,___lmul@multiplicand+2
 14666  00A800  C028  F016         	movff	__atoi@ret+3,___lmul@multiplicand+3
 14667  00A804  ECE0  F06E         	call	___lmul	;wreg free
 14668  00A808  C00F  F01B         	movff	?___lmul,?__atoi
 14669  00A80C  C010  F01C         	movff	?___lmul+1,?__atoi+1
 14670  00A810  C011  F01D         	movff	?___lmul+2,?__atoi+2
 14671  00A814  C012  F01E         	movff	?___lmul+3,?__atoi+3
 14672  00A818  0012               	return		;funcret
 14673  00A81A                     __end_of__atoi:
 14674                           	callstack 0
 14675                           
 14676 ;; *************** function __atof *****************
 14677 ;; Defined at:
 14678 ;;		line 4 in file "util/_atof.c"
 14679 ;; Parameters:    Size  Location     Type
 14680 ;;  str             2   95[BANK0 ] PTR const unsigned char 
 14681 ;;		 -> g_atcommand.manual_params(128), g_atcommand.apply_params(32), g_atcommand(242), 
 14682 ;; Auto vars:     Size  Location     Type
 14683 ;;  ret             4  107[BANK0 ] float 
 14684 ;;  p               2  113[BANK0 ] PTR unsigned char 
 14685 ;;		 -> g_atcommand.manual_params(128), g_atcommand.apply_params(32), g_atcommand(242), 
 14686 ;;  dotpos          2  111[BANK0 ] unsigned int 
 14687 ;;  cnt             2  105[BANK0 ] unsigned int 
 14688 ;;  sign            2  103[BANK0 ] int 
 14689 ;; Return value:  Size  Location     Type
 14690 ;;                  4   95[BANK0 ] float 
 14691 ;; Registers used:
 14692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14693 ;; Tracked objects:
 14694 ;;		On entry : 0/0
 14695 ;;		On exit  : 0/0
 14696 ;;		Unchanged: 0/0
 14697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14698 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14699 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14700 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14701 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14702 ;;Total ram usage:       20 bytes
 14703 ;; Hardware stack levels used: 1
 14704 ;; Hardware stack levels required when called: 4
 14705 ;; This function calls:
 14706 ;;		___fladd
 14707 ;;		___fldiv
 14708 ;;		___flmul
 14709 ;;		___xxtofl
 14710 ;; This function is called by:
 14711 ;;		_update_command
 14712 ;; This function uses a non-reentrant model
 14713 ;;
 14714                           
 14715                           	psect	text66
 14716  00855E                     __ptext66:
 14717                           	callstack 0
 14718  00855E                     __atof:
 14719                           	callstack 24
 14720  00855E                     
 14721                           ;_atof.c: 6: float ret = 0.0f;
 14722  00855E  0E00               	movlw	0
 14723  008560  0100               	movlb	0	; () banked
 14724  008562  6FCB               	movwf	__atof@ret& (0+255),b
 14725  008564  0E00               	movlw	0
 14726  008566  6FCC               	movwf	(__atof@ret+1)& (0+255),b
 14727  008568  0E00               	movlw	0
 14728  00856A  6FCD               	movwf	(__atof@ret+2)& (0+255),b
 14729  00856C  0E00               	movlw	0
 14730  00856E  6FCE               	movwf	(__atof@ret+3)& (0+255),b
 14731                           
 14732                           ;_atof.c: 7: int sign = 1;
 14733  008570  0E00               	movlw	0
 14734  008572  6FC8               	movwf	(__atof@sign+1)& (0+255),b
 14735  008574  0E01               	movlw	1
 14736  008576  6FC7               	movwf	__atof@sign& (0+255),b
 14737  008578                     
 14738                           ; BSR set to: 0
 14739                           ;_atof.c: 8: char* p = (char*)str;
 14740  008578  C0BF  F0D1         	movff	__atof@str,__atof@p
 14741  00857C  C0C0  F0D2         	movff	__atof@str+1,__atof@p+1
 14742  008580                     
 14743                           ; BSR set to: 0
 14744                           ;_atof.c: 9: unsigned dotpos = 0;
 14745  008580  0E00               	movlw	0
 14746  008582  6FD0               	movwf	(__atof@dotpos+1)& (0+255),b
 14747  008584  0E00               	movlw	0
 14748  008586  6FCF               	movwf	__atof@dotpos& (0+255),b
 14749  008588                     
 14750                           ; BSR set to: 0
 14751                           ;_atof.c: 10: unsigned cnt = 0;
 14752  008588  0E00               	movlw	0
 14753  00858A  6FCA               	movwf	(__atof@cnt+1)& (0+255),b
 14754  00858C  0E00               	movlw	0
 14755  00858E  6FC9               	movwf	__atof@cnt& (0+255),b
 14756                           
 14757                           ;_atof.c: 12: while (('-' == *p) || (*p == '+')) {
 14758  008590  EFDD  F042         	goto	l18138
 14759  008594                     l18132:
 14760                           
 14761                           ; BSR set to: 0
 14762                           ;_atof.c: 13: if (*p == '-') sign = -1;
 14763  008594  C0D1  FFD9         	movff	__atof@p,fsr2l
 14764  008598  C0D2  FFDA         	movff	__atof@p+1,fsr2h
 14765  00859C  0E2D               	movlw	45
 14766  00859E  18DE               	xorwf	postinc2,w,c
 14767  0085A0  A4D8               	btfss	status,2,c
 14768  0085A2  EFD5  F042         	goto	u19641
 14769  0085A6  EFD7  F042         	goto	u19640
 14770  0085AA                     u19641:
 14771  0085AA  EFD9  F042         	goto	l18136
 14772  0085AE                     u19640:
 14773  0085AE                     
 14774                           ; BSR set to: 0
 14775  0085AE  69C7               	setf	__atof@sign& (0+255),b
 14776  0085B0  69C8               	setf	(__atof@sign+1)& (0+255),b
 14777  0085B2                     l18136:
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;_atof.c: 14: p++; cnt++;
 14781  0085B2  4BD1               	infsnz	__atof@p& (0+255),f,b
 14782  0085B4  2BD2               	incf	(__atof@p+1)& (0+255),f,b
 14783  0085B6  4BC9               	infsnz	__atof@cnt& (0+255),f,b
 14784  0085B8  2BCA               	incf	(__atof@cnt+1)& (0+255),f,b
 14785  0085BA                     l18138:
 14786                           
 14787                           ; BSR set to: 0
 14788  0085BA  C0D1  FFD9         	movff	__atof@p,fsr2l
 14789  0085BE  C0D2  FFDA         	movff	__atof@p+1,fsr2h
 14790  0085C2  0E2D               	movlw	45
 14791  0085C4  18DE               	xorwf	postinc2,w,c
 14792  0085C6  B4D8               	btfsc	status,2,c
 14793  0085C8  EFE8  F042         	goto	u19651
 14794  0085CC  EFEA  F042         	goto	u19650
 14795  0085D0                     u19651:
 14796  0085D0  EFCA  F042         	goto	l18132
 14797  0085D4                     u19650:
 14798  0085D4                     
 14799                           ; BSR set to: 0
 14800  0085D4  C0D1  FFD9         	movff	__atof@p,fsr2l
 14801  0085D8  C0D2  FFDA         	movff	__atof@p+1,fsr2h
 14802  0085DC  0E2B               	movlw	43
 14803  0085DE  18DE               	xorwf	postinc2,w,c
 14804  0085E0  B4D8               	btfsc	status,2,c
 14805  0085E2  EFF5  F042         	goto	u19661
 14806  0085E6  EFF7  F042         	goto	u19660
 14807  0085EA                     u19661:
 14808  0085EA  EFCA  F042         	goto	l18132
 14809  0085EE                     u19660:
 14810  0085EE  EF56  F043         	goto	l18152
 14811  0085F2                     l18142:
 14812                           
 14813                           ; BSR set to: 0
 14814                           ;_atof.c: 18: if (*p == '.') {
 14815  0085F2  C0D1  FFD9         	movff	__atof@p,fsr2l
 14816  0085F6  C0D2  FFDA         	movff	__atof@p+1,fsr2h
 14817  0085FA  0E2E               	movlw	46
 14818  0085FC  18DE               	xorwf	postinc2,w,c
 14819  0085FE  A4D8               	btfss	status,2,c
 14820  008600  EF04  F043         	goto	u19671
 14821  008604  EF06  F043         	goto	u19670
 14822  008608                     u19671:
 14823  008608  EF0C  F043         	goto	l18146
 14824  00860C                     u19670:
 14825  00860C                     
 14826                           ; BSR set to: 0
 14827                           ;_atof.c: 19: dotpos = cnt;
 14828  00860C  C0C9  F0CF         	movff	__atof@cnt,__atof@dotpos
 14829  008610  C0CA  F0D0         	movff	__atof@cnt+1,__atof@dotpos+1
 14830                           
 14831                           ;_atof.c: 20: } else {
 14832  008614  EF51  F043         	goto	l18148
 14833  008618                     l18146:
 14834                           
 14835                           ; BSR set to: 0
 14836                           ;_atof.c: 21: ret = (ret * 10.0f) + (*p - '0');
 14837  008618  0E00               	movlw	0
 14838  00861A  6F6C               	movwf	___flmul@a& (0+255),b
 14839  00861C  0E00               	movlw	0
 14840  00861E  6F6D               	movwf	(___flmul@a+1)& (0+255),b
 14841  008620  0E20               	movlw	32
 14842  008622  6F6E               	movwf	(___flmul@a+2)& (0+255),b
 14843  008624  0E41               	movlw	65
 14844  008626  6F6F               	movwf	(___flmul@a+3)& (0+255),b
 14845  008628  C0CB  F068         	movff	__atof@ret,___flmul@b
 14846  00862C  C0CC  F069         	movff	__atof@ret+1,___flmul@b+1
 14847  008630  C0CD  F06A         	movff	__atof@ret+2,___flmul@b+2
 14848  008634  C0CE  F06B         	movff	__atof@ret+3,___flmul@b+3
 14849  008638  ECA7  F02F         	call	___flmul	;wreg free
 14850  00863C  C068  F08E         	movff	?___flmul,___fladd@b
 14851  008640  C069  F08F         	movff	?___flmul+1,___fladd@b+1
 14852  008644  C06A  F090         	movff	?___flmul+2,___fladd@b+2
 14853  008648  C06B  F091         	movff	?___flmul+3,___fladd@b+3
 14854  00864C  0ED0               	movlw	208
 14855  00864E  0100               	movlb	0	; () banked
 14856  008650  6FC3               	movwf	??__atof& (0+255),b
 14857  008652  0EFF               	movlw	255
 14858  008654  6FC4               	movwf	(??__atof+1)& (0+255),b
 14859  008656  C0D1  FFD9         	movff	__atof@p,fsr2l
 14860  00865A  C0D2  FFDA         	movff	__atof@p+1,fsr2h
 14861  00865E  50DF               	movf	indf2,w,c
 14862  008660  6FC5               	movwf	(??__atof+2)& (0+255),b
 14863  008662  6BC6               	clrf	(??__atof+3)& (0+255),b
 14864  008664  51C3               	movf	??__atof& (0+255),w,b
 14865  008666  27C5               	addwf	(??__atof+2)& (0+255),f,b
 14866  008668  51C4               	movf	(??__atof+1)& (0+255),w,b
 14867  00866A  23C6               	addwfc	(??__atof+3)& (0+255),f,b
 14868  00866C  C0C5  F027         	movff	??__atof+2,___xxtofl@val
 14869  008670  C0C6  F028         	movff	??__atof+3,___xxtofl@val+1
 14870  008674  6A29               	clrf	(___xxtofl@val+2)^0,c
 14871  008676  6A2A               	clrf	(___xxtofl@val+3)^0,c
 14872  008678  0E00               	movlw	0
 14873  00867A  ECF6  F048         	call	___xxtofl
 14874  00867E  C027  F092         	movff	?___xxtofl,___fladd@a
 14875  008682  C028  F093         	movff	?___xxtofl+1,___fladd@a+1
 14876  008686  C029  F094         	movff	?___xxtofl+2,___fladd@a+2
 14877  00868A  C02A  F095         	movff	?___xxtofl+3,___fladd@a+3
 14878  00868E  EC46  F02D         	call	___fladd	;wreg free
 14879  008692  C08E  F0CB         	movff	?___fladd,__atof@ret
 14880  008696  C08F  F0CC         	movff	?___fladd+1,__atof@ret+1
 14881  00869A  C090  F0CD         	movff	?___fladd+2,__atof@ret+2
 14882  00869E  C091  F0CE         	movff	?___fladd+3,__atof@ret+3
 14883  0086A2                     l18148:
 14884                           
 14885                           ;_atof.c: 22: };_atof.c: 23: p++; cnt++;
 14886  0086A2  0100               	movlb	0	; () banked
 14887  0086A4  4BD1               	infsnz	__atof@p& (0+255),f,b
 14888  0086A6  2BD2               	incf	(__atof@p+1)& (0+255),f,b
 14889  0086A8                     
 14890                           ; BSR set to: 0
 14891  0086A8  4BC9               	infsnz	__atof@cnt& (0+255),f,b
 14892  0086AA  2BCA               	incf	(__atof@cnt+1)& (0+255),f,b
 14893  0086AC                     l18152:
 14894                           
 14895                           ; BSR set to: 0
 14896  0086AC  C0D1  FFD9         	movff	__atof@p,fsr2l
 14897  0086B0  C0D2  FFDA         	movff	__atof@p+1,fsr2h
 14898  0086B4  0E2F               	movlw	47
 14899  0086B6  64DF               	cpfsgt	indf2,c
 14900  0086B8  EF60  F043         	goto	u19681
 14901  0086BC  EF62  F043         	goto	u19680
 14902  0086C0                     u19681:
 14903  0086C0  EF6E  F043         	goto	l18156
 14904  0086C4                     u19680:
 14905  0086C4                     
 14906                           ; BSR set to: 0
 14907  0086C4  C0D1  FFD9         	movff	__atof@p,fsr2l
 14908  0086C8  C0D2  FFDA         	movff	__atof@p+1,fsr2h
 14909  0086CC  0E39               	movlw	57
 14910  0086CE  64DF               	cpfsgt	indf2,c
 14911  0086D0  EF6C  F043         	goto	u19691
 14912  0086D4  EF6E  F043         	goto	u19690
 14913  0086D8                     u19691:
 14914  0086D8  EFF9  F042         	goto	l18142
 14915  0086DC                     u19690:
 14916  0086DC                     l18156:
 14917                           
 14918                           ; BSR set to: 0
 14919  0086DC  C0D1  FFD9         	movff	__atof@p,fsr2l
 14920  0086E0  C0D2  FFDA         	movff	__atof@p+1,fsr2h
 14921  0086E4  0E2E               	movlw	46
 14922  0086E6  18DE               	xorwf	postinc2,w,c
 14923  0086E8  B4D8               	btfsc	status,2,c
 14924  0086EA  EF79  F043         	goto	u19701
 14925  0086EE  EF7B  F043         	goto	u19700
 14926  0086F2                     u19701:
 14927  0086F2  EFF9  F042         	goto	l18142
 14928  0086F6                     u19700:
 14929  0086F6                     
 14930                           ; BSR set to: 0
 14931                           ;_atof.c: 24: };_atof.c: 26: if (dotpos > 0) {
 14932  0086F6  51CF               	movf	__atof@dotpos& (0+255),w,b
 14933  0086F8  11D0               	iorwf	(__atof@dotpos+1)& (0+255),w,b
 14934  0086FA  B4D8               	btfsc	status,2,c
 14935  0086FC  EF82  F043         	goto	u19711
 14936  008700  EF84  F043         	goto	u19710
 14937  008704                     u19711:
 14938  008704  EFBA  F043         	goto	l18166
 14939  008708                     u19710:
 14940  008708                     
 14941                           ; BSR set to: 0
 14942                           ;_atof.c: 27: dotpos = cnt - dotpos - 1;
 14943  008708  51CF               	movf	__atof@dotpos& (0+255),w,b
 14944  00870A  5DC9               	subwf	__atof@cnt& (0+255),w,b
 14945  00870C  6FC3               	movwf	??__atof& (0+255),b
 14946  00870E  51D0               	movf	(__atof@dotpos+1)& (0+255),w,b
 14947  008710  59CA               	subwfb	(__atof@cnt+1)& (0+255),w,b
 14948  008712  6FC4               	movwf	(??__atof+1)& (0+255),b
 14949  008714  0EFF               	movlw	255
 14950  008716  25C3               	addwf	??__atof& (0+255),w,b
 14951  008718  6FCF               	movwf	__atof@dotpos& (0+255),b
 14952  00871A  0EFF               	movlw	255
 14953  00871C  21C4               	addwfc	(??__atof+1)& (0+255),w,b
 14954  00871E  6FD0               	movwf	(__atof@dotpos+1)& (0+255),b
 14955                           
 14956                           ;_atof.c: 28: while (dotpos--) ret /= 10.0f;
 14957  008720  EFAC  F043         	goto	l18164
 14958  008724                     l18162:
 14959                           
 14960                           ; BSR set to: 0
 14961  008724  C0CB  F0A6         	movff	__atof@ret,___fldiv@b
 14962  008728  C0CC  F0A7         	movff	__atof@ret+1,___fldiv@b+1
 14963  00872C  C0CD  F0A8         	movff	__atof@ret+2,___fldiv@b+2
 14964  008730  C0CE  F0A9         	movff	__atof@ret+3,___fldiv@b+3
 14965  008734  0E00               	movlw	0
 14966  008736  6FAA               	movwf	___fldiv@a& (0+255),b
 14967  008738  0E00               	movlw	0
 14968  00873A  6FAB               	movwf	(___fldiv@a+1)& (0+255),b
 14969  00873C  0E20               	movlw	32
 14970  00873E  6FAC               	movwf	(___fldiv@a+2)& (0+255),b
 14971  008740  0E41               	movlw	65
 14972  008742  6FAD               	movwf	(___fldiv@a+3)& (0+255),b
 14973  008744  ECCB  F033         	call	___fldiv	;wreg free
 14974  008748  C0A6  F0CB         	movff	?___fldiv,__atof@ret
 14975  00874C  C0A7  F0CC         	movff	?___fldiv+1,__atof@ret+1
 14976  008750  C0A8  F0CD         	movff	?___fldiv+2,__atof@ret+2
 14977  008754  C0A9  F0CE         	movff	?___fldiv+3,__atof@ret+3
 14978  008758                     l18164:
 14979  008758  0100               	movlb	0	; () banked
 14980  00875A  07CF               	decf	__atof@dotpos& (0+255),f,b
 14981  00875C  A0D8               	btfss	status,0,c
 14982  00875E  07D0               	decf	(__atof@dotpos+1)& (0+255),f,b
 14983  008760  29CF               	incf	__atof@dotpos& (0+255),w,b
 14984  008762  E106               	bnz	u19721
 14985  008764  29D0               	incf	(__atof@dotpos+1)& (0+255),w,b
 14986  008766  A4D8               	btfss	status,2,c
 14987  008768  EFB8  F043         	goto	u19721
 14988  00876C  EFBA  F043         	goto	u19720
 14989  008770                     u19721:
 14990  008770  EF92  F043         	goto	l18162
 14991  008774                     u19720:
 14992  008774                     l18166:
 14993                           
 14994                           ; BSR set to: 0
 14995                           ;_atof.c: 29: };_atof.c: 31: return (ret * sign);
 14996  008774  C0C7  F027         	movff	__atof@sign,___xxtofl@val
 14997  008778  C0C8  F028         	movff	__atof@sign+1,___xxtofl@val+1
 14998  00877C  0E00               	movlw	0
 14999  00877E  BE28               	btfsc	(___xxtofl@val+1)^0,7,c
 15000  008780  0EFF               	movlw	-1
 15001  008782  6E29               	movwf	(___xxtofl@val+2)^0,c
 15002  008784  6E2A               	movwf	(___xxtofl@val+3)^0,c
 15003  008786  0E01               	movlw	1
 15004  008788  ECF6  F048         	call	___xxtofl
 15005  00878C  C027  F068         	movff	?___xxtofl,___flmul@b
 15006  008790  C028  F069         	movff	?___xxtofl+1,___flmul@b+1
 15007  008794  C029  F06A         	movff	?___xxtofl+2,___flmul@b+2
 15008  008798  C02A  F06B         	movff	?___xxtofl+3,___flmul@b+3
 15009  00879C  C0CB  F06C         	movff	__atof@ret,___flmul@a
 15010  0087A0  C0CC  F06D         	movff	__atof@ret+1,___flmul@a+1
 15011  0087A4  C0CD  F06E         	movff	__atof@ret+2,___flmul@a+2
 15012  0087A8  C0CE  F06F         	movff	__atof@ret+3,___flmul@a+3
 15013  0087AC  ECA7  F02F         	call	___flmul	;wreg free
 15014  0087B0  C068  F0BF         	movff	?___flmul,?__atof
 15015  0087B4  C069  F0C0         	movff	?___flmul+1,?__atof+1
 15016  0087B8  C06A  F0C1         	movff	?___flmul+2,?__atof+2
 15017  0087BC  C06B  F0C2         	movff	?___flmul+3,?__atof+3
 15018  0087C0  0012               	return		;funcret
 15019  0087C2                     __end_of__atof:
 15020                           	callstack 0
 15021                           
 15022 ;; *************** function _ResetDeviceCleanly *****************
 15023 ;; Defined at:
 15024 ;;		line 329 in file "system.c"
 15025 ;; Parameters:    Size  Location     Type
 15026 ;;		None
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;		None
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      void 
 15031 ;; Registers used:
 15032 ;;		wreg, status,2, status,0, cstack
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15042 ;;Total ram usage:        0 bytes
 15043 ;; Hardware stack levels used: 1
 15044 ;; Hardware stack levels required when called: 5
 15045 ;; This function calls:
 15046 ;;		_USBDisableWithLongDelay
 15047 ;; This function is called by:
 15048 ;;		_update_command
 15049 ;; This function uses a non-reentrant model
 15050 ;;
 15051                           
 15052                           	psect	text67
 15053  00F16E                     __ptext67:
 15054                           	callstack 0
 15055  00F16E                     _ResetDeviceCleanly:
 15056                           	callstack 23
 15057  00F16E                     
 15058                           ;system.c: 331: USBDisableWithLongDelay();
 15059  00F16E  ECA5  F078         	call	_USBDisableWithLongDelay	;wreg free
 15060  00F172  00FF               	reset		;# 
 15061  00F174                     
 15062                           ;system.c: 333: __nop();
 15063  00F174  F000               	nop	
 15064  00F176                     
 15065                           ;system.c: 334: __nop();
 15066  00F176  F000               	nop	
 15067  00F178  0012               	return		;funcret
 15068  00F17A                     __end_of_ResetDeviceCleanly:
 15069                           	callstack 0
 15070                           
 15071 ;; *************** function _ResetBootloaderCleanly *****************
 15072 ;; Defined at:
 15073 ;;		line 337 in file "system.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;		None
 15076 ;; Auto vars:     Size  Location     Type
 15077 ;;		None
 15078 ;; Return value:  Size  Location     Type
 15079 ;;                  1    wreg      void 
 15080 ;; Registers used:
 15081 ;;		wreg, status,2, status,0, cstack
 15082 ;; Tracked objects:
 15083 ;;		On entry : 0/0
 15084 ;;		On exit  : 0/0
 15085 ;;		Unchanged: 0/0
 15086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15091 ;;Total ram usage:        0 bytes
 15092 ;; Hardware stack levels used: 1
 15093 ;; Hardware stack levels required when called: 5
 15094 ;; This function calls:
 15095 ;;		_USBDisableWithLongDelay
 15096 ;; This function is called by:
 15097 ;;		_update_command
 15098 ;; This function uses a non-reentrant model
 15099 ;;
 15100                           
 15101                           	psect	text68
 15102  00F160                     __ptext68:
 15103                           	callstack 0
 15104  00F160                     _ResetBootloaderCleanly:
 15105                           	callstack 23
 15106  00F160                     
 15107                           ;system.c: 339: USBDisableWithLongDelay();
 15108  00F160  ECA5  F078         	call	_USBDisableWithLongDelay	;wreg free
 15109  00F164  EF0E F000          	goto	28	;# 
 15110  00F168                     
 15111                           ;system.c: 341: __nop();
 15112  00F168  F000               	nop	
 15113  00F16A                     
 15114                           ;system.c: 342: __nop();
 15115  00F16A  F000               	nop	
 15116  00F16C  0012               	return		;funcret
 15117  00F16E                     __end_of_ResetBootloaderCleanly:
 15118                           	callstack 0
 15119                           
 15120 ;; *************** function _USBDisableWithLongDelay *****************
 15121 ;; Defined at:
 15122 ;;		line 313 in file "system.c"
 15123 ;; Parameters:    Size  Location     Type
 15124 ;;		None
 15125 ;; Auto vars:     Size  Location     Type
 15126 ;;		None
 15127 ;; Return value:  Size  Location     Type
 15128 ;;                  1    wreg      void 
 15129 ;; Registers used:
 15130 ;;		wreg, status,2, status,0, cstack
 15131 ;; Tracked objects:
 15132 ;;		On entry : 0/0
 15133 ;;		On exit  : 0/0
 15134 ;;		Unchanged: 0/0
 15135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15140 ;;Total ram usage:        0 bytes
 15141 ;; Hardware stack levels used: 1
 15142 ;; Hardware stack levels required when called: 4
 15143 ;; This function calls:
 15144 ;;		_DelayRoutine
 15145 ;; This function is called by:
 15146 ;;		_ResetDeviceCleanly
 15147 ;;		_ResetBootloaderCleanly
 15148 ;; This function uses a non-reentrant model
 15149 ;;
 15150                           
 15151                           	psect	text69
 15152  00F14A                     __ptext69:
 15153                           	callstack 0
 15154  00F14A                     _USBDisableWithLongDelay:
 15155                           	callstack 23
 15156  00F14A                     
 15157                           ;system.c: 315: UCONbits.SUSPND = 0;
 15158  00F14A  9265               	bcf	101,1,c	;volatile
 15159  00F14C                     
 15160                           ;system.c: 316: UCON = 0x00;
 15161  00F14C  0E00               	movlw	0
 15162  00F14E  6E65               	movwf	101,c	;volatile
 15163  00F150                     
 15164                           ;system.c: 317: DelayRoutine(0xFFFF);
 15165  00F150  0EFF               	movlw	255
 15166  00F152  6E10               	movwf	(DelayRoutine@DelayAmount+1)^0,c
 15167  00F154  680F               	setf	DelayRoutine@DelayAmount^0,c
 15168  00F156  ECFE  F077         	call	_DelayRoutine	;wreg free
 15169  00F15A                     
 15170                           ;system.c: 318: USBDeviceState = DETACHED_STATE;
 15171  00F15A  0E00               	movlw	0
 15172  00F15C  6E4F               	movwf	_USBDeviceState^0,c
 15173  00F15E  0012               	return		;funcret
 15174  00F160                     __end_of_USBDisableWithLongDelay:
 15175                           	callstack 0
 15176                           
 15177 ;; *************** function _DelayRoutine *****************
 15178 ;; Defined at:
 15179 ;;		line 301 in file "system.c"
 15180 ;; Parameters:    Size  Location     Type
 15181 ;;  DelayAmount     2   14[COMRAM] unsigned int 
 15182 ;; Auto vars:     Size  Location     Type
 15183 ;;		None
 15184 ;; Return value:  Size  Location     Type
 15185 ;;                  1    wreg      void 
 15186 ;; Registers used:
 15187 ;;		wreg, status,2, status,0
 15188 ;; Tracked objects:
 15189 ;;		On entry : 0/0
 15190 ;;		On exit  : 0/0
 15191 ;;		Unchanged: 0/0
 15192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15197 ;;Total ram usage:        2 bytes
 15198 ;; Hardware stack levels used: 1
 15199 ;; Hardware stack levels required when called: 3
 15200 ;; This function calls:
 15201 ;;		Nothing
 15202 ;; This function is called by:
 15203 ;;		_USBDisableWithLongDelay
 15204 ;; This function uses a non-reentrant model
 15205 ;;
 15206                           
 15207                           	psect	text70
 15208  00EFFC                     __ptext70:
 15209                           	callstack 0
 15210  00EFFC                     _DelayRoutine:
 15211                           	callstack 23
 15212  00EFFC                     
 15213                           ;system.c: 303: while(DelayAmount)
 15214  00EFFC  EF04  F078         	goto	l11356
 15215  00F000                     l1544:
 15216  00F000  0004               	clrwdt		;# 
 15217  00F002                     
 15218                           ;system.c: 306: DelayAmount--;
 15219  00F002  060F               	decf	DelayRoutine@DelayAmount^0,f,c
 15220  00F004  A0D8               	btfss	status,0,c
 15221  00F006  0610               	decf	(DelayRoutine@DelayAmount+1)^0,f,c
 15222  00F008                     l11356:
 15223  00F008  500F               	movf	DelayRoutine@DelayAmount^0,w,c
 15224  00F00A  1010               	iorwf	(DelayRoutine@DelayAmount+1)^0,w,c
 15225  00F00C  A4D8               	btfss	status,2,c
 15226  00F00E  EF0B  F078         	goto	u10801
 15227  00F012  EF0D  F078         	goto	u10800
 15228  00F016                     u10801:
 15229  00F016  EF00  F078         	goto	l1544
 15230  00F01A                     u10800:
 15231  00F01A  0012               	return		;funcret
 15232  00F01C                     __end_of_DelayRoutine:
 15233                           	callstack 0
 15234                           
 15235 ;; *************** function _CMD_manual_cal *****************
 15236 ;; Defined at:
 15237 ;;		line 43 in file "bsp/TES0902.c"
 15238 ;; Parameters:    Size  Location     Type
 15239 ;;		None
 15240 ;; Auto vars:     Size  Location     Type
 15241 ;;  len             1   31[COMRAM] unsigned char 
 15242 ;; Return value:  Size  Location     Type
 15243 ;;                  1    wreg      void 
 15244 ;; Registers used:
 15245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15246 ;; Tracked objects:
 15247 ;;		On entry : 0/0
 15248 ;;		On exit  : 0/0
 15249 ;;		Unchanged: 0/0
 15250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15255 ;;Total ram usage:        1 bytes
 15256 ;; Hardware stack levels used: 1
 15257 ;; Hardware stack levels required when called: 6
 15258 ;; This function calls:
 15259 ;;		_Calculate_CRC16
 15260 ;;		_usart_writeBytes
 15261 ;; This function is called by:
 15262 ;;		_update_command
 15263 ;;		_sens_ZeroCalibration
 15264 ;; This function uses a non-reentrant model
 15265 ;;
 15266                           
 15267                           	psect	text71
 15268  00D37E                     __ptext71:
 15269                           	callstack 0
 15270  00D37E                     _CMD_manual_cal:
 15271                           	callstack 22
 15272  00D37E                     
 15273                           ;TES0902.c: 45: uint8_t len = 0;
 15274  00D37E  0E00               	movlw	0
 15275  00D380  6E20               	movwf	CMD_manual_cal@len^0,c
 15276  00D382                     
 15277                           ;TES0902.c: 46: g_Wbuff[len++] = 0xAA;
 15278  00D382  0EAA               	movlw	170
 15279  00D384  0101               	movlb	1	; () banked
 15280  00D386  6FE6               	movwf	_g_Wbuff& (0+255),b
 15281  00D388                     
 15282                           ; BSR set to: 1
 15283  00D388  2A20               	incf	CMD_manual_cal@len^0,f,c
 15284  00D38A                     
 15285                           ; BSR set to: 1
 15286                           ;TES0902.c: 47: g_Wbuff[len++] = 0x55;
 15287  00D38A  0EE6               	movlw	low _g_Wbuff
 15288  00D38C  2420               	addwf	CMD_manual_cal@len^0,w,c
 15289  00D38E  6ED9               	movwf	fsr2l,c
 15290  00D390  6ADA               	clrf	fsr2h,c
 15291  00D392  0E01               	movlw	high _g_Wbuff
 15292  00D394  22DA               	addwfc	fsr2h,f,c
 15293  00D396  0E55               	movlw	85
 15294  00D398  6EDF               	movwf	indf2,c
 15295  00D39A                     
 15296                           ; BSR set to: 1
 15297  00D39A  2A20               	incf	CMD_manual_cal@len^0,f,c
 15298  00D39C                     
 15299                           ; BSR set to: 1
 15300                           ;TES0902.c: 48: g_Wbuff[len++] = 0x4C;
 15301  00D39C  0EE6               	movlw	low _g_Wbuff
 15302  00D39E  2420               	addwf	CMD_manual_cal@len^0,w,c
 15303  00D3A0  6ED9               	movwf	fsr2l,c
 15304  00D3A2  6ADA               	clrf	fsr2h,c
 15305  00D3A4  0E01               	movlw	high _g_Wbuff
 15306  00D3A6  22DA               	addwfc	fsr2h,f,c
 15307  00D3A8  0E4C               	movlw	76
 15308  00D3AA  6EDF               	movwf	indf2,c
 15309  00D3AC                     
 15310                           ; BSR set to: 1
 15311  00D3AC  2A20               	incf	CMD_manual_cal@len^0,f,c
 15312  00D3AE                     
 15313                           ; BSR set to: 1
 15314                           ;TES0902.c: 49: g_Wbuff[len++] = 0x00;
 15315  00D3AE  0EE6               	movlw	low _g_Wbuff
 15316  00D3B0  2420               	addwf	CMD_manual_cal@len^0,w,c
 15317  00D3B2  6ED9               	movwf	fsr2l,c
 15318  00D3B4  6ADA               	clrf	fsr2h,c
 15319  00D3B6  0E01               	movlw	high _g_Wbuff
 15320  00D3B8  22DA               	addwfc	fsr2h,f,c
 15321  00D3BA  0E00               	movlw	0
 15322  00D3BC  6EDF               	movwf	indf2,c
 15323  00D3BE                     
 15324                           ; BSR set to: 1
 15325  00D3BE  2A20               	incf	CMD_manual_cal@len^0,f,c
 15326  00D3C0                     
 15327                           ; BSR set to: 1
 15328                           ;TES0902.c: 50: convData.u16_data = Calculate_CRC16(g_Wbuff, len);
 15329  00D3C0  0EE6               	movlw	low _g_Wbuff
 15330  00D3C2  6E0F               	movwf	Calculate_CRC16@crc^0,c
 15331  00D3C4  0E01               	movlw	high _g_Wbuff
 15332  00D3C6  6E10               	movwf	(Calculate_CRC16@crc+1)^0,c
 15333  00D3C8  C020  F011         	movff	CMD_manual_cal@len,Calculate_CRC16@crc_length
 15334  00D3CC  6A12               	clrf	(Calculate_CRC16@crc_length+1)^0,c
 15335  00D3CE  ECBB  F05F         	call	_Calculate_CRC16	;wreg free
 15336  00D3D2  C00F  F04B         	movff	?_Calculate_CRC16,_convData
 15337  00D3D6  C010  F04C         	movff	?_Calculate_CRC16+1,_convData+1
 15338  00D3DA                     
 15339                           ;TES0902.c: 51: g_Wbuff[len++] = convData.u8_Data[0];
 15340  00D3DA  0EE6               	movlw	low _g_Wbuff
 15341  00D3DC  2420               	addwf	CMD_manual_cal@len^0,w,c
 15342  00D3DE  6ED9               	movwf	fsr2l,c
 15343  00D3E0  6ADA               	clrf	fsr2h,c
 15344  00D3E2  0E01               	movlw	high _g_Wbuff
 15345  00D3E4  22DA               	addwfc	fsr2h,f,c
 15346  00D3E6  C04B  FFDF         	movff	_convData,indf2
 15347  00D3EA  2A20               	incf	CMD_manual_cal@len^0,f,c
 15348  00D3EC                     
 15349                           ;TES0902.c: 52: g_Wbuff[len++] = convData.u8_Data[1];
 15350  00D3EC  0EE6               	movlw	low _g_Wbuff
 15351  00D3EE  2420               	addwf	CMD_manual_cal@len^0,w,c
 15352  00D3F0  6ED9               	movwf	fsr2l,c
 15353  00D3F2  6ADA               	clrf	fsr2h,c
 15354  00D3F4  0E01               	movlw	high _g_Wbuff
 15355  00D3F6  22DA               	addwfc	fsr2h,f,c
 15356  00D3F8  C04C  FFDF         	movff	_convData+1,indf2
 15357  00D3FC  2A20               	incf	CMD_manual_cal@len^0,f,c
 15358  00D3FE                     
 15359                           ;TES0902.c: 54: usart_writeBytes(g_Wbuff, len);
 15360  00D3FE  0EE6               	movlw	low _g_Wbuff
 15361  00D400  6E10               	movwf	usart_writeBytes@wrptr^0,c
 15362  00D402  0E01               	movlw	high _g_Wbuff
 15363  00D404  6E11               	movwf	(usart_writeBytes@wrptr+1)^0,c
 15364  00D406  C020  F012         	movff	CMD_manual_cal@len,usart_writeBytes@len
 15365  00D40A  EC1F  F072         	call	_usart_writeBytes	;wreg free
 15366  00D40E  0012               	return		;funcret
 15367  00D410                     __end_of_CMD_manual_cal:
 15368                           	callstack 0
 15369                           
 15370 ;; *************** function _parse_command *****************
 15371 ;; Defined at:
 15372 ;;		line 240 in file "app_atcommand.c"
 15373 ;; Parameters:    Size  Location     Type
 15374 ;;  buff            2   40[COMRAM] PTR const unsigned char 
 15375 ;;		 -> g_atcommand.read_cmd(64), g_atcommand(242), 
 15376 ;;  status          2   42[COMRAM] PTR struct .
 15377 ;;		 -> g_atcommand(242), 
 15378 ;; Auto vars:     Size  Location     Type
 15379 ;;  idx             1   46[BANK0 ] char 
 15380 ;;  chno            1   45[BANK0 ] unsigned char 
 15381 ;;  param          32    0[BANK0 ] unsigned char [32]
 15382 ;;  cmd            11   33[BANK0 ] unsigned char [11]
 15383 ;;  ch              1   49[BANK0 ] unsigned char 
 15384 ;;  cmdidx          1   48[BANK0 ] unsigned char 
 15385 ;;  paramidx        1   47[BANK0 ] unsigned char 
 15386 ;;  seq             1   44[BANK0 ] enum E6363
 15387 ;;  retval          1   32[BANK0 ] enum E6369
 15388 ;; Return value:  Size  Location     Type
 15389 ;;                  1    wreg      enum E6369
 15390 ;; Registers used:
 15391 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15392 ;; Tracked objects:
 15393 ;;		On entry : 0/0
 15394 ;;		On exit  : 0/0
 15395 ;;		Unchanged: 0/0
 15396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15398 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15400 ;;      Totals:         5      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15401 ;;Total ram usage:       55 bytes
 15402 ;; Hardware stack levels used: 1
 15403 ;; Hardware stack levels required when called: 5
 15404 ;; This function calls:
 15405 ;;		__strcpy
 15406 ;;		_check_atcommand
 15407 ;;		_param_copy
 15408 ;; This function is called by:
 15409 ;;		_atcommand_task
 15410 ;; This function uses a non-reentrant model
 15411 ;;
 15412                           
 15413                           	psect	text72
 15414  005574                     __ptext72:
 15415                           	callstack 0
 15416  005574                     _parse_command:
 15417                           	callstack 24
 15418  005574                     
 15419                           ;app_atcommand.c: 242: e_Parsing_Seq seq = PARSE_READY;
 15420  005574  0E00               	movlw	0
 15421  005576  0100               	movlb	0	; () banked
 15422  005578  6F8C               	movwf	parse_command@seq& (0+255),b
 15423  00557A                     
 15424                           ; BSR set to: 0
 15425                           ;app_atcommand.c: 244: char cmd[11] = {0};
 15426  00557A  EE20  F081         	lfsr	2,parse_command@cmd
 15427  00557E  0E0A               	movlw	10
 15428  005580                     u13741:
 15429  005580  6ADE               	clrf	postinc2,c
 15430  005582  06E8               	decf	wreg,f,c
 15431  005584  E2FD               	bc	u13741
 15432  005586                     
 15433                           ; BSR set to: 0
 15434                           ;app_atcommand.c: 245: char param[32] = {0};
 15435  005586  EE20  F060         	lfsr	2,parse_command@param
 15436  00558A  0E1F               	movlw	31
 15437  00558C                     u13751:
 15438  00558C  6ADE               	clrf	postinc2,c
 15439  00558E  06E8               	decf	wreg,f,c
 15440  005590  E2FD               	bc	u13751
 15441                           
 15442                           ;app_atcommand.c: 246: uint8_t cmdidx = 0, paramidx = 0;
 15443  005592  0E00               	movlw	0
 15444  005594  6F90               	movwf	parse_command@cmdidx& (0+255),b
 15445  005596  0E00               	movlw	0
 15446  005598  6F8F               	movwf	parse_command@paramidx& (0+255),b
 15447                           
 15448                           ;app_atcommand.c: 248: e_ParseState retval = AT_PARSE_NONE;
 15449  00559A  0E00               	movlw	0
 15450  00559C  6F80               	movwf	parse_command@retval& (0+255),b
 15451  00559E                     l13846:
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;app_atcommand.c: 252: {;app_atcommand.c: 253: ch = *buff;
 15455  00559E  C029  FFD9         	movff	parse_command@buff,fsr2l
 15456  0055A2  C02A  FFDA         	movff	parse_command@buff+1,fsr2h
 15457  0055A6  50DF               	movf	indf2,w,c
 15458  0055A8  6F91               	movwf	parse_command@ch& (0+255),b
 15459                           
 15460                           ;app_atcommand.c: 254: switch (seq)
 15461  0055AA  EF1F  F02D         	goto	l13990
 15462  0055AE                     l13848:
 15463                           
 15464                           ; BSR set to: 0
 15465                           ;app_atcommand.c: 257: if (ch == 'A' || ch == 'T' || ch == 'a' || ch == 't') {
 15466  0055AE  0E41               	movlw	65
 15467  0055B0  1991               	xorwf	parse_command@ch& (0+255),w,b
 15468  0055B2  B4D8               	btfsc	status,2,c
 15469  0055B4  EFDE  F02A         	goto	u13761
 15470  0055B8  EFE0  F02A         	goto	u13760
 15471  0055BC                     u13761:
 15472  0055BC  EFFB  F02A         	goto	l13856
 15473  0055C0                     u13760:
 15474  0055C0                     
 15475                           ; BSR set to: 0
 15476  0055C0  0E54               	movlw	84
 15477  0055C2  1991               	xorwf	parse_command@ch& (0+255),w,b
 15478  0055C4  B4D8               	btfsc	status,2,c
 15479  0055C6  EFE7  F02A         	goto	u13771
 15480  0055CA  EFE9  F02A         	goto	u13770
 15481  0055CE                     u13771:
 15482  0055CE  EFFB  F02A         	goto	l13856
 15483  0055D2                     u13770:
 15484  0055D2                     
 15485                           ; BSR set to: 0
 15486  0055D2  0E61               	movlw	97
 15487  0055D4  1991               	xorwf	parse_command@ch& (0+255),w,b
 15488  0055D6  B4D8               	btfsc	status,2,c
 15489  0055D8  EFF0  F02A         	goto	u13781
 15490  0055DC  EFF2  F02A         	goto	u13780
 15491  0055E0                     u13781:
 15492  0055E0  EFFB  F02A         	goto	l13856
 15493  0055E4                     u13780:
 15494  0055E4                     
 15495                           ; BSR set to: 0
 15496  0055E4  0E74               	movlw	116
 15497  0055E6  1991               	xorwf	parse_command@ch& (0+255),w,b
 15498  0055E8  A4D8               	btfss	status,2,c
 15499  0055EA  EFF9  F02A         	goto	u13791
 15500  0055EE  EFFB  F02A         	goto	u13790
 15501  0055F2                     u13791:
 15502  0055F2  EF32  F02D         	goto	l13992
 15503  0055F6                     u13790:
 15504  0055F6                     l13856:
 15505                           
 15506                           ; BSR set to: 0
 15507                           ;app_atcommand.c: 258: cmd[cmdidx++] = ch;
 15508  0055F6  0E81               	movlw	low parse_command@cmd
 15509  0055F8  2590               	addwf	parse_command@cmdidx& (0+255),w,b
 15510  0055FA  6ED9               	movwf	fsr2l,c
 15511  0055FC  6ADA               	clrf	fsr2h,c
 15512  0055FE  0E00               	movlw	high parse_command@cmd
 15513  005600  22DA               	addwfc	fsr2h,f,c
 15514  005602  C091  FFDF         	movff	parse_command@ch,indf2
 15515  005606                     
 15516                           ; BSR set to: 0
 15517  005606  2B90               	incf	parse_command@cmdidx& (0+255),f,b
 15518  005608                     
 15519                           ; BSR set to: 0
 15520                           ;app_atcommand.c: 259: if (cmdidx > 1) {
 15521  005608  0E01               	movlw	1
 15522  00560A  6590               	cpfsgt	parse_command@cmdidx& (0+255),b
 15523  00560C  EF0A  F02B         	goto	u13801
 15524  005610  EF0C  F02B         	goto	u13800
 15525  005614                     u13801:
 15526  005614  EF32  F02D         	goto	l13992
 15527  005618                     u13800:
 15528  005618                     
 15529                           ; BSR set to: 0
 15530                           ;app_atcommand.c: 260: if ((cmd[0] == 'A' || cmd[0] == 'a') &&;app_atcommand.c: 261: (cm
      +                          d[1] == 'T' || cmd[1] == 't')) {
 15531  005618  0E41               	movlw	65
 15532  00561A  1981               	xorwf	parse_command@cmd& (0+255),w,b
 15533  00561C  B4D8               	btfsc	status,2,c
 15534  00561E  EF13  F02B         	goto	u13811
 15535  005622  EF15  F02B         	goto	u13810
 15536  005626                     u13811:
 15537  005626  EF1E  F02B         	goto	l13866
 15538  00562A                     u13810:
 15539  00562A                     
 15540                           ; BSR set to: 0
 15541  00562A  0E61               	movlw	97
 15542  00562C  1981               	xorwf	parse_command@cmd& (0+255),w,b
 15543  00562E  A4D8               	btfss	status,2,c
 15544  005630  EF1C  F02B         	goto	u13821
 15545  005634  EF1E  F02B         	goto	u13820
 15546  005638                     u13821:
 15547  005638  EF34  F02B         	goto	l13872
 15548  00563C                     u13820:
 15549  00563C                     l13866:
 15550                           
 15551                           ; BSR set to: 0
 15552  00563C  0E54               	movlw	84
 15553  00563E  1982               	xorwf	(parse_command@cmd+1)& (0+255),w,b
 15554  005640  B4D8               	btfsc	status,2,c
 15555  005642  EF25  F02B         	goto	u13831
 15556  005646  EF27  F02B         	goto	u13830
 15557  00564A                     u13831:
 15558  00564A  EF30  F02B         	goto	l13870
 15559  00564E                     u13830:
 15560  00564E                     
 15561                           ; BSR set to: 0
 15562  00564E  0E74               	movlw	116
 15563  005650  1982               	xorwf	(parse_command@cmd+1)& (0+255),w,b
 15564  005652  A4D8               	btfss	status,2,c
 15565  005654  EF2E  F02B         	goto	u13841
 15566  005658  EF30  F02B         	goto	u13840
 15567  00565C                     u13841:
 15568  00565C  EF34  F02B         	goto	l13872
 15569  005660                     u13840:
 15570  005660                     l13870:
 15571                           
 15572                           ; BSR set to: 0
 15573                           ;app_atcommand.c: 262: seq = PARSE_START;
 15574  005660  0E01               	movlw	1
 15575  005662  6F8C               	movwf	parse_command@seq& (0+255),b
 15576                           
 15577                           ;app_atcommand.c: 263: } else retval = AT_PARSE_ERROR;
 15578  005664  EF32  F02D         	goto	l13992
 15579  005668                     l13872:
 15580                           
 15581                           ; BSR set to: 0
 15582  005668  0E02               	movlw	2
 15583  00566A  6F80               	movwf	parse_command@retval& (0+255),b
 15584  00566C  EF32  F02D         	goto	l13992
 15585  005670                     l13874:
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;app_atcommand.c: 268: if (ch == ' ') {
 15589  005670  0E20               	movlw	32
 15590  005672  1991               	xorwf	parse_command@ch& (0+255),w,b
 15591  005674  A4D8               	btfss	status,2,c
 15592  005676  EF3F  F02B         	goto	u13851
 15593  00567A  EF41  F02B         	goto	u13850
 15594  00567E                     u13851:
 15595  00567E  EF47  F02B         	goto	l13878
 15596  005682                     u13850:
 15597  005682                     
 15598                           ; BSR set to: 0
 15599                           ;app_atcommand.c: 269: seq = PARSE_PARAM;
 15600  005682  0E02               	movlw	2
 15601  005684  6F8C               	movwf	parse_command@seq& (0+255),b
 15602                           
 15603                           ;app_atcommand.c: 270: paramidx = 0;
 15604  005686  0E00               	movlw	0
 15605  005688  6F8F               	movwf	parse_command@paramidx& (0+255),b
 15606                           
 15607                           ;app_atcommand.c: 271: } else
 15608  00568A  EF32  F02D         	goto	l13992
 15609  00568E                     l13878:
 15610                           
 15611                           ; BSR set to: 0
 15612                           ;app_atcommand.c: 272: if (cmdidx > 8 &&;app_atcommand.c: 273: (cmd[0] == 'A' || cmd[0] 
      +                          == 'a') && (cmd[1] == 'T' || cmd[1] == 't') && (cmd[2] == 'C' || cmd[2] == 'c') &&;app_a
      +                          tcommand.c: 274: (cmd[3] == 'S' || cmd[3] == 's') && (cmd[4] == 'M' || cmd[4] == 'm') &&
      +                           (cmd[5] == 'O' || cmd[5] == 'o') &&;app_atcommand.c: 275: (cmd[6] == 'D' || cmd[6] == '
      +                          d') && (cmd[7] == 'E' || cmd[7] == 'e') && (cmd[8] == 'L' || cmd[8] == 'l'))
 15613  00568E  0E08               	movlw	8
 15614  005690  6590               	cpfsgt	parse_command@cmdidx& (0+255),b
 15615  005692  EF4D  F02B         	goto	u13861
 15616  005696  EF4F  F02B         	goto	u13860
 15617  00569A                     u13861:
 15618  00569A  EFFA  F02B         	goto	l13922
 15619  00569E                     u13860:
 15620  00569E                     
 15621                           ; BSR set to: 0
 15622  00569E  0E41               	movlw	65
 15623  0056A0  1981               	xorwf	parse_command@cmd& (0+255),w,b
 15624  0056A2  B4D8               	btfsc	status,2,c
 15625  0056A4  EF56  F02B         	goto	u13871
 15626  0056A8  EF58  F02B         	goto	u13870
 15627  0056AC                     u13871:
 15628  0056AC  EF61  F02B         	goto	l13884
 15629  0056B0                     u13870:
 15630  0056B0                     
 15631                           ; BSR set to: 0
 15632  0056B0  0E61               	movlw	97
 15633  0056B2  1981               	xorwf	parse_command@cmd& (0+255),w,b
 15634  0056B4  A4D8               	btfss	status,2,c
 15635  0056B6  EF5F  F02B         	goto	u13881
 15636  0056BA  EF61  F02B         	goto	u13880
 15637  0056BE                     u13881:
 15638  0056BE  EFFA  F02B         	goto	l13922
 15639  0056C2                     u13880:
 15640  0056C2                     l13884:
 15641                           
 15642                           ; BSR set to: 0
 15643  0056C2  0E54               	movlw	84
 15644  0056C4  1982               	xorwf	(parse_command@cmd+1)& (0+255),w,b
 15645  0056C6  B4D8               	btfsc	status,2,c
 15646  0056C8  EF68  F02B         	goto	u13891
 15647  0056CC  EF6A  F02B         	goto	u13890
 15648  0056D0                     u13891:
 15649  0056D0  EF73  F02B         	goto	l13888
 15650  0056D4                     u13890:
 15651  0056D4                     
 15652                           ; BSR set to: 0
 15653  0056D4  0E74               	movlw	116
 15654  0056D6  1982               	xorwf	(parse_command@cmd+1)& (0+255),w,b
 15655  0056D8  A4D8               	btfss	status,2,c
 15656  0056DA  EF71  F02B         	goto	u13901
 15657  0056DE  EF73  F02B         	goto	u13900
 15658  0056E2                     u13901:
 15659  0056E2  EFFA  F02B         	goto	l13922
 15660  0056E6                     u13900:
 15661  0056E6                     l13888:
 15662                           
 15663                           ; BSR set to: 0
 15664  0056E6  0E43               	movlw	67
 15665  0056E8  1983               	xorwf	(parse_command@cmd+2)& (0+255),w,b
 15666  0056EA  B4D8               	btfsc	status,2,c
 15667  0056EC  EF7A  F02B         	goto	u13911
 15668  0056F0  EF7C  F02B         	goto	u13910
 15669  0056F4                     u13911:
 15670  0056F4  EF85  F02B         	goto	l13892
 15671  0056F8                     u13910:
 15672  0056F8                     
 15673                           ; BSR set to: 0
 15674  0056F8  0E63               	movlw	99
 15675  0056FA  1983               	xorwf	(parse_command@cmd+2)& (0+255),w,b
 15676  0056FC  A4D8               	btfss	status,2,c
 15677  0056FE  EF83  F02B         	goto	u13921
 15678  005702  EF85  F02B         	goto	u13920
 15679  005706                     u13921:
 15680  005706  EFFA  F02B         	goto	l13922
 15681  00570A                     u13920:
 15682  00570A                     l13892:
 15683                           
 15684                           ; BSR set to: 0
 15685  00570A  0E53               	movlw	83
 15686  00570C  1984               	xorwf	(parse_command@cmd+3)& (0+255),w,b
 15687  00570E  B4D8               	btfsc	status,2,c
 15688  005710  EF8C  F02B         	goto	u13931
 15689  005714  EF8E  F02B         	goto	u13930
 15690  005718                     u13931:
 15691  005718  EF97  F02B         	goto	l13896
 15692  00571C                     u13930:
 15693  00571C                     
 15694                           ; BSR set to: 0
 15695  00571C  0E73               	movlw	115
 15696  00571E  1984               	xorwf	(parse_command@cmd+3)& (0+255),w,b
 15697  005720  A4D8               	btfss	status,2,c
 15698  005722  EF95  F02B         	goto	u13941
 15699  005726  EF97  F02B         	goto	u13940
 15700  00572A                     u13941:
 15701  00572A  EFFA  F02B         	goto	l13922
 15702  00572E                     u13940:
 15703  00572E                     l13896:
 15704                           
 15705                           ; BSR set to: 0
 15706  00572E  0E4D               	movlw	77
 15707  005730  1985               	xorwf	(parse_command@cmd+4)& (0+255),w,b
 15708  005732  B4D8               	btfsc	status,2,c
 15709  005734  EF9E  F02B         	goto	u13951
 15710  005738  EFA0  F02B         	goto	u13950
 15711  00573C                     u13951:
 15712  00573C  EFA9  F02B         	goto	l13900
 15713  005740                     u13950:
 15714  005740                     
 15715                           ; BSR set to: 0
 15716  005740  0E6D               	movlw	109
 15717  005742  1985               	xorwf	(parse_command@cmd+4)& (0+255),w,b
 15718  005744  A4D8               	btfss	status,2,c
 15719  005746  EFA7  F02B         	goto	u13961
 15720  00574A  EFA9  F02B         	goto	u13960
 15721  00574E                     u13961:
 15722  00574E  EFFA  F02B         	goto	l13922
 15723  005752                     u13960:
 15724  005752                     l13900:
 15725                           
 15726                           ; BSR set to: 0
 15727  005752  0E4F               	movlw	79
 15728  005754  1986               	xorwf	(parse_command@cmd+5)& (0+255),w,b
 15729  005756  B4D8               	btfsc	status,2,c
 15730  005758  EFB0  F02B         	goto	u13971
 15731  00575C  EFB2  F02B         	goto	u13970
 15732  005760                     u13971:
 15733  005760  EFBB  F02B         	goto	l13904
 15734  005764                     u13970:
 15735  005764                     
 15736                           ; BSR set to: 0
 15737  005764  0E6F               	movlw	111
 15738  005766  1986               	xorwf	(parse_command@cmd+5)& (0+255),w,b
 15739  005768  A4D8               	btfss	status,2,c
 15740  00576A  EFB9  F02B         	goto	u13981
 15741  00576E  EFBB  F02B         	goto	u13980
 15742  005772                     u13981:
 15743  005772  EFFA  F02B         	goto	l13922
 15744  005776                     u13980:
 15745  005776                     l13904:
 15746                           
 15747                           ; BSR set to: 0
 15748  005776  0E44               	movlw	68
 15749  005778  1987               	xorwf	(parse_command@cmd+6)& (0+255),w,b
 15750  00577A  B4D8               	btfsc	status,2,c
 15751  00577C  EFC2  F02B         	goto	u13991
 15752  005780  EFC4  F02B         	goto	u13990
 15753  005784                     u13991:
 15754  005784  EFCD  F02B         	goto	l13908
 15755  005788                     u13990:
 15756  005788                     
 15757                           ; BSR set to: 0
 15758  005788  0E64               	movlw	100
 15759  00578A  1987               	xorwf	(parse_command@cmd+6)& (0+255),w,b
 15760  00578C  A4D8               	btfss	status,2,c
 15761  00578E  EFCB  F02B         	goto	u14001
 15762  005792  EFCD  F02B         	goto	u14000
 15763  005796                     u14001:
 15764  005796  EFFA  F02B         	goto	l13922
 15765  00579A                     u14000:
 15766  00579A                     l13908:
 15767                           
 15768                           ; BSR set to: 0
 15769  00579A  0E45               	movlw	69
 15770  00579C  1988               	xorwf	(parse_command@cmd+7)& (0+255),w,b
 15771  00579E  B4D8               	btfsc	status,2,c
 15772  0057A0  EFD4  F02B         	goto	u14011
 15773  0057A4  EFD6  F02B         	goto	u14010
 15774  0057A8                     u14011:
 15775  0057A8  EFDF  F02B         	goto	l13912
 15776  0057AC                     u14010:
 15777  0057AC                     
 15778                           ; BSR set to: 0
 15779  0057AC  0E65               	movlw	101
 15780  0057AE  1988               	xorwf	(parse_command@cmd+7)& (0+255),w,b
 15781  0057B0  A4D8               	btfss	status,2,c
 15782  0057B2  EFDD  F02B         	goto	u14021
 15783  0057B6  EFDF  F02B         	goto	u14020
 15784  0057BA                     u14021:
 15785  0057BA  EFFA  F02B         	goto	l13922
 15786  0057BE                     u14020:
 15787  0057BE                     l13912:
 15788                           
 15789                           ; BSR set to: 0
 15790  0057BE  0E4C               	movlw	76
 15791  0057C0  1989               	xorwf	(parse_command@cmd+8)& (0+255),w,b
 15792  0057C2  B4D8               	btfsc	status,2,c
 15793  0057C4  EFE6  F02B         	goto	u14031
 15794  0057C8  EFE8  F02B         	goto	u14030
 15795  0057CC                     u14031:
 15796  0057CC  EFF1  F02B         	goto	l13916
 15797  0057D0                     u14030:
 15798  0057D0                     
 15799                           ; BSR set to: 0
 15800  0057D0  0E6C               	movlw	108
 15801  0057D2  1989               	xorwf	(parse_command@cmd+8)& (0+255),w,b
 15802  0057D4  A4D8               	btfss	status,2,c
 15803  0057D6  EFEF  F02B         	goto	u14041
 15804  0057DA  EFF1  F02B         	goto	u14040
 15805  0057DE                     u14041:
 15806  0057DE  EFFA  F02B         	goto	l13922
 15807  0057E2                     u14040:
 15808  0057E2                     l13916:
 15809                           
 15810                           ; BSR set to: 0
 15811                           ;app_atcommand.c: 276: {;app_atcommand.c: 277: seq = PARSE_PARAM;
 15812  0057E2  0E02               	movlw	2
 15813  0057E4  6F8C               	movwf	parse_command@seq& (0+255),b
 15814                           
 15815                           ;app_atcommand.c: 278: paramidx = 0;
 15816  0057E6  0E00               	movlw	0
 15817  0057E8  6F8F               	movwf	parse_command@paramidx& (0+255),b
 15818  0057EA                     
 15819                           ; BSR set to: 0
 15820                           ;app_atcommand.c: 279: param[paramidx++] = ch;
 15821  0057EA  C091  F060         	movff	parse_command@ch,parse_command@param
 15822  0057EE                     l13920:
 15823                           
 15824                           ; BSR set to: 0
 15825  0057EE  2B8F               	incf	parse_command@paramidx& (0+255),f,b
 15826                           
 15827                           ;app_atcommand.c: 280: } else if (ch == '\r' || ch == '\n') {
 15828  0057F0  EF32  F02D         	goto	l13992
 15829  0057F4                     l13922:
 15830                           
 15831                           ; BSR set to: 0
 15832  0057F4  0E0D               	movlw	13
 15833  0057F6  1991               	xorwf	parse_command@ch& (0+255),w,b
 15834  0057F8  B4D8               	btfsc	status,2,c
 15835  0057FA  EF01  F02C         	goto	u14051
 15836  0057FE  EF03  F02C         	goto	u14050
 15837  005802                     u14051:
 15838  005802  EF0C  F02C         	goto	l13926
 15839  005806                     u14050:
 15840  005806                     
 15841                           ; BSR set to: 0
 15842  005806  0E0A               	movlw	10
 15843  005808  1991               	xorwf	parse_command@ch& (0+255),w,b
 15844  00580A  A4D8               	btfss	status,2,c
 15845  00580C  EF0A  F02C         	goto	u14061
 15846  005810  EF0C  F02C         	goto	u14060
 15847  005814                     u14061:
 15848  005814  EF10  F02C         	goto	l13928
 15849  005818                     u14060:
 15850  005818                     l13926:
 15851                           
 15852                           ; BSR set to: 0
 15853                           ;app_atcommand.c: 281: seq = PARSE_COMPL;
 15854  005818  0E03               	movlw	3
 15855  00581A  6F8C               	movwf	parse_command@seq& (0+255),b
 15856                           
 15857                           ;app_atcommand.c: 282: } else {
 15858  00581C  EF32  F02D         	goto	l13992
 15859  005820                     l13928:
 15860                           
 15861                           ; BSR set to: 0
 15862                           ;app_atcommand.c: 283: if (cmdidx >= sizeof(cmd)) cmdidx = 0;
 15863  005820  0E0A               	movlw	10
 15864  005822  6590               	cpfsgt	parse_command@cmdidx& (0+255),b
 15865  005824  EF16  F02C         	goto	u14071
 15866  005828  EF18  F02C         	goto	u14070
 15867  00582C                     u14071:
 15868  00582C  EF1A  F02C         	goto	l13932
 15869  005830                     u14070:
 15870  005830                     
 15871                           ; BSR set to: 0
 15872  005830  0E00               	movlw	0
 15873  005832  6F90               	movwf	parse_command@cmdidx& (0+255),b
 15874  005834                     l13932:
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;app_atcommand.c: 284: cmd[cmdidx++] = ch;
 15878  005834  0E81               	movlw	low parse_command@cmd
 15879  005836  2590               	addwf	parse_command@cmdidx& (0+255),w,b
 15880  005838  6ED9               	movwf	fsr2l,c
 15881  00583A  6ADA               	clrf	fsr2h,c
 15882  00583C  0E00               	movlw	high parse_command@cmd
 15883  00583E  22DA               	addwfc	fsr2h,f,c
 15884  005840  C091  FFDF         	movff	parse_command@ch,indf2
 15885  005844                     
 15886                           ; BSR set to: 0
 15887  005844  2B90               	incf	parse_command@cmdidx& (0+255),f,b
 15888  005846  EF32  F02D         	goto	l13992
 15889  00584A                     l13936:
 15890                           
 15891                           ; BSR set to: 0
 15892                           ;app_atcommand.c: 288: if (ch == '\r' || ch == '\n') {
 15893  00584A  0E0D               	movlw	13
 15894  00584C  1991               	xorwf	parse_command@ch& (0+255),w,b
 15895  00584E  B4D8               	btfsc	status,2,c
 15896  005850  EF2C  F02C         	goto	u14081
 15897  005854  EF2E  F02C         	goto	u14080
 15898  005858                     u14081:
 15899  005858  EF0C  F02C         	goto	l13926
 15900  00585C                     u14080:
 15901  00585C                     
 15902                           ; BSR set to: 0
 15903  00585C  0E0A               	movlw	10
 15904  00585E  1991               	xorwf	parse_command@ch& (0+255),w,b
 15905  005860  A4D8               	btfss	status,2,c
 15906  005862  EF35  F02C         	goto	u14091
 15907  005866  EF37  F02C         	goto	u14090
 15908  00586A                     u14091:
 15909  00586A  EF39  F02C         	goto	l13942
 15910  00586E                     u14090:
 15911  00586E  EF0C  F02C         	goto	l13926
 15912  005872                     l13942:
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;app_atcommand.c: 291: if (paramidx >= sizeof(param)) paramidx = 0;
 15916  005872  0E1F               	movlw	31
 15917  005874  658F               	cpfsgt	parse_command@paramidx& (0+255),b
 15918  005876  EF3F  F02C         	goto	u14101
 15919  00587A  EF41  F02C         	goto	u14100
 15920  00587E                     u14101:
 15921  00587E  EF43  F02C         	goto	l13946
 15922  005882                     u14100:
 15923  005882                     
 15924                           ; BSR set to: 0
 15925  005882  0E00               	movlw	0
 15926  005884  6F8F               	movwf	parse_command@paramidx& (0+255),b
 15927  005886                     l13946:
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;app_atcommand.c: 292: param[paramidx++] = ch;
 15931  005886  0E60               	movlw	low parse_command@param
 15932  005888  258F               	addwf	parse_command@paramidx& (0+255),w,b
 15933  00588A  6ED9               	movwf	fsr2l,c
 15934  00588C  6ADA               	clrf	fsr2h,c
 15935  00588E  0E00               	movlw	high parse_command@param
 15936  005890  22DA               	addwfc	fsr2h,f,c
 15937  005892  C091  FFDF         	movff	parse_command@ch,indf2
 15938  005896  EFF7  F02B         	goto	l13920
 15939  00589A                     l13950:
 15940                           
 15941                           ; BSR set to: 0
 15942                           ;app_atcommand.c: 296: {;app_atcommand.c: 297: uint8_t chno = 0;
 15943  00589A  0E00               	movlw	0
 15944  00589C  6F8D               	movwf	parse_command@chno& (0+255),b
 15945  00589E                     
 15946                           ; BSR set to: 0
 15947                           ;app_atcommand.c: 298: int8_t idx = check_atcommand(cmd, &chno);
 15948  00589E  0E81               	movlw	low parse_command@cmd
 15949  0058A0  6E22               	movwf	check_atcommand@cmd^0,c
 15950  0058A2  0E00               	movlw	high parse_command@cmd
 15951  0058A4  6E23               	movwf	(check_atcommand@cmd+1)^0,c
 15952  0058A6  0E8D               	movlw	low parse_command@chno
 15953  0058A8  6E24               	movwf	check_atcommand@chno^0,c
 15954  0058AA  0E00               	movlw	high parse_command@chno
 15955  0058AC  6E25               	movwf	(check_atcommand@chno+1)^0,c
 15956  0058AE  EC86  F065         	call	_check_atcommand	;wreg free
 15957  0058B2  0100               	movlb	0	; () banked
 15958  0058B4  6F8E               	movwf	parse_command@idx& (0+255),b
 15959  0058B6                     
 15960                           ; BSR set to: 0
 15961                           ;app_atcommand.c: 299: if (idx >= 0) {
 15962  0058B6  BF8E               	btfsc	parse_command@idx& (0+255),7,b
 15963  0058B8  EF60  F02C         	goto	u14111
 15964  0058BC  EF62  F02C         	goto	u14110
 15965  0058C0                     u14111:
 15966  0058C0  EF1C  F02D         	goto	l13984
 15967  0058C4                     u14110:
 15968  0058C4                     
 15969                           ; BSR set to: 0
 15970                           ;app_atcommand.c: 300: status->channelno = chno;
 15971  0058C4  C02B  FFD9         	movff	parse_command@status,fsr2l
 15972  0058C8  C02C  FFDA         	movff	parse_command@status+1,fsr2h
 15973  0058CC  C08D  FFDF         	movff	parse_command@chno,indf2
 15974  0058D0                     
 15975                           ; BSR set to: 0
 15976                           ;app_atcommand.c: 301: status->atcommand = atcommand_type[idx].atcommand;
 15977  0058D0  518E               	movf	parse_command@idx& (0+255),w,b
 15978  0058D2  0D0D               	mullw	13
 15979  0058D4  0EF5               	movlw	low _atcommand_type
 15980  0058D6  24F3               	addwf	243,w,c
 15981  0058D8  6EF6               	movwf	tblptrl,c
 15982  0058DA  0E20               	movlw	high _atcommand_type
 15983  0058DC  20F4               	addwfc	244,w,c
 15984  0058DE  6EF7               	movwf	tblptrh,c
 15985  0058E0                     	if	0	;There are less than 3 active tblptr bytes
 15986  0058E0                     	endif
 15987  0058E0  EE20 F002          	lfsr	2,2
 15988  0058E4  502B               	movf	parse_command@status^0,w,c
 15989  0058E6  26D9               	addwf	fsr2l,f,c
 15990  0058E8  502C               	movf	(parse_command@status+1)^0,w,c
 15991  0058EA  22DA               	addwfc	fsr2h,f,c
 15992  0058EC  0008               	tblrd		*
 15993  0058EE  CFF5 FFDF          	movff	tablat,indf2
 15994  0058F2                     
 15995                           ; BSR set to: 0
 15996                           ;app_atcommand.c: 302: status->type = atcommand_type[idx].type;
 15997  0058F2  518E               	movf	parse_command@idx& (0+255),w,b
 15998  0058F4  0D0D               	mullw	13
 15999  0058F6  0E0C               	movlw	12
 16000  0058F8  26F3               	addwf	243,f,c
 16001  0058FA  0E00               	movlw	0
 16002  0058FC  22F4               	addwfc	244,f,c
 16003  0058FE  0EF5               	movlw	low _atcommand_type
 16004  005900  24F3               	addwf	243,w,c
 16005  005902  6EF6               	movwf	tblptrl,c
 16006  005904  0E20               	movlw	high _atcommand_type
 16007  005906  20F4               	addwfc	244,w,c
 16008  005908  6EF7               	movwf	tblptrh,c
 16009  00590A                     	if	0	;There are less than 3 active tblptr bytes
 16010  00590A                     	endif
 16011  00590A  EE20 F0AF          	lfsr	2,175
 16012  00590E  502B               	movf	parse_command@status^0,w,c
 16013  005910  26D9               	addwf	fsr2l,f,c
 16014  005912  502C               	movf	(parse_command@status+1)^0,w,c
 16015  005914  22DA               	addwfc	fsr2h,f,c
 16016  005916  0008               	tblrd		*
 16017  005918  CFF5 FFDF          	movff	tablat,indf2
 16018  00591C                     
 16019                           ; BSR set to: 0
 16020                           ;app_atcommand.c: 303: _strcpy(status->szcommand, cmd);
 16021  00591C  0E03               	movlw	3
 16022  00591E  242B               	addwf	parse_command@status^0,w,c
 16023  005920  6E0F               	movwf	__strcpy@dest^0,c
 16024  005922  0E00               	movlw	0
 16025  005924  202C               	addwfc	(parse_command@status+1)^0,w,c
 16026  005926  6E10               	movwf	(__strcpy@dest+1)^0,c
 16027  005928  0E81               	movlw	low parse_command@cmd
 16028  00592A  6E11               	movwf	__strcpy@source^0,c
 16029  00592C  0E00               	movlw	high parse_command@cmd
 16030  00592E  6E12               	movwf	(__strcpy@source+1)^0,c
 16031  005930  EC08  F06A         	call	__strcpy	;wreg free
 16032                           
 16033                           ;app_atcommand.c: 304: switch (status->type) {
 16034  005934  EF00  F02D         	goto	l13976
 16035  005938                     l13964:
 16036  005938  EE20 F00E          	lfsr	2,14
 16037  00593C  502B               	movf	parse_command@status^0,w,c
 16038  00593E  26D9               	addwf	fsr2l,f,c
 16039  005940  502C               	movf	(parse_command@status+1)^0,w,c
 16040  005942  22DA               	addwfc	fsr2h,f,c
 16041  005944  0E00               	movlw	0
 16042  005946  6EDF               	movwf	indf2,c
 16043  005948  EF19  F02D         	goto	l13978
 16044  00594C                     l13966:
 16045  00594C  0E0F               	movlw	15
 16046  00594E  242B               	addwf	parse_command@status^0,w,c
 16047  005950  6E10               	movwf	param_copy@src1^0,c
 16048  005952  0E00               	movlw	0
 16049  005954  202C               	addwfc	(parse_command@status+1)^0,w,c
 16050  005956  6E11               	movwf	(param_copy@src1+1)^0,c
 16051  005958  0E60               	movlw	low parse_command@param
 16052  00595A  6E12               	movwf	param_copy@src2^0,c
 16053  00595C  0E00               	movlw	high parse_command@param
 16054  00595E  6E13               	movwf	(param_copy@src2+1)^0,c
 16055  005960  EC98  F06A         	call	_param_copy	;wreg free
 16056  005964  EE20 F00E          	lfsr	2,14
 16057  005968  502B               	movf	parse_command@status^0,w,c
 16058  00596A  26D9               	addwf	fsr2l,f,c
 16059  00596C  502C               	movf	(parse_command@status+1)^0,w,c
 16060  00596E  22DA               	addwfc	fsr2h,f,c
 16061  005970  0E01               	movlw	1
 16062  005972  6EDF               	movwf	indf2,c
 16063  005974  EF19  F02D         	goto	l13978
 16064  005978                     l13970:
 16065  005978  0E0F               	movlw	15
 16066  00597A  242B               	addwf	parse_command@status^0,w,c
 16067  00597C  6E10               	movwf	param_copy@src1^0,c
 16068  00597E  0E00               	movlw	0
 16069  005980  202C               	addwfc	(parse_command@status+1)^0,w,c
 16070  005982  6E11               	movwf	(param_copy@src1+1)^0,c
 16071  005984  0E60               	movlw	low parse_command@param
 16072  005986  6E12               	movwf	param_copy@src2^0,c
 16073  005988  0E00               	movlw	high parse_command@param
 16074  00598A  6E13               	movwf	(param_copy@src2+1)^0,c
 16075  00598C  EC98  F06A         	call	_param_copy	;wreg free
 16076  005990  5010               	movf	?_param_copy^0,w,c
 16077  005992  1011               	iorwf	(?_param_copy+1)^0,w,c
 16078  005994  A4D8               	btfss	status,2,c
 16079  005996  EFCF  F02C         	goto	u14121
 16080  00599A  EFD3  F02C         	goto	u14120
 16081  00599E                     u14121:
 16082  00599E  6A2D               	clrf	??_parse_command^0,c
 16083  0059A0  2A2D               	incf	??_parse_command^0,f,c
 16084  0059A2  EFD4  F02C         	goto	u14138
 16085  0059A6                     u14120:
 16086  0059A6  6A2D               	clrf	??_parse_command^0,c
 16087  0059A8                     u14138:
 16088  0059A8  EE20 F00E          	lfsr	2,14
 16089  0059AC  502B               	movf	parse_command@status^0,w,c
 16090  0059AE  26D9               	addwf	fsr2l,f,c
 16091  0059B0  502C               	movf	(parse_command@status+1)^0,w,c
 16092  0059B2  22DA               	addwfc	fsr2h,f,c
 16093  0059B4  C02D  FFDF         	movff	??_parse_command,indf2
 16094  0059B8  EF19  F02D         	goto	l13978
 16095  0059BC                     l13972:
 16096  0059BC  0E0F               	movlw	15
 16097  0059BE  242B               	addwf	parse_command@status^0,w,c
 16098  0059C0  6E0F               	movwf	__strcpy@dest^0,c
 16099  0059C2  0E00               	movlw	0
 16100  0059C4  202C               	addwfc	(parse_command@status+1)^0,w,c
 16101  0059C6  6E10               	movwf	(__strcpy@dest+1)^0,c
 16102  0059C8  0E60               	movlw	low parse_command@param
 16103  0059CA  6E11               	movwf	__strcpy@source^0,c
 16104  0059CC  0E00               	movlw	high parse_command@param
 16105  0059CE  6E12               	movwf	(__strcpy@source+1)^0,c
 16106  0059D0  EC08  F06A         	call	__strcpy	;wreg free
 16107  0059D4  500F               	movf	?__strcpy^0,w,c
 16108  0059D6  1010               	iorwf	(?__strcpy+1)^0,w,c
 16109  0059D8  A4D8               	btfss	status,2,c
 16110  0059DA  EFF1  F02C         	goto	u14141
 16111  0059DE  EFF5  F02C         	goto	u14140
 16112  0059E2                     u14141:
 16113  0059E2  6A2D               	clrf	??_parse_command^0,c
 16114  0059E4  2A2D               	incf	??_parse_command^0,f,c
 16115  0059E6  EFF6  F02C         	goto	u14158
 16116  0059EA                     u14140:
 16117  0059EA  6A2D               	clrf	??_parse_command^0,c
 16118  0059EC                     u14158:
 16119  0059EC  EE20 F00E          	lfsr	2,14
 16120  0059F0  502B               	movf	parse_command@status^0,w,c
 16121  0059F2  26D9               	addwf	fsr2l,f,c
 16122  0059F4  502C               	movf	(parse_command@status+1)^0,w,c
 16123  0059F6  22DA               	addwfc	fsr2h,f,c
 16124  0059F8  C02D  FFDF         	movff	??_parse_command,indf2
 16125  0059FC  EF19  F02D         	goto	l13978
 16126  005A00                     l13976:
 16127  005A00  EE20 F0AF          	lfsr	2,175
 16128  005A04  502B               	movf	parse_command@status^0,w,c
 16129  005A06  26D9               	addwf	fsr2l,f,c
 16130  005A08  502C               	movf	(parse_command@status+1)^0,w,c
 16131  005A0A  22DA               	addwfc	fsr2h,f,c
 16132  005A0C  50DF               	movf	indf2,w,c
 16133                           
 16134                           ; Switch size 1, requested type "simple"
 16135                           ; Number of cases is 4, Range of values is 0 to 3
 16136                           ; switch strategies available:
 16137                           ; Name         Instructions Cycles
 16138                           ; simple_byte           13     7 (average)
 16139                           ;	Chosen strategy is simple_byte
 16140  005A0E  0A00               	xorlw	0	; case 0
 16141  005A10  B4D8               	btfsc	status,2,c
 16142  005A12  EF9C  F02C         	goto	l13964
 16143  005A16  0A01               	xorlw	1	; case 1
 16144  005A18  B4D8               	btfsc	status,2,c
 16145  005A1A  EFA6  F02C         	goto	l13966
 16146  005A1E  0A03               	xorlw	3	; case 2
 16147  005A20  B4D8               	btfsc	status,2,c
 16148  005A22  EFBC  F02C         	goto	l13970
 16149  005A26  0A01               	xorlw	1	; case 3
 16150  005A28  B4D8               	btfsc	status,2,c
 16151  005A2A  EFDE  F02C         	goto	l13972
 16152  005A2E  EF19  F02D         	goto	l13978
 16153  005A32                     l13978:
 16154                           
 16155                           ;app_atcommand.c: 310: return AT_PARSE_OK;
 16156  005A32  0E01               	movlw	1
 16157  005A34  EF45  F02D         	goto	l846
 16158  005A38                     l13984:
 16159                           
 16160                           ; BSR set to: 0
 16161                           ;app_atcommand.c: 312: return AT_PARSE_ERROR;
 16162  005A38  0E02               	movlw	2
 16163  005A3A  EF45  F02D         	goto	l846
 16164  005A3E                     l13990:
 16165                           
 16166                           ; BSR set to: 0
 16167  005A3E  518C               	movf	parse_command@seq& (0+255),w,b
 16168                           
 16169                           ; Switch size 1, requested type "simple"
 16170                           ; Number of cases is 4, Range of values is 0 to 3
 16171                           ; switch strategies available:
 16172                           ; Name         Instructions Cycles
 16173                           ; simple_byte           13     7 (average)
 16174                           ;	Chosen strategy is simple_byte
 16175  005A40  0A00               	xorlw	0	; case 0
 16176  005A42  B4D8               	btfsc	status,2,c
 16177  005A44  EFD7  F02A         	goto	l13848
 16178  005A48  0A01               	xorlw	1	; case 1
 16179  005A4A  B4D8               	btfsc	status,2,c
 16180  005A4C  EF38  F02B         	goto	l13874
 16181  005A50  0A03               	xorlw	3	; case 2
 16182  005A52  B4D8               	btfsc	status,2,c
 16183  005A54  EF25  F02C         	goto	l13936
 16184  005A58  0A01               	xorlw	1	; case 3
 16185  005A5A  B4D8               	btfsc	status,2,c
 16186  005A5C  EF4D  F02C         	goto	l13950
 16187  005A60  EF32  F02D         	goto	l13992
 16188  005A64                     l13992:
 16189                           
 16190                           ; BSR set to: 0
 16191                           ;app_atcommand.c: 316: if (ch) buff++;
 16192  005A64  5191               	movf	parse_command@ch& (0+255),w,b
 16193  005A66  B4D8               	btfsc	status,2,c
 16194  005A68  EF38  F02D         	goto	u14161
 16195  005A6C  EF3A  F02D         	goto	u14160
 16196  005A70                     u14161:
 16197  005A70  EF3C  F02D         	goto	l13996
 16198  005A74                     u14160:
 16199  005A74                     
 16200                           ; BSR set to: 0
 16201  005A74  4A29               	infsnz	parse_command@buff^0,f,c
 16202  005A76  2A2A               	incf	(parse_command@buff+1)^0,f,c
 16203  005A78                     l13996:
 16204                           
 16205                           ; BSR set to: 0
 16206                           ;app_atcommand.c: 317: } while(ch);
 16207  005A78  5191               	movf	parse_command@ch& (0+255),w,b
 16208  005A7A  A4D8               	btfss	status,2,c
 16209  005A7C  EF42  F02D         	goto	u14171
 16210  005A80  EF44  F02D         	goto	u14170
 16211  005A84                     u14171:
 16212  005A84  EFCF  F02A         	goto	l13846
 16213  005A88                     u14170:
 16214  005A88                     
 16215                           ; BSR set to: 0
 16216                           ;app_atcommand.c: 319: return retval;
 16217  005A88  5180               	movf	parse_command@retval& (0+255),w,b
 16218  005A8A                     l846:
 16219  005A8A  0012               	return		;funcret
 16220  005A8C                     __end_of_parse_command:
 16221                           	callstack 0
 16222                           
 16223 ;; *************** function _param_copy *****************
 16224 ;; Defined at:
 16225 ;;		line 187 in file "app_atcommand.c"
 16226 ;; Parameters:    Size  Location     Type
 16227 ;;  src1            2   15[COMRAM] PTR unsigned char 
 16228 ;;		 -> g_atcommand(242), 
 16229 ;;  src2            2   17[COMRAM] PTR const unsigned char 
 16230 ;;		 -> parse_command@param(32), 
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;  i               2   19[COMRAM] unsigned int 
 16233 ;;  ch              1   21[COMRAM] unsigned char 
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  2   15[COMRAM] unsigned int 
 16236 ;; Registers used:
 16237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16238 ;; Tracked objects:
 16239 ;;		On entry : 0/0
 16240 ;;		On exit  : 0/0
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16243 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16244 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16246 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16247 ;;Total ram usage:        7 bytes
 16248 ;; Hardware stack levels used: 1
 16249 ;; Hardware stack levels required when called: 4
 16250 ;; This function calls:
 16251 ;;		_check_param
 16252 ;; This function is called by:
 16253 ;;		_parse_command
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text73
 16258  00D530                     __ptext73:
 16259                           	callstack 0
 16260  00D530                     _param_copy:
 16261                           	callstack 24
 16262  00D530                     
 16263                           ;app_atcommand.c: 189: unsigned int i = 0;
 16264  00D530  0E00               	movlw	0
 16265  00D532  6E15               	movwf	(param_copy@i+1)^0,c
 16266  00D534  0E00               	movlw	0
 16267  00D536  6E14               	movwf	param_copy@i^0,c
 16268  00D538                     
 16269                           ;app_atcommand.c: 191: if(!src1 || !src2) return 0;
 16270  00D538  5010               	movf	param_copy@src1^0,w,c
 16271  00D53A  1011               	iorwf	(param_copy@src1+1)^0,w,c
 16272  00D53C  B4D8               	btfsc	status,2,c
 16273  00D53E  EFA3  F06A         	goto	u12791
 16274  00D542  EFA5  F06A         	goto	u12790
 16275  00D546                     u12791:
 16276  00D546  EFAE  F06A         	goto	l12936
 16277  00D54A                     u12790:
 16278  00D54A  5012               	movf	param_copy@src2^0,w,c
 16279  00D54C  1013               	iorwf	(param_copy@src2+1)^0,w,c
 16280  00D54E  A4D8               	btfss	status,2,c
 16281  00D550  EFAC  F06A         	goto	u12801
 16282  00D554  EFAE  F06A         	goto	u12800
 16283  00D558                     u12801:
 16284  00D558  EFB4  F06A         	goto	l12940
 16285  00D55C                     u12800:
 16286  00D55C                     l12936:
 16287  00D55C  0E00               	movlw	0
 16288  00D55E  6E11               	movwf	(?_param_copy+1)^0,c
 16289  00D560  0E00               	movlw	0
 16290  00D562  6E10               	movwf	?_param_copy^0,c
 16291  00D564  EFDD  F06A         	goto	l760
 16292  00D568                     l12940:
 16293                           
 16294                           ;app_atcommand.c: 193: ch = *src2++;
 16295  00D568  C012  FFD9         	movff	param_copy@src2,fsr2l
 16296  00D56C  C013  FFDA         	movff	param_copy@src2+1,fsr2h
 16297  00D570  50DF               	movf	indf2,w,c
 16298  00D572  6E16               	movwf	param_copy@ch^0,c
 16299  00D574  4A12               	infsnz	param_copy@src2^0,f,c
 16300  00D576  2A13               	incf	(param_copy@src2+1)^0,f,c
 16301  00D578                     
 16302                           ;app_atcommand.c: 194: if (check_param(ch)) {
 16303  00D578  5016               	movf	param_copy@ch^0,w,c
 16304  00D57A  ECAA  F070         	call	_check_param
 16305  00D57E  0900               	iorlw	0
 16306  00D580  B4D8               	btfsc	status,2,c
 16307  00D582  EFC5  F06A         	goto	u12811
 16308  00D586  EFC7  F06A         	goto	u12810
 16309  00D58A                     u12811:
 16310  00D58A  EFD1  F06A         	goto	l12952
 16311  00D58E                     u12810:
 16312  00D58E                     
 16313                           ;app_atcommand.c: 195: *src1++ = ch;
 16314  00D58E  C010  FFD9         	movff	param_copy@src1,fsr2l
 16315  00D592  C011  FFDA         	movff	param_copy@src1+1,fsr2h
 16316  00D596  C016  FFDF         	movff	param_copy@ch,indf2
 16317  00D59A  4A10               	infsnz	param_copy@src1^0,f,c
 16318  00D59C  2A11               	incf	(param_copy@src1+1)^0,f,c
 16319  00D59E                     
 16320                           ;app_atcommand.c: 196: i++;
 16321  00D59E  4A14               	infsnz	param_copy@i^0,f,c
 16322  00D5A0  2A15               	incf	(param_copy@i+1)^0,f,c
 16323  00D5A2                     l12952:
 16324                           
 16325                           ;app_atcommand.c: 197: };app_atcommand.c: 198: } while(ch);
 16326  00D5A2  5016               	movf	param_copy@ch^0,w,c
 16327  00D5A4  A4D8               	btfss	status,2,c
 16328  00D5A6  EFD7  F06A         	goto	u12821
 16329  00D5AA  EFD9  F06A         	goto	u12820
 16330  00D5AE                     u12821:
 16331  00D5AE  EFB4  F06A         	goto	l12940
 16332  00D5B2                     u12820:
 16333  00D5B2                     
 16334                           ;app_atcommand.c: 199: return i;
 16335  00D5B2  C014  F010         	movff	param_copy@i,?_param_copy
 16336  00D5B6  C015  F011         	movff	param_copy@i+1,?_param_copy+1
 16337  00D5BA                     l760:
 16338  00D5BA  0012               	return		;funcret
 16339  00D5BC                     __end_of_param_copy:
 16340                           	callstack 0
 16341                           
 16342 ;; *************** function _check_param *****************
 16343 ;; Defined at:
 16344 ;;		line 179 in file "app_atcommand.c"
 16345 ;; Parameters:    Size  Location     Type
 16346 ;;  param           1    wreg     unsigned char 
 16347 ;; Auto vars:     Size  Location     Type
 16348 ;;  param           1   14[COMRAM] unsigned char 
 16349 ;; Return value:  Size  Location     Type
 16350 ;;                  1    wreg      unsigned char 
 16351 ;; Registers used:
 16352 ;;		wreg, status,2, status,0
 16353 ;; Tracked objects:
 16354 ;;		On entry : 0/0
 16355 ;;		On exit  : 0/0
 16356 ;;		Unchanged: 0/0
 16357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16362 ;;Total ram usage:        1 bytes
 16363 ;; Hardware stack levels used: 1
 16364 ;; Hardware stack levels required when called: 3
 16365 ;; This function calls:
 16366 ;;		Nothing
 16367 ;; This function is called by:
 16368 ;;		_param_copy
 16369 ;; This function uses a non-reentrant model
 16370 ;;
 16371                           
 16372                           	psect	text74
 16373  00E154                     __ptext74:
 16374                           	callstack 0
 16375  00E154                     _check_param:
 16376                           	callstack 24
 16377                           
 16378                           ;incstack = 0
 16379                           ;check_param@param stored from wreg
 16380  00E154  6E0F               	movwf	check_param@param^0,c
 16381  00E156                     
 16382                           ;app_atcommand.c: 181: if (param == '-' || param == '.' || param == ',' ||;app_atcommand
      +                          .c: 182: (param >= '0' && param <= '9'))
 16383  00E156  0E2D               	movlw	45
 16384  00E158  180F               	xorwf	check_param@param^0,w,c
 16385  00E15A  B4D8               	btfsc	status,2,c
 16386  00E15C  EFB2  F070         	goto	u11911
 16387  00E160  EFB4  F070         	goto	u11910
 16388  00E164                     u11911:
 16389  00E164  EFD6  F070         	goto	l12234
 16390  00E168                     u11910:
 16391  00E168  0E2E               	movlw	46
 16392  00E16A  180F               	xorwf	check_param@param^0,w,c
 16393  00E16C  B4D8               	btfsc	status,2,c
 16394  00E16E  EFBB  F070         	goto	u11921
 16395  00E172  EFBD  F070         	goto	u11920
 16396  00E176                     u11921:
 16397  00E176  EFD6  F070         	goto	l12234
 16398  00E17A                     u11920:
 16399  00E17A  0E2C               	movlw	44
 16400  00E17C  180F               	xorwf	check_param@param^0,w,c
 16401  00E17E  B4D8               	btfsc	status,2,c
 16402  00E180  EFC4  F070         	goto	u11931
 16403  00E184  EFC6  F070         	goto	u11930
 16404  00E188                     u11931:
 16405  00E188  EFD6  F070         	goto	l12234
 16406  00E18C                     u11930:
 16407  00E18C  0E2F               	movlw	47
 16408  00E18E  640F               	cpfsgt	check_param@param^0,c
 16409  00E190  EFCC  F070         	goto	u11941
 16410  00E194  EFCE  F070         	goto	u11940
 16411  00E198                     u11941:
 16412  00E198  EFD9  F070         	goto	l12238
 16413  00E19C                     u11940:
 16414  00E19C  0E3A               	movlw	58
 16415  00E19E  600F               	cpfslt	check_param@param^0,c
 16416  00E1A0  EFD4  F070         	goto	u11951
 16417  00E1A4  EFD6  F070         	goto	u11950
 16418  00E1A8                     u11951:
 16419  00E1A8  EFD9  F070         	goto	l12238
 16420  00E1AC                     u11950:
 16421  00E1AC                     l12234:
 16422                           
 16423                           ;app_atcommand.c: 183: return 1;
 16424  00E1AC  0E01               	movlw	1
 16425  00E1AE  EFDA  F070         	goto	l754
 16426  00E1B2                     l12238:
 16427                           
 16428                           ;app_atcommand.c: 184: return 0;
 16429  00E1B2  0E00               	movlw	0
 16430  00E1B4                     l754:
 16431  00E1B4  0012               	return		;funcret
 16432  00E1B6                     __end_of_check_param:
 16433                           	callstack 0
 16434                           
 16435 ;; *************** function _check_atcommand *****************
 16436 ;; Defined at:
 16437 ;;		line 226 in file "app_atcommand.c"
 16438 ;; Parameters:    Size  Location     Type
 16439 ;;  cmd             2   33[COMRAM] PTR const unsigned char 
 16440 ;;		 -> parse_command@cmd(11), 
 16441 ;;  chno            2   35[COMRAM] PTR unsigned char 
 16442 ;;		 -> parse_command@chno(1), 
 16443 ;; Auto vars:     Size  Location     Type
 16444 ;;  i               1   39[COMRAM] unsigned char 
 16445 ;; Return value:  Size  Location     Type
 16446 ;;                  1    wreg      char 
 16447 ;; Registers used:
 16448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16449 ;; Tracked objects:
 16450 ;;		On entry : 0/0
 16451 ;;		On exit  : 0/0
 16452 ;;		Unchanged: 0/0
 16453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16456 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16457 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16458 ;;Total ram usage:        7 bytes
 16459 ;; Hardware stack levels used: 1
 16460 ;; Hardware stack levels required when called: 4
 16461 ;; This function calls:
 16462 ;;		__strlen
 16463 ;;		_atcommand_compare
 16464 ;; This function is called by:
 16465 ;;		_parse_command
 16466 ;; This function uses a non-reentrant model
 16467 ;;
 16468                           
 16469                           	psect	text75
 16470  00CB0C                     __ptext75:
 16471                           	callstack 0
 16472  00CB0C                     _check_atcommand:
 16473                           	callstack 24
 16474  00CB0C                     
 16475                           ;app_atcommand.c: 228: for (uint8_t i = 0 ; i < sizeof(atcommand_type)/sizeof(s_Command_
      +                          type) ; i++)
 16476  00CB0C  0E00               	movlw	0
 16477  00CB0E  6E28               	movwf	check_atcommand@i^0,c
 16478  00CB10                     l12960:
 16479                           
 16480                           ;app_atcommand.c: 229: {;app_atcommand.c: 230: if (_strlen(cmd) == _strlen(atcommand_typ
      +                          e[i].szcommand))
 16481  00CB10  C022  F00F         	movff	check_atcommand@cmd,__strlen@source
 16482  00CB14  C023  F010         	movff	check_atcommand@cmd+1,__strlen@source+1
 16483  00CB18  EC6F  F073         	call	__strlen	;wreg free
 16484  00CB1C  C00F  F026         	movff	?__strlen,??_check_atcommand
 16485  00CB20  C010  F027         	movff	?__strlen+1,??_check_atcommand+1
 16486  00CB24  5028               	movf	check_atcommand@i^0,w,c
 16487  00CB26  0D0D               	mullw	13
 16488  00CB28  0E01               	movlw	1
 16489  00CB2A  26F3               	addwf	243,f,c
 16490  00CB2C  0E00               	movlw	0
 16491  00CB2E  22F4               	addwfc	244,f,c
 16492  00CB30  0EF5               	movlw	low _atcommand_type
 16493  00CB32  24F3               	addwf	243,w,c
 16494  00CB34  6E0F               	movwf	__strlen@source^0,c
 16495  00CB36  0E20               	movlw	high _atcommand_type
 16496  00CB38  20F4               	addwfc	prodh,w,c
 16497  00CB3A  6E10               	movwf	(__strlen@source+1)^0,c
 16498  00CB3C  EC6F  F073         	call	__strlen	;wreg free
 16499  00CB40  500F               	movf	?__strlen^0,w,c
 16500  00CB42  1826               	xorwf	??_check_atcommand^0,w,c
 16501  00CB44  E107               	bnz	u12831
 16502  00CB46  5010               	movf	(?__strlen+1)^0,w,c
 16503  00CB48  1827               	xorwf	(??_check_atcommand+1)^0,w,c
 16504  00CB4A  A4D8               	btfss	status,2,c
 16505  00CB4C  EFAA  F065         	goto	u12831
 16506  00CB50  EFAC  F065         	goto	u12830
 16507  00CB54                     u12831:
 16508  00CB54  EFD5  F065         	goto	l12968
 16509  00CB58                     u12830:
 16510  00CB58                     
 16511                           ;app_atcommand.c: 231: {;app_atcommand.c: 232: if (atcommand_compare(atcommand_type[i].s
      +                          zcommand, cmd, _strlen(cmd), chno))
 16512  00CB58  5028               	movf	check_atcommand@i^0,w,c
 16513  00CB5A  0D0D               	mullw	13
 16514  00CB5C  0E01               	movlw	1
 16515  00CB5E  26F3               	addwf	243,f,c
 16516  00CB60  0E00               	movlw	0
 16517  00CB62  22F4               	addwfc	244,f,c
 16518  00CB64  0EF5               	movlw	low _atcommand_type
 16519  00CB66  24F3               	addwf	243,w,c
 16520  00CB68  6E13               	movwf	atcommand_compare@src1^0,c
 16521  00CB6A  0E20               	movlw	high _atcommand_type
 16522  00CB6C  20F4               	addwfc	prodh,w,c
 16523  00CB6E  6E14               	movwf	(atcommand_compare@src1+1)^0,c
 16524  00CB70  C022  F015         	movff	check_atcommand@cmd,atcommand_compare@src2
 16525  00CB74  C023  F016         	movff	check_atcommand@cmd+1,atcommand_compare@src2+1
 16526  00CB78  C022  F00F         	movff	check_atcommand@cmd,__strlen@source
 16527  00CB7C  C023  F010         	movff	check_atcommand@cmd+1,__strlen@source+1
 16528  00CB80  EC6F  F073         	call	__strlen	;wreg free
 16529  00CB84  500F               	movf	?__strlen^0,w,c
 16530  00CB86  6E17               	movwf	atcommand_compare@n^0,c
 16531  00CB88  C024  F018         	movff	check_atcommand@chno,atcommand_compare@channelno
 16532  00CB8C  C025  F019         	movff	check_atcommand@chno+1,atcommand_compare@channelno+1
 16533  00CB90  ECB5  F057         	call	_atcommand_compare	;wreg free
 16534  00CB94  0900               	iorlw	0
 16535  00CB96  B4D8               	btfsc	status,2,c
 16536  00CB98  EFD0  F065         	goto	u12841
 16537  00CB9C  EFD2  F065         	goto	u12840
 16538  00CBA0                     u12841:
 16539  00CBA0  EFD5  F065         	goto	l12968
 16540  00CBA4                     u12840:
 16541  00CBA4                     
 16542                           ;app_atcommand.c: 233: return i;
 16543  00CBA4  5028               	movf	check_atcommand@i^0,w,c
 16544  00CBA6  EFDF  F065         	goto	l783
 16545  00CBAA                     l12968:
 16546  00CBAA  2A28               	incf	check_atcommand@i^0,f,c
 16547  00CBAC  0E19               	movlw	25
 16548  00CBAE  6428               	cpfsgt	check_atcommand@i^0,c
 16549  00CBB0  EFDC  F065         	goto	u12851
 16550  00CBB4  EFDE  F065         	goto	u12850
 16551  00CBB8                     u12851:
 16552  00CBB8  EF88  F065         	goto	l12960
 16553  00CBBC                     u12850:
 16554  00CBBC                     
 16555                           ;app_atcommand.c: 235: };app_atcommand.c: 236: };app_atcommand.c: 237: return -1;
 16556  00CBBC  0EFF               	movlw	255
 16557  00CBBE                     l783:
 16558  00CBBE  0012               	return		;funcret
 16559  00CBC0                     __end_of_check_atcommand:
 16560                           	callstack 0
 16561                           
 16562 ;; *************** function _atcommand_compare *****************
 16563 ;; Defined at:
 16564 ;;		line 202 in file "app_atcommand.c"
 16565 ;; Parameters:    Size  Location     Type
 16566 ;;  src1            2   18[COMRAM] PTR const unsigned char 
 16567 ;;		 -> atcommand_type(338), 
 16568 ;;  src2            2   20[COMRAM] PTR const unsigned char 
 16569 ;;		 -> parse_command@cmd(11), 
 16570 ;;  n               1   22[COMRAM] unsigned char 
 16571 ;;  channelno       2   23[COMRAM] PTR unsigned char 
 16572 ;;		 -> parse_command@chno(1), 
 16573 ;; Auto vars:     Size  Location     Type
 16574 ;;  no              1   31[COMRAM] unsigned char 
 16575 ;;  ch              1   32[COMRAM] unsigned char 
 16576 ;; Return value:  Size  Location     Type
 16577 ;;                  1    wreg      unsigned char 
 16578 ;; Registers used:
 16579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 16580 ;; Tracked objects:
 16581 ;;		On entry : 0/0
 16582 ;;		On exit  : 0/0
 16583 ;;		Unchanged: 0/0
 16584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16585 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16586 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16587 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16588 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16589 ;;Total ram usage:       15 bytes
 16590 ;; Hardware stack levels used: 1
 16591 ;; Hardware stack levels required when called: 3
 16592 ;; This function calls:
 16593 ;;		Nothing
 16594 ;; This function is called by:
 16595 ;;		_check_atcommand
 16596 ;; This function uses a non-reentrant model
 16597 ;;
 16598                           
 16599                           	psect	text76
 16600  00AF6A                     __ptext76:
 16601                           	callstack 0
 16602  00AF6A                     _atcommand_compare:
 16603                           	callstack 24
 16604  00AF6A                     
 16605                           ;app_atcommand.c: 204: if(!src1 || !src2 || n<=0) return 0;
 16606  00AF6A  5013               	movf	atcommand_compare@src1^0,w,c
 16607  00AF6C  1014               	iorwf	(atcommand_compare@src1+1)^0,w,c
 16608  00AF6E  B4D8               	btfsc	status,2,c
 16609  00AF70  EFBC  F057         	goto	u11961
 16610  00AF74  EFBE  F057         	goto	u11960
 16611  00AF78                     u11961:
 16612  00AF78  EFCF  F057         	goto	l12248
 16613  00AF7C                     u11960:
 16614  00AF7C  5015               	movf	atcommand_compare@src2^0,w,c
 16615  00AF7E  1016               	iorwf	(atcommand_compare@src2+1)^0,w,c
 16616  00AF80  B4D8               	btfsc	status,2,c
 16617  00AF82  EFC5  F057         	goto	u11971
 16618  00AF86  EFC7  F057         	goto	u11970
 16619  00AF8A                     u11971:
 16620  00AF8A  EFCF  F057         	goto	l12248
 16621  00AF8E                     u11970:
 16622  00AF8E  5017               	movf	atcommand_compare@n^0,w,c
 16623  00AF90  A4D8               	btfss	status,2,c
 16624  00AF92  EFCD  F057         	goto	u11981
 16625  00AF96  EFCF  F057         	goto	u11980
 16626  00AF9A                     u11981:
 16627  00AF9A  EF36  F058         	goto	l12280
 16628  00AF9E                     u11980:
 16629  00AF9E                     l12248:
 16630  00AF9E  0E00               	movlw	0
 16631  00AFA0  EF40  F058         	goto	l769
 16632  00AFA4                     l12252:
 16633                           
 16634                           ;app_atcommand.c: 206: {;app_atcommand.c: 207: char ch = *src1;
 16635  00AFA4  C013  FFF6         	movff	atcommand_compare@src1,tblptrl
 16636  00AFA8  C014  FFF7         	movff	atcommand_compare@src1+1,tblptrh
 16637  00AFAC                     	if	0	;tblptru may be non-zero
 16638  00AFAC                     	endif
 16639  00AFAC                     	if	0	;tblptru may be non-zero
 16640  00AFAC                     	endif
 16641  00AFAC  0008               	tblrd		*
 16642  00AFAE  CFF5 F021          	movff	tablat,atcommand_compare@ch
 16643  00AFB2                     
 16644                           ;app_atcommand.c: 208: if (ch == '%')
 16645  00AFB2  0E25               	movlw	37
 16646  00AFB4  1821               	xorwf	atcommand_compare@ch^0,w,c
 16647  00AFB6  A4D8               	btfss	status,2,c
 16648  00AFB8  EFE0  F057         	goto	u11991
 16649  00AFBC  EFE2  F057         	goto	u11990
 16650  00AFC0                     u11991:
 16651  00AFC0  EF05  F058         	goto	l12270
 16652  00AFC4                     u11990:
 16653  00AFC4                     
 16654                           ;app_atcommand.c: 209: {;app_atcommand.c: 210: uint8_t no = *src2 - '0';
 16655  00AFC4  C015  FFD9         	movff	atcommand_compare@src2,fsr2l
 16656  00AFC8  C016  FFDA         	movff	atcommand_compare@src2+1,fsr2h
 16657  00AFCC  50DF               	movf	indf2,w,c
 16658  00AFCE  0FD0               	addlw	208
 16659  00AFD0  6E20               	movwf	atcommand_compare@no^0,c
 16660  00AFD2                     
 16661                           ;app_atcommand.c: 211: if (no > 0 && no <= 6) {
 16662  00AFD2  5020               	movf	atcommand_compare@no^0,w,c
 16663  00AFD4  B4D8               	btfsc	status,2,c
 16664  00AFD6  EFEF  F057         	goto	u12001
 16665  00AFDA  EFF1  F057         	goto	u12000
 16666  00AFDE                     u12001:
 16667  00AFDE  EFCF  F057         	goto	l12248
 16668  00AFE2                     u12000:
 16669  00AFE2  0E07               	movlw	7
 16670  00AFE4  6020               	cpfslt	atcommand_compare@no^0,c
 16671  00AFE6  EFF7  F057         	goto	u12011
 16672  00AFEA  EFF9  F057         	goto	u12010
 16673  00AFEE                     u12011:
 16674  00AFEE  EFCF  F057         	goto	l12248
 16675  00AFF2                     u12010:
 16676  00AFF2                     
 16677                           ;app_atcommand.c: 212: *channelno = no;
 16678  00AFF2  C018  FFD9         	movff	atcommand_compare@channelno,fsr2l
 16679  00AFF6  C019  FFDA         	movff	atcommand_compare@channelno+1,fsr2h
 16680  00AFFA  C020  FFDF         	movff	atcommand_compare@no,indf2
 16681  00AFFE                     
 16682                           ;app_atcommand.c: 213: ch = *src2;
 16683  00AFFE  C015  FFD9         	movff	atcommand_compare@src2,fsr2l
 16684  00B002  C016  FFDA         	movff	atcommand_compare@src2+1,fsr2h
 16685  00B006  50DF               	movf	indf2,w,c
 16686  00B008  6E21               	movwf	atcommand_compare@ch^0,c
 16687  00B00A                     l12270:
 16688                           
 16689                           ;app_atcommand.c: 216: };app_atcommand.c: 217: if (!(ch == *src2 || ch == (*src2 - 0x20)
      +                          ))
 16690  00B00A  C015  FFD9         	movff	atcommand_compare@src2,fsr2l
 16691  00B00E  C016  FFDA         	movff	atcommand_compare@src2+1,fsr2h
 16692  00B012  5021               	movf	atcommand_compare@ch^0,w,c
 16693  00B014  18DE               	xorwf	postinc2,w,c
 16694  00B016  B4D8               	btfsc	status,2,c
 16695  00B018  EF10  F058         	goto	u12021
 16696  00B01C  EF12  F058         	goto	u12020
 16697  00B020                     u12021:
 16698  00B020  EF32  F058         	goto	l12278
 16699  00B024                     u12020:
 16700  00B024  5021               	movf	atcommand_compare@ch^0,w,c
 16701  00B026  6E1A               	movwf	??_atcommand_compare^0,c
 16702  00B028  6A1B               	clrf	(??_atcommand_compare+1)^0,c
 16703  00B02A  0EE0               	movlw	224
 16704  00B02C  6E1C               	movwf	(??_atcommand_compare+2)^0,c
 16705  00B02E  0EFF               	movlw	255
 16706  00B030  6E1D               	movwf	(??_atcommand_compare+3)^0,c
 16707  00B032  C015  FFD9         	movff	atcommand_compare@src2,fsr2l
 16708  00B036  C016  FFDA         	movff	atcommand_compare@src2+1,fsr2h
 16709  00B03A  50DF               	movf	indf2,w,c
 16710  00B03C  6E1E               	movwf	(??_atcommand_compare+4)^0,c
 16711  00B03E  6A1F               	clrf	(??_atcommand_compare+5)^0,c
 16712  00B040  501C               	movf	(??_atcommand_compare+2)^0,w,c
 16713  00B042  261E               	addwf	(??_atcommand_compare+4)^0,f,c
 16714  00B044  501D               	movf	(??_atcommand_compare+3)^0,w,c
 16715  00B046  221F               	addwfc	(??_atcommand_compare+5)^0,f,c
 16716  00B048  501A               	movf	??_atcommand_compare^0,w,c
 16717  00B04A  181E               	xorwf	(??_atcommand_compare+4)^0,w,c
 16718  00B04C  E109               	bnz	u12030
 16719  00B04E  501B               	movf	(??_atcommand_compare+1)^0,w,c
 16720  00B050  181F               	xorwf	(??_atcommand_compare+5)^0,w,c
 16721  00B052  B4D8               	btfsc	status,2,c
 16722  00B054  EF2E  F058         	goto	u12031
 16723  00B058  EF30  F058         	goto	u12030
 16724  00B05C                     u12031:
 16725  00B05C  EF32  F058         	goto	l12278
 16726  00B060                     u12030:
 16727  00B060  EFCF  F057         	goto	l12248
 16728  00B064                     l12278:
 16729                           
 16730                           ;app_atcommand.c: 220: src1++;
 16731  00B064  4A13               	infsnz	atcommand_compare@src1^0,f,c
 16732  00B066  2A14               	incf	(atcommand_compare@src1+1)^0,f,c
 16733                           
 16734                           ;app_atcommand.c: 221: src2++;
 16735  00B068  4A15               	infsnz	atcommand_compare@src2^0,f,c
 16736  00B06A  2A16               	incf	(atcommand_compare@src2+1)^0,f,c
 16737  00B06C                     l12280:
 16738  00B06C  0617               	decf	atcommand_compare@n^0,f,c
 16739  00B06E  2817               	incf	atcommand_compare@n^0,w,c
 16740  00B070  A4D8               	btfss	status,2,c
 16741  00B072  EF3D  F058         	goto	u12041
 16742  00B076  EF3F  F058         	goto	u12040
 16743  00B07A                     u12041:
 16744  00B07A  EFD2  F057         	goto	l12252
 16745  00B07E                     u12040:
 16746  00B07E                     
 16747                           ;app_atcommand.c: 222: };app_atcommand.c: 223: return 1;
 16748  00B07E  0E01               	movlw	1
 16749  00B080                     l769:
 16750  00B080  0012               	return		;funcret
 16751  00B082                     __end_of_atcommand_compare:
 16752                           	callstack 0
 16753                           
 16754 ;; *************** function _build_response *****************
 16755 ;; Defined at:
 16756 ;;		line 458 in file "app_atcommand.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;  status          2  117[BANK0 ] PTR const struct .
 16759 ;;		 -> g_atcommand.status(176), g_atcommand(242), 
 16760 ;; Auto vars:     Size  Location     Type
 16761 ;;  temp            4  123[BANK0 ] float 
 16762 ;;  chNum           1  134[BANK0 ] unsigned char 
 16763 ;;  chNum           1  133[BANK0 ] unsigned char 
 16764 ;;  i               2  131[BANK0 ] int 
 16765 ;;  temp            4  127[BANK0 ] float 
 16766 ;;  len             1  136[BANK0 ] unsigned char 
 16767 ;;  chno            1  135[BANK0 ] unsigned char 
 16768 ;; Return value:  Size  Location     Type
 16769 ;;                  1    wreg      void 
 16770 ;; Registers used:
 16771 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16772 ;; Tracked objects:
 16773 ;;		On entry : 0/0
 16774 ;;		On exit  : 0/0
 16775 ;;		Unchanged: 0/0
 16776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16778 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16779 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16780 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16781 ;;Total ram usage:       20 bytes
 16782 ;; Hardware stack levels used: 1
 16783 ;; Hardware stack levels required when called: 7
 16784 ;; This function calls:
 16785 ;;		___fleq
 16786 ;;		___fltol
 16787 ;;		__ftoa
 16788 ;;		__itoa
 16789 ;;		__strcpy
 16790 ;;		_nvm_read_flash_all
 16791 ;;		_sensor_temp_fahrenheit
 16792 ;;		_sprintf
 16793 ;;		_write_command
 16794 ;; This function is called by:
 16795 ;;		_atcommand_task
 16796 ;; This function uses a non-reentrant model
 16797 ;;
 16798                           
 16799                           	psect	text77
 16800  002384                     __ptext77:
 16801                           	callstack 0
 16802  002384                     _build_response:
 16803                           	callstack 22
 16804  002384                     
 16805                           ;app_atcommand.c: 460: uint8_t chno = ((status->channelno - 1) < 0) ? 0 : status->channe
      +                          lno - 1;
 16806  002384  C0D5  FFD9         	movff	build_response@status,fsr2l
 16807  002388  C0D6  FFDA         	movff	build_response@status+1,fsr2h
 16808  00238C  50DF               	movf	indf2,w,c
 16809  00238E  0100               	movlb	0	; () banked
 16810  002390  6FD7               	movwf	??_build_response& (0+255),b
 16811  002392  6BD8               	clrf	(??_build_response+1)& (0+255),b
 16812  002394  0EFF               	movlw	255
 16813  002396  25D7               	addwf	??_build_response& (0+255),w,b
 16814  002398  0EFF               	movlw	255
 16815  00239A  21D8               	addwfc	(??_build_response+1)& (0+255),w,b
 16816  00239C  0B80               	andlw	128
 16817  00239E  A4D8               	btfss	status,2,c
 16818  0023A0  EFD4  F011         	goto	u20541
 16819  0023A4  EFD6  F011         	goto	u20540
 16820  0023A8                     u20541:
 16821  0023A8  EFE4  F011         	goto	l18842
 16822  0023AC                     u20540:
 16823  0023AC                     
 16824                           ; BSR set to: 0
 16825  0023AC  C0D5  FFD9         	movff	build_response@status,fsr2l
 16826  0023B0  C0D6  FFDA         	movff	build_response@status+1,fsr2h
 16827  0023B4  50DF               	movf	indf2,w,c
 16828  0023B6  6FD7               	movwf	??_build_response& (0+255),b
 16829  0023B8  0EFF               	movlw	255
 16830  0023BA  25D7               	addwf	??_build_response& (0+255),w,b
 16831  0023BC  6FD9               	movwf	_build_response$2481& (0+255),b
 16832  0023BE  6BDA               	clrf	(_build_response$2481+1)& (0+255),b
 16833  0023C0  0EFF               	movlw	255
 16834  0023C2  23DA               	addwfc	(_build_response$2481+1)& (0+255),f,b
 16835  0023C4  EFE8  F011         	goto	l18844
 16836  0023C8                     l18842:
 16837                           
 16838                           ; BSR set to: 0
 16839  0023C8  0E00               	movlw	0
 16840  0023CA  6FDA               	movwf	(_build_response$2481+1)& (0+255),b
 16841  0023CC  0E00               	movlw	0
 16842  0023CE  6FD9               	movwf	_build_response$2481& (0+255),b
 16843  0023D0                     l18844:
 16844                           
 16845                           ; BSR set to: 0
 16846  0023D0  C0D9  F0E7         	movff	_build_response$2481,build_response@chno
 16847  0023D4                     
 16848                           ; BSR set to: 0
 16849                           ;app_atcommand.c: 461: uint8_t len = _strcpy(&writeBuffer[0], status->szcommand);
 16850  0023D4  0EB0               	movlw	low _writeBuffer
 16851  0023D6  6E0F               	movwf	__strcpy@dest^0,c
 16852  0023D8  0E02               	movlw	high _writeBuffer
 16853  0023DA  6E10               	movwf	(__strcpy@dest+1)^0,c
 16854  0023DC  0E03               	movlw	3
 16855  0023DE  25D5               	addwf	build_response@status& (0+255),w,b
 16856  0023E0  6E11               	movwf	__strcpy@source^0,c
 16857  0023E2  0E00               	movlw	0
 16858  0023E4  21D6               	addwfc	(build_response@status+1)& (0+255),w,b
 16859  0023E6  6E12               	movwf	(__strcpy@source+1)^0,c
 16860  0023E8  EC08  F06A         	call	__strcpy	;wreg free
 16861  0023EC  500F               	movf	?__strcpy^0,w,c
 16862  0023EE  0100               	movlb	0	; () banked
 16863  0023F0  6FE8               	movwf	build_response@len& (0+255),b
 16864  0023F2                     
 16865                           ; BSR set to: 0
 16866                           ;app_atcommand.c: 462: writeBuffer[len++] = ' ';
 16867  0023F2  0EB0               	movlw	low _writeBuffer
 16868  0023F4  25E8               	addwf	build_response@len& (0+255),w,b
 16869  0023F6  6ED9               	movwf	fsr2l,c
 16870  0023F8  6ADA               	clrf	fsr2h,c
 16871  0023FA  0E02               	movlw	high _writeBuffer
 16872  0023FC  22DA               	addwfc	fsr2h,f,c
 16873  0023FE  0E20               	movlw	32
 16874  002400  6EDF               	movwf	indf2,c
 16875  002402                     
 16876                           ; BSR set to: 0
 16877  002402  2BE8               	incf	build_response@len& (0+255),f,b
 16878  002404                     
 16879                           ; BSR set to: 0
 16880                           ;app_atcommand.c: 464: if (status->atcommand >= ATCSMODEL && status->atcommand <= ATCEXT
      +                          M)
 16881  002404  EE20 F002          	lfsr	2,2
 16882  002408  51D5               	movf	build_response@status& (0+255),w,b
 16883  00240A  26D9               	addwf	fsr2l,f,c
 16884  00240C  51D6               	movf	(build_response@status+1)& (0+255),w,b
 16885  00240E  22DA               	addwfc	fsr2h,f,c
 16886  002410  0E09               	movlw	9
 16887  002412  64DF               	cpfsgt	indf2,c
 16888  002414  EF0E  F012         	goto	u20551
 16889  002418  EF10  F012         	goto	u20550
 16890  00241C                     u20551:
 16891  00241C  EFDC  F018         	goto	l19148
 16892  002420                     u20550:
 16893  002420                     
 16894                           ; BSR set to: 0
 16895  002420  EE20 F002          	lfsr	2,2
 16896  002424  51D5               	movf	build_response@status& (0+255),w,b
 16897  002426  26D9               	addwf	fsr2l,f,c
 16898  002428  51D6               	movf	(build_response@status+1)& (0+255),w,b
 16899  00242A  22DA               	addwfc	fsr2h,f,c
 16900  00242C  0E1A               	movlw	26
 16901  00242E  60DF               	cpfslt	indf2,c
 16902  002430  EF1C  F012         	goto	u20561
 16903  002434  EF1E  F012         	goto	u20560
 16904  002438                     u20561:
 16905  002438  EFDC  F018         	goto	l19148
 16906  00243C                     u20560:
 16907  00243C                     
 16908                           ; BSR set to: 0
 16909                           ;app_atcommand.c: 465: nvm_read_flash_all(&g_nvm.flash);
 16910  00243C  0E7A               	movlw	low (_g_nvm+1)
 16911  00243E  6E1F               	movwf	nvm_read_flash_all@flash^0,c
 16912  002440  0E01               	movlw	high (_g_nvm+1)
 16913  002442  6E20               	movwf	(nvm_read_flash_all@flash+1)^0,c
 16914  002444  EC3D  F077         	call	_nvm_read_flash_all	;wreg free
 16915  002448  EFDC  F018         	goto	l19148
 16916  00244C                     l18858:
 16917                           
 16918                           ; BSR set to: 0
 16919  00244C  0EB0               	movlw	low _writeBuffer
 16920  00244E  25E8               	addwf	build_response@len& (0+255),w,b
 16921  002450  6ED9               	movwf	fsr2l,c
 16922  002452  6ADA               	clrf	fsr2h,c
 16923  002454  0E02               	movlw	high _writeBuffer
 16924  002456  22DA               	addwfc	fsr2h,f,c
 16925  002458  0E4F               	movlw	79
 16926  00245A  6EDF               	movwf	indf2,c
 16927  00245C                     
 16928                           ; BSR set to: 0
 16929  00245C  2BE8               	incf	build_response@len& (0+255),f,b
 16930  00245E                     
 16931                           ; BSR set to: 0
 16932  00245E  0EB0               	movlw	low _writeBuffer
 16933  002460  25E8               	addwf	build_response@len& (0+255),w,b
 16934  002462  6ED9               	movwf	fsr2l,c
 16935  002464  6ADA               	clrf	fsr2h,c
 16936  002466  0E02               	movlw	high _writeBuffer
 16937  002468  22DA               	addwfc	fsr2h,f,c
 16938  00246A  0E4B               	movlw	75
 16939  00246C  6EDF               	movwf	indf2,c
 16940  00246E  2BE8               	incf	build_response@len& (0+255),f,b
 16941  002470  EF46  F019         	goto	l19150
 16942  002474                     l18864:
 16943                           
 16944                           ; BSR set to: 0
 16945  002474  0EB0               	movlw	low _writeBuffer
 16946  002476  25E8               	addwf	build_response@len& (0+255),w,b
 16947  002478  6E0F               	movwf	__strcpy@dest^0,c
 16948  00247A  6A10               	clrf	(__strcpy@dest+1)^0,c
 16949  00247C  0E02               	movlw	high _writeBuffer
 16950  00247E  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 16951  002480  0E48               	movlw	low STR_1
 16952  002482  6E11               	movwf	__strcpy@source^0,c
 16953  002484  0E23               	movlw	high STR_1
 16954  002486  6E12               	movwf	(__strcpy@source+1)^0,c
 16955  002488  EC08  F06A         	call	__strcpy	;wreg free
 16956  00248C  500F               	movf	?__strcpy^0,w,c
 16957  00248E  0100               	movlb	0	; () banked
 16958  002490  27E8               	addwf	build_response@len& (0+255),f,b
 16959  002492  EF46  F019         	goto	l19150
 16960  002496                     l18866:
 16961                           
 16962                           ; BSR set to: 0
 16963                           ;app_atcommand.c: 472: {;app_atcommand.c: 473: len += _ftoa(Last_value.toxic_gas[0][LV_G
      +                          AS_VOLT], &writeBuffer[len]); writeBuffer[len++] = ',';
 16964  002496  C226  F0CD         	movff	_Last_value,__ftoa@num
 16965  00249A  C227  F0CE         	movff	_Last_value+1,__ftoa@num+1
 16966  00249E  C228  F0CF         	movff	_Last_value+2,__ftoa@num+2
 16967  0024A2  C229  F0D0         	movff	_Last_value+3,__ftoa@num+3
 16968  0024A6  0EB0               	movlw	low _writeBuffer
 16969  0024A8  25E8               	addwf	build_response@len& (0+255),w,b
 16970  0024AA  6FD1               	movwf	__ftoa@str& (0+255),b
 16971  0024AC  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 16972  0024AE  0E02               	movlw	high _writeBuffer
 16973  0024B0  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 16974  0024B2  EC1F  F073         	call	__ftoa	;wreg free
 16975  0024B6  0100               	movlb	0	; () banked
 16976  0024B8  51CD               	movf	?__ftoa& (0+255),w,b
 16977  0024BA  27E8               	addwf	build_response@len& (0+255),f,b
 16978  0024BC                     
 16979                           ; BSR set to: 0
 16980  0024BC  0EB0               	movlw	low _writeBuffer
 16981  0024BE  25E8               	addwf	build_response@len& (0+255),w,b
 16982  0024C0  6ED9               	movwf	fsr2l,c
 16983  0024C2  6ADA               	clrf	fsr2h,c
 16984  0024C4  0E02               	movlw	high _writeBuffer
 16985  0024C6  22DA               	addwfc	fsr2h,f,c
 16986  0024C8  0E2C               	movlw	44
 16987  0024CA  6EDF               	movwf	indf2,c
 16988  0024CC                     
 16989                           ; BSR set to: 0
 16990  0024CC  2BE8               	incf	build_response@len& (0+255),f,b
 16991  0024CE                     
 16992                           ; BSR set to: 0
 16993                           ;app_atcommand.c: 474: len += _ftoa(Last_value.toxic_gas[1][LV_GAS_VOLT], &writeBuffer[l
      +                          en]); writeBuffer[len++] = ',';
 16994  0024CE  C22E  F0CD         	movff	_Last_value+8,__ftoa@num
 16995  0024D2  C22F  F0CE         	movff	_Last_value+9,__ftoa@num+1
 16996  0024D6  C230  F0CF         	movff	_Last_value+10,__ftoa@num+2
 16997  0024DA  C231  F0D0         	movff	_Last_value+11,__ftoa@num+3
 16998  0024DE  0EB0               	movlw	low _writeBuffer
 16999  0024E0  25E8               	addwf	build_response@len& (0+255),w,b
 17000  0024E2  6FD1               	movwf	__ftoa@str& (0+255),b
 17001  0024E4  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17002  0024E6  0E02               	movlw	high _writeBuffer
 17003  0024E8  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17004  0024EA  EC1F  F073         	call	__ftoa	;wreg free
 17005  0024EE  0100               	movlb	0	; () banked
 17006  0024F0  51CD               	movf	?__ftoa& (0+255),w,b
 17007  0024F2  27E8               	addwf	build_response@len& (0+255),f,b
 17008  0024F4                     
 17009                           ; BSR set to: 0
 17010  0024F4  0EB0               	movlw	low _writeBuffer
 17011  0024F6  25E8               	addwf	build_response@len& (0+255),w,b
 17012  0024F8  6ED9               	movwf	fsr2l,c
 17013  0024FA  6ADA               	clrf	fsr2h,c
 17014  0024FC  0E02               	movlw	high _writeBuffer
 17015  0024FE  22DA               	addwfc	fsr2h,f,c
 17016  002500  0E2C               	movlw	44
 17017  002502  6EDF               	movwf	indf2,c
 17018  002504  2BE8               	incf	build_response@len& (0+255),f,b
 17019  002506                     
 17020                           ; BSR set to: 0
 17021                           ;app_atcommand.c: 475: len += _ftoa(Last_value.toxic_gas[2][LV_GAS_VOLT], &writeBuffer[l
      +                          en]); writeBuffer[len++] = ',';
 17022  002506  C236  F0CD         	movff	_Last_value+16,__ftoa@num
 17023  00250A  C237  F0CE         	movff	_Last_value+17,__ftoa@num+1
 17024  00250E  C238  F0CF         	movff	_Last_value+18,__ftoa@num+2
 17025  002512  C239  F0D0         	movff	_Last_value+19,__ftoa@num+3
 17026  002516  0EB0               	movlw	low _writeBuffer
 17027  002518  25E8               	addwf	build_response@len& (0+255),w,b
 17028  00251A  6FD1               	movwf	__ftoa@str& (0+255),b
 17029  00251C  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17030  00251E  0E02               	movlw	high _writeBuffer
 17031  002520  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17032  002522  EC1F  F073         	call	__ftoa	;wreg free
 17033  002526  0100               	movlb	0	; () banked
 17034  002528  51CD               	movf	?__ftoa& (0+255),w,b
 17035  00252A  27E8               	addwf	build_response@len& (0+255),f,b
 17036  00252C                     
 17037                           ; BSR set to: 0
 17038  00252C  0EB0               	movlw	low _writeBuffer
 17039  00252E  25E8               	addwf	build_response@len& (0+255),w,b
 17040  002530  6ED9               	movwf	fsr2l,c
 17041  002532  6ADA               	clrf	fsr2h,c
 17042  002534  0E02               	movlw	high _writeBuffer
 17043  002536  22DA               	addwfc	fsr2h,f,c
 17044  002538  0E2C               	movlw	44
 17045  00253A  6EDF               	movwf	indf2,c
 17046  00253C                     
 17047                           ; BSR set to: 0
 17048  00253C  2BE8               	incf	build_response@len& (0+255),f,b
 17049  00253E                     l18882:
 17050                           
 17051                           ;app_atcommand.c: 476: len += _itoa(Last_value.co2_gas, &writeBuffer[len]);
 17052  00253E  C23E  F027         	movff	_Last_value+24,__itoa@num
 17053  002542  C23F  F028         	movff	_Last_value+25,__itoa@num+1
 17054  002546  6A29               	clrf	(__itoa@num+2)^0,c
 17055  002548  6A2A               	clrf	(__itoa@num+3)^0,c
 17056  00254A  0EB0               	movlw	low _writeBuffer
 17057  00254C  0100               	movlb	0	; () banked
 17058  00254E  25E8               	addwf	build_response@len& (0+255),w,b
 17059  002550  6E2B               	movwf	__itoa@str^0,c
 17060  002552  6A2C               	clrf	(__itoa@str+1)^0,c
 17061  002554  0E02               	movlw	high _writeBuffer
 17062  002556  222C               	addwfc	(__itoa@str+1)^0,f,c
 17063  002558  EC6C  F04F         	call	__itoa	;wreg free
 17064  00255C  5027               	movf	?__itoa^0,w,c
 17065  00255E  0100               	movlb	0	; () banked
 17066  002560  27E8               	addwf	build_response@len& (0+255),f,b
 17067                           
 17068                           ;app_atcommand.c: 477: } break;
 17069  002562  EF46  F019         	goto	l19150
 17070  002566                     l18884:
 17071                           
 17072                           ; BSR set to: 0
 17073                           ;app_atcommand.c: 479: {;app_atcommand.c: 480: for (uint8_t chNum = 0; chNum < 3; chNum+
      +                          +) {
 17074  002566  0E00               	movlw	0
 17075  002568  6FE5               	movwf	build_response@chNum& (0+255),b
 17076  00256A                     l18886:
 17077                           
 17078                           ; BSR set to: 0
 17079  00256A  0E02               	movlw	2
 17080  00256C  65E5               	cpfsgt	build_response@chNum& (0+255),b
 17081  00256E  EFBB  F012         	goto	u20571
 17082  002572  EFBD  F012         	goto	u20570
 17083  002576                     u20571:
 17084  002576  EFBF  F012         	goto	l18890
 17085  00257A                     u20570:
 17086  00257A  EF6A  F013         	goto	l18914
 17087  00257E                     l18890:
 17088                           
 17089                           ; BSR set to: 0
 17090                           ;app_atcommand.c: 481: if (g_sens_measure.isGasSensor_Success[chNum] && g_nvm.flash.Cali
      +                          brationGas[chNum] != 0.0f && g_led_status.isBlink == 0) {
 17091  00257E  0E16               	movlw	low (_g_sens_measure+8)
 17092  002580  25E5               	addwf	build_response@chNum& (0+255),w,b
 17093  002582  6ED9               	movwf	fsr2l,c
 17094  002584  6ADA               	clrf	fsr2h,c
 17095  002586  0E01               	movlw	high (_g_sens_measure+8)
 17096  002588  22DA               	addwfc	fsr2h,f,c
 17097  00258A  50DF               	movf	indf2,w,c
 17098  00258C  B4D8               	btfsc	status,2,c
 17099  00258E  EFCB  F012         	goto	u20581
 17100  002592  EFCD  F012         	goto	u20580
 17101  002596                     u20581:
 17102  002596  EF4E  F013         	goto	l18904
 17103  00259A                     u20580:
 17104  00259A                     
 17105                           ; BSR set to: 0
 17106  00259A  51E5               	movf	build_response@chNum& (0+255),w,b
 17107  00259C  0D04               	mullw	4
 17108  00259E  0E9A               	movlw	low (_g_nvm+33)
 17109  0025A0  24F3               	addwf	243,w,c
 17110  0025A2  6ED9               	movwf	fsr2l,c
 17111  0025A4  0E01               	movlw	high (_g_nvm+33)
 17112  0025A6  20F4               	addwfc	prodh,w,c
 17113  0025A8  6EDA               	movwf	fsr2h,c
 17114  0025AA  CFDE F035          	movff	postinc2,___fleq@ff1
 17115  0025AE  CFDE F036          	movff	postinc2,___fleq@ff1+1
 17116  0025B2  CFDE F037          	movff	postinc2,___fleq@ff1+2
 17117  0025B6  CFDE F038          	movff	postinc2,___fleq@ff1+3
 17118  0025BA  0E00               	movlw	0
 17119  0025BC  6E39               	movwf	___fleq@ff2^0,c
 17120  0025BE  0E00               	movlw	0
 17121  0025C0  6E3A               	movwf	(___fleq@ff2+1)^0,c
 17122  0025C2  0E00               	movlw	0
 17123  0025C4  6E3B               	movwf	(___fleq@ff2+2)^0,c
 17124  0025C6  0E00               	movlw	0
 17125  0025C8  6E3C               	movwf	(___fleq@ff2+3)^0,c
 17126  0025CA  EC94  F067         	call	___fleq	;wreg free
 17127  0025CE  B0D8               	btfsc	status,0,c
 17128  0025D0  EFEC  F012         	goto	u20591
 17129  0025D4  EFEE  F012         	goto	u20590
 17130  0025D8                     u20591:
 17131  0025D8  EF4E  F013         	goto	l18904
 17132  0025DC                     u20590:
 17133  0025DC  0101               	movlb	1	; () banked
 17134  0025DE  512B               	movf	(_g_led_status+2)& (0+255),w,b
 17135  0025E0  A4D8               	btfss	status,2,c
 17136  0025E2  EFF5  F012         	goto	u20601
 17137  0025E6  EFF7  F012         	goto	u20600
 17138  0025EA                     u20601:
 17139  0025EA  EF4E  F013         	goto	l18904
 17140  0025EE                     u20600:
 17141  0025EE                     
 17142                           ; BSR set to: 1
 17143                           ;app_atcommand.c: 482: if (chNum == 0 ||chNum == 2)
 17144  0025EE  0100               	movlb	0	; () banked
 17145  0025F0  51E5               	movf	build_response@chNum& (0+255),w,b
 17146  0025F2  B4D8               	btfsc	status,2,c
 17147  0025F4  EFFE  F012         	goto	u20611
 17148  0025F8  EF00  F013         	goto	u20610
 17149  0025FC                     u20611:
 17150  0025FC  EF09  F013         	goto	l18900
 17151  002600                     u20610:
 17152  002600                     
 17153                           ; BSR set to: 0
 17154  002600  0E02               	movlw	2
 17155  002602  19E5               	xorwf	build_response@chNum& (0+255),w,b
 17156  002604  A4D8               	btfss	status,2,c
 17157  002606  EF07  F013         	goto	u20621
 17158  00260A  EF09  F013         	goto	u20620
 17159  00260E                     u20621:
 17160  00260E  EF31  F013         	goto	l18902
 17161  002612                     u20620:
 17162  002612                     l18900:
 17163                           
 17164                           ; BSR set to: 0
 17165                           ;app_atcommand.c: 483: len += _itoa((uint32_t)Last_value.toxic_gas[chNum][LV_GAS_CONCEN]
      +                          , &writeBuffer[len]);
 17166  002612  51E5               	movf	build_response@chNum& (0+255),w,b
 17167  002614  0D08               	mullw	8
 17168  002616  0E2A               	movlw	low (_Last_value+4)
 17169  002618  24F3               	addwf	243,w,c
 17170  00261A  6ED9               	movwf	fsr2l,c
 17171  00261C  0E02               	movlw	high (_Last_value+4)
 17172  00261E  20F4               	addwfc	prodh,w,c
 17173  002620  6EDA               	movwf	fsr2h,c
 17174  002622  CFDE F01D          	movff	postinc2,___fltol@f1
 17175  002626  CFDE F01E          	movff	postinc2,___fltol@f1+1
 17176  00262A  CFDE F01F          	movff	postinc2,___fltol@f1+2
 17177  00262E  CFDE F020          	movff	postinc2,___fltol@f1+3
 17178  002632  ECE2  F05A         	call	___fltol	;wreg free
 17179  002636  C01D  F027         	movff	?___fltol,__itoa@num
 17180  00263A  C01E  F028         	movff	?___fltol+1,__itoa@num+1
 17181  00263E  C01F  F029         	movff	?___fltol+2,__itoa@num+2
 17182  002642  C020  F02A         	movff	?___fltol+3,__itoa@num+3
 17183  002646  0EB0               	movlw	low _writeBuffer
 17184  002648  0100               	movlb	0	; () banked
 17185  00264A  25E8               	addwf	build_response@len& (0+255),w,b
 17186  00264C  6E2B               	movwf	__itoa@str^0,c
 17187  00264E  6A2C               	clrf	(__itoa@str+1)^0,c
 17188  002650  0E02               	movlw	high _writeBuffer
 17189  002652  222C               	addwfc	(__itoa@str+1)^0,f,c
 17190  002654  EC6C  F04F         	call	__itoa	;wreg free
 17191  002658  5027               	movf	?__itoa^0,w,c
 17192  00265A  0100               	movlb	0	; () banked
 17193  00265C  27E8               	addwf	build_response@len& (0+255),f,b
 17194  00265E  EF5E  F013         	goto	l18906
 17195  002662                     l18902:
 17196                           
 17197                           ; BSR set to: 0
 17198                           ;app_atcommand.c: 484: else;app_atcommand.c: 485: len += _ftoa(Last_value.toxic_gas[chNu
      +                          m][LV_GAS_CONCEN], &writeBuffer[len]);
 17199  002662  51E5               	movf	build_response@chNum& (0+255),w,b
 17200  002664  0D08               	mullw	8
 17201  002666  0E2A               	movlw	low (_Last_value+4)
 17202  002668  24F3               	addwf	243,w,c
 17203  00266A  6ED9               	movwf	fsr2l,c
 17204  00266C  0E02               	movlw	high (_Last_value+4)
 17205  00266E  20F4               	addwfc	prodh,w,c
 17206  002670  6EDA               	movwf	fsr2h,c
 17207  002672  CFDE F0CD          	movff	postinc2,__ftoa@num
 17208  002676  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 17209  00267A  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 17210  00267E  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 17211  002682  0EB0               	movlw	low _writeBuffer
 17212  002684  25E8               	addwf	build_response@len& (0+255),w,b
 17213  002686  6FD1               	movwf	__ftoa@str& (0+255),b
 17214  002688  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17215  00268A  0E02               	movlw	high _writeBuffer
 17216  00268C  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17217  00268E  EC1F  F073         	call	__ftoa	;wreg free
 17218  002692  0100               	movlb	0	; () banked
 17219  002694  51CD               	movf	?__ftoa& (0+255),w,b
 17220  002696  27E8               	addwf	build_response@len& (0+255),f,b
 17221  002698  EF5E  F013         	goto	l18906
 17222  00269C                     l18904:
 17223  00269C  0EB0               	movlw	low _writeBuffer
 17224  00269E  0100               	movlb	0	; () banked
 17225  0026A0  25E8               	addwf	build_response@len& (0+255),w,b
 17226  0026A2  6E0F               	movwf	__strcpy@dest^0,c
 17227  0026A4  6A10               	clrf	(__strcpy@dest+1)^0,c
 17228  0026A6  0E02               	movlw	high _writeBuffer
 17229  0026A8  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 17230  0026AA  0E69               	movlw	low (STR_6+5)
 17231  0026AC  6E11               	movwf	__strcpy@source^0,c
 17232  0026AE  0E23               	movlw	high (STR_6+5)
 17233  0026B0  6E12               	movwf	(__strcpy@source+1)^0,c
 17234  0026B2  EC08  F06A         	call	__strcpy	;wreg free
 17235  0026B6  500F               	movf	?__strcpy^0,w,c
 17236  0026B8  0100               	movlb	0	; () banked
 17237  0026BA  27E8               	addwf	build_response@len& (0+255),f,b
 17238  0026BC                     l18906:
 17239                           
 17240                           ; BSR set to: 0
 17241                           ;app_atcommand.c: 487: writeBuffer[len++] = ',';
 17242  0026BC  0EB0               	movlw	low _writeBuffer
 17243  0026BE  25E8               	addwf	build_response@len& (0+255),w,b
 17244  0026C0  6ED9               	movwf	fsr2l,c
 17245  0026C2  6ADA               	clrf	fsr2h,c
 17246  0026C4  0E02               	movlw	high _writeBuffer
 17247  0026C6  22DA               	addwfc	fsr2h,f,c
 17248  0026C8  0E2C               	movlw	44
 17249  0026CA  6EDF               	movwf	indf2,c
 17250  0026CC                     
 17251                           ; BSR set to: 0
 17252  0026CC  2BE8               	incf	build_response@len& (0+255),f,b
 17253  0026CE                     
 17254                           ; BSR set to: 0
 17255  0026CE  2BE5               	incf	build_response@chNum& (0+255),f,b
 17256  0026D0  EFB5  F012         	goto	l18886
 17257  0026D4                     l18914:
 17258                           
 17259                           ; BSR set to: 0
 17260                           ;app_atcommand.c: 488: };app_atcommand.c: 489: if (g_led_status.isBlink == 0) len += _it
      +                          oa(Last_value.co2_gas, &writeBuffer[len]);
 17261  0026D4  0101               	movlb	1	; () banked
 17262  0026D6  512B               	movf	(_g_led_status+2)& (0+255),w,b
 17263  0026D8  A4D8               	btfss	status,2,c
 17264  0026DA  EF71  F013         	goto	u20631
 17265  0026DE  EF73  F013         	goto	u20630
 17266  0026E2                     u20631:
 17267  0026E2  EF75  F013         	goto	l18918
 17268  0026E6                     u20630:
 17269  0026E6  EF9F  F012         	goto	l18882
 17270  0026EA                     l18918:
 17271                           
 17272                           ; BSR set to: 1
 17273                           ;app_atcommand.c: 490: else len += _strcpy(&writeBuffer[len], "----");
 17274  0026EA  0EB0               	movlw	low _writeBuffer
 17275  0026EC  0100               	movlb	0	; () banked
 17276  0026EE  25E8               	addwf	build_response@len& (0+255),w,b
 17277  0026F0  6E0F               	movwf	__strcpy@dest^0,c
 17278  0026F2  6A10               	clrf	(__strcpy@dest+1)^0,c
 17279  0026F4  0E02               	movlw	high _writeBuffer
 17280  0026F6  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 17281  0026F8  0E69               	movlw	low (STR_6+5)
 17282  0026FA  6E11               	movwf	__strcpy@source^0,c
 17283  0026FC  0E23               	movlw	high (STR_6+5)
 17284  0026FE  6E12               	movwf	(__strcpy@source+1)^0,c
 17285  002700  EC08  F06A         	call	__strcpy	;wreg free
 17286  002704  500F               	movf	?__strcpy^0,w,c
 17287  002706  0100               	movlb	0	; () banked
 17288  002708  27E8               	addwf	build_response@len& (0+255),f,b
 17289  00270A  EF46  F019         	goto	l19150
 17290  00270E                     l954:
 17291                           
 17292                           ; BSR set to: 0
 17293                           ;app_atcommand.c: 491: } break;
 17294  00270E  EF46  F019         	goto	l19150
 17295  002712                     l18920:
 17296                           
 17297                           ; BSR set to: 0
 17298                           ;app_atcommand.c: 493: {;app_atcommand.c: 494: for (uint8_t chNum = 0; chNum < 3; chNum+
      +                          +) {
 17299  002712  0E00               	movlw	0
 17300  002714  6FE6               	movwf	build_response@chNum_2487& (0+255),b
 17301  002716                     l18922:
 17302                           
 17303                           ; BSR set to: 0
 17304  002716  0E02               	movlw	2
 17305  002718  65E6               	cpfsgt	build_response@chNum_2487& (0+255),b
 17306  00271A  EF91  F013         	goto	u20641
 17307  00271E  EF93  F013         	goto	u20640
 17308  002722                     u20641:
 17309  002722  EF95  F013         	goto	l18926
 17310  002726                     u20640:
 17311  002726  EF40  F014         	goto	l18950
 17312  00272A                     l18926:
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;app_atcommand.c: 495: if (g_sens_measure.isGasSensor_Success[chNum] && g_nvm.flash.Cali
      +                          brationGas[chNum] != 0.0f && g_led_status.isBlink == 0) {
 17316  00272A  0E16               	movlw	low (_g_sens_measure+8)
 17317  00272C  25E6               	addwf	build_response@chNum_2487& (0+255),w,b
 17318  00272E  6ED9               	movwf	fsr2l,c
 17319  002730  6ADA               	clrf	fsr2h,c
 17320  002732  0E01               	movlw	high (_g_sens_measure+8)
 17321  002734  22DA               	addwfc	fsr2h,f,c
 17322  002736  50DF               	movf	indf2,w,c
 17323  002738  B4D8               	btfsc	status,2,c
 17324  00273A  EFA1  F013         	goto	u20651
 17325  00273E  EFA3  F013         	goto	u20650
 17326  002742                     u20651:
 17327  002742  EF24  F014         	goto	l18940
 17328  002746                     u20650:
 17329  002746                     
 17330                           ; BSR set to: 0
 17331  002746  51E6               	movf	build_response@chNum_2487& (0+255),w,b
 17332  002748  0D04               	mullw	4
 17333  00274A  0E9A               	movlw	low (_g_nvm+33)
 17334  00274C  24F3               	addwf	243,w,c
 17335  00274E  6ED9               	movwf	fsr2l,c
 17336  002750  0E01               	movlw	high (_g_nvm+33)
 17337  002752  20F4               	addwfc	prodh,w,c
 17338  002754  6EDA               	movwf	fsr2h,c
 17339  002756  CFDE F035          	movff	postinc2,___fleq@ff1
 17340  00275A  CFDE F036          	movff	postinc2,___fleq@ff1+1
 17341  00275E  CFDE F037          	movff	postinc2,___fleq@ff1+2
 17342  002762  CFDE F038          	movff	postinc2,___fleq@ff1+3
 17343  002766  0E00               	movlw	0
 17344  002768  6E39               	movwf	___fleq@ff2^0,c
 17345  00276A  0E00               	movlw	0
 17346  00276C  6E3A               	movwf	(___fleq@ff2+1)^0,c
 17347  00276E  0E00               	movlw	0
 17348  002770  6E3B               	movwf	(___fleq@ff2+2)^0,c
 17349  002772  0E00               	movlw	0
 17350  002774  6E3C               	movwf	(___fleq@ff2+3)^0,c
 17351  002776  EC94  F067         	call	___fleq	;wreg free
 17352  00277A  B0D8               	btfsc	status,0,c
 17353  00277C  EFC2  F013         	goto	u20661
 17354  002780  EFC4  F013         	goto	u20660
 17355  002784                     u20661:
 17356  002784  EF24  F014         	goto	l18940
 17357  002788                     u20660:
 17358  002788  0101               	movlb	1	; () banked
 17359  00278A  512B               	movf	(_g_led_status+2)& (0+255),w,b
 17360  00278C  A4D8               	btfss	status,2,c
 17361  00278E  EFCB  F013         	goto	u20671
 17362  002792  EFCD  F013         	goto	u20670
 17363  002796                     u20671:
 17364  002796  EF24  F014         	goto	l18940
 17365  00279A                     u20670:
 17366  00279A                     
 17367                           ; BSR set to: 1
 17368                           ;app_atcommand.c: 496: if (chNum == 0 ||chNum == 2)
 17369  00279A  0100               	movlb	0	; () banked
 17370  00279C  51E6               	movf	build_response@chNum_2487& (0+255),w,b
 17371  00279E  B4D8               	btfsc	status,2,c
 17372  0027A0  EFD4  F013         	goto	u20681
 17373  0027A4  EFD6  F013         	goto	u20680
 17374  0027A8                     u20681:
 17375  0027A8  EFDF  F013         	goto	l18936
 17376  0027AC                     u20680:
 17377  0027AC                     
 17378                           ; BSR set to: 0
 17379  0027AC  0E02               	movlw	2
 17380  0027AE  19E6               	xorwf	build_response@chNum_2487& (0+255),w,b
 17381  0027B0  A4D8               	btfss	status,2,c
 17382  0027B2  EFDD  F013         	goto	u20691
 17383  0027B6  EFDF  F013         	goto	u20690
 17384  0027BA                     u20691:
 17385  0027BA  EF07  F014         	goto	l18938
 17386  0027BE                     u20690:
 17387  0027BE                     l18936:
 17388                           
 17389                           ; BSR set to: 0
 17390                           ;app_atcommand.c: 497: len += _itoa((uint32_t)Last_value.toxic_gas[chNum][LV_GAS_CONCEN]
      +                          , &writeBuffer[len]);
 17391  0027BE  51E6               	movf	build_response@chNum_2487& (0+255),w,b
 17392  0027C0  0D08               	mullw	8
 17393  0027C2  0E2A               	movlw	low (_Last_value+4)
 17394  0027C4  24F3               	addwf	243,w,c
 17395  0027C6  6ED9               	movwf	fsr2l,c
 17396  0027C8  0E02               	movlw	high (_Last_value+4)
 17397  0027CA  20F4               	addwfc	prodh,w,c
 17398  0027CC  6EDA               	movwf	fsr2h,c
 17399  0027CE  CFDE F01D          	movff	postinc2,___fltol@f1
 17400  0027D2  CFDE F01E          	movff	postinc2,___fltol@f1+1
 17401  0027D6  CFDE F01F          	movff	postinc2,___fltol@f1+2
 17402  0027DA  CFDE F020          	movff	postinc2,___fltol@f1+3
 17403  0027DE  ECE2  F05A         	call	___fltol	;wreg free
 17404  0027E2  C01D  F027         	movff	?___fltol,__itoa@num
 17405  0027E6  C01E  F028         	movff	?___fltol+1,__itoa@num+1
 17406  0027EA  C01F  F029         	movff	?___fltol+2,__itoa@num+2
 17407  0027EE  C020  F02A         	movff	?___fltol+3,__itoa@num+3
 17408  0027F2  0EB0               	movlw	low _writeBuffer
 17409  0027F4  0100               	movlb	0	; () banked
 17410  0027F6  25E8               	addwf	build_response@len& (0+255),w,b
 17411  0027F8  6E2B               	movwf	__itoa@str^0,c
 17412  0027FA  6A2C               	clrf	(__itoa@str+1)^0,c
 17413  0027FC  0E02               	movlw	high _writeBuffer
 17414  0027FE  222C               	addwfc	(__itoa@str+1)^0,f,c
 17415  002800  EC6C  F04F         	call	__itoa	;wreg free
 17416  002804  5027               	movf	?__itoa^0,w,c
 17417  002806  0100               	movlb	0	; () banked
 17418  002808  27E8               	addwf	build_response@len& (0+255),f,b
 17419  00280A  EF34  F014         	goto	l18942
 17420  00280E                     l18938:
 17421                           
 17422                           ; BSR set to: 0
 17423                           ;app_atcommand.c: 498: else;app_atcommand.c: 499: len += _ftoa(Last_value.toxic_gas[chNu
      +                          m][LV_GAS_CONCEN], &writeBuffer[len]);
 17424  00280E  51E6               	movf	build_response@chNum_2487& (0+255),w,b
 17425  002810  0D08               	mullw	8
 17426  002812  0E2A               	movlw	low (_Last_value+4)
 17427  002814  24F3               	addwf	243,w,c
 17428  002816  6ED9               	movwf	fsr2l,c
 17429  002818  0E02               	movlw	high (_Last_value+4)
 17430  00281A  20F4               	addwfc	prodh,w,c
 17431  00281C  6EDA               	movwf	fsr2h,c
 17432  00281E  CFDE F0CD          	movff	postinc2,__ftoa@num
 17433  002822  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 17434  002826  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 17435  00282A  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 17436  00282E  0EB0               	movlw	low _writeBuffer
 17437  002830  25E8               	addwf	build_response@len& (0+255),w,b
 17438  002832  6FD1               	movwf	__ftoa@str& (0+255),b
 17439  002834  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17440  002836  0E02               	movlw	high _writeBuffer
 17441  002838  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17442  00283A  EC1F  F073         	call	__ftoa	;wreg free
 17443  00283E  0100               	movlb	0	; () banked
 17444  002840  51CD               	movf	?__ftoa& (0+255),w,b
 17445  002842  27E8               	addwf	build_response@len& (0+255),f,b
 17446  002844  EF34  F014         	goto	l18942
 17447  002848                     l18940:
 17448  002848  0EB0               	movlw	low _writeBuffer
 17449  00284A  0100               	movlb	0	; () banked
 17450  00284C  25E8               	addwf	build_response@len& (0+255),w,b
 17451  00284E  6E0F               	movwf	__strcpy@dest^0,c
 17452  002850  6A10               	clrf	(__strcpy@dest+1)^0,c
 17453  002852  0E02               	movlw	high _writeBuffer
 17454  002854  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 17455  002856  0E69               	movlw	low (STR_6+5)
 17456  002858  6E11               	movwf	__strcpy@source^0,c
 17457  00285A  0E23               	movlw	high (STR_6+5)
 17458  00285C  6E12               	movwf	(__strcpy@source+1)^0,c
 17459  00285E  EC08  F06A         	call	__strcpy	;wreg free
 17460  002862  500F               	movf	?__strcpy^0,w,c
 17461  002864  0100               	movlb	0	; () banked
 17462  002866  27E8               	addwf	build_response@len& (0+255),f,b
 17463  002868                     l18942:
 17464                           
 17465                           ; BSR set to: 0
 17466                           ;app_atcommand.c: 501: writeBuffer[len++] = ',';
 17467  002868  0EB0               	movlw	low _writeBuffer
 17468  00286A  25E8               	addwf	build_response@len& (0+255),w,b
 17469  00286C  6ED9               	movwf	fsr2l,c
 17470  00286E  6ADA               	clrf	fsr2h,c
 17471  002870  0E02               	movlw	high _writeBuffer
 17472  002872  22DA               	addwfc	fsr2h,f,c
 17473  002874  0E2C               	movlw	44
 17474  002876  6EDF               	movwf	indf2,c
 17475  002878                     
 17476                           ; BSR set to: 0
 17477  002878  2BE8               	incf	build_response@len& (0+255),f,b
 17478  00287A                     
 17479                           ; BSR set to: 0
 17480  00287A  2BE6               	incf	build_response@chNum_2487& (0+255),f,b
 17481  00287C  EF8B  F013         	goto	l18922
 17482  002880                     l18950:
 17483                           
 17484                           ; BSR set to: 0
 17485                           ;app_atcommand.c: 502: };app_atcommand.c: 503: if (g_led_status.isBlink == 0) len += _it
      +                          oa(Last_value.co2_gas, &writeBuffer[len]);
 17486  002880  0101               	movlb	1	; () banked
 17487  002882  512B               	movf	(_g_led_status+2)& (0+255),w,b
 17488  002884  A4D8               	btfss	status,2,c
 17489  002886  EF47  F014         	goto	u20701
 17490  00288A  EF49  F014         	goto	u20700
 17491  00288E                     u20701:
 17492  00288E  EF5D  F014         	goto	l18954
 17493  002892                     u20700:
 17494  002892                     
 17495                           ; BSR set to: 1
 17496  002892  C23E  F027         	movff	_Last_value+24,__itoa@num
 17497  002896  C23F  F028         	movff	_Last_value+25,__itoa@num+1
 17498  00289A  6A29               	clrf	(__itoa@num+2)^0,c
 17499  00289C  6A2A               	clrf	(__itoa@num+3)^0,c
 17500  00289E  0EB0               	movlw	low _writeBuffer
 17501  0028A0  0100               	movlb	0	; () banked
 17502  0028A2  25E8               	addwf	build_response@len& (0+255),w,b
 17503  0028A4  6E2B               	movwf	__itoa@str^0,c
 17504  0028A6  6A2C               	clrf	(__itoa@str+1)^0,c
 17505  0028A8  0E02               	movlw	high _writeBuffer
 17506  0028AA  222C               	addwfc	(__itoa@str+1)^0,f,c
 17507  0028AC  EC6C  F04F         	call	__itoa	;wreg free
 17508  0028B0  5027               	movf	?__itoa^0,w,c
 17509  0028B2  0100               	movlb	0	; () banked
 17510  0028B4  27E8               	addwf	build_response@len& (0+255),f,b
 17511  0028B6  EF6D  F014         	goto	l18956
 17512  0028BA                     l18954:
 17513                           
 17514                           ; BSR set to: 1
 17515                           ;app_atcommand.c: 504: else len += _strcpy(&writeBuffer[len], "----");
 17516  0028BA  0EB0               	movlw	low _writeBuffer
 17517  0028BC  0100               	movlb	0	; () banked
 17518  0028BE  25E8               	addwf	build_response@len& (0+255),w,b
 17519  0028C0  6E0F               	movwf	__strcpy@dest^0,c
 17520  0028C2  6A10               	clrf	(__strcpy@dest+1)^0,c
 17521  0028C4  0E02               	movlw	high _writeBuffer
 17522  0028C6  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 17523  0028C8  0E69               	movlw	low (STR_6+5)
 17524  0028CA  6E11               	movwf	__strcpy@source^0,c
 17525  0028CC  0E23               	movlw	high (STR_6+5)
 17526  0028CE  6E12               	movwf	(__strcpy@source+1)^0,c
 17527  0028D0  EC08  F06A         	call	__strcpy	;wreg free
 17528  0028D4  500F               	movf	?__strcpy^0,w,c
 17529  0028D6  0100               	movlb	0	; () banked
 17530  0028D8  27E8               	addwf	build_response@len& (0+255),f,b
 17531  0028DA                     l18956:
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;app_atcommand.c: 505: writeBuffer[len++] = ',';
 17535  0028DA  0EB0               	movlw	low _writeBuffer
 17536  0028DC  25E8               	addwf	build_response@len& (0+255),w,b
 17537  0028DE  6ED9               	movwf	fsr2l,c
 17538  0028E0  6ADA               	clrf	fsr2h,c
 17539  0028E2  0E02               	movlw	high _writeBuffer
 17540  0028E4  22DA               	addwfc	fsr2h,f,c
 17541  0028E6  0E2C               	movlw	44
 17542  0028E8  6EDF               	movwf	indf2,c
 17543  0028EA                     
 17544                           ; BSR set to: 0
 17545  0028EA  2BE8               	incf	build_response@len& (0+255),f,b
 17546  0028EC                     
 17547                           ; BSR set to: 0
 17548                           ;app_atcommand.c: 506: if (g_sens_measure.isTemp_Success) {
 17549  0028EC  0101               	movlb	1	; () banked
 17550  0028EE  511A               	movf	(_g_sens_measure+12)& (0+255),w,b
 17551  0028F0  B4D8               	btfsc	status,2,c
 17552  0028F2  EF7D  F014         	goto	u20711
 17553  0028F6  EF7F  F014         	goto	u20710
 17554  0028FA                     u20711:
 17555  0028FA  EFC8  F014         	goto	l18976
 17556  0028FE                     u20710:
 17557  0028FE                     
 17558                           ; BSR set to: 1
 17559                           ;app_atcommand.c: 507: float temp = Last_value.tempHumi[LV_TEMP];
 17560  0028FE  C240  F0DB         	movff	_Last_value+26,build_response@temp
 17561  002902  C241  F0DC         	movff	_Last_value+27,build_response@temp+1
 17562  002906  C242  F0DD         	movff	_Last_value+28,build_response@temp+2
 17563  00290A  C243  F0DE         	movff	_Last_value+29,build_response@temp+3
 17564  00290E                     
 17565                           ; BSR set to: 1
 17566                           ;app_atcommand.c: 508: if (g_nvm.flash.temp_corf == FAHRENHEIT)
 17567  00290E  057C               	decf	(_g_nvm+3)& (0+255),w,b
 17568  002910  A4D8               	btfss	status,2,c
 17569  002912  EF8D  F014         	goto	u20721
 17570  002916  EF8F  F014         	goto	u20720
 17571  00291A                     u20721:
 17572  00291A  EF96  F014         	goto	l18968
 17573  00291E                     u20720:
 17574  00291E                     
 17575                           ; BSR set to: 1
 17576                           ;app_atcommand.c: 509: sensor_temp_fahrenheit(&temp);
 17577  00291E  0EDB               	movlw	low build_response@temp
 17578  002920  0100               	movlb	0	; () banked
 17579  002922  6F9E               	movwf	sensor_temp_fahrenheit@temp& (0+255),b
 17580  002924  0E00               	movlw	high build_response@temp
 17581  002926  6F9F               	movwf	(sensor_temp_fahrenheit@temp+1)& (0+255),b
 17582  002928  EC3D  F06E         	call	_sensor_temp_fahrenheit	;wreg free
 17583  00292C                     l18968:
 17584                           
 17585                           ;app_atcommand.c: 510: len += _ftoa(temp, &writeBuffer[len]); writeBuffer[len++] = ',';
 17586  00292C  C0DB  F0CD         	movff	build_response@temp,__ftoa@num
 17587  002930  C0DC  F0CE         	movff	build_response@temp+1,__ftoa@num+1
 17588  002934  C0DD  F0CF         	movff	build_response@temp+2,__ftoa@num+2
 17589  002938  C0DE  F0D0         	movff	build_response@temp+3,__ftoa@num+3
 17590  00293C  0EB0               	movlw	low _writeBuffer
 17591  00293E  0100               	movlb	0	; () banked
 17592  002940  25E8               	addwf	build_response@len& (0+255),w,b
 17593  002942  6FD1               	movwf	__ftoa@str& (0+255),b
 17594  002944  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17595  002946  0E02               	movlw	high _writeBuffer
 17596  002948  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17597  00294A  EC1F  F073         	call	__ftoa	;wreg free
 17598  00294E  0100               	movlb	0	; () banked
 17599  002950  51CD               	movf	?__ftoa& (0+255),w,b
 17600  002952  27E8               	addwf	build_response@len& (0+255),f,b
 17601  002954                     
 17602                           ; BSR set to: 0
 17603  002954  0EB0               	movlw	low _writeBuffer
 17604  002956  25E8               	addwf	build_response@len& (0+255),w,b
 17605  002958  6ED9               	movwf	fsr2l,c
 17606  00295A  6ADA               	clrf	fsr2h,c
 17607  00295C  0E02               	movlw	high _writeBuffer
 17608  00295E  22DA               	addwfc	fsr2h,f,c
 17609  002960  0E2C               	movlw	44
 17610  002962  6EDF               	movwf	indf2,c
 17611  002964                     
 17612                           ; BSR set to: 0
 17613  002964  2BE8               	incf	build_response@len& (0+255),f,b
 17614  002966                     
 17615                           ; BSR set to: 0
 17616                           ;app_atcommand.c: 511: len += _ftoa(Last_value.tempHumi[LV_HUMI], &writeBuffer[len]);
 17617  002966  C244  F0CD         	movff	_Last_value+30,__ftoa@num
 17618  00296A  C245  F0CE         	movff	_Last_value+31,__ftoa@num+1
 17619  00296E  C246  F0CF         	movff	_Last_value+32,__ftoa@num+2
 17620  002972  C247  F0D0         	movff	_Last_value+33,__ftoa@num+3
 17621  002976  0EB0               	movlw	low _writeBuffer
 17622  002978  25E8               	addwf	build_response@len& (0+255),w,b
 17623  00297A  6FD1               	movwf	__ftoa@str& (0+255),b
 17624  00297C  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17625  00297E  0E02               	movlw	high _writeBuffer
 17626  002980  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17627  002982  EC1F  F073         	call	__ftoa	;wreg free
 17628  002986  0100               	movlb	0	; () banked
 17629  002988  51CD               	movf	?__ftoa& (0+255),w,b
 17630  00298A  27E8               	addwf	build_response@len& (0+255),f,b
 17631                           
 17632                           ;app_atcommand.c: 512: } else len += _strcpy(&writeBuffer[len], "----,----");
 17633  00298C  EF46  F019         	goto	l19150
 17634  002990                     l18976:
 17635                           
 17636                           ; BSR set to: 1
 17637  002990  0EB0               	movlw	low _writeBuffer
 17638  002992  0100               	movlb	0	; () banked
 17639  002994  25E8               	addwf	build_response@len& (0+255),w,b
 17640  002996  6E0F               	movwf	__strcpy@dest^0,c
 17641  002998  6A10               	clrf	(__strcpy@dest+1)^0,c
 17642  00299A  0E02               	movlw	high _writeBuffer
 17643  00299C  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 17644  00299E  0E64               	movlw	low STR_6
 17645  0029A0  6E11               	movwf	__strcpy@source^0,c
 17646  0029A2  0E23               	movlw	high STR_6
 17647  0029A4  6E12               	movwf	(__strcpy@source+1)^0,c
 17648  0029A6  EC08  F06A         	call	__strcpy	;wreg free
 17649  0029AA  500F               	movf	?__strcpy^0,w,c
 17650  0029AC  0100               	movlb	0	; () banked
 17651  0029AE  27E8               	addwf	build_response@len& (0+255),f,b
 17652  0029B0  EF46  F019         	goto	l19150
 17653  0029B4                     l18978:
 17654                           
 17655                           ; BSR set to: 0
 17656                           ;app_atcommand.c: 515: if (g_sens_measure.isTemp_Success) {
 17657  0029B4  0101               	movlb	1	; () banked
 17658  0029B6  511A               	movf	(_g_sens_measure+12)& (0+255),w,b
 17659  0029B8  B4D8               	btfsc	status,2,c
 17660  0029BA  EFE1  F014         	goto	u20731
 17661  0029BE  EFE3  F014         	goto	u20730
 17662  0029C2                     u20731:
 17663  0029C2  EF10  F015         	goto	l18988
 17664  0029C6                     u20730:
 17665  0029C6                     
 17666                           ; BSR set to: 1
 17667                           ;app_atcommand.c: 516: float temp = Last_value.tempHumi[LV_TEMP];
 17668  0029C6  C240  F0DF         	movff	_Last_value+26,build_response@temp_2492
 17669  0029CA  C241  F0E0         	movff	_Last_value+27,build_response@temp_2492+1
 17670  0029CE  C242  F0E1         	movff	_Last_value+28,build_response@temp_2492+2
 17671  0029D2  C243  F0E2         	movff	_Last_value+29,build_response@temp_2492+3
 17672  0029D6                     
 17673                           ; BSR set to: 1
 17674                           ;app_atcommand.c: 517: if (g_nvm.flash.temp_corf == FAHRENHEIT)
 17675  0029D6  057C               	decf	(_g_nvm+3)& (0+255),w,b
 17676  0029D8  A4D8               	btfss	status,2,c
 17677  0029DA  EFF1  F014         	goto	u20741
 17678  0029DE  EFF3  F014         	goto	u20740
 17679  0029E2                     u20741:
 17680  0029E2  EFFA  F014         	goto	l18986
 17681  0029E6                     u20740:
 17682  0029E6                     
 17683                           ; BSR set to: 1
 17684                           ;app_atcommand.c: 518: sensor_temp_fahrenheit(&temp);
 17685  0029E6  0EDF               	movlw	low build_response@temp_2492
 17686  0029E8  0100               	movlb	0	; () banked
 17687  0029EA  6F9E               	movwf	sensor_temp_fahrenheit@temp& (0+255),b
 17688  0029EC  0E00               	movlw	high build_response@temp_2492
 17689  0029EE  6F9F               	movwf	(sensor_temp_fahrenheit@temp+1)& (0+255),b
 17690  0029F0  EC3D  F06E         	call	_sensor_temp_fahrenheit	;wreg free
 17691  0029F4                     l18986:
 17692                           
 17693                           ;app_atcommand.c: 519: len += _ftoa(temp, &writeBuffer[len]);
 17694  0029F4  C0DF  F0CD         	movff	build_response@temp_2492,__ftoa@num
 17695  0029F8  C0E0  F0CE         	movff	build_response@temp_2492+1,__ftoa@num+1
 17696  0029FC  C0E1  F0CF         	movff	build_response@temp_2492+2,__ftoa@num+2
 17697  002A00  C0E2  F0D0         	movff	build_response@temp_2492+3,__ftoa@num+3
 17698  002A04  0EB0               	movlw	low _writeBuffer
 17699  002A06  0100               	movlb	0	; () banked
 17700  002A08  25E8               	addwf	build_response@len& (0+255),w,b
 17701  002A0A  6FD1               	movwf	__ftoa@str& (0+255),b
 17702  002A0C  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17703  002A0E  0E02               	movlw	high _writeBuffer
 17704  002A10  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17705  002A12  EC1F  F073         	call	__ftoa	;wreg free
 17706  002A16  0100               	movlb	0	; () banked
 17707  002A18  51CD               	movf	?__ftoa& (0+255),w,b
 17708  002A1A  27E8               	addwf	build_response@len& (0+255),f,b
 17709                           
 17710                           ;app_atcommand.c: 520: } else len += _strcpy(&writeBuffer[len], "----");
 17711  002A1C  EF20  F015         	goto	l18990
 17712  002A20                     l18988:
 17713                           
 17714                           ; BSR set to: 1
 17715  002A20  0EB0               	movlw	low _writeBuffer
 17716  002A22  0100               	movlb	0	; () banked
 17717  002A24  25E8               	addwf	build_response@len& (0+255),w,b
 17718  002A26  6E0F               	movwf	__strcpy@dest^0,c
 17719  002A28  6A10               	clrf	(__strcpy@dest+1)^0,c
 17720  002A2A  0E02               	movlw	high _writeBuffer
 17721  002A2C  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 17722  002A2E  0E69               	movlw	low (STR_6+5)
 17723  002A30  6E11               	movwf	__strcpy@source^0,c
 17724  002A32  0E23               	movlw	high (STR_6+5)
 17725  002A34  6E12               	movwf	(__strcpy@source+1)^0,c
 17726  002A36  EC08  F06A         	call	__strcpy	;wreg free
 17727  002A3A  500F               	movf	?__strcpy^0,w,c
 17728  002A3C  0100               	movlb	0	; () banked
 17729  002A3E  27E8               	addwf	build_response@len& (0+255),f,b
 17730  002A40                     l18990:
 17731                           
 17732                           ; BSR set to: 0
 17733                           ;app_atcommand.c: 521: writeBuffer[len++] = ',';
 17734  002A40  0EB0               	movlw	low _writeBuffer
 17735  002A42  25E8               	addwf	build_response@len& (0+255),w,b
 17736  002A44  6ED9               	movwf	fsr2l,c
 17737  002A46  6ADA               	clrf	fsr2h,c
 17738  002A48  0E02               	movlw	high _writeBuffer
 17739  002A4A  22DA               	addwfc	fsr2h,f,c
 17740  002A4C  0E2C               	movlw	44
 17741  002A4E  6EDF               	movwf	indf2,c
 17742  002A50                     
 17743                           ; BSR set to: 0
 17744  002A50  2BE8               	incf	build_response@len& (0+255),f,b
 17745  002A52                     
 17746                           ; BSR set to: 0
 17747                           ;app_atcommand.c: 522: len += _ftoa(Last_value.tempHumi[CMP_TEMP], &writeBuffer[len]);
 17748  002A52  C248  F0CD         	movff	_Last_value+34,__ftoa@num
 17749  002A56  C249  F0CE         	movff	_Last_value+35,__ftoa@num+1
 17750  002A5A  C24A  F0CF         	movff	_Last_value+36,__ftoa@num+2
 17751  002A5E  C24B  F0D0         	movff	_Last_value+37,__ftoa@num+3
 17752  002A62  0EB0               	movlw	low _writeBuffer
 17753  002A64  25E8               	addwf	build_response@len& (0+255),w,b
 17754  002A66  6FD1               	movwf	__ftoa@str& (0+255),b
 17755  002A68  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17756  002A6A  0E02               	movlw	high _writeBuffer
 17757  002A6C  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17758  002A6E  EC1F  F073         	call	__ftoa	;wreg free
 17759  002A72  0100               	movlb	0	; () banked
 17760  002A74  51CD               	movf	?__ftoa& (0+255),w,b
 17761  002A76  27E8               	addwf	build_response@len& (0+255),f,b
 17762                           
 17763                           ;app_atcommand.c: 523: break;
 17764  002A78  EF46  F019         	goto	l19150
 17765  002A7C                     l18996:
 17766                           
 17767                           ; BSR set to: 0
 17768  002A7C  0101               	movlb	1	; () banked
 17769  002A7E  517A               	movf	(_g_nvm+1)& (0+255),w,b
 17770  002A80  6E27               	movwf	__itoa@num^0,c
 17771  002A82  6A28               	clrf	(__itoa@num+1)^0,c
 17772  002A84  6A29               	clrf	(__itoa@num+2)^0,c
 17773  002A86  6A2A               	clrf	(__itoa@num+3)^0,c
 17774  002A88  0EB0               	movlw	low _writeBuffer
 17775  002A8A  0100               	movlb	0	; () banked
 17776  002A8C  25E8               	addwf	build_response@len& (0+255),w,b
 17777  002A8E  6E2B               	movwf	__itoa@str^0,c
 17778  002A90  6A2C               	clrf	(__itoa@str+1)^0,c
 17779  002A92  0E02               	movlw	high _writeBuffer
 17780  002A94  222C               	addwfc	(__itoa@str+1)^0,f,c
 17781  002A96  EC6C  F04F         	call	__itoa	;wreg free
 17782  002A9A  5027               	movf	?__itoa^0,w,c
 17783  002A9C  0100               	movlb	0	; () banked
 17784  002A9E  27E8               	addwf	build_response@len& (0+255),f,b
 17785  002AA0  EF46  F019         	goto	l19150
 17786  002AA4                     l18998:
 17787                           
 17788                           ; BSR set to: 0
 17789  002AA4  0101               	movlb	1	; () banked
 17790  002AA6  517B               	movf	(_g_nvm+2)& (0+255),w,b
 17791  002AA8  6E27               	movwf	__itoa@num^0,c
 17792  002AAA  6A28               	clrf	(__itoa@num+1)^0,c
 17793  002AAC  6A29               	clrf	(__itoa@num+2)^0,c
 17794  002AAE  6A2A               	clrf	(__itoa@num+3)^0,c
 17795  002AB0  0EB0               	movlw	low _writeBuffer
 17796  002AB2  0100               	movlb	0	; () banked
 17797  002AB4  25E8               	addwf	build_response@len& (0+255),w,b
 17798  002AB6  6E2B               	movwf	__itoa@str^0,c
 17799  002AB8  6A2C               	clrf	(__itoa@str+1)^0,c
 17800  002ABA  0E02               	movlw	high _writeBuffer
 17801  002ABC  222C               	addwfc	(__itoa@str+1)^0,f,c
 17802  002ABE  EC6C  F04F         	call	__itoa	;wreg free
 17803  002AC2  5027               	movf	?__itoa^0,w,c
 17804  002AC4  0100               	movlb	0	; () banked
 17805  002AC6  27E8               	addwf	build_response@len& (0+255),f,b
 17806  002AC8  EF46  F019         	goto	l19150
 17807  002ACC                     l19000:
 17808                           
 17809                           ; BSR set to: 0
 17810                           ;app_atcommand.c: 527: if (status->last_update) { writeBuffer[len++] = 'O'; writeBuffer[
      +                          len++] = 'K'; }
 17811  002ACC  EE20 F001          	lfsr	2,1
 17812  002AD0  51D5               	movf	build_response@status& (0+255),w,b
 17813  002AD2  26D9               	addwf	fsr2l,f,c
 17814  002AD4  51D6               	movf	(build_response@status+1)& (0+255),w,b
 17815  002AD6  22DA               	addwfc	fsr2h,f,c
 17816  002AD8  50DF               	movf	indf2,w,c
 17817  002ADA  B4D8               	btfsc	status,2,c
 17818  002ADC  EF72  F015         	goto	u20751
 17819  002AE0  EF74  F015         	goto	u20750
 17820  002AE4                     u20751:
 17821  002AE4  EF76  F015         	goto	l19008
 17822  002AE8                     u20750:
 17823  002AE8  EF26  F012         	goto	l18858
 17824  002AEC                     l19008:
 17825                           
 17826                           ; BSR set to: 0
 17827                           ;app_atcommand.c: 528: else { writeBuffer[len++] = 'F'; writeBuffer[len++] = 'A'; writeB
      +                          uffer[len++] = 'I'; writeBuffer[len++] = 'L'; }
 17828  002AEC  0EB0               	movlw	low _writeBuffer
 17829  002AEE  25E8               	addwf	build_response@len& (0+255),w,b
 17830  002AF0  6ED9               	movwf	fsr2l,c
 17831  002AF2  6ADA               	clrf	fsr2h,c
 17832  002AF4  0E02               	movlw	high _writeBuffer
 17833  002AF6  22DA               	addwfc	fsr2h,f,c
 17834  002AF8  0E46               	movlw	70
 17835  002AFA  6EDF               	movwf	indf2,c
 17836  002AFC                     
 17837                           ; BSR set to: 0
 17838  002AFC  2BE8               	incf	build_response@len& (0+255),f,b
 17839  002AFE                     
 17840                           ; BSR set to: 0
 17841  002AFE  0EB0               	movlw	low _writeBuffer
 17842  002B00  25E8               	addwf	build_response@len& (0+255),w,b
 17843  002B02  6ED9               	movwf	fsr2l,c
 17844  002B04  6ADA               	clrf	fsr2h,c
 17845  002B06  0E02               	movlw	high _writeBuffer
 17846  002B08  22DA               	addwfc	fsr2h,f,c
 17847  002B0A  0E41               	movlw	65
 17848  002B0C  6EDF               	movwf	indf2,c
 17849  002B0E  2BE8               	incf	build_response@len& (0+255),f,b
 17850  002B10                     
 17851                           ; BSR set to: 0
 17852  002B10  0EB0               	movlw	low _writeBuffer
 17853  002B12  25E8               	addwf	build_response@len& (0+255),w,b
 17854  002B14  6ED9               	movwf	fsr2l,c
 17855  002B16  6ADA               	clrf	fsr2h,c
 17856  002B18  0E02               	movlw	high _writeBuffer
 17857  002B1A  22DA               	addwfc	fsr2h,f,c
 17858  002B1C  0E49               	movlw	73
 17859  002B1E  6EDF               	movwf	indf2,c
 17860  002B20                     
 17861                           ; BSR set to: 0
 17862  002B20  2BE8               	incf	build_response@len& (0+255),f,b
 17863  002B22  0EB0               	movlw	low _writeBuffer
 17864  002B24  25E8               	addwf	build_response@len& (0+255),w,b
 17865  002B26  6ED9               	movwf	fsr2l,c
 17866  002B28  6ADA               	clrf	fsr2h,c
 17867  002B2A  0E02               	movlw	high _writeBuffer
 17868  002B2C  22DA               	addwfc	fsr2h,f,c
 17869  002B2E  0E4C               	movlw	76
 17870  002B30  6EDF               	movwf	indf2,c
 17871  002B32                     l19018:
 17872                           
 17873                           ; BSR set to: 0
 17874  002B32  2BE8               	incf	build_response@len& (0+255),f,b
 17875  002B34  EF46  F019         	goto	l19150
 17876  002B38                     l19026:
 17877                           
 17878                           ; BSR set to: 0
 17879                           ;app_atcommand.c: 532: if (chno >= 0 && chno <= 2) {
 17880  002B38  0E03               	movlw	3
 17881  002B3A  61E7               	cpfslt	build_response@chno& (0+255),b
 17882  002B3C  EFA2  F015         	goto	u20761
 17883  002B40  EFA4  F015         	goto	u20760
 17884  002B44                     u20761:
 17885  002B44  EF11  F016         	goto	l19044
 17886  002B48                     u20760:
 17887  002B48                     
 17888                           ; BSR set to: 0
 17889                           ;app_atcommand.c: 533: len += _ftoa(g_nvm.flash.baseLine_uV[chno], &writeBuffer[len]); w
      +                          riteBuffer[len++] = ',';
 17890  002B48  51E7               	movf	build_response@chno& (0+255),w,b
 17891  002B4A  0D04               	mullw	4
 17892  002B4C  0E82               	movlw	low (_g_nvm+9)
 17893  002B4E  24F3               	addwf	243,w,c
 17894  002B50  6ED9               	movwf	fsr2l,c
 17895  002B52  0E01               	movlw	high (_g_nvm+9)
 17896  002B54  20F4               	addwfc	prodh,w,c
 17897  002B56  6EDA               	movwf	fsr2h,c
 17898  002B58  CFDE F0CD          	movff	postinc2,__ftoa@num
 17899  002B5C  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 17900  002B60  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 17901  002B64  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 17902  002B68  0EB0               	movlw	low _writeBuffer
 17903  002B6A  25E8               	addwf	build_response@len& (0+255),w,b
 17904  002B6C  6FD1               	movwf	__ftoa@str& (0+255),b
 17905  002B6E  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17906  002B70  0E02               	movlw	high _writeBuffer
 17907  002B72  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17908  002B74  EC1F  F073         	call	__ftoa	;wreg free
 17909  002B78  0100               	movlb	0	; () banked
 17910  002B7A  51CD               	movf	?__ftoa& (0+255),w,b
 17911  002B7C  27E8               	addwf	build_response@len& (0+255),f,b
 17912  002B7E                     
 17913                           ; BSR set to: 0
 17914  002B7E  0EB0               	movlw	low _writeBuffer
 17915  002B80  25E8               	addwf	build_response@len& (0+255),w,b
 17916  002B82  6ED9               	movwf	fsr2l,c
 17917  002B84  6ADA               	clrf	fsr2h,c
 17918  002B86  0E02               	movlw	high _writeBuffer
 17919  002B88  22DA               	addwfc	fsr2h,f,c
 17920  002B8A  0E2C               	movlw	44
 17921  002B8C  6EDF               	movwf	indf2,c
 17922  002B8E                     
 17923                           ; BSR set to: 0
 17924  002B8E  2BE8               	incf	build_response@len& (0+255),f,b
 17925  002B90                     
 17926                           ; BSR set to: 0
 17927                           ;app_atcommand.c: 534: len += _ftoa(g_nvm.flash.span_uV[chno], &writeBuffer[len]); write
      +                          Buffer[len++] = ',';
 17928  002B90  51E7               	movf	build_response@chno& (0+255),w,b
 17929  002B92  0D04               	mullw	4
 17930  002B94  0E8E               	movlw	low (_g_nvm+21)
 17931  002B96  24F3               	addwf	243,w,c
 17932  002B98  6ED9               	movwf	fsr2l,c
 17933  002B9A  0E01               	movlw	high (_g_nvm+21)
 17934  002B9C  20F4               	addwfc	prodh,w,c
 17935  002B9E  6EDA               	movwf	fsr2h,c
 17936  002BA0  CFDE F0CD          	movff	postinc2,__ftoa@num
 17937  002BA4  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 17938  002BA8  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 17939  002BAC  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 17940  002BB0  0EB0               	movlw	low _writeBuffer
 17941  002BB2  25E8               	addwf	build_response@len& (0+255),w,b
 17942  002BB4  6FD1               	movwf	__ftoa@str& (0+255),b
 17943  002BB6  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17944  002BB8  0E02               	movlw	high _writeBuffer
 17945  002BBA  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17946  002BBC  EC1F  F073         	call	__ftoa	;wreg free
 17947  002BC0  0100               	movlb	0	; () banked
 17948  002BC2  51CD               	movf	?__ftoa& (0+255),w,b
 17949  002BC4  27E8               	addwf	build_response@len& (0+255),f,b
 17950  002BC6                     
 17951                           ; BSR set to: 0
 17952  002BC6  0EB0               	movlw	low _writeBuffer
 17953  002BC8  25E8               	addwf	build_response@len& (0+255),w,b
 17954  002BCA  6ED9               	movwf	fsr2l,c
 17955  002BCC  6ADA               	clrf	fsr2h,c
 17956  002BCE  0E02               	movlw	high _writeBuffer
 17957  002BD0  22DA               	addwfc	fsr2h,f,c
 17958  002BD2  0E2C               	movlw	44
 17959  002BD4  6EDF               	movwf	indf2,c
 17960  002BD6  2BE8               	incf	build_response@len& (0+255),f,b
 17961  002BD8                     
 17962                           ; BSR set to: 0
 17963                           ;app_atcommand.c: 535: len += _ftoa(g_nvm.flash.CalibrationGas[chno], &writeBuffer[len])
      +                          ; writeBuffer[len++] = ',';
 17964  002BD8  51E7               	movf	build_response@chno& (0+255),w,b
 17965  002BDA  0D04               	mullw	4
 17966  002BDC  0E9A               	movlw	low (_g_nvm+33)
 17967  002BDE  24F3               	addwf	243,w,c
 17968  002BE0  6ED9               	movwf	fsr2l,c
 17969  002BE2  0E01               	movlw	high (_g_nvm+33)
 17970  002BE4  20F4               	addwfc	prodh,w,c
 17971  002BE6  6EDA               	movwf	fsr2h,c
 17972  002BE8  CFDE F0CD          	movff	postinc2,__ftoa@num
 17973  002BEC  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 17974  002BF0  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 17975  002BF4  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 17976  002BF8  0EB0               	movlw	low _writeBuffer
 17977  002BFA  25E8               	addwf	build_response@len& (0+255),w,b
 17978  002BFC  6FD1               	movwf	__ftoa@str& (0+255),b
 17979  002BFE  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 17980  002C00  0E02               	movlw	high _writeBuffer
 17981  002C02  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 17982  002C04  EC1F  F073         	call	__ftoa	;wreg free
 17983  002C08  0100               	movlb	0	; () banked
 17984  002C0A  51CD               	movf	?__ftoa& (0+255),w,b
 17985  002C0C  27E8               	addwf	build_response@len& (0+255),f,b
 17986  002C0E                     
 17987                           ; BSR set to: 0
 17988  002C0E  0EB0               	movlw	low _writeBuffer
 17989  002C10  25E8               	addwf	build_response@len& (0+255),w,b
 17990  002C12  6ED9               	movwf	fsr2l,c
 17991  002C14  6ADA               	clrf	fsr2h,c
 17992  002C16  0E02               	movlw	high _writeBuffer
 17993  002C18  22DA               	addwfc	fsr2h,f,c
 17994  002C1A  0E2C               	movlw	44
 17995  002C1C  6EDF               	movwf	indf2,c
 17996  002C1E  EF99  F015         	goto	l19018
 17997  002C22                     l19044:
 17998                           
 17999                           ; BSR set to: 0
 18000  002C22  0EB0               	movlw	low _writeBuffer
 18001  002C24  25E8               	addwf	build_response@len& (0+255),w,b
 18002  002C26  6E0F               	movwf	__strcpy@dest^0,c
 18003  002C28  6A10               	clrf	(__strcpy@dest+1)^0,c
 18004  002C2A  0E02               	movlw	high _writeBuffer
 18005  002C2C  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 18006  002C2E  0E77               	movlw	low STR_8
 18007  002C30  6E11               	movwf	__strcpy@source^0,c
 18008  002C32  0E23               	movlw	high STR_8
 18009  002C34  6E12               	movwf	(__strcpy@source+1)^0,c
 18010  002C36  EC08  F06A         	call	__strcpy	;wreg free
 18011  002C3A  500F               	movf	?__strcpy^0,w,c
 18012  002C3C  0100               	movlb	0	; () banked
 18013  002C3E  27E8               	addwf	build_response@len& (0+255),f,b
 18014  002C40  EF46  F019         	goto	l19150
 18015  002C44                     l19046:
 18016                           
 18017                           ; BSR set to: 0
 18018  002C44  07E8               	decf	build_response@len& (0+255),f,b
 18019  002C46                     l19048:
 18020                           
 18021                           ; BSR set to: 0
 18022  002C46  0E00               	movlw	0
 18023  002C48  6FE4               	movwf	(build_response@i+1)& (0+255),b
 18024  002C4A  0E00               	movlw	0
 18025  002C4C  6FE3               	movwf	build_response@i& (0+255),b
 18026  002C4E                     l19050:
 18027                           
 18028                           ; BSR set to: 0
 18029  002C4E  BFE4               	btfsc	(build_response@i+1)& (0+255),7,b
 18030  002C50  EF33  F016         	goto	u20771
 18031  002C54  51E4               	movf	(build_response@i+1)& (0+255),w,b
 18032  002C56  E109               	bnz	u20770
 18033  002C58  0E08               	movlw	8
 18034  002C5A  5DE3               	subwf	build_response@i& (0+255),w,b
 18035  002C5C  A0D8               	btfss	status,0,c
 18036  002C5E  EF33  F016         	goto	u20771
 18037  002C62  EF35  F016         	goto	u20770
 18038  002C66                     u20771:
 18039  002C66  EF37  F016         	goto	l19054
 18040  002C6A                     u20770:
 18041  002C6A  EF46  F019         	goto	l19150
 18042  002C6E                     l19054:
 18043                           
 18044                           ; BSR set to: 0
 18045  002C6E  0EDE               	movlw	low (_g_nvm+101)
 18046  002C70  25E3               	addwf	build_response@i& (0+255),w,b
 18047  002C72  6ED9               	movwf	fsr2l,c
 18048  002C74  0E01               	movlw	high (_g_nvm+101)
 18049  002C76  21E4               	addwfc	(build_response@i+1)& (0+255),w,b
 18050  002C78  6EDA               	movwf	fsr2h,c
 18051  002C7A  0EB0               	movlw	low _writeBuffer
 18052  002C7C  25E8               	addwf	build_response@len& (0+255),w,b
 18053  002C7E  6EE1               	movwf	fsr1l,c
 18054  002C80  6AE2               	clrf	fsr1h,c
 18055  002C82  0E02               	movlw	high _writeBuffer
 18056  002C84  22E2               	addwfc	fsr1h,f,c
 18057  002C86  CFDF FFE7          	movff	indf2,indf1
 18058  002C8A                     
 18059                           ; BSR set to: 0
 18060  002C8A  2BE8               	incf	build_response@len& (0+255),f,b
 18061  002C8C                     
 18062                           ; BSR set to: 0
 18063  002C8C  4BE3               	infsnz	build_response@i& (0+255),f,b
 18064  002C8E  2BE4               	incf	(build_response@i+1)& (0+255),f,b
 18065  002C90  EF27  F016         	goto	l19050
 18066  002C94                     l19062:
 18067                           
 18068                           ; BSR set to: 0
 18069                           ;app_atcommand.c: 541: len += _ftoa(g_nvm.flash.baseLine_uV[0], &writeBuffer[len]); writ
      +                          eBuffer[len++] = ',';
 18070  002C94  C182  F0CD         	movff	_g_nvm+9,__ftoa@num
 18071  002C98  C183  F0CE         	movff	_g_nvm+10,__ftoa@num+1
 18072  002C9C  C184  F0CF         	movff	_g_nvm+11,__ftoa@num+2
 18073  002CA0  C185  F0D0         	movff	_g_nvm+12,__ftoa@num+3
 18074  002CA4  0EB0               	movlw	low _writeBuffer
 18075  002CA6  25E8               	addwf	build_response@len& (0+255),w,b
 18076  002CA8  6FD1               	movwf	__ftoa@str& (0+255),b
 18077  002CAA  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18078  002CAC  0E02               	movlw	high _writeBuffer
 18079  002CAE  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18080  002CB0  EC1F  F073         	call	__ftoa	;wreg free
 18081  002CB4  0100               	movlb	0	; () banked
 18082  002CB6  51CD               	movf	?__ftoa& (0+255),w,b
 18083  002CB8  27E8               	addwf	build_response@len& (0+255),f,b
 18084  002CBA                     
 18085                           ; BSR set to: 0
 18086  002CBA  0EB0               	movlw	low _writeBuffer
 18087  002CBC  25E8               	addwf	build_response@len& (0+255),w,b
 18088  002CBE  6ED9               	movwf	fsr2l,c
 18089  002CC0  6ADA               	clrf	fsr2h,c
 18090  002CC2  0E02               	movlw	high _writeBuffer
 18091  002CC4  22DA               	addwfc	fsr2h,f,c
 18092  002CC6  0E2C               	movlw	44
 18093  002CC8  6EDF               	movwf	indf2,c
 18094  002CCA                     
 18095                           ; BSR set to: 0
 18096  002CCA  2BE8               	incf	build_response@len& (0+255),f,b
 18097  002CCC                     
 18098                           ; BSR set to: 0
 18099                           ;app_atcommand.c: 542: len += _ftoa(g_nvm.flash.baseLine_uV[1], &writeBuffer[len]); writ
      +                          eBuffer[len++] = ',';
 18100  002CCC  C186  F0CD         	movff	_g_nvm+13,__ftoa@num
 18101  002CD0  C187  F0CE         	movff	_g_nvm+14,__ftoa@num+1
 18102  002CD4  C188  F0CF         	movff	_g_nvm+15,__ftoa@num+2
 18103  002CD8  C189  F0D0         	movff	_g_nvm+16,__ftoa@num+3
 18104  002CDC  0EB0               	movlw	low _writeBuffer
 18105  002CDE  25E8               	addwf	build_response@len& (0+255),w,b
 18106  002CE0  6FD1               	movwf	__ftoa@str& (0+255),b
 18107  002CE2  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18108  002CE4  0E02               	movlw	high _writeBuffer
 18109  002CE6  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18110  002CE8  EC1F  F073         	call	__ftoa	;wreg free
 18111  002CEC  0100               	movlb	0	; () banked
 18112  002CEE  51CD               	movf	?__ftoa& (0+255),w,b
 18113  002CF0  27E8               	addwf	build_response@len& (0+255),f,b
 18114  002CF2                     
 18115                           ; BSR set to: 0
 18116  002CF2  0EB0               	movlw	low _writeBuffer
 18117  002CF4  25E8               	addwf	build_response@len& (0+255),w,b
 18118  002CF6  6ED9               	movwf	fsr2l,c
 18119  002CF8  6ADA               	clrf	fsr2h,c
 18120  002CFA  0E02               	movlw	high _writeBuffer
 18121  002CFC  22DA               	addwfc	fsr2h,f,c
 18122  002CFE  0E2C               	movlw	44
 18123  002D00  6EDF               	movwf	indf2,c
 18124  002D02  2BE8               	incf	build_response@len& (0+255),f,b
 18125  002D04                     
 18126                           ; BSR set to: 0
 18127                           ;app_atcommand.c: 543: len += _ftoa(g_nvm.flash.baseLine_uV[2], &writeBuffer[len]);
 18128  002D04  C18A  F0CD         	movff	_g_nvm+17,__ftoa@num
 18129  002D08  C18B  F0CE         	movff	_g_nvm+18,__ftoa@num+1
 18130  002D0C  C18C  F0CF         	movff	_g_nvm+19,__ftoa@num+2
 18131  002D10  C18D  F0D0         	movff	_g_nvm+20,__ftoa@num+3
 18132  002D14  0EB0               	movlw	low _writeBuffer
 18133  002D16  25E8               	addwf	build_response@len& (0+255),w,b
 18134  002D18  6FD1               	movwf	__ftoa@str& (0+255),b
 18135  002D1A  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18136  002D1C  0E02               	movlw	high _writeBuffer
 18137  002D1E  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18138  002D20  EC1F  F073         	call	__ftoa	;wreg free
 18139  002D24  0100               	movlb	0	; () banked
 18140  002D26  51CD               	movf	?__ftoa& (0+255),w,b
 18141  002D28  27E8               	addwf	build_response@len& (0+255),f,b
 18142                           
 18143                           ;app_atcommand.c: 544: break;
 18144  002D2A  EF46  F019         	goto	l19150
 18145  002D2E                     l19074:
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;app_atcommand.c: 546: if (chno >= 0 && chno <= 2) len += _ftoa(g_nvm.flash.baseLine_uV[
      +                          chno], &writeBuffer[len]);
 18149  002D2E  0E03               	movlw	3
 18150  002D30  61E7               	cpfslt	build_response@chno& (0+255),b
 18151  002D32  EF9D  F016         	goto	u20781
 18152  002D36  EF9F  F016         	goto	u20780
 18153  002D3A                     u20781:
 18154  002D3A  EFBC  F016         	goto	l19078
 18155  002D3E                     u20780:
 18156  002D3E                     
 18157                           ; BSR set to: 0
 18158  002D3E  51E7               	movf	build_response@chno& (0+255),w,b
 18159  002D40  0D04               	mullw	4
 18160  002D42  0E82               	movlw	low (_g_nvm+9)
 18161  002D44  24F3               	addwf	243,w,c
 18162  002D46  6ED9               	movwf	fsr2l,c
 18163  002D48  0E01               	movlw	high (_g_nvm+9)
 18164  002D4A  20F4               	addwfc	prodh,w,c
 18165  002D4C  6EDA               	movwf	fsr2h,c
 18166  002D4E  CFDE F0CD          	movff	postinc2,__ftoa@num
 18167  002D52  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 18168  002D56  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 18169  002D5A  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 18170  002D5E  0EB0               	movlw	low _writeBuffer
 18171  002D60  25E8               	addwf	build_response@len& (0+255),w,b
 18172  002D62  6FD1               	movwf	__ftoa@str& (0+255),b
 18173  002D64  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18174  002D66  0E02               	movlw	high _writeBuffer
 18175  002D68  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18176  002D6A  EC1F  F073         	call	__ftoa	;wreg free
 18177  002D6E  0100               	movlb	0	; () banked
 18178  002D70  51CD               	movf	?__ftoa& (0+255),w,b
 18179  002D72  27E8               	addwf	build_response@len& (0+255),f,b
 18180  002D74  EF46  F019         	goto	l19150
 18181  002D78                     l19078:
 18182                           
 18183                           ; BSR set to: 0
 18184                           ;app_atcommand.c: 547: else len += _strcpy(&writeBuffer[len], "error"); break;
 18185  002D78  0EB0               	movlw	low _writeBuffer
 18186  002D7A  25E8               	addwf	build_response@len& (0+255),w,b
 18187  002D7C  6E0F               	movwf	__strcpy@dest^0,c
 18188  002D7E  6A10               	clrf	(__strcpy@dest+1)^0,c
 18189  002D80  0E02               	movlw	high _writeBuffer
 18190  002D82  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 18191  002D84  0E77               	movlw	low STR_8
 18192  002D86  6E11               	movwf	__strcpy@source^0,c
 18193  002D88  0E23               	movlw	high STR_8
 18194  002D8A  6E12               	movwf	(__strcpy@source+1)^0,c
 18195  002D8C  EC08  F06A         	call	__strcpy	;wreg free
 18196  002D90  500F               	movf	?__strcpy^0,w,c
 18197  002D92  0100               	movlb	0	; () banked
 18198  002D94  27E8               	addwf	build_response@len& (0+255),f,b
 18199  002D96  EF46  F019         	goto	l19150
 18200  002D9A                     l19080:
 18201                           
 18202                           ; BSR set to: 0
 18203                           ;app_atcommand.c: 549: if (chno >= 0 && chno <= 2) {
 18204  002D9A  0E03               	movlw	3
 18205  002D9C  61E7               	cpfslt	build_response@chno& (0+255),b
 18206  002D9E  EFD3  F016         	goto	u20791
 18207  002DA2  EFD5  F016         	goto	u20790
 18208  002DA6                     u20791:
 18209  002DA6  EF7E  F017         	goto	l19104
 18210  002DAA                     u20790:
 18211  002DAA                     
 18212                           ; BSR set to: 0
 18213                           ;app_atcommand.c: 550: len += _ftoa(g_nvm.flash.CalibrationGas[chno], &writeBuffer[len])
      +                          ; writeBuffer[len++] = ',';
 18214  002DAA  51E7               	movf	build_response@chno& (0+255),w,b
 18215  002DAC  0D04               	mullw	4
 18216  002DAE  0E9A               	movlw	low (_g_nvm+33)
 18217  002DB0  24F3               	addwf	243,w,c
 18218  002DB2  6ED9               	movwf	fsr2l,c
 18219  002DB4  0E01               	movlw	high (_g_nvm+33)
 18220  002DB6  20F4               	addwfc	prodh,w,c
 18221  002DB8  6EDA               	movwf	fsr2h,c
 18222  002DBA  CFDE F0CD          	movff	postinc2,__ftoa@num
 18223  002DBE  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 18224  002DC2  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 18225  002DC6  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 18226  002DCA  0EB0               	movlw	low _writeBuffer
 18227  002DCC  25E8               	addwf	build_response@len& (0+255),w,b
 18228  002DCE  6FD1               	movwf	__ftoa@str& (0+255),b
 18229  002DD0  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18230  002DD2  0E02               	movlw	high _writeBuffer
 18231  002DD4  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18232  002DD6  EC1F  F073         	call	__ftoa	;wreg free
 18233  002DDA  0100               	movlb	0	; () banked
 18234  002DDC  51CD               	movf	?__ftoa& (0+255),w,b
 18235  002DDE  27E8               	addwf	build_response@len& (0+255),f,b
 18236  002DE0                     
 18237                           ; BSR set to: 0
 18238  002DE0  0EB0               	movlw	low _writeBuffer
 18239  002DE2  25E8               	addwf	build_response@len& (0+255),w,b
 18240  002DE4  6ED9               	movwf	fsr2l,c
 18241  002DE6  6ADA               	clrf	fsr2h,c
 18242  002DE8  0E02               	movlw	high _writeBuffer
 18243  002DEA  22DA               	addwfc	fsr2h,f,c
 18244  002DEC  0E2C               	movlw	44
 18245  002DEE  6EDF               	movwf	indf2,c
 18246  002DF0                     
 18247                           ; BSR set to: 0
 18248  002DF0  2BE8               	incf	build_response@len& (0+255),f,b
 18249  002DF2                     
 18250                           ; BSR set to: 0
 18251                           ;app_atcommand.c: 551: len += sprintf(&writeBuffer[len], "%.2f", g_nvm.flash.gas_slope[c
      +                          hno]); writeBuffer[len++] = ',';
 18252  002DF2  0EB0               	movlw	low _writeBuffer
 18253  002DF4  25E8               	addwf	build_response@len& (0+255),w,b
 18254  002DF6  6FA6               	movwf	sprintf@sp& (0+255),b
 18255  002DF8  6BA7               	clrf	(sprintf@sp+1)& (0+255),b
 18256  002DFA  0E02               	movlw	high _writeBuffer
 18257  002DFC  23A7               	addwfc	(sprintf@sp+1)& (0+255),f,b
 18258  002DFE  0E7D               	movlw	low STR_10
 18259  002E00  6FA8               	movwf	sprintf@f& (0+255),b
 18260  002E02  0E23               	movlw	high STR_10
 18261  002E04  6FA9               	movwf	(sprintf@f+1)& (0+255),b
 18262  002E06  51E7               	movf	build_response@chno& (0+255),w,b
 18263  002E08  0D04               	mullw	4
 18264  002E0A  0EA6               	movlw	low (_g_nvm+45)
 18265  002E0C  24F3               	addwf	243,w,c
 18266  002E0E  6ED9               	movwf	fsr2l,c
 18267  002E10  0E01               	movlw	high (_g_nvm+45)
 18268  002E12  20F4               	addwfc	prodh,w,c
 18269  002E14  6EDA               	movwf	fsr2h,c
 18270  002E16  CFDE F0AA          	movff	postinc2,?_sprintf+4
 18271  002E1A  CFDE F0AB          	movff	postinc2,?_sprintf+5
 18272  002E1E  CFDE F0AC          	movff	postinc2,?_sprintf+6
 18273  002E22  CFDE F0AD          	movff	postinc2,?_sprintf+7
 18274  002E26  ECBF  F01F         	call	_sprintf	;wreg free
 18275  002E2A  0100               	movlb	0	; () banked
 18276  002E2C  51A6               	movf	?_sprintf& (0+255),w,b
 18277  002E2E  27E8               	addwf	build_response@len& (0+255),f,b
 18278  002E30                     
 18279                           ; BSR set to: 0
 18280  002E30  0EB0               	movlw	low _writeBuffer
 18281  002E32  25E8               	addwf	build_response@len& (0+255),w,b
 18282  002E34  6ED9               	movwf	fsr2l,c
 18283  002E36  6ADA               	clrf	fsr2h,c
 18284  002E38  0E02               	movlw	high _writeBuffer
 18285  002E3A  22DA               	addwfc	fsr2h,f,c
 18286  002E3C  0E2C               	movlw	44
 18287  002E3E  6EDF               	movwf	indf2,c
 18288  002E40  2BE8               	incf	build_response@len& (0+255),f,b
 18289  002E42                     
 18290                           ; BSR set to: 0
 18291                           ;app_atcommand.c: 552: len += _ftoa(g_nvm.flash.baseLine_uV[chno], &writeBuffer[len]); w
      +                          riteBuffer[len++] = ',';
 18292  002E42  51E7               	movf	build_response@chno& (0+255),w,b
 18293  002E44  0D04               	mullw	4
 18294  002E46  0E82               	movlw	low (_g_nvm+9)
 18295  002E48  24F3               	addwf	243,w,c
 18296  002E4A  6ED9               	movwf	fsr2l,c
 18297  002E4C  0E01               	movlw	high (_g_nvm+9)
 18298  002E4E  20F4               	addwfc	prodh,w,c
 18299  002E50  6EDA               	movwf	fsr2h,c
 18300  002E52  CFDE F0CD          	movff	postinc2,__ftoa@num
 18301  002E56  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 18302  002E5A  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 18303  002E5E  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 18304  002E62  0EB0               	movlw	low _writeBuffer
 18305  002E64  25E8               	addwf	build_response@len& (0+255),w,b
 18306  002E66  6FD1               	movwf	__ftoa@str& (0+255),b
 18307  002E68  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18308  002E6A  0E02               	movlw	high _writeBuffer
 18309  002E6C  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18310  002E6E  EC1F  F073         	call	__ftoa	;wreg free
 18311  002E72  0100               	movlb	0	; () banked
 18312  002E74  51CD               	movf	?__ftoa& (0+255),w,b
 18313  002E76  27E8               	addwf	build_response@len& (0+255),f,b
 18314  002E78                     
 18315                           ; BSR set to: 0
 18316  002E78  0EB0               	movlw	low _writeBuffer
 18317  002E7A  25E8               	addwf	build_response@len& (0+255),w,b
 18318  002E7C  6ED9               	movwf	fsr2l,c
 18319  002E7E  6ADA               	clrf	fsr2h,c
 18320  002E80  0E02               	movlw	high _writeBuffer
 18321  002E82  22DA               	addwfc	fsr2h,f,c
 18322  002E84  0E2C               	movlw	44
 18323  002E86  6EDF               	movwf	indf2,c
 18324  002E88                     
 18325                           ; BSR set to: 0
 18326  002E88  2BE8               	incf	build_response@len& (0+255),f,b
 18327  002E8A                     
 18328                           ; BSR set to: 0
 18329                           ;app_atcommand.c: 553: len += _ftoa(g_nvm.flash.span_uV[chno], &writeBuffer[len]); write
      +                          Buffer[len++] = ',';
 18330  002E8A  51E7               	movf	build_response@chno& (0+255),w,b
 18331  002E8C  0D04               	mullw	4
 18332  002E8E  0E8E               	movlw	low (_g_nvm+21)
 18333  002E90  24F3               	addwf	243,w,c
 18334  002E92  6ED9               	movwf	fsr2l,c
 18335  002E94  0E01               	movlw	high (_g_nvm+21)
 18336  002E96  20F4               	addwfc	prodh,w,c
 18337  002E98  6EDA               	movwf	fsr2h,c
 18338  002E9A  CFDE F0CD          	movff	postinc2,__ftoa@num
 18339  002E9E  CFDE F0CE          	movff	postinc2,__ftoa@num+1
 18340  002EA2  CFDE F0CF          	movff	postinc2,__ftoa@num+2
 18341  002EA6  CFDE F0D0          	movff	postinc2,__ftoa@num+3
 18342  002EAA  0EB0               	movlw	low _writeBuffer
 18343  002EAC  25E8               	addwf	build_response@len& (0+255),w,b
 18344  002EAE  6FD1               	movwf	__ftoa@str& (0+255),b
 18345  002EB0  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18346  002EB2  0E02               	movlw	high _writeBuffer
 18347  002EB4  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18348  002EB6  EC1F  F073         	call	__ftoa	;wreg free
 18349  002EBA  0100               	movlb	0	; () banked
 18350  002EBC  51CD               	movf	?__ftoa& (0+255),w,b
 18351  002EBE  27E8               	addwf	build_response@len& (0+255),f,b
 18352  002EC0  0EB0               	movlw	low _writeBuffer
 18353  002EC2  25E8               	addwf	build_response@len& (0+255),w,b
 18354  002EC4  6ED9               	movwf	fsr2l,c
 18355  002EC6  6ADA               	clrf	fsr2h,c
 18356  002EC8  0E02               	movlw	high _writeBuffer
 18357  002ECA  22DA               	addwfc	fsr2h,f,c
 18358  002ECC  0E2C               	movlw	44
 18359  002ECE  6EDF               	movwf	indf2,c
 18360  002ED0                     
 18361                           ; BSR set to: 0
 18362  002ED0  2BE8               	incf	build_response@len& (0+255),f,b
 18363  002ED2                     
 18364                           ; BSR set to: 0
 18365                           ;app_atcommand.c: 554: len += _ftoa(g_nvm.flash.calib_temp, &writeBuffer[len]);
 18366  002ED2  C1CA  F0CD         	movff	_g_nvm+81,__ftoa@num
 18367  002ED6  C1CB  F0CE         	movff	_g_nvm+82,__ftoa@num+1
 18368  002EDA  C1CC  F0CF         	movff	_g_nvm+83,__ftoa@num+2
 18369  002EDE  C1CD  F0D0         	movff	_g_nvm+84,__ftoa@num+3
 18370  002EE2  0EB0               	movlw	low _writeBuffer
 18371  002EE4  25E8               	addwf	build_response@len& (0+255),w,b
 18372  002EE6  6FD1               	movwf	__ftoa@str& (0+255),b
 18373  002EE8  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18374  002EEA  0E02               	movlw	high _writeBuffer
 18375  002EEC  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18376  002EEE  EC1F  F073         	call	__ftoa	;wreg free
 18377  002EF2  0100               	movlb	0	; () banked
 18378  002EF4  51CD               	movf	?__ftoa& (0+255),w,b
 18379  002EF6  27E8               	addwf	build_response@len& (0+255),f,b
 18380                           
 18381                           ;app_atcommand.c: 555: } else len += _strcpy(&writeBuffer[len], "error");
 18382  002EF8  EF46  F019         	goto	l19150
 18383  002EFC                     l19104:
 18384                           
 18385                           ; BSR set to: 0
 18386  002EFC  0EB0               	movlw	low _writeBuffer
 18387  002EFE  25E8               	addwf	build_response@len& (0+255),w,b
 18388  002F00  6E0F               	movwf	__strcpy@dest^0,c
 18389  002F02  6A10               	clrf	(__strcpy@dest+1)^0,c
 18390  002F04  0E02               	movlw	high _writeBuffer
 18391  002F06  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 18392  002F08  0E77               	movlw	low STR_8
 18393  002F0A  6E11               	movwf	__strcpy@source^0,c
 18394  002F0C  0E23               	movlw	high STR_8
 18395  002F0E  6E12               	movwf	(__strcpy@source+1)^0,c
 18396  002F10  EC08  F06A         	call	__strcpy	;wreg free
 18397  002F14  500F               	movf	?__strcpy^0,w,c
 18398  002F16  0100               	movlb	0	; () banked
 18399  002F18  27E8               	addwf	build_response@len& (0+255),f,b
 18400  002F1A  EF46  F019         	goto	l19150
 18401  002F1E                     l19106:
 18402                           
 18403                           ; BSR set to: 0
 18404                           ;app_atcommand.c: 558: {;app_atcommand.c: 559: if (chno == 0) len += _ftoa(g_nvm.flash.g
      +                          asOffset[0], &writeBuffer[len]);
 18405  002F1E  51E7               	movf	build_response@chno& (0+255),w,b
 18406  002F20  A4D8               	btfss	status,2,c
 18407  002F22  EF95  F017         	goto	u20801
 18408  002F26  EF97  F017         	goto	u20800
 18409  002F2A                     u20801:
 18410  002F2A  EFAC  F017         	goto	l19110
 18411  002F2E                     u20800:
 18412  002F2E                     
 18413                           ; BSR set to: 0
 18414  002F2E  C1B2  F0CD         	movff	_g_nvm+57,__ftoa@num
 18415  002F32  C1B3  F0CE         	movff	_g_nvm+58,__ftoa@num+1
 18416  002F36  C1B4  F0CF         	movff	_g_nvm+59,__ftoa@num+2
 18417  002F3A  C1B5  F0D0         	movff	_g_nvm+60,__ftoa@num+3
 18418  002F3E  0EB0               	movlw	low _writeBuffer
 18419  002F40  25E8               	addwf	build_response@len& (0+255),w,b
 18420  002F42  6FD1               	movwf	__ftoa@str& (0+255),b
 18421  002F44  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18422  002F46  0E02               	movlw	high _writeBuffer
 18423  002F48  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18424  002F4A  EC1F  F073         	call	__ftoa	;wreg free
 18425  002F4E  0100               	movlb	0	; () banked
 18426  002F50  51CD               	movf	?__ftoa& (0+255),w,b
 18427  002F52  27E8               	addwf	build_response@len& (0+255),f,b
 18428  002F54  EF46  F019         	goto	l19150
 18429  002F58                     l19110:
 18430                           
 18431                           ; BSR set to: 0
 18432                           ;app_atcommand.c: 560: else if (chno == 1) len += _ftoa(g_nvm.flash.gasOffset[1], &write
      +                          Buffer[len]);
 18433  002F58  05E7               	decf	build_response@chno& (0+255),w,b
 18434  002F5A  A4D8               	btfss	status,2,c
 18435  002F5C  EFB2  F017         	goto	u20811
 18436  002F60  EFB4  F017         	goto	u20810
 18437  002F64                     u20811:
 18438  002F64  EFC9  F017         	goto	l19114
 18439  002F68                     u20810:
 18440  002F68                     
 18441                           ; BSR set to: 0
 18442  002F68  C1B6  F0CD         	movff	_g_nvm+61,__ftoa@num
 18443  002F6C  C1B7  F0CE         	movff	_g_nvm+62,__ftoa@num+1
 18444  002F70  C1B8  F0CF         	movff	_g_nvm+63,__ftoa@num+2
 18445  002F74  C1B9  F0D0         	movff	_g_nvm+64,__ftoa@num+3
 18446  002F78  0EB0               	movlw	low _writeBuffer
 18447  002F7A  25E8               	addwf	build_response@len& (0+255),w,b
 18448  002F7C  6FD1               	movwf	__ftoa@str& (0+255),b
 18449  002F7E  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18450  002F80  0E02               	movlw	high _writeBuffer
 18451  002F82  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18452  002F84  EC1F  F073         	call	__ftoa	;wreg free
 18453  002F88  0100               	movlb	0	; () banked
 18454  002F8A  51CD               	movf	?__ftoa& (0+255),w,b
 18455  002F8C  27E8               	addwf	build_response@len& (0+255),f,b
 18456  002F8E  EF46  F019         	goto	l19150
 18457  002F92                     l19114:
 18458                           
 18459                           ; BSR set to: 0
 18460                           ;app_atcommand.c: 561: else if (chno == 2) len += _ftoa(g_nvm.flash.gasOffset[2], &write
      +                          Buffer[len]);
 18461  002F92  0E02               	movlw	2
 18462  002F94  19E7               	xorwf	build_response@chno& (0+255),w,b
 18463  002F96  A4D8               	btfss	status,2,c
 18464  002F98  EFD0  F017         	goto	u20821
 18465  002F9C  EFD2  F017         	goto	u20820
 18466  002FA0                     u20821:
 18467  002FA0  EFE7  F017         	goto	l19118
 18468  002FA4                     u20820:
 18469  002FA4                     
 18470                           ; BSR set to: 0
 18471  002FA4  C1BA  F0CD         	movff	_g_nvm+65,__ftoa@num
 18472  002FA8  C1BB  F0CE         	movff	_g_nvm+66,__ftoa@num+1
 18473  002FAC  C1BC  F0CF         	movff	_g_nvm+67,__ftoa@num+2
 18474  002FB0  C1BD  F0D0         	movff	_g_nvm+68,__ftoa@num+3
 18475  002FB4  0EB0               	movlw	low _writeBuffer
 18476  002FB6  25E8               	addwf	build_response@len& (0+255),w,b
 18477  002FB8  6FD1               	movwf	__ftoa@str& (0+255),b
 18478  002FBA  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18479  002FBC  0E02               	movlw	high _writeBuffer
 18480  002FBE  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18481  002FC0  EC1F  F073         	call	__ftoa	;wreg free
 18482  002FC4  0100               	movlb	0	; () banked
 18483  002FC6  51CD               	movf	?__ftoa& (0+255),w,b
 18484  002FC8  27E8               	addwf	build_response@len& (0+255),f,b
 18485  002FCA  EF46  F019         	goto	l19150
 18486  002FCE                     l19118:
 18487                           
 18488                           ; BSR set to: 0
 18489                           ;app_atcommand.c: 562: else if (chno == 3) len += _itoa(g_nvm.flash.co2Offset, &writeBuf
      +                          fer[len]);
 18490  002FCE  0E03               	movlw	3
 18491  002FD0  19E7               	xorwf	build_response@chno& (0+255),w,b
 18492  002FD2  A4D8               	btfss	status,2,c
 18493  002FD4  EFEE  F017         	goto	u20831
 18494  002FD8  EFF0  F017         	goto	u20830
 18495  002FDC                     u20831:
 18496  002FDC  EF05  F018         	goto	l19122
 18497  002FE0                     u20830:
 18498  002FE0                     
 18499                           ; BSR set to: 0
 18500  002FE0  C1BE  F027         	movff	_g_nvm+69,__itoa@num
 18501  002FE4  C1BF  F028         	movff	_g_nvm+70,__itoa@num+1
 18502  002FE8  C1C0  F029         	movff	_g_nvm+71,__itoa@num+2
 18503  002FEC  C1C1  F02A         	movff	_g_nvm+72,__itoa@num+3
 18504  002FF0  0EB0               	movlw	low _writeBuffer
 18505  002FF2  25E8               	addwf	build_response@len& (0+255),w,b
 18506  002FF4  6E2B               	movwf	__itoa@str^0,c
 18507  002FF6  6A2C               	clrf	(__itoa@str+1)^0,c
 18508  002FF8  0E02               	movlw	high _writeBuffer
 18509  002FFA  222C               	addwfc	(__itoa@str+1)^0,f,c
 18510  002FFC  EC6C  F04F         	call	__itoa	;wreg free
 18511  003000  5027               	movf	?__itoa^0,w,c
 18512  003002  0100               	movlb	0	; () banked
 18513  003004  27E8               	addwf	build_response@len& (0+255),f,b
 18514  003006  EF46  F019         	goto	l19150
 18515  00300A                     l19122:
 18516                           
 18517                           ; BSR set to: 0
 18518                           ;app_atcommand.c: 563: else if (chno == 4) len += _ftoa(g_nvm.flash.tempOffset, &writeBu
      +                          ffer[len]);
 18519  00300A  0E04               	movlw	4
 18520  00300C  19E7               	xorwf	build_response@chno& (0+255),w,b
 18521  00300E  A4D8               	btfss	status,2,c
 18522  003010  EF0C  F018         	goto	u20841
 18523  003014  EF0E  F018         	goto	u20840
 18524  003018                     u20841:
 18525  003018  EF23  F018         	goto	l19126
 18526  00301C                     u20840:
 18527  00301C                     
 18528                           ; BSR set to: 0
 18529  00301C  C1C2  F0CD         	movff	_g_nvm+73,__ftoa@num
 18530  003020  C1C3  F0CE         	movff	_g_nvm+74,__ftoa@num+1
 18531  003024  C1C4  F0CF         	movff	_g_nvm+75,__ftoa@num+2
 18532  003028  C1C5  F0D0         	movff	_g_nvm+76,__ftoa@num+3
 18533  00302C  0EB0               	movlw	low _writeBuffer
 18534  00302E  25E8               	addwf	build_response@len& (0+255),w,b
 18535  003030  6FD1               	movwf	__ftoa@str& (0+255),b
 18536  003032  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18537  003034  0E02               	movlw	high _writeBuffer
 18538  003036  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18539  003038  EC1F  F073         	call	__ftoa	;wreg free
 18540  00303C  0100               	movlb	0	; () banked
 18541  00303E  51CD               	movf	?__ftoa& (0+255),w,b
 18542  003040  27E8               	addwf	build_response@len& (0+255),f,b
 18543  003042  EF46  F019         	goto	l19150
 18544  003046                     l19126:
 18545                           
 18546                           ; BSR set to: 0
 18547                           ;app_atcommand.c: 564: else if (chno == 5) len += _ftoa(g_nvm.flash.humiOffset, &writeBu
      +                          ffer[len]);
 18548  003046  0E05               	movlw	5
 18549  003048  19E7               	xorwf	build_response@chno& (0+255),w,b
 18550  00304A  A4D8               	btfss	status,2,c
 18551  00304C  EF2A  F018         	goto	u20851
 18552  003050  EF2C  F018         	goto	u20850
 18553  003054                     u20851:
 18554  003054  EF87  F013         	goto	l954
 18555  003058                     u20850:
 18556  003058                     
 18557                           ; BSR set to: 0
 18558  003058  C1C6  F0CD         	movff	_g_nvm+77,__ftoa@num
 18559  00305C  C1C7  F0CE         	movff	_g_nvm+78,__ftoa@num+1
 18560  003060  C1C8  F0CF         	movff	_g_nvm+79,__ftoa@num+2
 18561  003064  C1C9  F0D0         	movff	_g_nvm+80,__ftoa@num+3
 18562  003068  0EB0               	movlw	low _writeBuffer
 18563  00306A  25E8               	addwf	build_response@len& (0+255),w,b
 18564  00306C  6FD1               	movwf	__ftoa@str& (0+255),b
 18565  00306E  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18566  003070  0E02               	movlw	high _writeBuffer
 18567  003072  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18568  003074  EC1F  F073         	call	__ftoa	;wreg free
 18569  003078  0100               	movlb	0	; () banked
 18570  00307A  51CD               	movf	?__ftoa& (0+255),w,b
 18571  00307C  27E8               	addwf	build_response@len& (0+255),f,b
 18572  00307E  EF46  F019         	goto	l19150
 18573  003082                     l19130:
 18574                           
 18575                           ; BSR set to: 0
 18576                           ;app_atcommand.c: 567: if (chno >= 0 && chno <= 3) len += _itoa(g_nvm.flash.window_size[
      +                          chno], &writeBuffer[len]);
 18577  003082  0E04               	movlw	4
 18578  003084  61E7               	cpfslt	build_response@chno& (0+255),b
 18579  003086  EF47  F018         	goto	u20861
 18580  00308A  EF49  F018         	goto	u20860
 18581  00308E                     u20861:
 18582  00308E  EF63  F018         	goto	l19134
 18583  003092                     u20860:
 18584  003092                     
 18585                           ; BSR set to: 0
 18586  003092  0E7E               	movlw	low (_g_nvm+5)
 18587  003094  25E7               	addwf	build_response@chno& (0+255),w,b
 18588  003096  6ED9               	movwf	fsr2l,c
 18589  003098  6ADA               	clrf	fsr2h,c
 18590  00309A  0E01               	movlw	high (_g_nvm+5)
 18591  00309C  22DA               	addwfc	fsr2h,f,c
 18592  00309E  50DF               	movf	indf2,w,c
 18593  0030A0  6FD7               	movwf	??_build_response& (0+255),b
 18594  0030A2  51D7               	movf	??_build_response& (0+255),w,b
 18595  0030A4  6E27               	movwf	__itoa@num^0,c
 18596  0030A6  6A28               	clrf	(__itoa@num+1)^0,c
 18597  0030A8  6A29               	clrf	(__itoa@num+2)^0,c
 18598  0030AA  6A2A               	clrf	(__itoa@num+3)^0,c
 18599  0030AC  0EB0               	movlw	low _writeBuffer
 18600  0030AE  25E8               	addwf	build_response@len& (0+255),w,b
 18601  0030B0  6E2B               	movwf	__itoa@str^0,c
 18602  0030B2  6A2C               	clrf	(__itoa@str+1)^0,c
 18603  0030B4  0E02               	movlw	high _writeBuffer
 18604  0030B6  222C               	addwfc	(__itoa@str+1)^0,f,c
 18605  0030B8  EC6C  F04F         	call	__itoa	;wreg free
 18606  0030BC  5027               	movf	?__itoa^0,w,c
 18607  0030BE  0100               	movlb	0	; () banked
 18608  0030C0  27E8               	addwf	build_response@len& (0+255),f,b
 18609  0030C2  EF46  F019         	goto	l19150
 18610  0030C6                     l19134:
 18611                           
 18612                           ; BSR set to: 0
 18613                           ;app_atcommand.c: 568: else len += _strcpy(&writeBuffer[len], "error"); break;
 18614  0030C6  0EB0               	movlw	low _writeBuffer
 18615  0030C8  25E8               	addwf	build_response@len& (0+255),w,b
 18616  0030CA  6E0F               	movwf	__strcpy@dest^0,c
 18617  0030CC  6A10               	clrf	(__strcpy@dest+1)^0,c
 18618  0030CE  0E02               	movlw	high _writeBuffer
 18619  0030D0  2210               	addwfc	(__strcpy@dest+1)^0,f,c
 18620  0030D2  0E77               	movlw	low STR_8
 18621  0030D4  6E11               	movwf	__strcpy@source^0,c
 18622  0030D6  0E23               	movlw	high STR_8
 18623  0030D8  6E12               	movwf	(__strcpy@source+1)^0,c
 18624  0030DA  EC08  F06A         	call	__strcpy	;wreg free
 18625  0030DE  500F               	movf	?__strcpy^0,w,c
 18626  0030E0  0100               	movlb	0	; () banked
 18627  0030E2  27E8               	addwf	build_response@len& (0+255),f,b
 18628  0030E4  EF46  F019         	goto	l19150
 18629  0030E8                     l19136:
 18630                           
 18631                           ; BSR set to: 0
 18632  0030E8  C1D2  F027         	movff	_g_nvm+89,__itoa@num
 18633  0030EC  C1D3  F028         	movff	_g_nvm+90,__itoa@num+1
 18634  0030F0  C1D4  F029         	movff	_g_nvm+91,__itoa@num+2
 18635  0030F4  C1D5  F02A         	movff	_g_nvm+92,__itoa@num+3
 18636  0030F8  0EB0               	movlw	low _writeBuffer
 18637  0030FA  25E8               	addwf	build_response@len& (0+255),w,b
 18638  0030FC  6E2B               	movwf	__itoa@str^0,c
 18639  0030FE  6A2C               	clrf	(__itoa@str+1)^0,c
 18640  003100  0E02               	movlw	high _writeBuffer
 18641  003102  222C               	addwfc	(__itoa@str+1)^0,f,c
 18642  003104  EC6C  F04F         	call	__itoa	;wreg free
 18643  003108  5027               	movf	?__itoa^0,w,c
 18644  00310A  0100               	movlb	0	; () banked
 18645  00310C  27E8               	addwf	build_response@len& (0+255),f,b
 18646  00310E  EF46  F019         	goto	l19150
 18647  003112                     l19138:
 18648                           
 18649                           ; BSR set to: 0
 18650  003112  C1D6  F027         	movff	_g_nvm+93,__itoa@num
 18651  003116  C1D7  F028         	movff	_g_nvm+94,__itoa@num+1
 18652  00311A  C1D8  F029         	movff	_g_nvm+95,__itoa@num+2
 18653  00311E  C1D9  F02A         	movff	_g_nvm+96,__itoa@num+3
 18654  003122  0EB0               	movlw	low _writeBuffer
 18655  003124  25E8               	addwf	build_response@len& (0+255),w,b
 18656  003126  6E2B               	movwf	__itoa@str^0,c
 18657  003128  6A2C               	clrf	(__itoa@str+1)^0,c
 18658  00312A  0E02               	movlw	high _writeBuffer
 18659  00312C  222C               	addwfc	(__itoa@str+1)^0,f,c
 18660  00312E  EC6C  F04F         	call	__itoa	;wreg free
 18661  003132  5027               	movf	?__itoa^0,w,c
 18662  003134  0100               	movlb	0	; () banked
 18663  003136  27E8               	addwf	build_response@len& (0+255),f,b
 18664  003138  EF46  F019         	goto	l19150
 18665  00313C                     l19140:
 18666                           
 18667                           ; BSR set to: 0
 18668  00313C  C1DA  F027         	movff	_g_nvm+97,__itoa@num
 18669  003140  C1DB  F028         	movff	_g_nvm+98,__itoa@num+1
 18670  003144  C1DC  F029         	movff	_g_nvm+99,__itoa@num+2
 18671  003148  C1DD  F02A         	movff	_g_nvm+100,__itoa@num+3
 18672  00314C  0EB0               	movlw	low _writeBuffer
 18673  00314E  25E8               	addwf	build_response@len& (0+255),w,b
 18674  003150  6E2B               	movwf	__itoa@str^0,c
 18675  003152  6A2C               	clrf	(__itoa@str+1)^0,c
 18676  003154  0E02               	movlw	high _writeBuffer
 18677  003156  222C               	addwfc	(__itoa@str+1)^0,f,c
 18678  003158  EC6C  F04F         	call	__itoa	;wreg free
 18679  00315C  5027               	movf	?__itoa^0,w,c
 18680  00315E  0100               	movlb	0	; () banked
 18681  003160  27E8               	addwf	build_response@len& (0+255),f,b
 18682  003162  EF46  F019         	goto	l19150
 18683  003166                     l19142:
 18684                           
 18685                           ; BSR set to: 0
 18686                           ;app_atcommand.c: 573: len += _itoa(g_nvm.flash.CO2_ABC, &writeBuffer[len]); break;
 18687  003166  0101               	movlb	1	; () banked
 18688  003168  517D               	movf	(_g_nvm+4)& (0+255),w,b
 18689  00316A  6E27               	movwf	__itoa@num^0,c
 18690  00316C  6A28               	clrf	(__itoa@num+1)^0,c
 18691  00316E  6A29               	clrf	(__itoa@num+2)^0,c
 18692  003170  6A2A               	clrf	(__itoa@num+3)^0,c
 18693  003172  0EB0               	movlw	low _writeBuffer
 18694  003174  0100               	movlb	0	; () banked
 18695  003176  25E8               	addwf	build_response@len& (0+255),w,b
 18696  003178  6E2B               	movwf	__itoa@str^0,c
 18697  00317A  6A2C               	clrf	(__itoa@str+1)^0,c
 18698  00317C  0E02               	movlw	high _writeBuffer
 18699  00317E  222C               	addwfc	(__itoa@str+1)^0,f,c
 18700  003180  EC6C  F04F         	call	__itoa	;wreg free
 18701  003184  5027               	movf	?__itoa^0,w,c
 18702  003186  0100               	movlb	0	; () banked
 18703  003188  27E8               	addwf	build_response@len& (0+255),f,b
 18704  00318A  EF46  F019         	goto	l19150
 18705  00318E                     l19144:
 18706                           
 18707                           ; BSR set to: 0
 18708  00318E  C1CE  F0CD         	movff	_g_nvm+85,__ftoa@num
 18709  003192  C1CF  F0CE         	movff	_g_nvm+86,__ftoa@num+1
 18710  003196  C1D0  F0CF         	movff	_g_nvm+87,__ftoa@num+2
 18711  00319A  C1D1  F0D0         	movff	_g_nvm+88,__ftoa@num+3
 18712  00319E  0EB0               	movlw	low _writeBuffer
 18713  0031A0  25E8               	addwf	build_response@len& (0+255),w,b
 18714  0031A2  6FD1               	movwf	__ftoa@str& (0+255),b
 18715  0031A4  6BD2               	clrf	(__ftoa@str+1)& (0+255),b
 18716  0031A6  0E02               	movlw	high _writeBuffer
 18717  0031A8  23D2               	addwfc	(__ftoa@str+1)& (0+255),f,b
 18718  0031AA  EC1F  F073         	call	__ftoa	;wreg free
 18719  0031AE  0100               	movlb	0	; () banked
 18720  0031B0  51CD               	movf	?__ftoa& (0+255),w,b
 18721  0031B2  27E8               	addwf	build_response@len& (0+255),f,b
 18722  0031B4  EF46  F019         	goto	l19150
 18723  0031B8                     l19148:
 18724  0031B8  0100               	movlb	0	; () banked
 18725  0031BA  EE20 F002          	lfsr	2,2
 18726  0031BE  51D5               	movf	build_response@status& (0+255),w,b
 18727  0031C0  26D9               	addwf	fsr2l,f,c
 18728  0031C2  51D6               	movf	(build_response@status+1)& (0+255),w,b
 18729  0031C4  22DA               	addwfc	fsr2h,f,c
 18730  0031C6  50DF               	movf	indf2,w,c
 18731                           
 18732                           ; Switch size 1, requested type "simple"
 18733                           ; Number of cases is 24, Range of values is 1 to 26
 18734                           ; switch strategies available:
 18735                           ; Name         Instructions Cycles
 18736                           ; simple_byte           73    37 (average)
 18737                           ;	Chosen strategy is simple_byte
 18738  0031C8  0A01               	xorlw	1	; case 1
 18739  0031CA  B4D8               	btfsc	status,2,c
 18740  0031CC  EF26  F012         	goto	l18858
 18741  0031D0  0A03               	xorlw	3	; case 2
 18742  0031D2  B4D8               	btfsc	status,2,c
 18743  0031D4  EF3A  F012         	goto	l18864
 18744  0031D8  0A07               	xorlw	7	; case 5
 18745  0031DA  B4D8               	btfsc	status,2,c
 18746  0031DC  EFDA  F014         	goto	l18978
 18747  0031E0  0A03               	xorlw	3	; case 6
 18748  0031E2  B4D8               	btfsc	status,2,c
 18749  0031E4  EFB3  F012         	goto	l18884
 18750  0031E8  0A01               	xorlw	1	; case 7
 18751  0031EA  B4D8               	btfsc	status,2,c
 18752  0031EC  EF89  F013         	goto	l18920
 18753  0031F0  0A0F               	xorlw	15	; case 8
 18754  0031F2  B4D8               	btfsc	status,2,c
 18755  0031F4  EF4B  F012         	goto	l18866
 18756  0031F8  0A01               	xorlw	1	; case 9
 18757  0031FA  B4D8               	btfsc	status,2,c
 18758  0031FC  EF23  F016         	goto	l19048
 18759  003200  0A03               	xorlw	3	; case 10
 18760  003202  B4D8               	btfsc	status,2,c
 18761  003204  EF22  F016         	goto	l19046
 18762  003208  0A01               	xorlw	1	; case 11
 18763  00320A  B4D8               	btfsc	status,2,c
 18764  00320C  EFB3  F018         	goto	l19142
 18765  003210  0A07               	xorlw	7	; case 12
 18766  003212  B4D8               	btfsc	status,2,c
 18767  003214  EF66  F015         	goto	l19000
 18768  003218  0A01               	xorlw	1	; case 13
 18769  00321A  B4D8               	btfsc	status,2,c
 18770  00321C  EF66  F015         	goto	l19000
 18771  003220  0A03               	xorlw	3	; case 14
 18772  003222  B4D8               	btfsc	status,2,c
 18773  003224  EF9C  F015         	goto	l19026
 18774  003228  0A01               	xorlw	1	; case 15
 18775  00322A  B4D8               	btfsc	status,2,c
 18776  00322C  EF26  F012         	goto	l18858
 18777  003230  0A1F               	xorlw	31	; case 16
 18778  003232  B4D8               	btfsc	status,2,c
 18779  003234  EF4A  F016         	goto	l19062
 18780  003238  0A01               	xorlw	1	; case 17
 18781  00323A  B4D8               	btfsc	status,2,c
 18782  00323C  EF97  F016         	goto	l19074
 18783  003240  0A03               	xorlw	3	; case 18
 18784  003242  B4D8               	btfsc	status,2,c
 18785  003244  EFCD  F016         	goto	l19080
 18786  003248  0A01               	xorlw	1	; case 19
 18787  00324A  B4D8               	btfsc	status,2,c
 18788  00324C  EF8F  F017         	goto	l19106
 18789  003250  0A07               	xorlw	7	; case 20
 18790  003252  B4D8               	btfsc	status,2,c
 18791  003254  EF3E  F015         	goto	l18996
 18792  003258  0A01               	xorlw	1	; case 21
 18793  00325A  B4D8               	btfsc	status,2,c
 18794  00325C  EF52  F015         	goto	l18998
 18795  003260  0A03               	xorlw	3	; case 22
 18796  003262  B4D8               	btfsc	status,2,c
 18797  003264  EF41  F018         	goto	l19130
 18798  003268  0A01               	xorlw	1	; case 23
 18799  00326A  B4D8               	btfsc	status,2,c
 18800  00326C  EFC7  F018         	goto	l19144
 18801  003270  0A0F               	xorlw	15	; case 24
 18802  003272  B4D8               	btfsc	status,2,c
 18803  003274  EF89  F018         	goto	l19138
 18804  003278  0A01               	xorlw	1	; case 25
 18805  00327A  B4D8               	btfsc	status,2,c
 18806  00327C  EF74  F018         	goto	l19136
 18807  003280  0A03               	xorlw	3	; case 26
 18808  003282  B4D8               	btfsc	status,2,c
 18809  003284  EF9E  F018         	goto	l19140
 18810  003288  EF46  F019         	goto	l19150
 18811  00328C                     l19150:
 18812                           
 18813                           ; BSR set to: 0
 18814                           ;app_atcommand.c: 576: writeBuffer[len++] = '\r'; writeBuffer[len++] = '\n'; writeBuffer
      +                          [len++] = '\0';
 18815  00328C  0EB0               	movlw	low _writeBuffer
 18816  00328E  25E8               	addwf	build_response@len& (0+255),w,b
 18817  003290  6ED9               	movwf	fsr2l,c
 18818  003292  6ADA               	clrf	fsr2h,c
 18819  003294  0E02               	movlw	high _writeBuffer
 18820  003296  22DA               	addwfc	fsr2h,f,c
 18821  003298  0E0D               	movlw	13
 18822  00329A  6EDF               	movwf	indf2,c
 18823  00329C                     
 18824                           ; BSR set to: 0
 18825  00329C  2BE8               	incf	build_response@len& (0+255),f,b
 18826  00329E                     
 18827                           ; BSR set to: 0
 18828  00329E  0EB0               	movlw	low _writeBuffer
 18829  0032A0  25E8               	addwf	build_response@len& (0+255),w,b
 18830  0032A2  6ED9               	movwf	fsr2l,c
 18831  0032A4  6ADA               	clrf	fsr2h,c
 18832  0032A6  0E02               	movlw	high _writeBuffer
 18833  0032A8  22DA               	addwfc	fsr2h,f,c
 18834  0032AA  0E0A               	movlw	10
 18835  0032AC  6EDF               	movwf	indf2,c
 18836  0032AE  2BE8               	incf	build_response@len& (0+255),f,b
 18837  0032B0                     
 18838                           ; BSR set to: 0
 18839  0032B0  0EB0               	movlw	low _writeBuffer
 18840  0032B2  25E8               	addwf	build_response@len& (0+255),w,b
 18841  0032B4  6ED9               	movwf	fsr2l,c
 18842  0032B6  6ADA               	clrf	fsr2h,c
 18843  0032B8  0E02               	movlw	high _writeBuffer
 18844  0032BA  22DA               	addwfc	fsr2h,f,c
 18845  0032BC  0E00               	movlw	0
 18846  0032BE  6EDF               	movwf	indf2,c
 18847  0032C0                     
 18848                           ; BSR set to: 0
 18849  0032C0  2BE8               	incf	build_response@len& (0+255),f,b
 18850  0032C2                     
 18851                           ; BSR set to: 0
 18852                           ;app_atcommand.c: 577: write_command(writeBuffer);
 18853  0032C2  0EB0               	movlw	low _writeBuffer
 18854  0032C4  6E16               	movwf	write_command@buff^0,c
 18855  0032C6  0E02               	movlw	high _writeBuffer
 18856  0032C8  6E17               	movwf	(write_command@buff+1)^0,c
 18857  0032CA  ECE5  F076         	call	_write_command	;wreg free
 18858  0032CE  0012               	return		;funcret
 18859  0032D0                     __end_of_build_response:
 18860                           	callstack 0
 18861                           
 18862 ;; *************** function _write_command *****************
 18863 ;; Defined at:
 18864 ;;		line 121 in file "app_atcommand.c"
 18865 ;; Parameters:    Size  Location     Type
 18866 ;;  buff            2   21[COMRAM] PTR const unsigned char 
 18867 ;;		 -> writeBuffer(64), 
 18868 ;; Auto vars:     Size  Location     Type
 18869 ;;		None
 18870 ;; Return value:  Size  Location     Type
 18871 ;;                  1    wreg      void 
 18872 ;; Registers used:
 18873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18874 ;; Tracked objects:
 18875 ;;		On entry : 0/0
 18876 ;;		On exit  : 0/0
 18877 ;;		Unchanged: 0/0
 18878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18883 ;;Total ram usage:        2 bytes
 18884 ;; Hardware stack levels used: 1
 18885 ;; Hardware stack levels required when called: 4
 18886 ;; This function calls:
 18887 ;;		__strlen
 18888 ;;		_putUSBUSART
 18889 ;; This function is called by:
 18890 ;;		_build_response
 18891 ;; This function uses a non-reentrant model
 18892 ;;
 18893                           
 18894                           	psect	text78
 18895  00EDCA                     __ptext78:
 18896                           	callstack 0
 18897  00EDCA                     _write_command:
 18898                           	callstack 24
 18899  00EDCA                     
 18900                           ;app_atcommand.c: 123: if((cdc_trf_state == 0) == 1)
 18901  00EDCA  504E               	movf	_cdc_trf_state^0,w,c
 18902  00EDCC  A4D8               	btfss	status,2,c
 18903  00EDCE  EFEB  F076         	goto	u12781
 18904  00EDD2  EFED  F076         	goto	u12780
 18905  00EDD6                     u12781:
 18906  00EDD6  EFFB  F076         	goto	l720
 18907  00EDDA                     u12780:
 18908  00EDDA                     
 18909                           ;app_atcommand.c: 124: {;app_atcommand.c: 125: putUSBUSART((uint8_t*)buff, (uint8_t)_str
      +                          len(buff));
 18910  00EDDA  C016  F013         	movff	write_command@buff,putUSBUSART@data
 18911  00EDDE  C017  F014         	movff	write_command@buff+1,putUSBUSART@data+1
 18912  00EDE2  C016  F00F         	movff	write_command@buff,__strlen@source
 18913  00EDE6  C017  F010         	movff	write_command@buff+1,__strlen@source+1
 18914  00EDEA  EC6F  F073         	call	__strlen	;wreg free
 18915  00EDEE  500F               	movf	?__strlen^0,w,c
 18916  00EDF0  6E15               	movwf	putUSBUSART@length^0,c
 18917  00EDF2  EC29  F077         	call	_putUSBUSART	;wreg free
 18918  00EDF6                     l720:
 18919  00EDF6  0012               	return		;funcret
 18920  00EDF8                     __end_of_write_command:
 18921                           	callstack 0
 18922                           
 18923 ;; *************** function _putUSBUSART *****************
 18924 ;; Defined at:
 18925 ;;		line 557 in file "usb/usb_device_cdc.c"
 18926 ;; Parameters:    Size  Location     Type
 18927 ;;  data            2   18[COMRAM] PTR unsigned char 
 18928 ;;		 -> writeBuffer(64), 
 18929 ;;  length          1   20[COMRAM] unsigned char 
 18930 ;; Auto vars:     Size  Location     Type
 18931 ;;		None
 18932 ;; Return value:  Size  Location     Type
 18933 ;;                  1    wreg      void 
 18934 ;; Registers used:
 18935 ;;		wreg, status,2, status,0
 18936 ;; Tracked objects:
 18937 ;;		On entry : 0/0
 18938 ;;		On exit  : 0/0
 18939 ;;		Unchanged: 0/0
 18940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18941 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18944 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18945 ;;Total ram usage:        3 bytes
 18946 ;; Hardware stack levels used: 1
 18947 ;; Hardware stack levels required when called: 3
 18948 ;; This function calls:
 18949 ;;		Nothing
 18950 ;; This function is called by:
 18951 ;;		_write_command
 18952 ;; This function uses a non-reentrant model
 18953 ;;
 18954                           
 18955                           	psect	text79
 18956  00EE52                     __ptext79:
 18957                           	callstack 0
 18958  00EE52                     _putUSBUSART:
 18959                           	callstack 24
 18960  00EE52                     
 18961                           ;usb_device_cdc.c: 582: ;;usb_device_cdc.c: 583: if(cdc_trf_state == 0)
 18962  00EE52  504E               	movf	_cdc_trf_state^0,w,c
 18963  00EE54  A4D8               	btfss	status,2,c
 18964  00EE56  EF2F  F077         	goto	u11861
 18965  00EE5A  EF31  F077         	goto	u11860
 18966  00EE5E                     u11861:
 18967  00EE5E  EF3C  F077         	goto	l2186
 18968  00EE62                     u11860:
 18969  00EE62                     
 18970                           ;usb_device_cdc.c: 584: {;usb_device_cdc.c: 585: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx
      +                          _len = length; cdc_mem_type = 0x01; cdc_trf_state = 1; };
 18971  00EE62  C013  F151         	movff	putUSBUSART@data,_pCDCSrc
 18972  00EE66  C014  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 18973  00EE6A  C015  F168         	movff	putUSBUSART@length,_cdc_tx_len
 18974  00EE6E  0E01               	movlw	1
 18975  00EE70  0101               	movlb	1	; () banked
 18976  00EE72  6F67               	movwf	_cdc_mem_type& (0+255),b
 18977  00EE74                     
 18978                           ; BSR set to: 1
 18979  00EE74  0E01               	movlw	1
 18980  00EE76  6E4E               	movwf	_cdc_trf_state^0,c
 18981  00EE78                     l2186:
 18982  00EE78  0012               	return		;funcret
 18983  00EE7A                     __end_of_putUSBUSART:
 18984                           	callstack 0
 18985                           
 18986 ;; *************** function __strlen *****************
 18987 ;; Defined at:
 18988 ;;		line 18 in file "util/_string.c"
 18989 ;; Parameters:    Size  Location     Type
 18990 ;;  source          2   14[COMRAM] PTR const unsigned char 
 18991 ;;		 -> g_atcommand.apply_params(32), writeBuffer(64), parse_command@cmd(11), g_atcommand(242), 
 18992 ;;		 -> atcommand_type(338), 
 18993 ;; Auto vars:     Size  Location     Type
 18994 ;;  sc              2   16[COMRAM] PTR const unsigned char 
 18995 ;;		 -> g_atcommand.apply_params(32), writeBuffer(64), parse_command@cmd(11), g_atcommand(242), 
 18996 ;;		 -> atcommand_type(338), 
 18997 ;; Return value:  Size  Location     Type
 18998 ;;                  2   14[COMRAM] unsigned int 
 18999 ;; Registers used:
 19000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
 19001 ;; Tracked objects:
 19002 ;;		On entry : 0/0
 19003 ;;		On exit  : 0/0
 19004 ;;		Unchanged: 0/0
 19005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19006 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19007 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19009 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19010 ;;Total ram usage:        4 bytes
 19011 ;; Hardware stack levels used: 1
 19012 ;; Hardware stack levels required when called: 3
 19013 ;; This function calls:
 19014 ;;		Nothing
 19015 ;; This function is called by:
 19016 ;;		_write_command
 19017 ;;		_check_atcommand
 19018 ;;		_split_param
 19019 ;;		_update_command
 19020 ;; This function uses a non-reentrant model
 19021 ;;
 19022                           
 19023                           	psect	text80
 19024  00E6DE                     __ptext80:
 19025                           	callstack 0
 19026  00E6DE                     __strlen:
 19027                           	callstack 24
 19028  00E6DE                     
 19029                           ;_string.c: 20: const char* sc = source;
 19030  00E6DE  C00F  F011         	movff	__strlen@source,__strlen@sc
 19031  00E6E2  C010  F012         	movff	__strlen@source+1,__strlen@sc+1
 19032                           
 19033                           ;_string.c: 21: while(*sc) ++sc;
 19034  00E6E6  EF77  F073         	goto	l12196
 19035  00E6EA                     l12194:
 19036  00E6EA  4A11               	infsnz	__strlen@sc^0,f,c
 19037  00E6EC  2A12               	incf	(__strlen@sc+1)^0,f,c
 19038  00E6EE                     l12196:
 19039  00E6EE  C011  FFF6         	movff	__strlen@sc,tblptrl
 19040  00E6F2  C012  FFF7         	movff	__strlen@sc+1,tblptrh
 19041  00E6F6  6AF8               	clrf	tblptru,c
 19042  00E6F8  0E0E               	movlw	(high __ramtop+-1)
 19043  00E6FA  64F7               	cpfsgt	tblptrh,c
 19044  00E6FC  D003               	bra	u11847
 19045  00E6FE  0008               	tblrd		*
 19046  00E700  50F5               	movf	tablat,w,c
 19047  00E702  D005               	bra	u11840
 19048  00E704                     u11847:
 19049  00E704  CFF6 FFE1          	movff	tblptrl,fsr1l
 19050  00E708  CFF7 FFE2          	movff	tblptrh,fsr1h
 19051  00E70C  50E7               	movf	indf1,w,c
 19052  00E70E                     u11840:
 19053  00E70E  0900               	iorlw	0
 19054  00E710  A4D8               	btfss	status,2,c
 19055  00E712  EF8D  F073         	goto	u11851
 19056  00E716  EF8F  F073         	goto	u11850
 19057  00E71A                     u11851:
 19058  00E71A  EF75  F073         	goto	l12194
 19059  00E71E                     u11850:
 19060  00E71E                     
 19061                           ;_string.c: 22: return sc-source;
 19062  00E71E  500F               	movf	__strlen@source^0,w,c
 19063  00E720  5C11               	subwf	__strlen@sc^0,w,c
 19064  00E722  6E0F               	movwf	?__strlen^0,c
 19065  00E724  5010               	movf	(__strlen@source+1)^0,w,c
 19066  00E726  5812               	subwfb	(__strlen@sc+1)^0,w,c
 19067  00E728  6E10               	movwf	(?__strlen+1)^0,c
 19068  00E72A  0012               	return		;funcret
 19069  00E72C                     __end_of__strlen:
 19070                           	callstack 0
 19071                           
 19072 ;; *************** function _sensor_temp_fahrenheit *****************
 19073 ;; Defined at:
 19074 ;;		line 279 in file "sensor.c"
 19075 ;; Parameters:    Size  Location     Type
 19076 ;;  temp            2   62[BANK0 ] PTR float 
 19077 ;;		 -> build_response@temp_2492(4), build_response@temp(4), 
 19078 ;; Auto vars:     Size  Location     Type
 19079 ;;		None
 19080 ;; Return value:  Size  Location     Type
 19081 ;;                  1    wreg      void 
 19082 ;; Registers used:
 19083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19084 ;; Tracked objects:
 19085 ;;		On entry : 0/0
 19086 ;;		On exit  : 0/0
 19087 ;;		Unchanged: 0/0
 19088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19092 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19093 ;;Total ram usage:        2 bytes
 19094 ;; Hardware stack levels used: 1
 19095 ;; Hardware stack levels required when called: 4
 19096 ;; This function calls:
 19097 ;;		___fladd
 19098 ;;		___flmul
 19099 ;; This function is called by:
 19100 ;;		_build_response
 19101 ;; This function uses a non-reentrant model
 19102 ;;
 19103                           
 19104                           	psect	text81
 19105  00DC7A                     __ptext81:
 19106                           	callstack 0
 19107  00DC7A                     _sensor_temp_fahrenheit:
 19108                           	callstack 24
 19109  00DC7A                     
 19110                           ;sensor.c: 281: *temp = (*temp * 1.8f) + 32.0f;
 19111  00DC7A  0E66               	movlw	102
 19112  00DC7C  0100               	movlb	0	; () banked
 19113  00DC7E  6F6C               	movwf	___flmul@a& (0+255),b
 19114  00DC80  0E66               	movlw	102
 19115  00DC82  6F6D               	movwf	(___flmul@a+1)& (0+255),b
 19116  00DC84  0EE6               	movlw	230
 19117  00DC86  6F6E               	movwf	(___flmul@a+2)& (0+255),b
 19118  00DC88  0E3F               	movlw	63
 19119  00DC8A  6F6F               	movwf	(___flmul@a+3)& (0+255),b
 19120  00DC8C  C09E  FFD9         	movff	sensor_temp_fahrenheit@temp,fsr2l
 19121  00DC90  C09F  FFDA         	movff	sensor_temp_fahrenheit@temp+1,fsr2h
 19122  00DC94  CFDE F068          	movff	postinc2,___flmul@b
 19123  00DC98  CFDE F069          	movff	postinc2,___flmul@b+1
 19124  00DC9C  CFDE F06A          	movff	postinc2,___flmul@b+2
 19125  00DCA0  CFDE F06B          	movff	postinc2,___flmul@b+3
 19126  00DCA4  ECA7  F02F         	call	___flmul	;wreg free
 19127  00DCA8  C068  F08E         	movff	?___flmul,___fladd@b
 19128  00DCAC  C069  F08F         	movff	?___flmul+1,___fladd@b+1
 19129  00DCB0  C06A  F090         	movff	?___flmul+2,___fladd@b+2
 19130  00DCB4  C06B  F091         	movff	?___flmul+3,___fladd@b+3
 19131  00DCB8  0E00               	movlw	0
 19132  00DCBA  0100               	movlb	0	; () banked
 19133  00DCBC  6F92               	movwf	___fladd@a& (0+255),b
 19134  00DCBE  0E00               	movlw	0
 19135  00DCC0  6F93               	movwf	(___fladd@a+1)& (0+255),b
 19136  00DCC2  0E00               	movlw	0
 19137  00DCC4  6F94               	movwf	(___fladd@a+2)& (0+255),b
 19138  00DCC6  0E42               	movlw	66
 19139  00DCC8  6F95               	movwf	(___fladd@a+3)& (0+255),b
 19140  00DCCA  EC46  F02D         	call	___fladd	;wreg free
 19141  00DCCE  C09E  FFD9         	movff	sensor_temp_fahrenheit@temp,fsr2l
 19142  00DCD2  C09F  FFDA         	movff	sensor_temp_fahrenheit@temp+1,fsr2h
 19143  00DCD6  0100               	movlb	0	; () banked
 19144  00DCD8  C08E  FFDE         	movff	?___fladd,postinc2
 19145  00DCDC  C08F  FFDE         	movff	?___fladd+1,postinc2
 19146  00DCE0  C090  FFDE         	movff	?___fladd+2,postinc2
 19147  00DCE4  C091  FFDE         	movff	?___fladd+3,postinc2
 19148  00DCE8                     
 19149                           ; BSR set to: 0
 19150  00DCE8  0012               	return		;funcret
 19151  00DCEA                     __end_of_sensor_temp_fahrenheit:
 19152                           	callstack 0
 19153                           
 19154 ;; *************** function __strcpy *****************
 19155 ;; Defined at:
 19156 ;;		line 4 in file "util/_string.c"
 19157 ;; Parameters:    Size  Location     Type
 19158 ;;  dest            2   14[COMRAM] PTR unsigned char 
 19159 ;;		 -> writeBuffer(64), g_atcommand(242), 
 19160 ;;  source          2   16[COMRAM] PTR const unsigned char 
 19161 ;;		 -> STR_12(6), STR_11(6), STR_9(6), STR_8(6), 
 19162 ;;		 -> STR_7(5), STR_6(10), STR_5(5), STR_4(5), 
 19163 ;;		 -> STR_3(5), STR_2(5), STR_1(16), parse_command@param(32), 
 19164 ;;		 -> parse_command@cmd(11), g_atcommand.status(176), g_atcommand(242), 
 19165 ;; Auto vars:     Size  Location     Type
 19166 ;;  i               2   20[COMRAM] unsigned int 
 19167 ;; Return value:  Size  Location     Type
 19168 ;;                  2   14[COMRAM] unsigned int 
 19169 ;; Registers used:
 19170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19171 ;; Tracked objects:
 19172 ;;		On entry : 0/0
 19173 ;;		On exit  : 0/0
 19174 ;;		Unchanged: 0/0
 19175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19179 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19180 ;;Total ram usage:        8 bytes
 19181 ;; Hardware stack levels used: 1
 19182 ;; Hardware stack levels required when called: 3
 19183 ;; This function calls:
 19184 ;;		Nothing
 19185 ;; This function is called by:
 19186 ;;		_parse_command
 19187 ;;		_build_response
 19188 ;; This function uses a non-reentrant model
 19189 ;;
 19190                           
 19191                           	psect	text82
 19192  00D410                     __ptext82:
 19193                           	callstack 0
 19194  00D410                     __strcpy:
 19195                           	callstack 25
 19196  00D410                     
 19197                           ;_string.c: 6: unsigned int i = 0;
 19198  00D410  0E00               	movlw	0
 19199  00D412  6E16               	movwf	(__strcpy@i+1)^0,c
 19200  00D414  0E00               	movlw	0
 19201  00D416  6E15               	movwf	__strcpy@i^0,c
 19202  00D418                     
 19203                           ;_string.c: 7: if(!source || !dest) return i;
 19204  00D418  5011               	movf	__strcpy@source^0,w,c
 19205  00D41A  1012               	iorwf	(__strcpy@source+1)^0,w,c
 19206  00D41C  B4D8               	btfsc	status,2,c
 19207  00D41E  EF13  F06A         	goto	u12861
 19208  00D422  EF15  F06A         	goto	u12860
 19209  00D426                     u12861:
 19210  00D426  EF1E  F06A         	goto	l2271
 19211  00D42A                     u12860:
 19212  00D42A  500F               	movf	__strcpy@dest^0,w,c
 19213  00D42C  1010               	iorwf	(__strcpy@dest+1)^0,w,c
 19214  00D42E  A4D8               	btfss	status,2,c
 19215  00D430  EF1C  F06A         	goto	u12871
 19216  00D434  EF1E  F06A         	goto	u12870
 19217  00D438                     u12871:
 19218  00D438  EF26  F06A         	goto	l12984
 19219  00D43C                     u12870:
 19220  00D43C                     l2271:
 19221  00D43C  0E00               	movlw	0
 19222  00D43E  6E10               	movwf	(?__strcpy+1)^0,c
 19223  00D440  0E00               	movlw	0
 19224  00D442  6E0F               	movwf	?__strcpy^0,c
 19225  00D444  EF4F  F06A         	goto	l2272
 19226  00D448                     l12982:
 19227  00D448  4A15               	infsnz	__strcpy@i^0,f,c
 19228  00D44A  2A16               	incf	(__strcpy@i+1)^0,f,c
 19229  00D44C                     l12984:
 19230  00D44C  5011               	movf	__strcpy@source^0,w,c
 19231  00D44E  6E13               	movwf	??__strcpy^0,c
 19232  00D450  5012               	movf	(__strcpy@source+1)^0,w,c
 19233  00D452  6E14               	movwf	(??__strcpy+1)^0,c
 19234  00D454  4A11               	infsnz	__strcpy@source^0,f,c
 19235  00D456  2A12               	incf	(__strcpy@source+1)^0,f,c
 19236  00D458  C013  FFF6         	movff	??__strcpy,tblptrl
 19237  00D45C  C014  FFF7         	movff	??__strcpy+1,tblptrh
 19238  00D460  6AF8               	clrf	tblptru,c
 19239  00D462  C00F  FFD9         	movff	__strcpy@dest,fsr2l
 19240  00D466  C010  FFDA         	movff	__strcpy@dest+1,fsr2h
 19241  00D46A  4A0F               	infsnz	__strcpy@dest^0,f,c
 19242  00D46C  2A10               	incf	(__strcpy@dest+1)^0,f,c
 19243  00D46E  0E0E               	movlw	(high __ramtop+-1)
 19244  00D470  64F7               	cpfsgt	tblptrh,c
 19245  00D472  D003               	bra	u12887
 19246  00D474  0008               	tblrd		*
 19247  00D476  50F5               	movf	tablat,w,c
 19248  00D478  D005               	bra	u12880
 19249  00D47A                     u12887:
 19250  00D47A  CFF6 FFE1          	movff	tblptrl,fsr1l
 19251  00D47E  CFF7 FFE2          	movff	tblptrh,fsr1h
 19252  00D482  50E7               	movf	indf1,w,c
 19253  00D484                     u12880:
 19254  00D484  6EDF               	movwf	indf2,c
 19255  00D486  50DF               	movf	indf2,w,c
 19256  00D488  A4D8               	btfss	status,2,c
 19257  00D48A  EF49  F06A         	goto	u12891
 19258  00D48E  EF4B  F06A         	goto	u12890
 19259  00D492                     u12891:
 19260  00D492  EF24  F06A         	goto	l12982
 19261  00D496                     u12890:
 19262  00D496                     
 19263                           ;_string.c: 9: return i;
 19264  00D496  C015  F00F         	movff	__strcpy@i,?__strcpy
 19265  00D49A  C016  F010         	movff	__strcpy@i+1,?__strcpy+1
 19266  00D49E                     l2272:
 19267  00D49E  0012               	return		;funcret
 19268  00D4A0                     __end_of__strcpy:
 19269                           	callstack 0
 19270                           
 19271 ;; *************** function __itoa *****************
 19272 ;; Defined at:
 19273 ;;		line 4 in file "util/_itoa.c"
 19274 ;; Parameters:    Size  Location     Type
 19275 ;;  num             4   38[COMRAM] const long 
 19276 ;;  str             2   42[COMRAM] PTR unsigned char 
 19277 ;;		 -> writeBuffer(64), 
 19278 ;; Auto vars:     Size  Location     Type
 19279 ;;  n               4   52[COMRAM] long 
 19280 ;;  shifter         4   46[COMRAM] long 
 19281 ;;  p               2   50[COMRAM] PTR unsigned char 
 19282 ;;		 -> writeBuffer(64), 
 19283 ;;  len             2   44[COMRAM] unsigned int 
 19284 ;; Return value:  Size  Location     Type
 19285 ;;                  2   38[COMRAM] unsigned int 
 19286 ;; Registers used:
 19287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19288 ;; Tracked objects:
 19289 ;;		On entry : 0/0
 19290 ;;		On exit  : 0/0
 19291 ;;		Unchanged: 0/0
 19292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19293 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19294 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19296 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19297 ;;Total ram usage:       18 bytes
 19298 ;; Hardware stack levels used: 1
 19299 ;; Hardware stack levels required when called: 4
 19300 ;; This function calls:
 19301 ;;		___aldiv
 19302 ;;		___almod
 19303 ;;		___lmul
 19304 ;; This function is called by:
 19305 ;;		_build_response
 19306 ;; This function uses a non-reentrant model
 19307 ;;
 19308                           
 19309                           	psect	text83
 19310  009ED8                     __ptext83:
 19311                           	callstack 0
 19312  009ED8                     __itoa:
 19313                           	callstack 24
 19314  009ED8                     
 19315                           ;_itoa.c: 6: long shifter;;_itoa.c: 7: long n;;_itoa.c: 8: unsigned len = 0;
 19316  009ED8  0E00               	movlw	0
 19317  009EDA  6E2E               	movwf	(__itoa@len+1)^0,c
 19318  009EDC  0E00               	movlw	0
 19319  009EDE  6E2D               	movwf	__itoa@len^0,c
 19320  009EE0                     
 19321                           ;_itoa.c: 9: char* p = str;
 19322  009EE0  C02B  F033         	movff	__itoa@str,__itoa@p
 19323  009EE4  C02C  F034         	movff	__itoa@str+1,__itoa@p+1
 19324  009EE8                     
 19325                           ;_itoa.c: 11: n = num;
 19326  009EE8  C027  F035         	movff	__itoa@num,__itoa@n
 19327  009EEC  C028  F036         	movff	__itoa@num+1,__itoa@n+1
 19328  009EF0  C029  F037         	movff	__itoa@num+2,__itoa@n+2
 19329  009EF4  C02A  F038         	movff	__itoa@num+3,__itoa@n+3
 19330  009EF8                     
 19331                           ;_itoa.c: 12: if (num < 0){
 19332  009EF8  BE2A               	btfsc	(__itoa@num+3)^0,7,c
 19333  009EFA  EF83  F04F         	goto	u19740
 19334  009EFE  EF81  F04F         	goto	u19741
 19335  009F02                     u19741:
 19336  009F02  EFA7  F04F         	goto	l18240
 19337  009F06                     u19740:
 19338  009F06                     
 19339                           ;_itoa.c: 13: n *= -1;
 19340  009F06  C035  F00F         	movff	__itoa@n,___lmul@multiplier
 19341  009F0A  C036  F010         	movff	__itoa@n+1,___lmul@multiplier+1
 19342  009F0E  C037  F011         	movff	__itoa@n+2,___lmul@multiplier+2
 19343  009F12  C038  F012         	movff	__itoa@n+3,___lmul@multiplier+3
 19344  009F16  0EFF               	movlw	255
 19345  009F18  6E13               	movwf	___lmul@multiplicand^0,c
 19346  009F1A  0EFF               	movlw	255
 19347  009F1C  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 19348  009F1E  0EFF               	movlw	255
 19349  009F20  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 19350  009F22  0EFF               	movlw	255
 19351  009F24  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 19352  009F26  ECE0  F06E         	call	___lmul	;wreg free
 19353  009F2A  C00F  F035         	movff	?___lmul,__itoa@n
 19354  009F2E  C010  F036         	movff	?___lmul+1,__itoa@n+1
 19355  009F32  C011  F037         	movff	?___lmul+2,__itoa@n+2
 19356  009F36  C012  F038         	movff	?___lmul+3,__itoa@n+3
 19357  009F3A                     
 19358                           ;_itoa.c: 14: *p = '-';
 19359  009F3A  C033  FFD9         	movff	__itoa@p,fsr2l
 19360  009F3E  C034  FFDA         	movff	__itoa@p+1,fsr2h
 19361  009F42  0E2D               	movlw	45
 19362  009F44  6EDF               	movwf	indf2,c
 19363  009F46                     
 19364                           ;_itoa.c: 15: p++; len++;
 19365  009F46  4A33               	infsnz	__itoa@p^0,f,c
 19366  009F48  2A34               	incf	(__itoa@p+1)^0,f,c
 19367  009F4A  4A2D               	infsnz	__itoa@len^0,f,c
 19368  009F4C  2A2E               	incf	(__itoa@len+1)^0,f,c
 19369  009F4E                     l18240:
 19370                           
 19371                           ;_itoa.c: 16: };_itoa.c: 18: shifter = n;
 19372  009F4E  C035  F02F         	movff	__itoa@n,__itoa@shifter
 19373  009F52  C036  F030         	movff	__itoa@n+1,__itoa@shifter+1
 19374  009F56  C037  F031         	movff	__itoa@n+2,__itoa@shifter+2
 19375  009F5A  C038  F032         	movff	__itoa@n+3,__itoa@shifter+3
 19376  009F5E                     l18242:
 19377                           
 19378                           ;_itoa.c: 20: shifter /= 10;
 19379  009F5E  C02F  F00F         	movff	__itoa@shifter,___aldiv@dividend
 19380  009F62  C030  F010         	movff	__itoa@shifter+1,___aldiv@dividend+1
 19381  009F66  C031  F011         	movff	__itoa@shifter+2,___aldiv@dividend+2
 19382  009F6A  C032  F012         	movff	__itoa@shifter+3,___aldiv@dividend+3
 19383  009F6E  0E0A               	movlw	10
 19384  009F70  6E13               	movwf	___aldiv@divisor^0,c
 19385  009F72  0E00               	movlw	0
 19386  009F74  6E14               	movwf	(___aldiv@divisor+1)^0,c
 19387  009F76  0E00               	movlw	0
 19388  009F78  6E15               	movwf	(___aldiv@divisor+2)^0,c
 19389  009F7A  0E00               	movlw	0
 19390  009F7C  6E16               	movwf	(___aldiv@divisor+3)^0,c
 19391  009F7E  ECD9  F059         	call	___aldiv	;wreg free
 19392  009F82  C00F  F02F         	movff	?___aldiv,__itoa@shifter
 19393  009F86  C010  F030         	movff	?___aldiv+1,__itoa@shifter+1
 19394  009F8A  C011  F031         	movff	?___aldiv+2,__itoa@shifter+2
 19395  009F8E  C012  F032         	movff	?___aldiv+3,__itoa@shifter+3
 19396  009F92                     
 19397                           ;_itoa.c: 21: p++; len++;
 19398  009F92  4A33               	infsnz	__itoa@p^0,f,c
 19399  009F94  2A34               	incf	(__itoa@p+1)^0,f,c
 19400  009F96  4A2D               	infsnz	__itoa@len^0,f,c
 19401  009F98  2A2E               	incf	(__itoa@len+1)^0,f,c
 19402  009F9A                     
 19403                           ;_itoa.c: 22: } while (shifter);
 19404  009F9A  502F               	movf	__itoa@shifter^0,w,c
 19405  009F9C  1030               	iorwf	(__itoa@shifter+1)^0,w,c
 19406  009F9E  1031               	iorwf	(__itoa@shifter+2)^0,w,c
 19407  009FA0  1032               	iorwf	(__itoa@shifter+3)^0,w,c
 19408  009FA2  A4D8               	btfss	status,2,c
 19409  009FA4  EFD6  F04F         	goto	u19751
 19410  009FA8  EFD8  F04F         	goto	u19750
 19411  009FAC                     u19751:
 19412  009FAC  EFAF  F04F         	goto	l18242
 19413  009FB0                     u19750:
 19414  009FB0                     
 19415                           ;_itoa.c: 24: *p = '\0';
 19416  009FB0  C033  FFD9         	movff	__itoa@p,fsr2l
 19417  009FB4  C034  FFDA         	movff	__itoa@p+1,fsr2h
 19418  009FB8  0E00               	movlw	0
 19419  009FBA  6EDF               	movwf	indf2,c
 19420  009FBC                     l18252:
 19421                           
 19422                           ;_itoa.c: 27: *--p = (n % 10) + '0';
 19423  009FBC  C035  F00F         	movff	__itoa@n,___almod@dividend
 19424  009FC0  C036  F010         	movff	__itoa@n+1,___almod@dividend+1
 19425  009FC4  C037  F011         	movff	__itoa@n+2,___almod@dividend+2
 19426  009FC8  C038  F012         	movff	__itoa@n+3,___almod@dividend+3
 19427  009FCC  0E0A               	movlw	10
 19428  009FCE  6E13               	movwf	___almod@divisor^0,c
 19429  009FD0  0E00               	movlw	0
 19430  009FD2  6E14               	movwf	(___almod@divisor+1)^0,c
 19431  009FD4  0E00               	movlw	0
 19432  009FD6  6E15               	movwf	(___almod@divisor+2)^0,c
 19433  009FD8  0E00               	movlw	0
 19434  009FDA  6E16               	movwf	(___almod@divisor+3)^0,c
 19435  009FDC  EC5B  F05E         	call	___almod	;wreg free
 19436  009FE0  500F               	movf	?___almod^0,w,c
 19437  009FE2  0F30               	addlw	48
 19438  009FE4  0633               	decf	__itoa@p^0,f,c
 19439  009FE6  A0D8               	btfss	status,0,c
 19440  009FE8  0634               	decf	(__itoa@p+1)^0,f,c
 19441  009FEA  C033  FFD9         	movff	__itoa@p,fsr2l
 19442  009FEE  C034  FFDA         	movff	__itoa@p+1,fsr2h
 19443  009FF2  6EDF               	movwf	indf2,c
 19444  009FF4                     
 19445                           ;_itoa.c: 28: n /= 10;
 19446  009FF4  C035  F00F         	movff	__itoa@n,___aldiv@dividend
 19447  009FF8  C036  F010         	movff	__itoa@n+1,___aldiv@dividend+1
 19448  009FFC  C037  F011         	movff	__itoa@n+2,___aldiv@dividend+2
 19449  00A000  C038  F012         	movff	__itoa@n+3,___aldiv@dividend+3
 19450  00A004  0E0A               	movlw	10
 19451  00A006  6E13               	movwf	___aldiv@divisor^0,c
 19452  00A008  0E00               	movlw	0
 19453  00A00A  6E14               	movwf	(___aldiv@divisor+1)^0,c
 19454  00A00C  0E00               	movlw	0
 19455  00A00E  6E15               	movwf	(___aldiv@divisor+2)^0,c
 19456  00A010  0E00               	movlw	0
 19457  00A012  6E16               	movwf	(___aldiv@divisor+3)^0,c
 19458  00A014  ECD9  F059         	call	___aldiv	;wreg free
 19459  00A018  C00F  F035         	movff	?___aldiv,__itoa@n
 19460  00A01C  C010  F036         	movff	?___aldiv+1,__itoa@n+1
 19461  00A020  C011  F037         	movff	?___aldiv+2,__itoa@n+2
 19462  00A024  C012  F038         	movff	?___aldiv+3,__itoa@n+3
 19463  00A028                     
 19464                           ;_itoa.c: 29: } while (n);
 19465  00A028  5035               	movf	__itoa@n^0,w,c
 19466  00A02A  1036               	iorwf	(__itoa@n+1)^0,w,c
 19467  00A02C  1037               	iorwf	(__itoa@n+2)^0,w,c
 19468  00A02E  1038               	iorwf	(__itoa@n+3)^0,w,c
 19469  00A030  A4D8               	btfss	status,2,c
 19470  00A032  EF1D  F050         	goto	u19761
 19471  00A036  EF1F  F050         	goto	u19760
 19472  00A03A                     u19761:
 19473  00A03A  EFDE  F04F         	goto	l18252
 19474  00A03E                     u19760:
 19475  00A03E                     
 19476                           ;_itoa.c: 31: return len;
 19477  00A03E  C02D  F027         	movff	__itoa@len,?__itoa
 19478  00A042  C02E  F028         	movff	__itoa@len+1,?__itoa+1
 19479  00A046  0012               	return		;funcret
 19480  00A048                     __end_of__itoa:
 19481                           	callstack 0
 19482                           
 19483 ;; *************** function ___almod *****************
 19484 ;; Defined at:
 19485 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\almod.c"
 19486 ;; Parameters:    Size  Location     Type
 19487 ;;  dividend        4   14[COMRAM] long 
 19488 ;;  divisor         4   18[COMRAM] long 
 19489 ;; Auto vars:     Size  Location     Type
 19490 ;;  sign            1   23[COMRAM] unsigned char 
 19491 ;;  counter         1   22[COMRAM] unsigned char 
 19492 ;; Return value:  Size  Location     Type
 19493 ;;                  4   14[COMRAM] long 
 19494 ;; Registers used:
 19495 ;;		wreg, status,2, status,0
 19496 ;; Tracked objects:
 19497 ;;		On entry : 0/0
 19498 ;;		On exit  : 0/0
 19499 ;;		Unchanged: 0/0
 19500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19501 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19504 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19505 ;;Total ram usage:       10 bytes
 19506 ;; Hardware stack levels used: 1
 19507 ;; Hardware stack levels required when called: 3
 19508 ;; This function calls:
 19509 ;;		Nothing
 19510 ;; This function is called by:
 19511 ;;		__itoa
 19512 ;; This function uses a non-reentrant model
 19513 ;;
 19514                           
 19515                           	psect	text84
 19516  00BCB6                     __ptext84:
 19517                           	callstack 0
 19518  00BCB6                     ___almod:
 19519                           	callstack 24
 19520  00BCB6  0E00               	movlw	0
 19521  00BCB8  6E18               	movwf	___almod@sign^0,c
 19522  00BCBA  BE12               	btfsc	(___almod@dividend+3)^0,7,c
 19523  00BCBC  EF64  F05E         	goto	u12670
 19524  00BCC0  EF62  F05E         	goto	u12671
 19525  00BCC4                     u12671:
 19526  00BCC4  EF6E  F05E         	goto	l12798
 19527  00BCC8                     u12670:
 19528  00BCC8  1E12               	comf	(___almod@dividend+3)^0,f,c
 19529  00BCCA  1E11               	comf	(___almod@dividend+2)^0,f,c
 19530  00BCCC  1E10               	comf	(___almod@dividend+1)^0,f,c
 19531  00BCCE  6C0F               	negf	___almod@dividend^0,c
 19532  00BCD0  0E00               	movlw	0
 19533  00BCD2  2210               	addwfc	(___almod@dividend+1)^0,f,c
 19534  00BCD4  2211               	addwfc	(___almod@dividend+2)^0,f,c
 19535  00BCD6  2212               	addwfc	(___almod@dividend+3)^0,f,c
 19536  00BCD8  0E01               	movlw	1
 19537  00BCDA  6E18               	movwf	___almod@sign^0,c
 19538  00BCDC                     l12798:
 19539  00BCDC  BE16               	btfsc	(___almod@divisor+3)^0,7,c
 19540  00BCDE  EF75  F05E         	goto	u12680
 19541  00BCE2  EF73  F05E         	goto	u12681
 19542  00BCE6                     u12681:
 19543  00BCE6  EF7D  F05E         	goto	l12802
 19544  00BCEA                     u12680:
 19545  00BCEA  1E16               	comf	(___almod@divisor+3)^0,f,c
 19546  00BCEC  1E15               	comf	(___almod@divisor+2)^0,f,c
 19547  00BCEE  1E14               	comf	(___almod@divisor+1)^0,f,c
 19548  00BCF0  6C13               	negf	___almod@divisor^0,c
 19549  00BCF2  0E00               	movlw	0
 19550  00BCF4  2214               	addwfc	(___almod@divisor+1)^0,f,c
 19551  00BCF6  2215               	addwfc	(___almod@divisor+2)^0,f,c
 19552  00BCF8  2216               	addwfc	(___almod@divisor+3)^0,f,c
 19553  00BCFA                     l12802:
 19554  00BCFA  5013               	movf	___almod@divisor^0,w,c
 19555  00BCFC  1014               	iorwf	(___almod@divisor+1)^0,w,c
 19556  00BCFE  1015               	iorwf	(___almod@divisor+2)^0,w,c
 19557  00BD00  1016               	iorwf	(___almod@divisor+3)^0,w,c
 19558  00BD02  B4D8               	btfsc	status,2,c
 19559  00BD04  EF86  F05E         	goto	u12691
 19560  00BD08  EF88  F05E         	goto	u12690
 19561  00BD0C                     u12691:
 19562  00BD0C  EFB8  F05E         	goto	l12818
 19563  00BD10                     u12690:
 19564  00BD10  0E01               	movlw	1
 19565  00BD12  6E17               	movwf	___almod@counter^0,c
 19566  00BD14  EF92  F05E         	goto	l12808
 19567  00BD18                     l12806:
 19568  00BD18  90D8               	bcf	status,0,c
 19569  00BD1A  3613               	rlcf	___almod@divisor^0,f,c
 19570  00BD1C  3614               	rlcf	(___almod@divisor+1)^0,f,c
 19571  00BD1E  3615               	rlcf	(___almod@divisor+2)^0,f,c
 19572  00BD20  3616               	rlcf	(___almod@divisor+3)^0,f,c
 19573  00BD22  2A17               	incf	___almod@counter^0,f,c
 19574  00BD24                     l12808:
 19575  00BD24  AE16               	btfss	(___almod@divisor+3)^0,7,c
 19576  00BD26  EF97  F05E         	goto	u12701
 19577  00BD2A  EF99  F05E         	goto	u12700
 19578  00BD2E                     u12701:
 19579  00BD2E  EF8C  F05E         	goto	l12806
 19580  00BD32                     u12700:
 19581  00BD32                     l12810:
 19582  00BD32  5013               	movf	___almod@divisor^0,w,c
 19583  00BD34  5C0F               	subwf	___almod@dividend^0,w,c
 19584  00BD36  5014               	movf	(___almod@divisor+1)^0,w,c
 19585  00BD38  5810               	subwfb	(___almod@dividend+1)^0,w,c
 19586  00BD3A  5015               	movf	(___almod@divisor+2)^0,w,c
 19587  00BD3C  5811               	subwfb	(___almod@dividend+2)^0,w,c
 19588  00BD3E  5016               	movf	(___almod@divisor+3)^0,w,c
 19589  00BD40  5812               	subwfb	(___almod@dividend+3)^0,w,c
 19590  00BD42  A0D8               	btfss	status,0,c
 19591  00BD44  EFA6  F05E         	goto	u12711
 19592  00BD48  EFA8  F05E         	goto	u12710
 19593  00BD4C                     u12711:
 19594  00BD4C  EFB0  F05E         	goto	l12814
 19595  00BD50                     u12710:
 19596  00BD50  5013               	movf	___almod@divisor^0,w,c
 19597  00BD52  5E0F               	subwf	___almod@dividend^0,f,c
 19598  00BD54  5014               	movf	(___almod@divisor+1)^0,w,c
 19599  00BD56  5A10               	subwfb	(___almod@dividend+1)^0,f,c
 19600  00BD58  5015               	movf	(___almod@divisor+2)^0,w,c
 19601  00BD5A  5A11               	subwfb	(___almod@dividend+2)^0,f,c
 19602  00BD5C  5016               	movf	(___almod@divisor+3)^0,w,c
 19603  00BD5E  5A12               	subwfb	(___almod@dividend+3)^0,f,c
 19604  00BD60                     l12814:
 19605  00BD60  90D8               	bcf	status,0,c
 19606  00BD62  3216               	rrcf	(___almod@divisor+3)^0,f,c
 19607  00BD64  3215               	rrcf	(___almod@divisor+2)^0,f,c
 19608  00BD66  3214               	rrcf	(___almod@divisor+1)^0,f,c
 19609  00BD68  3213               	rrcf	___almod@divisor^0,f,c
 19610  00BD6A  2E17               	decfsz	___almod@counter^0,f,c
 19611  00BD6C  EF99  F05E         	goto	l12810
 19612  00BD70                     l12818:
 19613  00BD70  5018               	movf	___almod@sign^0,w,c
 19614  00BD72  B4D8               	btfsc	status,2,c
 19615  00BD74  EFBE  F05E         	goto	u12721
 19616  00BD78  EFC0  F05E         	goto	u12720
 19617  00BD7C                     u12721:
 19618  00BD7C  EFC8  F05E         	goto	l12822
 19619  00BD80                     u12720:
 19620  00BD80  1E12               	comf	(___almod@dividend+3)^0,f,c
 19621  00BD82  1E11               	comf	(___almod@dividend+2)^0,f,c
 19622  00BD84  1E10               	comf	(___almod@dividend+1)^0,f,c
 19623  00BD86  6C0F               	negf	___almod@dividend^0,c
 19624  00BD88  0E00               	movlw	0
 19625  00BD8A  2210               	addwfc	(___almod@dividend+1)^0,f,c
 19626  00BD8C  2211               	addwfc	(___almod@dividend+2)^0,f,c
 19627  00BD8E  2212               	addwfc	(___almod@dividend+3)^0,f,c
 19628  00BD90                     l12822:
 19629  00BD90  C00F  F00F         	movff	___almod@dividend,?___almod
 19630  00BD94  C010  F010         	movff	___almod@dividend+1,?___almod+1
 19631  00BD98  C011  F011         	movff	___almod@dividend+2,?___almod+2
 19632  00BD9C  C012  F012         	movff	___almod@dividend+3,?___almod+3
 19633  00BDA0  0012               	return		;funcret
 19634  00BDA2                     __end_of___almod:
 19635                           	callstack 0
 19636                           
 19637 ;; *************** function ___aldiv *****************
 19638 ;; Defined at:
 19639 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\aldiv.c"
 19640 ;; Parameters:    Size  Location     Type
 19641 ;;  dividend        4   14[COMRAM] long 
 19642 ;;  divisor         4   18[COMRAM] long 
 19643 ;; Auto vars:     Size  Location     Type
 19644 ;;  quotient        4   24[COMRAM] long 
 19645 ;;  sign            1   23[COMRAM] unsigned char 
 19646 ;;  counter         1   22[COMRAM] unsigned char 
 19647 ;; Return value:  Size  Location     Type
 19648 ;;                  4   14[COMRAM] long 
 19649 ;; Registers used:
 19650 ;;		wreg, status,2, status,0
 19651 ;; Tracked objects:
 19652 ;;		On entry : 0/0
 19653 ;;		On exit  : 0/0
 19654 ;;		Unchanged: 0/0
 19655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19656 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19657 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19659 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19660 ;;Total ram usage:       14 bytes
 19661 ;; Hardware stack levels used: 1
 19662 ;; Hardware stack levels required when called: 3
 19663 ;; This function calls:
 19664 ;;		Nothing
 19665 ;; This function is called by:
 19666 ;;		__itoa
 19667 ;; This function uses a non-reentrant model
 19668 ;;
 19669                           
 19670                           	psect	text85
 19671  00B3B2                     __ptext85:
 19672                           	callstack 0
 19673  00B3B2                     ___aldiv:
 19674                           	callstack 24
 19675  00B3B2  0E00               	movlw	0
 19676  00B3B4  6E18               	movwf	___aldiv@sign^0,c
 19677  00B3B6  BE16               	btfsc	(___aldiv@divisor+3)^0,7,c
 19678  00B3B8  EFE2  F059         	goto	u12610
 19679  00B3BC  EFE0  F059         	goto	u12611
 19680  00B3C0                     u12611:
 19681  00B3C0  EFEC  F059         	goto	l12754
 19682  00B3C4                     u12610:
 19683  00B3C4  1E16               	comf	(___aldiv@divisor+3)^0,f,c
 19684  00B3C6  1E15               	comf	(___aldiv@divisor+2)^0,f,c
 19685  00B3C8  1E14               	comf	(___aldiv@divisor+1)^0,f,c
 19686  00B3CA  6C13               	negf	___aldiv@divisor^0,c
 19687  00B3CC  0E00               	movlw	0
 19688  00B3CE  2214               	addwfc	(___aldiv@divisor+1)^0,f,c
 19689  00B3D0  2215               	addwfc	(___aldiv@divisor+2)^0,f,c
 19690  00B3D2  2216               	addwfc	(___aldiv@divisor+3)^0,f,c
 19691  00B3D4  0E01               	movlw	1
 19692  00B3D6  6E18               	movwf	___aldiv@sign^0,c
 19693  00B3D8                     l12754:
 19694  00B3D8  BE12               	btfsc	(___aldiv@dividend+3)^0,7,c
 19695  00B3DA  EFF3  F059         	goto	u12620
 19696  00B3DE  EFF1  F059         	goto	u12621
 19697  00B3E2                     u12621:
 19698  00B3E2  EFFD  F059         	goto	l12760
 19699  00B3E6                     u12620:
 19700  00B3E6  1E12               	comf	(___aldiv@dividend+3)^0,f,c
 19701  00B3E8  1E11               	comf	(___aldiv@dividend+2)^0,f,c
 19702  00B3EA  1E10               	comf	(___aldiv@dividend+1)^0,f,c
 19703  00B3EC  6C0F               	negf	___aldiv@dividend^0,c
 19704  00B3EE  0E00               	movlw	0
 19705  00B3F0  2210               	addwfc	(___aldiv@dividend+1)^0,f,c
 19706  00B3F2  2211               	addwfc	(___aldiv@dividend+2)^0,f,c
 19707  00B3F4  2212               	addwfc	(___aldiv@dividend+3)^0,f,c
 19708  00B3F6  0E01               	movlw	1
 19709  00B3F8  1A18               	xorwf	___aldiv@sign^0,f,c
 19710  00B3FA                     l12760:
 19711  00B3FA  0E00               	movlw	0
 19712  00B3FC  6E19               	movwf	___aldiv@quotient^0,c
 19713  00B3FE  0E00               	movlw	0
 19714  00B400  6E1A               	movwf	(___aldiv@quotient+1)^0,c
 19715  00B402  0E00               	movlw	0
 19716  00B404  6E1B               	movwf	(___aldiv@quotient+2)^0,c
 19717  00B406  0E00               	movlw	0
 19718  00B408  6E1C               	movwf	(___aldiv@quotient+3)^0,c
 19719  00B40A  5013               	movf	___aldiv@divisor^0,w,c
 19720  00B40C  1014               	iorwf	(___aldiv@divisor+1)^0,w,c
 19721  00B40E  1015               	iorwf	(___aldiv@divisor+2)^0,w,c
 19722  00B410  1016               	iorwf	(___aldiv@divisor+3)^0,w,c
 19723  00B412  B4D8               	btfsc	status,2,c
 19724  00B414  EF0E  F05A         	goto	u12631
 19725  00B418  EF10  F05A         	goto	u12630
 19726  00B41C                     u12631:
 19727  00B41C  EF46  F05A         	goto	l12782
 19728  00B420                     u12630:
 19729  00B420  0E01               	movlw	1
 19730  00B422  6E17               	movwf	___aldiv@counter^0,c
 19731  00B424  EF1A  F05A         	goto	l12768
 19732  00B428                     l12766:
 19733  00B428  90D8               	bcf	status,0,c
 19734  00B42A  3613               	rlcf	___aldiv@divisor^0,f,c
 19735  00B42C  3614               	rlcf	(___aldiv@divisor+1)^0,f,c
 19736  00B42E  3615               	rlcf	(___aldiv@divisor+2)^0,f,c
 19737  00B430  3616               	rlcf	(___aldiv@divisor+3)^0,f,c
 19738  00B432  2A17               	incf	___aldiv@counter^0,f,c
 19739  00B434                     l12768:
 19740  00B434  AE16               	btfss	(___aldiv@divisor+3)^0,7,c
 19741  00B436  EF1F  F05A         	goto	u12641
 19742  00B43A  EF21  F05A         	goto	u12640
 19743  00B43E                     u12641:
 19744  00B43E  EF14  F05A         	goto	l12766
 19745  00B442                     u12640:
 19746  00B442                     l12770:
 19747  00B442  90D8               	bcf	status,0,c
 19748  00B444  3619               	rlcf	___aldiv@quotient^0,f,c
 19749  00B446  361A               	rlcf	(___aldiv@quotient+1)^0,f,c
 19750  00B448  361B               	rlcf	(___aldiv@quotient+2)^0,f,c
 19751  00B44A  361C               	rlcf	(___aldiv@quotient+3)^0,f,c
 19752  00B44C  5013               	movf	___aldiv@divisor^0,w,c
 19753  00B44E  5C0F               	subwf	___aldiv@dividend^0,w,c
 19754  00B450  5014               	movf	(___aldiv@divisor+1)^0,w,c
 19755  00B452  5810               	subwfb	(___aldiv@dividend+1)^0,w,c
 19756  00B454  5015               	movf	(___aldiv@divisor+2)^0,w,c
 19757  00B456  5811               	subwfb	(___aldiv@dividend+2)^0,w,c
 19758  00B458  5016               	movf	(___aldiv@divisor+3)^0,w,c
 19759  00B45A  5812               	subwfb	(___aldiv@dividend+3)^0,w,c
 19760  00B45C  A0D8               	btfss	status,0,c
 19761  00B45E  EF33  F05A         	goto	u12651
 19762  00B462  EF35  F05A         	goto	u12650
 19763  00B466                     u12651:
 19764  00B466  EF3E  F05A         	goto	l12778
 19765  00B46A                     u12650:
 19766  00B46A  5013               	movf	___aldiv@divisor^0,w,c
 19767  00B46C  5E0F               	subwf	___aldiv@dividend^0,f,c
 19768  00B46E  5014               	movf	(___aldiv@divisor+1)^0,w,c
 19769  00B470  5A10               	subwfb	(___aldiv@dividend+1)^0,f,c
 19770  00B472  5015               	movf	(___aldiv@divisor+2)^0,w,c
 19771  00B474  5A11               	subwfb	(___aldiv@dividend+2)^0,f,c
 19772  00B476  5016               	movf	(___aldiv@divisor+3)^0,w,c
 19773  00B478  5A12               	subwfb	(___aldiv@dividend+3)^0,f,c
 19774  00B47A  8019               	bsf	___aldiv@quotient^0,0,c
 19775  00B47C                     l12778:
 19776  00B47C  90D8               	bcf	status,0,c
 19777  00B47E  3216               	rrcf	(___aldiv@divisor+3)^0,f,c
 19778  00B480  3215               	rrcf	(___aldiv@divisor+2)^0,f,c
 19779  00B482  3214               	rrcf	(___aldiv@divisor+1)^0,f,c
 19780  00B484  3213               	rrcf	___aldiv@divisor^0,f,c
 19781  00B486  2E17               	decfsz	___aldiv@counter^0,f,c
 19782  00B488  EF21  F05A         	goto	l12770
 19783  00B48C                     l12782:
 19784  00B48C  5018               	movf	___aldiv@sign^0,w,c
 19785  00B48E  B4D8               	btfsc	status,2,c
 19786  00B490  EF4C  F05A         	goto	u12661
 19787  00B494  EF4E  F05A         	goto	u12660
 19788  00B498                     u12661:
 19789  00B498  EF56  F05A         	goto	l12786
 19790  00B49C                     u12660:
 19791  00B49C  1E1C               	comf	(___aldiv@quotient+3)^0,f,c
 19792  00B49E  1E1B               	comf	(___aldiv@quotient+2)^0,f,c
 19793  00B4A0  1E1A               	comf	(___aldiv@quotient+1)^0,f,c
 19794  00B4A2  6C19               	negf	___aldiv@quotient^0,c
 19795  00B4A4  0E00               	movlw	0
 19796  00B4A6  221A               	addwfc	(___aldiv@quotient+1)^0,f,c
 19797  00B4A8  221B               	addwfc	(___aldiv@quotient+2)^0,f,c
 19798  00B4AA  221C               	addwfc	(___aldiv@quotient+3)^0,f,c
 19799  00B4AC                     l12786:
 19800  00B4AC  C019  F00F         	movff	___aldiv@quotient,?___aldiv
 19801  00B4B0  C01A  F010         	movff	___aldiv@quotient+1,?___aldiv+1
 19802  00B4B4  C01B  F011         	movff	___aldiv@quotient+2,?___aldiv+2
 19803  00B4B8  C01C  F012         	movff	___aldiv@quotient+3,?___aldiv+3
 19804  00B4BC  0012               	return		;funcret
 19805  00B4BE                     __end_of___aldiv:
 19806                           	callstack 0
 19807                           
 19808 ;; *************** function __ftoa *****************
 19809 ;; Defined at:
 19810 ;;		line 8 in file "util/_ftoa.c"
 19811 ;; Parameters:    Size  Location     Type
 19812 ;;  num             4  109[BANK0 ] const float 
 19813 ;;  str             2  113[BANK0 ] PTR unsigned char 
 19814 ;;		 -> writeBuffer(64), 
 19815 ;; Auto vars:     Size  Location     Type
 19816 ;;  len             2  115[BANK0 ] int 
 19817 ;; Return value:  Size  Location     Type
 19818 ;;                  2  109[BANK0 ] unsigned int 
 19819 ;; Registers used:
 19820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19821 ;; Tracked objects:
 19822 ;;		On entry : 0/0
 19823 ;;		On exit  : 0/0
 19824 ;;		Unchanged: 0/0
 19825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19826 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19827 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19829 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19830 ;;Total ram usage:        8 bytes
 19831 ;; Hardware stack levels used: 1
 19832 ;; Hardware stack levels required when called: 6
 19833 ;; This function calls:
 19834 ;;		_sprintf
 19835 ;; This function is called by:
 19836 ;;		_build_response
 19837 ;; This function uses a non-reentrant model
 19838 ;;
 19839                           
 19840                           	psect	text86
 19841  00E63E                     __ptext86:
 19842                           	callstack 0
 19843  00E63E                     __ftoa:
 19844                           	callstack 22
 19845  00E63E                     
 19846                           ;_ftoa.c: 10: int len = sprintf (str, "%.2f", num);
 19847  00E63E  C0D1  F0A6         	movff	__ftoa@str,sprintf@sp
 19848  00E642  C0D2  F0A7         	movff	__ftoa@str+1,sprintf@sp+1
 19849  00E646  0E7D               	movlw	low STR_10
 19850  00E648  0100               	movlb	0	; () banked
 19851  00E64A  6FA8               	movwf	sprintf@f& (0+255),b
 19852  00E64C  0E23               	movlw	high STR_10
 19853  00E64E  6FA9               	movwf	(sprintf@f+1)& (0+255),b
 19854  00E650  C0CD  F0AA         	movff	__ftoa@num,?_sprintf+4
 19855  00E654  C0CE  F0AB         	movff	__ftoa@num+1,?_sprintf+5
 19856  00E658  C0CF  F0AC         	movff	__ftoa@num+2,?_sprintf+6
 19857  00E65C  C0D0  F0AD         	movff	__ftoa@num+3,?_sprintf+7
 19858  00E660  ECBF  F01F         	call	_sprintf	;wreg free
 19859  00E664  C0A6  F0D3         	movff	?_sprintf,__ftoa@len
 19860  00E668  C0A7  F0D4         	movff	?_sprintf+1,__ftoa@len+1
 19861  00E66C                     
 19862                           ;_ftoa.c: 11: if (len < 0) len = 0;
 19863  00E66C  0100               	movlb	0	; () banked
 19864  00E66E  BFD4               	btfsc	(__ftoa@len+1)& (0+255),7,b
 19865  00E670  EF3E  F073         	goto	u19730
 19866  00E674  EF3C  F073         	goto	u19731
 19867  00E678                     u19731:
 19868  00E678  EF42  F073         	goto	l18220
 19869  00E67C                     u19730:
 19870  00E67C                     
 19871                           ; BSR set to: 0
 19872  00E67C  0E00               	movlw	0
 19873  00E67E  6FD4               	movwf	(__ftoa@len+1)& (0+255),b
 19874  00E680  0E00               	movlw	0
 19875  00E682  6FD3               	movwf	__ftoa@len& (0+255),b
 19876  00E684                     l18220:
 19877                           
 19878                           ; BSR set to: 0
 19879                           ;_ftoa.c: 12: return len;
 19880  00E684  C0D3  F0CD         	movff	__ftoa@len,?__ftoa
 19881  00E688  C0D4  F0CE         	movff	__ftoa@len+1,?__ftoa+1
 19882  00E68C                     
 19883                           ; BSR set to: 0
 19884  00E68C  0012               	return		;funcret
 19885  00E68E                     __end_of__ftoa:
 19886                           	callstack 0
 19887                           
 19888 ;; *************** function _sprintf *****************
 19889 ;; Defined at:
 19890 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 19891 ;; Parameters:    Size  Location     Type
 19892 ;;  sp              2   70[BANK0 ] PTR unsigned char 
 19893 ;;		 -> writeBuffer(64), 
 19894 ;;  f               2   72[BANK0 ] PTR const unsigned char 
 19895 ;;		 -> STR_13(5), STR_10(5), 
 19896 ;; Auto vars:     Size  Location     Type
 19897 ;;  fval            4  104[BANK0 ] PTR const unsigned char 
 19898 ;;  tmpval          4   98[BANK0 ] struct .
 19899 ;;  val             4   92[BANK0 ] unsigned long 
 19900 ;;  cp              3    0        PTR const unsigned char 
 19901 ;;  prec            2  102[BANK0 ] int 
 19902 ;;  eexp            2   96[BANK0 ] int 
 19903 ;;  flag            2   90[BANK0 ] unsigned short 
 19904 ;;  ccnt            2   88[BANK0 ] int 
 19905 ;;  ap              2   86[BANK0 ] PTR void [1]
 19906 ;;		 -> ?_sprintf(2), 
 19907 ;;  len             2    0        unsigned int 
 19908 ;;  width           2    0        int 
 19909 ;;  c               1  108[BANK0 ] unsigned char 
 19910 ;;  d               1    0        unsigned char 
 19911 ;; Return value:  Size  Location     Type
 19912 ;;                  2   70[BANK0 ] int 
 19913 ;; Registers used:
 19914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19915 ;; Tracked objects:
 19916 ;;		On entry : 0/0
 19917 ;;		On exit  : 0/0
 19918 ;;		Unchanged: 0/0
 19919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19920 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19921 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19922 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19923 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19924 ;;Total ram usage:       39 bytes
 19925 ;; Hardware stack levels used: 1
 19926 ;; Hardware stack levels required when called: 5
 19927 ;; This function calls:
 19928 ;;		___awdiv
 19929 ;;		___fladd
 19930 ;;		___fleq
 19931 ;;		___flge
 19932 ;;		___flmul
 19933 ;;		___flneg
 19934 ;;		___flsub
 19935 ;;		___fltol
 19936 ;;		___lldiv
 19937 ;;		___llmod
 19938 ;;		___wmul
 19939 ;;		___xxtofl
 19940 ;;		__div_to_l_
 19941 ;;		__tdiv_to_l_
 19942 ;;		_fround
 19943 ;;		_isdigit
 19944 ;;		_scale
 19945 ;; This function is called by:
 19946 ;;		_build_response
 19947 ;;		__ftoa
 19948 ;; This function uses a non-reentrant model
 19949 ;;
 19950                           
 19951                           	psect	text87
 19952  003F7E                     __ptext87:
 19953                           	callstack 0
 19954  003F7E                     _sprintf:
 19955                           	callstack 23
 19956  003F7E                     
 19957                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 527: int ccnt = 0;
 19958  003F7E  0E00               	movlw	0
 19959  003F80  0100               	movlb	0	; () banked
 19960  003F82  6FB9               	movwf	(sprintf@ccnt+1)& (0+255),b
 19961  003F84  0E00               	movlw	0
 19962  003F86  6FB8               	movwf	sprintf@ccnt& (0+255),b
 19963  003F88                     
 19964                           ; BSR set to: 0
 19965                           ;doprnt.c: 532: char d;;doprnt.c: 533: double fval;;doprnt.c: 534: int eexp;;doprnt.c: 5
      +                          40: union {;doprnt.c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543:
      +                           } tmpval;;doprnt.c: 545: unsigned long val;;doprnt.c: 546: unsigned len;;doprnt.c: 547:
      +                           const char * cp;;doprnt.c: 550: *ap = __va_start();
 19966  003F88  0EAA               	movlw	low (?_sprintf+4)
 19967  003F8A  6FB6               	movwf	sprintf@ap& (0+255),b
 19968  003F8C  0E00               	movlw	high (?_sprintf+4)
 19969  003F8E  6FB7               	movwf	(sprintf@ap+1)& (0+255),b
 19970                           
 19971                           ;doprnt.c: 553: while((c = *f++)) {
 19972  003F90  EF3F  F024         	goto	l17896
 19973  003F94                     l17680:
 19974                           
 19975                           ; BSR set to: 0
 19976                           ;doprnt.c: 555: if(c != '%')
 19977  003F94  0E25               	movlw	37
 19978  003F96  19CC               	xorwf	sprintf@c& (0+255),w,b
 19979  003F98  B4D8               	btfsc	status,2,c
 19980  003F9A  EFD1  F01F         	goto	u19111
 19981  003F9E  EFD3  F01F         	goto	u19110
 19982  003FA2                     u19111:
 19983  003FA2  EFDF  F01F         	goto	l17688
 19984  003FA6                     u19110:
 19985  003FA6                     
 19986                           ; BSR set to: 0
 19987                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)),(++ccnt));
 19988  003FA6  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 19989  003FAA  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 19990  003FAE  C0CC  FFDF         	movff	sprintf@c,indf2
 19991  003FB2                     l17684:
 19992                           
 19993                           ; BSR set to: 0
 19994  003FB2  4BA6               	infsnz	sprintf@sp& (0+255),f,b
 19995  003FB4  2BA7               	incf	(sprintf@sp+1)& (0+255),f,b
 19996  003FB6                     
 19997                           ; BSR set to: 0
 19998  003FB6  4BB8               	infsnz	sprintf@ccnt& (0+255),f,b
 19999  003FB8  2BB9               	incf	(sprintf@ccnt+1)& (0+255),f,b
 20000                           
 20001                           ;doprnt.c: 559: continue;
 20002  003FBA  EF3F  F024         	goto	l17896
 20003  003FBE                     l17688:
 20004                           
 20005                           ; BSR set to: 0
 20006                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
 20007  003FBE  0E00               	movlw	0
 20008  003FC0  6FBB               	movwf	(sprintf@flag+1)& (0+255),b
 20009  003FC2  0E00               	movlw	0
 20010  003FC4  6FBA               	movwf	sprintf@flag& (0+255),b
 20011  003FC6                     
 20012                           ; BSR set to: 0
 20013                           ;doprnt.c: 628: if(*f == '.') {
 20014  003FC6  C0A8  FFF6         	movff	sprintf@f,tblptrl
 20015  003FCA  C0A9  FFF7         	movff	sprintf@f+1,tblptrh
 20016  003FCE                     	if	0	;tblptru may be non-zero
 20017  003FCE                     	endif
 20018  003FCE                     	if	0	;tblptru may be non-zero
 20019  003FCE                     	endif
 20020  003FCE  0008               	tblrd		*
 20021  003FD0  50F5               	movf	tablat,w,c
 20022  003FD2  0A2E               	xorlw	46
 20023  003FD4  A4D8               	btfss	status,2,c
 20024  003FD6  EFEF  F01F         	goto	u19121
 20025  003FDA  EFF1  F01F         	goto	u19120
 20026  003FDE                     u19121:
 20027  003FDE  EF30  F020         	goto	l17704
 20028  003FE2                     u19120:
 20029  003FE2                     
 20030                           ; BSR set to: 0
 20031                           ;doprnt.c: 629: flag |= 0x4000;
 20032  003FE2  8DBB               	bsf	(sprintf@flag+1)& (0+255),6,b
 20033                           
 20034                           ;doprnt.c: 630: f++;
 20035  003FE4  4BA8               	infsnz	sprintf@f& (0+255),f,b
 20036  003FE6  2BA9               	incf	(sprintf@f+1)& (0+255),f,b
 20037  003FE8                     
 20038                           ; BSR set to: 0
 20039                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
 20040  003FE8  0E00               	movlw	0
 20041  003FEA  6FC7               	movwf	(sprintf@prec+1)& (0+255),b
 20042  003FEC  0E00               	movlw	0
 20043  003FEE  6FC6               	movwf	sprintf@prec& (0+255),b
 20044                           
 20045                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
 20046  003FF0  EF1F  F020         	goto	l17702
 20047  003FF4                     l17696:
 20048                           
 20049                           ;doprnt.c: 647: prec *= 10;
 20050  003FF4  C0C6  F00F         	movff	sprintf@prec,___wmul@multiplier
 20051  003FF8  C0C7  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
 20052  003FFC  0E00               	movlw	0
 20053  003FFE  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 20054  004000  0E0A               	movlw	10
 20055  004002  6E11               	movwf	___wmul@multiplicand^0,c
 20056  004004  EC50  F077         	call	___wmul	;wreg free
 20057  004008  C00F  F0C6         	movff	?___wmul,sprintf@prec
 20058  00400C  C010  F0C7         	movff	?___wmul+1,sprintf@prec+1
 20059  004010                     
 20060                           ;doprnt.c: 648: prec += *f++ - '0';
 20061  004010  0ED0               	movlw	208
 20062  004012  0100               	movlb	0	; () banked
 20063  004014  6FAE               	movwf	??_sprintf& (0+255),b
 20064  004016  0EFF               	movlw	255
 20065  004018  6FAF               	movwf	(??_sprintf+1)& (0+255),b
 20066  00401A  C0A8  FFF6         	movff	sprintf@f,tblptrl
 20067  00401E  C0A9  FFF7         	movff	sprintf@f+1,tblptrh
 20068  004022                     	if	0	;tblptru may be non-zero
 20069  004022                     	endif
 20070  004022                     	if	0	;tblptru may be non-zero
 20071  004022                     	endif
 20072  004022  0008               	tblrd		*
 20073  004024  50F5               	movf	tablat,w,c
 20074  004026  6FB0               	movwf	(??_sprintf+2)& (0+255),b
 20075  004028  6BB1               	clrf	(??_sprintf+3)& (0+255),b
 20076  00402A  51AE               	movf	??_sprintf& (0+255),w,b
 20077  00402C  27B0               	addwf	(??_sprintf+2)& (0+255),f,b
 20078  00402E  51AF               	movf	(??_sprintf+1)& (0+255),w,b
 20079  004030  23B1               	addwfc	(??_sprintf+3)& (0+255),f,b
 20080  004032  51B0               	movf	(??_sprintf+2)& (0+255),w,b
 20081  004034  27C6               	addwf	sprintf@prec& (0+255),f,b
 20082  004036  51B1               	movf	(??_sprintf+3)& (0+255),w,b
 20083  004038  23C7               	addwfc	(sprintf@prec+1)& (0+255),f,b
 20084  00403A                     
 20085                           ; BSR set to: 0
 20086  00403A  4BA8               	infsnz	sprintf@f& (0+255),f,b
 20087  00403C  2BA9               	incf	(sprintf@f+1)& (0+255),f,b
 20088  00403E                     l17702:
 20089                           
 20090                           ; BSR set to: 0
 20091  00403E  C0A8  FFF6         	movff	sprintf@f,tblptrl
 20092  004042  C0A9  FFF7         	movff	sprintf@f+1,tblptrh
 20093  004046                     	if	0	;tblptru may be non-zero
 20094  004046                     	endif
 20095  004046                     	if	0	;tblptru may be non-zero
 20096  004046                     	endif
 20097  004046  0008               	tblrd		*
 20098  004048  50F5               	movf	tablat,w,c
 20099  00404A  EC3D  F076         	call	_isdigit
 20100  00404E  B0D8               	btfsc	status,0,c
 20101  004050  EF2C  F020         	goto	u19131
 20102  004054  EF2E  F020         	goto	u19130
 20103  004058                     u19131:
 20104  004058  EFFA  F01F         	goto	l17696
 20105  00405C                     u19130:
 20106  00405C  EF3A  F020         	goto	l17712
 20107  004060                     l17704:
 20108                           
 20109                           ; BSR set to: 0
 20110                           ;doprnt.c: 652: prec = 0;
 20111  004060  0E00               	movlw	0
 20112  004062  6FC7               	movwf	(sprintf@prec+1)& (0+255),b
 20113  004064  0E00               	movlw	0
 20114  004066  6FC6               	movwf	sprintf@prec& (0+255),b
 20115  004068                     
 20116                           ; BSR set to: 0
 20117                           ;doprnt.c: 654: flag |= 0x1000;
 20118  004068  89BB               	bsf	(sprintf@flag+1)& (0+255),4,b
 20119  00406A  EF3A  F020         	goto	l17712
 20120  00406E                     l17708:
 20121                           
 20122                           ; BSR set to: 0
 20123                           ;doprnt.c: 689: flag |= 0x400;
 20124  00406E  85BB               	bsf	(sprintf@flag+1)& (0+255),2,b
 20125                           
 20126                           ;doprnt.c: 690: break;
 20127  004070  EF4F  F020         	goto	l17714
 20128  004074                     l17712:
 20129  004074  C0A8  FFF6         	movff	sprintf@f,tblptrl
 20130  004078  C0A9  FFF7         	movff	sprintf@f+1,tblptrh
 20131  00407C  0100               	movlb	0	; () banked
 20132  00407E  4BA8               	infsnz	sprintf@f& (0+255),f,b
 20133  004080  2BA9               	incf	(sprintf@f+1)& (0+255),f,b
 20134  004082                     	if	0	;tblptru may be non-zero
 20135  004082                     	endif
 20136  004082                     	if	0	;tblptru may be non-zero
 20137  004082                     	endif
 20138  004082  0008               	tblrd		*
 20139  004084  CFF5 F0CC          	movff	tablat,sprintf@c
 20140  004088  51CC               	movf	sprintf@c& (0+255),w,b
 20141                           
 20142                           ; Switch size 1, requested type "simple"
 20143                           ; Number of cases is 2, Range of values is 0 to 102
 20144                           ; switch strategies available:
 20145                           ; Name         Instructions Cycles
 20146                           ; simple_byte            7     4 (average)
 20147                           ;	Chosen strategy is simple_byte
 20148  00408A  0A00               	xorlw	0	; case 0
 20149  00408C  B4D8               	btfsc	status,2,c
 20150  00408E  EF50  F024         	goto	l17898
 20151  004092  0A66               	xorlw	102	; case 102
 20152  004094  B4D8               	btfsc	status,2,c
 20153  004096  EF37  F020         	goto	l17708
 20154  00409A  EF3F  F024         	goto	l17896
 20155  00409E                     l17714:
 20156                           
 20157                           ; BSR set to: 0
 20158                           ;doprnt.c: 851: if(flag & (0x700)) {
 20159  00409E  0E07               	movlw	7
 20160  0040A0  15BB               	andwf	(sprintf@flag+1)& (0+255),w,b
 20161  0040A2  B4D8               	btfsc	status,2,c
 20162  0040A4  EF56  F020         	goto	u19141
 20163  0040A8  EF58  F020         	goto	u19140
 20164  0040AC                     u19141:
 20165  0040AC  EFEC  F023         	goto	l17874
 20166  0040B0                     u19140:
 20167  0040B0                     
 20168                           ; BSR set to: 0
 20169                           ;doprnt.c: 853: if(flag & 0x1000)
 20170  0040B0  A9BB               	btfss	(sprintf@flag+1)& (0+255),4,b
 20171  0040B2  EF5D  F020         	goto	u19151
 20172  0040B6  EF5F  F020         	goto	u19150
 20173  0040BA                     u19151:
 20174  0040BA  EF63  F020         	goto	l17720
 20175  0040BE                     u19150:
 20176  0040BE                     
 20177                           ; BSR set to: 0
 20178                           ;doprnt.c: 855: prec = 6;
 20179  0040BE  0E00               	movlw	0
 20180  0040C0  6FC7               	movwf	(sprintf@prec+1)& (0+255),b
 20181  0040C2  0E06               	movlw	6
 20182  0040C4  6FC6               	movwf	sprintf@prec& (0+255),b
 20183  0040C6                     l17720:
 20184                           
 20185                           ; BSR set to: 0
 20186                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 20187  0040C6  C0B6  FFD9         	movff	sprintf@ap,fsr2l
 20188  0040CA  C0B7  FFDA         	movff	sprintf@ap+1,fsr2h
 20189  0040CE  CFDE F0C8          	movff	postinc2,sprintf@fval
 20190  0040D2  CFDE F0C9          	movff	postinc2,sprintf@fval+1
 20191  0040D6  CFDE F0CA          	movff	postinc2,sprintf@fval+2
 20192  0040DA  CFDE F0CB          	movff	postinc2,sprintf@fval+3
 20193  0040DE                     
 20194                           ; BSR set to: 0
 20195  0040DE  0E04               	movlw	4
 20196  0040E0  27B6               	addwf	sprintf@ap& (0+255),f,b
 20197  0040E2  0E00               	movlw	0
 20198  0040E4  23B7               	addwfc	(sprintf@ap+1)& (0+255),f,b
 20199  0040E6                     
 20200                           ; BSR set to: 0
 20201                           ;doprnt.c: 857: if(fval < 0.0) {
 20202  0040E6  BFCB               	btfsc	(sprintf@fval+3)& (0+255),7,b
 20203  0040E8  EF7A  F020         	goto	u19160
 20204  0040EC  EF78  F020         	goto	u19161
 20205  0040F0                     u19161:
 20206  0040F0  EF8F  F020         	goto	l17730
 20207  0040F4                     u19160:
 20208  0040F4                     
 20209                           ; BSR set to: 0
 20210                           ;doprnt.c: 858: fval = -fval;
 20211  0040F4  C0C8  F00F         	movff	sprintf@fval,___flneg@f1
 20212  0040F8  C0C9  F010         	movff	sprintf@fval+1,___flneg@f1+1
 20213  0040FC  C0CA  F011         	movff	sprintf@fval+2,___flneg@f1+2
 20214  004100  C0CB  F012         	movff	sprintf@fval+3,___flneg@f1+3
 20215  004104  ECB6  F075         	call	___flneg	;wreg free
 20216  004108  C00F  F0C8         	movff	?___flneg,sprintf@fval
 20217  00410C  C010  F0C9         	movff	?___flneg+1,sprintf@fval+1
 20218  004110  C011  F0CA         	movff	?___flneg+2,sprintf@fval+2
 20219  004114  C012  F0CB         	movff	?___flneg+3,sprintf@fval+3
 20220  004118                     
 20221                           ;doprnt.c: 859: flag |= 0x03;
 20222  004118  0E03               	movlw	3
 20223  00411A  0100               	movlb	0	; () banked
 20224  00411C  13BA               	iorwf	sprintf@flag& (0+255),f,b
 20225  00411E                     l17730:
 20226                           
 20227                           ; BSR set to: 0
 20228                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
 20229  00411E  0E00               	movlw	0
 20230  004120  6FC1               	movwf	(sprintf@eexp+1)& (0+255),b
 20231  004122  0E00               	movlw	0
 20232  004124  6FC0               	movwf	sprintf@eexp& (0+255),b
 20233  004126                     
 20234                           ; BSR set to: 0
 20235                           ;doprnt.c: 862: if( fval!=0) {
 20236  004126  C0C8  F035         	movff	sprintf@fval,___fleq@ff1
 20237  00412A  C0C9  F036         	movff	sprintf@fval+1,___fleq@ff1+1
 20238  00412E  C0CA  F037         	movff	sprintf@fval+2,___fleq@ff1+2
 20239  004132  C0CB  F038         	movff	sprintf@fval+3,___fleq@ff1+3
 20240  004136  0E00               	movlw	0
 20241  004138  6E39               	movwf	___fleq@ff2^0,c
 20242  00413A  0E00               	movlw	0
 20243  00413C  6E3A               	movwf	(___fleq@ff2+1)^0,c
 20244  00413E  0E00               	movlw	0
 20245  004140  6E3B               	movwf	(___fleq@ff2+2)^0,c
 20246  004142  0E00               	movlw	0
 20247  004144  6E3C               	movwf	(___fleq@ff2+3)^0,c
 20248  004146  EC94  F067         	call	___fleq	;wreg free
 20249  00414A  B0D8               	btfsc	status,0,c
 20250  00414C  EFAA  F020         	goto	u19171
 20251  004150  EFAC  F020         	goto	u19170
 20252  004154                     u19171:
 20253  004154  EF3F  F021         	goto	l17758
 20254  004158                     u19170:
 20255  004158                     
 20256                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
 20257  004158  0100               	movlb	0	; () banked
 20258  00415A  35CA               	rlcf	(sprintf@fval+2)& (0+255),w,b
 20259  00415C  35CB               	rlcf	(sprintf@fval+3)& (0+255),w,b
 20260  00415E  0F82               	addlw	130
 20261  004160  6FC0               	movwf	sprintf@eexp& (0+255),b
 20262  004162  6BC1               	clrf	(sprintf@eexp+1)& (0+255),b
 20263  004164  0EFF               	movlw	255
 20264  004166  23C1               	addwfc	(sprintf@eexp+1)& (0+255),f,b
 20265  004168                     
 20266                           ; BSR set to: 0
 20267                           ;doprnt.c: 864: eexp--;
 20268  004168  07C0               	decf	sprintf@eexp& (0+255),f,b
 20269  00416A  A0D8               	btfss	status,0,c
 20270  00416C  07C1               	decf	(sprintf@eexp+1)& (0+255),f,b
 20271  00416E                     
 20272                           ; BSR set to: 0
 20273                           ;doprnt.c: 865: eexp *= 3;
 20274  00416E  C0C0  F00F         	movff	sprintf@eexp,___wmul@multiplier
 20275  004172  C0C1  F010         	movff	sprintf@eexp+1,___wmul@multiplier+1
 20276  004176  0E00               	movlw	0
 20277  004178  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 20278  00417A  0E03               	movlw	3
 20279  00417C  6E11               	movwf	___wmul@multiplicand^0,c
 20280  00417E  EC50  F077         	call	___wmul	;wreg free
 20281  004182  C00F  F0C0         	movff	?___wmul,sprintf@eexp
 20282  004186  C010  F0C1         	movff	?___wmul+1,sprintf@eexp+1
 20283  00418A                     
 20284                           ;doprnt.c: 866: eexp /= 10;
 20285  00418A  C0C0  F015         	movff	sprintf@eexp,___awdiv@dividend
 20286  00418E  C0C1  F016         	movff	sprintf@eexp+1,___awdiv@dividend+1
 20287  004192  0E00               	movlw	0
 20288  004194  6E18               	movwf	(___awdiv@divisor+1)^0,c
 20289  004196  0E0A               	movlw	10
 20290  004198  6E17               	movwf	___awdiv@divisor^0,c
 20291  00419A  EC91  F062         	call	___awdiv	;wreg free
 20292  00419E  C015  F0C0         	movff	?___awdiv,sprintf@eexp
 20293  0041A2  C016  F0C1         	movff	?___awdiv+1,sprintf@eexp+1
 20294  0041A6                     
 20295                           ;doprnt.c: 867: if(eexp < 0)
 20296  0041A6  0100               	movlb	0	; () banked
 20297  0041A8  BFC1               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 20298  0041AA  EFDB  F020         	goto	u19180
 20299  0041AE  EFD9  F020         	goto	u19181
 20300  0041B2                     u19181:
 20301  0041B2  EFDE  F020         	goto	l17746
 20302  0041B6                     u19180:
 20303  0041B6                     
 20304                           ; BSR set to: 0
 20305                           ;doprnt.c: 868: eexp--;
 20306  0041B6  07C0               	decf	sprintf@eexp& (0+255),f,b
 20307  0041B8  A0D8               	btfss	status,0,c
 20308  0041BA  07C1               	decf	(sprintf@eexp+1)& (0+255),f,b
 20309  0041BC                     l17746:
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
 20313  0041BC  51C0               	movf	sprintf@eexp& (0+255),w,b
 20314  0041BE  0800               	sublw	0
 20315  0041C0  ECBD  F031         	call	_scale
 20316  0041C4  C081  F0C2         	movff	?_scale,sprintf@tmpval
 20317  0041C8  C082  F0C3         	movff	?_scale+1,sprintf@tmpval+1
 20318  0041CC  C083  F0C4         	movff	?_scale+2,sprintf@tmpval+2
 20319  0041D0  C084  F0C5         	movff	?_scale+3,sprintf@tmpval+3
 20320  0041D4                     
 20321                           ;doprnt.c: 873: tmpval.integ *= fval;
 20322  0041D4  C0C2  F068         	movff	sprintf@tmpval,___flmul@b
 20323  0041D8  C0C3  F069         	movff	sprintf@tmpval+1,___flmul@b+1
 20324  0041DC  C0C4  F06A         	movff	sprintf@tmpval+2,___flmul@b+2
 20325  0041E0  C0C5  F06B         	movff	sprintf@tmpval+3,___flmul@b+3
 20326  0041E4  C0C8  F06C         	movff	sprintf@fval,___flmul@a
 20327  0041E8  C0C9  F06D         	movff	sprintf@fval+1,___flmul@a+1
 20328  0041EC  C0CA  F06E         	movff	sprintf@fval+2,___flmul@a+2
 20329  0041F0  C0CB  F06F         	movff	sprintf@fval+3,___flmul@a+3
 20330  0041F4  ECA7  F02F         	call	___flmul	;wreg free
 20331  0041F8  C068  F0C2         	movff	?___flmul,sprintf@tmpval
 20332  0041FC  C069  F0C3         	movff	?___flmul+1,sprintf@tmpval+1
 20333  004200  C06A  F0C4         	movff	?___flmul+2,sprintf@tmpval+2
 20334  004204  C06B  F0C5         	movff	?___flmul+3,sprintf@tmpval+3
 20335  004208                     
 20336                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
 20337  004208  C0C2  F00F         	movff	sprintf@tmpval,___flge@ff1
 20338  00420C  C0C3  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
 20339  004210  C0C4  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
 20340  004214  C0C5  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
 20341  004218  0E00               	movlw	0
 20342  00421A  6E13               	movwf	___flge@ff2^0,c
 20343  00421C  0E00               	movlw	0
 20344  00421E  6E14               	movwf	(___flge@ff2+1)^0,c
 20345  004220  0E80               	movlw	128
 20346  004222  6E15               	movwf	(___flge@ff2+2)^0,c
 20347  004224  0E3F               	movlw	63
 20348  004226  6E16               	movwf	(___flge@ff2+3)^0,c
 20349  004228  ECE7  F05B         	call	___flge	;wreg free
 20350  00422C  B0D8               	btfsc	status,0,c
 20351  00422E  EF1B  F021         	goto	u19191
 20352  004232  EF1D  F021         	goto	u19190
 20353  004236                     u19191:
 20354  004236  EF23  F021         	goto	l17754
 20355  00423A                     u19190:
 20356  00423A                     
 20357                           ;doprnt.c: 875: eexp--;
 20358  00423A  0100               	movlb	0	; () banked
 20359  00423C  07C0               	decf	sprintf@eexp& (0+255),f,b
 20360  00423E  A0D8               	btfss	status,0,c
 20361  004240  07C1               	decf	(sprintf@eexp+1)& (0+255),f,b
 20362  004242  EF3F  F021         	goto	l17758
 20363  004246                     l17754:
 20364                           
 20365                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
 20366  004246  C0C2  F00F         	movff	sprintf@tmpval,___flge@ff1
 20367  00424A  C0C3  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
 20368  00424E  C0C4  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
 20369  004252  C0C5  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
 20370  004256  0E00               	movlw	0
 20371  004258  6E13               	movwf	___flge@ff2^0,c
 20372  00425A  0E00               	movlw	0
 20373  00425C  6E14               	movwf	(___flge@ff2+1)^0,c
 20374  00425E  0E20               	movlw	32
 20375  004260  6E15               	movwf	(___flge@ff2+2)^0,c
 20376  004262  0E41               	movlw	65
 20377  004264  6E16               	movwf	(___flge@ff2+3)^0,c
 20378  004266  ECE7  F05B         	call	___flge	;wreg free
 20379  00426A  A0D8               	btfss	status,0,c
 20380  00426C  EF3A  F021         	goto	u19201
 20381  004270  EF3C  F021         	goto	u19200
 20382  004274                     u19201:
 20383  004274  EF3F  F021         	goto	l17758
 20384  004278                     u19200:
 20385  004278                     
 20386                           ;doprnt.c: 877: eexp++;
 20387  004278  0100               	movlb	0	; () banked
 20388  00427A  4BC0               	infsnz	sprintf@eexp& (0+255),f,b
 20389  00427C  2BC1               	incf	(sprintf@eexp+1)& (0+255),f,b
 20390  00427E                     l17758:
 20391                           
 20392                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
 20393  00427E  0100               	movlb	0	; () banked
 20394  004280  BFC7               	btfsc	(sprintf@prec+1)& (0+255),7,b
 20395  004282  EF4E  F021         	goto	u19210
 20396  004286  51C7               	movf	(sprintf@prec+1)& (0+255),w,b
 20397  004288  E107               	bnz	u19211
 20398  00428A  0E0D               	movlw	13
 20399  00428C  5DC6               	subwf	sprintf@prec& (0+255),w,b
 20400  00428E  B0D8               	btfsc	status,0,c
 20401  004290  EF4C  F021         	goto	u19211
 20402  004294  EF4E  F021         	goto	u19210
 20403  004298                     u19211:
 20404  004298  EF6B  F021         	goto	l17762
 20405  00429C                     u19210:
 20406  00429C                     
 20407                           ; BSR set to: 0
 20408                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
 20409  00429C  C0C8  F08E         	movff	sprintf@fval,___fladd@b
 20410  0042A0  C0C9  F08F         	movff	sprintf@fval+1,___fladd@b+1
 20411  0042A4  C0CA  F090         	movff	sprintf@fval+2,___fladd@b+2
 20412  0042A8  C0CB  F091         	movff	sprintf@fval+3,___fladd@b+3
 20413  0042AC  51C6               	movf	sprintf@prec& (0+255),w,b
 20414  0042AE  ECEA  F03E         	call	_fround
 20415  0042B2  C081  F092         	movff	?_fround,___fladd@a
 20416  0042B6  C082  F093         	movff	?_fround+1,___fladd@a+1
 20417  0042BA  C083  F094         	movff	?_fround+2,___fladd@a+2
 20418  0042BE  C084  F095         	movff	?_fround+3,___fladd@a+3
 20419  0042C2  EC46  F02D         	call	___fladd	;wreg free
 20420  0042C6  C08E  F0C8         	movff	?___fladd,sprintf@fval
 20421  0042CA  C08F  F0C9         	movff	?___fladd+1,sprintf@fval+1
 20422  0042CE  C090  F0CA         	movff	?___fladd+2,sprintf@fval+2
 20423  0042D2  C091  F0CB         	movff	?___fladd+3,sprintf@fval+3
 20424  0042D6                     l17762:
 20425                           
 20426                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
 20427  0042D6  0100               	movlb	0	; () banked
 20428  0042D8  BFC1               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 20429  0042DA  EF7A  F021         	goto	u19220
 20430  0042DE  51C1               	movf	(sprintf@eexp+1)& (0+255),w,b
 20431  0042E0  E107               	bnz	u19221
 20432  0042E2  0E0A               	movlw	10
 20433  0042E4  5DC0               	subwf	sprintf@eexp& (0+255),w,b
 20434  0042E6  B0D8               	btfsc	status,0,c
 20435  0042E8  EF78  F021         	goto	u19221
 20436  0042EC  EF7A  F021         	goto	u19220
 20437  0042F0                     u19221:
 20438  0042F0  EFB7  F021         	goto	l17770
 20439  0042F4                     u19220:
 20440  0042F4                     
 20441                           ; BSR set to: 0
 20442  0042F4  C0C8  F035         	movff	sprintf@fval,___fleq@ff1
 20443  0042F8  C0C9  F036         	movff	sprintf@fval+1,___fleq@ff1+1
 20444  0042FC  C0CA  F037         	movff	sprintf@fval+2,___fleq@ff1+2
 20445  004300  C0CB  F038         	movff	sprintf@fval+3,___fleq@ff1+3
 20446  004304  0E00               	movlw	0
 20447  004306  6E39               	movwf	___fleq@ff2^0,c
 20448  004308  0E00               	movlw	0
 20449  00430A  6E3A               	movwf	(___fleq@ff2+1)^0,c
 20450  00430C  0E00               	movlw	0
 20451  00430E  6E3B               	movwf	(___fleq@ff2+2)^0,c
 20452  004310  0E00               	movlw	0
 20453  004312  6E3C               	movwf	(___fleq@ff2+3)^0,c
 20454  004314  EC94  F067         	call	___fleq	;wreg free
 20455  004318  B0D8               	btfsc	status,0,c
 20456  00431A  EF91  F021         	goto	u19231
 20457  00431E  EF93  F021         	goto	u19230
 20458  004322                     u19231:
 20459  004322  EF0C  F022         	goto	l17784
 20460  004326                     u19230:
 20461  004326  C0C8  F01D         	movff	sprintf@fval,___fltol@f1
 20462  00432A  C0C9  F01E         	movff	sprintf@fval+1,___fltol@f1+1
 20463  00432E  C0CA  F01F         	movff	sprintf@fval+2,___fltol@f1+2
 20464  004332  C0CB  F020         	movff	sprintf@fval+3,___fltol@f1+3
 20465  004336  ECE2  F05A         	call	___fltol	;wreg free
 20466  00433A  501D               	movf	?___fltol^0,w,c
 20467  00433C  101E               	iorwf	(?___fltol+1)^0,w,c
 20468  00433E  101F               	iorwf	(?___fltol+2)^0,w,c
 20469  004340  1020               	iorwf	(?___fltol+3)^0,w,c
 20470  004342  A4D8               	btfss	status,2,c
 20471  004344  EFA6  F021         	goto	u19241
 20472  004348  EFA8  F021         	goto	u19240
 20473  00434C                     u19241:
 20474  00434C  EF0C  F022         	goto	l17784
 20475  004350                     u19240:
 20476  004350  0100               	movlb	0	; () banked
 20477  004352  BFC1               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 20478  004354  EFB5  F021         	goto	u19251
 20479  004358  51C1               	movf	(sprintf@eexp+1)& (0+255),w,b
 20480  00435A  E109               	bnz	u19250
 20481  00435C  0E02               	movlw	2
 20482  00435E  5DC0               	subwf	sprintf@eexp& (0+255),w,b
 20483  004360  A0D8               	btfss	status,0,c
 20484  004362  EFB5  F021         	goto	u19251
 20485  004366  EFB7  F021         	goto	u19250
 20486  00436A                     u19251:
 20487  00436A  EF0C  F022         	goto	l17784
 20488  00436E                     u19250:
 20489  00436E                     l17770:
 20490                           
 20491                           ; BSR set to: 0
 20492                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
 20493  00436E  C0C2  F00F         	movff	sprintf@tmpval,___flge@ff1
 20494  004372  C0C3  F010         	movff	sprintf@tmpval+1,___flge@ff1+1
 20495  004376  C0C4  F011         	movff	sprintf@tmpval+2,___flge@ff1+2
 20496  00437A  C0C5  F012         	movff	sprintf@tmpval+3,___flge@ff1+3
 20497  00437E  0E5F               	movlw	95
 20498  004380  6E13               	movwf	___flge@ff2^0,c
 20499  004382  0E70               	movlw	112
 20500  004384  6E14               	movwf	(___flge@ff2+1)^0,c
 20501  004386  0E89               	movlw	137
 20502  004388  6E15               	movwf	(___flge@ff2+2)^0,c
 20503  00438A  0E40               	movlw	64
 20504  00438C  6E16               	movwf	(___flge@ff2+3)^0,c
 20505  00438E  ECE7  F05B         	call	___flge	;wreg free
 20506  004392  B0D8               	btfsc	status,0,c
 20507  004394  EFCE  F021         	goto	u19261
 20508  004398  EFD0  F021         	goto	u19260
 20509  00439C                     u19261:
 20510  00439C  EFD7  F021         	goto	l17774
 20511  0043A0                     u19260:
 20512  0043A0                     
 20513                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 20514  0043A0  0100               	movlb	0	; () banked
 20515  0043A2  0EF7               	movlw	247
 20516  0043A4  27C0               	addwf	sprintf@eexp& (0+255),f,b
 20517  0043A6  0EFF               	movlw	255
 20518  0043A8  23C1               	addwfc	(sprintf@eexp+1)& (0+255),f,b
 20519                           
 20520                           ;doprnt.c: 1148: }else{
 20521  0043AA  EFDC  F021         	goto	l17776
 20522  0043AE                     l17774:
 20523                           
 20524                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 20525  0043AE  0100               	movlb	0	; () banked
 20526  0043B0  0EF8               	movlw	248
 20527  0043B2  27C0               	addwf	sprintf@eexp& (0+255),f,b
 20528  0043B4  0EFF               	movlw	255
 20529  0043B6  23C1               	addwfc	(sprintf@eexp+1)& (0+255),f,b
 20530  0043B8                     l17776:
 20531                           
 20532                           ; BSR set to: 0
 20533                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 20534  0043B8  51C0               	movf	sprintf@eexp& (0+255),w,b
 20535  0043BA  ECBD  F031         	call	_scale
 20536  0043BE  C081  F0C2         	movff	?_scale,sprintf@tmpval
 20537  0043C2  C082  F0C3         	movff	?_scale+1,sprintf@tmpval+1
 20538  0043C6  C083  F0C4         	movff	?_scale+2,sprintf@tmpval+2
 20539  0043CA  C084  F0C5         	movff	?_scale+3,sprintf@tmpval+3
 20540  0043CE  C0C8  F00F         	movff	sprintf@fval,__div_to_l_@f1
 20541  0043D2  C0C9  F010         	movff	sprintf@fval+1,__div_to_l_@f1+1
 20542  0043D6  C0CA  F011         	movff	sprintf@fval+2,__div_to_l_@f1+2
 20543  0043DA  C0CB  F012         	movff	sprintf@fval+3,__div_to_l_@f1+3
 20544  0043DE  C0C2  F013         	movff	sprintf@tmpval,__div_to_l_@f2
 20545  0043E2  C0C3  F014         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
 20546  0043E6  C0C4  F015         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
 20547  0043EA  C0C5  F016         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
 20548  0043EE  EC22  F052         	call	__div_to_l_	;wreg free
 20549  0043F2  C00F  F0BC         	movff	?__div_to_l_,sprintf@val
 20550  0043F6  C010  F0BD         	movff	?__div_to_l_+1,sprintf@val+1
 20551  0043FA  C011  F0BE         	movff	?__div_to_l_+2,sprintf@val+2
 20552  0043FE  C012  F0BF         	movff	?__div_to_l_+3,sprintf@val+3
 20553  004402                     
 20554                           ;doprnt.c: 1155: fval = 0.0;
 20555  004402  0E00               	movlw	0
 20556  004404  0100               	movlb	0	; () banked
 20557  004406  6FC8               	movwf	sprintf@fval& (0+255),b
 20558  004408  0E00               	movlw	0
 20559  00440A  6FC9               	movwf	(sprintf@fval+1)& (0+255),b
 20560  00440C  0E00               	movlw	0
 20561  00440E  6FCA               	movwf	(sprintf@fval+2)& (0+255),b
 20562  004410  0E00               	movlw	0
 20563  004412  6FCB               	movwf	(sprintf@fval+3)& (0+255),b
 20564                           
 20565                           ;doprnt.c: 1156: } else {
 20566  004414  EF48  F022         	goto	l17788
 20567  004418                     l17784:
 20568                           
 20569                           ;doprnt.c: 1157: val = (unsigned long)fval;
 20570  004418  C0C8  F01D         	movff	sprintf@fval,___fltol@f1
 20571  00441C  C0C9  F01E         	movff	sprintf@fval+1,___fltol@f1+1
 20572  004420  C0CA  F01F         	movff	sprintf@fval+2,___fltol@f1+2
 20573  004424  C0CB  F020         	movff	sprintf@fval+3,___fltol@f1+3
 20574  004428  ECE2  F05A         	call	___fltol	;wreg free
 20575  00442C  C01D  F0BC         	movff	?___fltol,sprintf@val
 20576  004430  C01E  F0BD         	movff	?___fltol+1,sprintf@val+1
 20577  004434  C01F  F0BE         	movff	?___fltol+2,sprintf@val+2
 20578  004438  C020  F0BF         	movff	?___fltol+3,sprintf@val+3
 20579                           
 20580                           ;doprnt.c: 1158: fval -= (double)val;
 20581  00443C  C0C8  F09E         	movff	sprintf@fval,___flsub@b
 20582  004440  C0C9  F09F         	movff	sprintf@fval+1,___flsub@b+1
 20583  004444  C0CA  F0A0         	movff	sprintf@fval+2,___flsub@b+2
 20584  004448  C0CB  F0A1         	movff	sprintf@fval+3,___flsub@b+3
 20585  00444C  C0BC  F027         	movff	sprintf@val,___xxtofl@val
 20586  004450  C0BD  F028         	movff	sprintf@val+1,___xxtofl@val+1
 20587  004454  C0BE  F029         	movff	sprintf@val+2,___xxtofl@val+2
 20588  004458  C0BF  F02A         	movff	sprintf@val+3,___xxtofl@val+3
 20589  00445C  0E00               	movlw	0
 20590  00445E  ECF6  F048         	call	___xxtofl
 20591  004462  C027  F0A2         	movff	?___xxtofl,___flsub@a
 20592  004466  C028  F0A3         	movff	?___xxtofl+1,___flsub@a+1
 20593  00446A  C029  F0A4         	movff	?___xxtofl+2,___flsub@a+2
 20594  00446E  C02A  F0A5         	movff	?___xxtofl+3,___flsub@a+3
 20595  004472  EC9C  F074         	call	___flsub	;wreg free
 20596  004476  C09E  F0C8         	movff	?___flsub,sprintf@fval
 20597  00447A  C09F  F0C9         	movff	?___flsub+1,sprintf@fval+1
 20598  00447E  C0A0  F0CA         	movff	?___flsub+2,sprintf@fval+2
 20599  004482  C0A1  F0CB         	movff	?___flsub+3,sprintf@fval+3
 20600  004486                     
 20601                           ;doprnt.c: 1159: eexp = 0;
 20602  004486  0E00               	movlw	0
 20603  004488  0100               	movlb	0	; () banked
 20604  00448A  6FC1               	movwf	(sprintf@eexp+1)& (0+255),b
 20605  00448C  0E00               	movlw	0
 20606  00448E  6FC0               	movwf	sprintf@eexp& (0+255),b
 20607  004490                     l17788:
 20608                           
 20609                           ; BSR set to: 0
 20610                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
 20611  004490  0E01               	movlw	1
 20612  004492  6FCC               	movwf	sprintf@c& (0+255),b
 20613  004494                     l17794:
 20614                           
 20615                           ; BSR set to: 0
 20616                           ;doprnt.c: 1163: if(val < dpowers[c])
 20617  004494  51CC               	movf	sprintf@c& (0+255),w,b
 20618  004496  0D04               	mullw	4
 20619  004498  0EE6               	movlw	low _dpowers
 20620  00449A  24F3               	addwf	243,w,c
 20621  00449C  6EF6               	movwf	tblptrl,c
 20622  00449E  0E22               	movlw	high _dpowers
 20623  0044A0  20F4               	addwfc	244,w,c
 20624  0044A2  6EF7               	movwf	tblptrh,c
 20625  0044A4                     	if	0	;There are less than 3 active tblptr bytes
 20626  0044A4                     	endif
 20627  0044A4  0009               	tblrd		*+
 20628  0044A6  50F5               	movf	tablat,w,c
 20629  0044A8  5DBC               	subwf	sprintf@val& (0+255),w,b
 20630  0044AA  0009               	tblrd		*+
 20631  0044AC  50F5               	movf	tablat,w,c
 20632  0044AE  59BD               	subwfb	(sprintf@val+1)& (0+255),w,b
 20633  0044B0  0009               	tblrd		*+
 20634  0044B2  50F5               	movf	tablat,w,c
 20635  0044B4  59BE               	subwfb	(sprintf@val+2)& (0+255),w,b
 20636  0044B6  0009               	tblrd		*+
 20637  0044B8  50F5               	movf	tablat,w,c
 20638  0044BA  59BF               	subwfb	(sprintf@val+3)& (0+255),w,b
 20639  0044BC  B0D8               	btfsc	status,0,c
 20640  0044BE  EF63  F022         	goto	u19271
 20641  0044C2  EF65  F022         	goto	u19270
 20642  0044C6                     u19271:
 20643  0044C6  EF67  F022         	goto	l17798
 20644  0044CA                     u19270:
 20645  0044CA  EF71  F022         	goto	l17802
 20646  0044CE                     l17798:
 20647                           
 20648                           ; BSR set to: 0
 20649  0044CE  2BCC               	incf	sprintf@c& (0+255),f,b
 20650  0044D0                     
 20651                           ; BSR set to: 0
 20652  0044D0  0E0A               	movlw	10
 20653  0044D2  19CC               	xorwf	sprintf@c& (0+255),w,b
 20654  0044D4  A4D8               	btfss	status,2,c
 20655  0044D6  EF6F  F022         	goto	u19281
 20656  0044DA  EF71  F022         	goto	u19280
 20657  0044DE                     u19281:
 20658  0044DE  EF4A  F022         	goto	l17794
 20659  0044E2                     u19280:
 20660  0044E2                     l17802:
 20661                           
 20662                           ; BSR set to: 0
 20663                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
 20664  0044E2  0E03               	movlw	3
 20665  0044E4  15BA               	andwf	sprintf@flag& (0+255),w,b
 20666  0044E6  6FAE               	movwf	??_sprintf& (0+255),b
 20667  0044E8  0E00               	movlw	0
 20668  0044EA  15BB               	andwf	(sprintf@flag+1)& (0+255),w,b
 20669  0044EC  6FAF               	movwf	(??_sprintf+1)& (0+255),b
 20670  0044EE  51AE               	movf	??_sprintf& (0+255),w,b
 20671  0044F0  11AF               	iorwf	(??_sprintf+1)& (0+255),w,b
 20672  0044F2  B4D8               	btfsc	status,2,c
 20673  0044F4  EF7E  F022         	goto	u19291
 20674  0044F8  EF80  F022         	goto	u19290
 20675  0044FC                     u19291:
 20676  0044FC  EFD6  F022         	goto	l17820
 20677  004500                     u19290:
 20678  004500                     
 20679                           ; BSR set to: 0
 20680                           ;doprnt.c: 1216: ((*sp++ = ('-')),(++ccnt));
 20681  004500  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 20682  004504  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 20683  004508  0E2D               	movlw	45
 20684  00450A  6EDF               	movwf	indf2,c
 20685  00450C                     l17806:
 20686                           
 20687                           ; BSR set to: 0
 20688  00450C  4BA6               	infsnz	sprintf@sp& (0+255),f,b
 20689  00450E  2BA7               	incf	(sprintf@sp+1)& (0+255),f,b
 20690  004510                     
 20691                           ; BSR set to: 0
 20692  004510  4BB8               	infsnz	sprintf@ccnt& (0+255),f,b
 20693  004512  2BB9               	incf	(sprintf@ccnt+1)& (0+255),f,b
 20694  004514  EFD6  F022         	goto	l17820
 20695  004518                     l17810:
 20696                           
 20697                           ; BSR set to: 0
 20698                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
 20699  004518  C0BC  F00F         	movff	sprintf@val,___lldiv@dividend
 20700  00451C  C0BD  F010         	movff	sprintf@val+1,___lldiv@dividend+1
 20701  004520  C0BE  F011         	movff	sprintf@val+2,___lldiv@dividend+2
 20702  004524  C0BF  F012         	movff	sprintf@val+3,___lldiv@dividend+3
 20703  004528  51CC               	movf	sprintf@c& (0+255),w,b
 20704  00452A  0D04               	mullw	4
 20705  00452C  0EE6               	movlw	low _dpowers
 20706  00452E  24F3               	addwf	243,w,c
 20707  004530  6EF6               	movwf	tblptrl,c
 20708  004532  0E22               	movlw	high _dpowers
 20709  004534  20F4               	addwfc	244,w,c
 20710  004536  6EF7               	movwf	tblptrh,c
 20711  004538                     	if	0	;There are less than 3 active tblptr bytes
 20712  004538                     	endif
 20713  004538  0009               	tblrd		*+
 20714  00453A  CFF5 F013          	movff	tablat,___lldiv@divisor
 20715  00453E  0009               	tblrd		*+
 20716  004540  CFF5 F014          	movff	tablat,___lldiv@divisor+1
 20717  004544  0009               	tblrd		*+
 20718  004546  CFF5 F015          	movff	tablat,___lldiv@divisor+2
 20719  00454A  000A               	tblrd		*-
 20720  00454C  CFF5 F016          	movff	tablat,___lldiv@divisor+3
 20721  004550  EC3C  F068         	call	___lldiv	;wreg free
 20722  004554  C00F  F0C2         	movff	?___lldiv,sprintf@tmpval
 20723  004558  C010  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
 20724  00455C  C011  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
 20725  004560  C012  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
 20726  004564                     
 20727                           ;doprnt.c: 1228: tmpval.vd %= 10;
 20728  004564  C0C2  F00F         	movff	sprintf@tmpval,___llmod@dividend
 20729  004568  C0C3  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
 20730  00456C  C0C4  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
 20731  004570  C0C5  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
 20732  004574  0E0A               	movlw	10
 20733  004576  6E13               	movwf	___llmod@divisor^0,c
 20734  004578  0E00               	movlw	0
 20735  00457A  6E14               	movwf	(___llmod@divisor+1)^0,c
 20736  00457C  0E00               	movlw	0
 20737  00457E  6E15               	movwf	(___llmod@divisor+2)^0,c
 20738  004580  0E00               	movlw	0
 20739  004582  6E16               	movwf	(___llmod@divisor+3)^0,c
 20740  004584  ECDE  F06A         	call	___llmod	;wreg free
 20741  004588  C00F  F0C2         	movff	?___llmod,sprintf@tmpval
 20742  00458C  C010  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
 20743  004590  C011  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
 20744  004594  C012  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
 20745  004598                     
 20746                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 20747  004598  0100               	movlb	0	; () banked
 20748  00459A  51C2               	movf	sprintf@tmpval& (0+255),w,b
 20749  00459C  0F30               	addlw	48
 20750  00459E  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 20751  0045A2  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 20752  0045A6  6EDF               	movwf	indf2,c
 20753  0045A8  EF86  F022         	goto	l17806
 20754  0045AC                     l17820:
 20755                           
 20756                           ; BSR set to: 0
 20757  0045AC  07CC               	decf	sprintf@c& (0+255),f,b
 20758  0045AE  29CC               	incf	sprintf@c& (0+255),w,b
 20759  0045B0  A4D8               	btfss	status,2,c
 20760  0045B2  EFDD  F022         	goto	u19301
 20761  0045B6  EFDF  F022         	goto	u19300
 20762  0045BA                     u19301:
 20763  0045BA  EF8C  F022         	goto	l17810
 20764  0045BE                     u19300:
 20765  0045BE  EFEE  F022         	goto	l17830
 20766  0045C2                     l17822:
 20767                           
 20768                           ; BSR set to: 0
 20769                           ;doprnt.c: 1234: ((*sp++ = ('0')),(++ccnt));
 20770  0045C2  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 20771  0045C6  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 20772  0045CA  0E30               	movlw	48
 20773  0045CC  6EDF               	movwf	indf2,c
 20774  0045CE                     
 20775                           ; BSR set to: 0
 20776  0045CE  4BA6               	infsnz	sprintf@sp& (0+255),f,b
 20777  0045D0  2BA7               	incf	(sprintf@sp+1)& (0+255),f,b
 20778  0045D2                     
 20779                           ; BSR set to: 0
 20780  0045D2  4BB8               	infsnz	sprintf@ccnt& (0+255),f,b
 20781  0045D4  2BB9               	incf	(sprintf@ccnt+1)& (0+255),f,b
 20782  0045D6                     
 20783                           ; BSR set to: 0
 20784                           ;doprnt.c: 1235: eexp--;
 20785  0045D6  07C0               	decf	sprintf@eexp& (0+255),f,b
 20786  0045D8  A0D8               	btfss	status,0,c
 20787  0045DA  07C1               	decf	(sprintf@eexp+1)& (0+255),f,b
 20788  0045DC                     l17830:
 20789                           
 20790                           ; BSR set to: 0
 20791  0045DC  BFC1               	btfsc	(sprintf@eexp+1)& (0+255),7,b
 20792  0045DE  EFFB  F022         	goto	u19310
 20793  0045E2  51C1               	movf	(sprintf@eexp+1)& (0+255),w,b
 20794  0045E4  E106               	bnz	u19311
 20795  0045E6  05C0               	decf	sprintf@eexp& (0+255),w,b
 20796  0045E8  B0D8               	btfsc	status,0,c
 20797  0045EA  EFF9  F022         	goto	u19311
 20798  0045EE  EFFB  F022         	goto	u19310
 20799  0045F2                     u19311:
 20800  0045F2  EFE1  F022         	goto	l17822
 20801  0045F6                     u19310:
 20802  0045F6                     
 20803                           ; BSR set to: 0
 20804                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
 20805  0045F6  BFC7               	btfsc	(sprintf@prec+1)& (0+255),7,b
 20806  0045F8  EF07  F023         	goto	u19321
 20807  0045FC  51C7               	movf	(sprintf@prec+1)& (0+255),w,b
 20808  0045FE  E109               	bnz	u19320
 20809  004600  0E09               	movlw	9
 20810  004602  5DC6               	subwf	sprintf@prec& (0+255),w,b
 20811  004604  A0D8               	btfss	status,0,c
 20812  004606  EF07  F023         	goto	u19321
 20813  00460A  EF09  F023         	goto	u19320
 20814  00460E                     u19321:
 20815  00460E  EF0D  F023         	goto	l2517
 20816  004612                     u19320:
 20817  004612                     
 20818                           ; BSR set to: 0
 20819                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
 20820  004612  0E08               	movlw	8
 20821  004614  6FCC               	movwf	sprintf@c& (0+255),b
 20822  004616  EF0F  F023         	goto	l17836
 20823  00461A                     l2517:
 20824                           
 20825                           ; BSR set to: 0
 20826                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
 20827  00461A  C0C6  F0CC         	movff	sprintf@prec,sprintf@c
 20828  00461E                     l17836:
 20829                           
 20830                           ; BSR set to: 0
 20831                           ;doprnt.c: 1241: prec -= (int)c;
 20832  00461E  51CC               	movf	sprintf@c& (0+255),w,b
 20833  004620  5FC6               	subwf	sprintf@prec& (0+255),f,b
 20834  004622  0E00               	movlw	0
 20835  004624  5BC7               	subwfb	(sprintf@prec+1)& (0+255),f,b
 20836  004626                     
 20837                           ; BSR set to: 0
 20838                           ;doprnt.c: 1245: if(c)
 20839  004626  51CC               	movf	sprintf@c& (0+255),w,b
 20840  004628  B4D8               	btfsc	status,2,c
 20841  00462A  EF19  F023         	goto	u19331
 20842  00462E  EF1B  F023         	goto	u19330
 20843  004632                     u19331:
 20844  004632  EF25  F023         	goto	l17846
 20845  004636                     u19330:
 20846  004636                     
 20847                           ; BSR set to: 0
 20848                           ;doprnt.c: 1247: ((*sp++ = ('.')),(++ccnt));
 20849  004636  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 20850  00463A  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 20851  00463E  0E2E               	movlw	46
 20852  004640  6EDF               	movwf	indf2,c
 20853  004642                     
 20854                           ; BSR set to: 0
 20855  004642  4BA6               	infsnz	sprintf@sp& (0+255),f,b
 20856  004644  2BA7               	incf	(sprintf@sp+1)& (0+255),f,b
 20857  004646                     
 20858                           ; BSR set to: 0
 20859  004646  4BB8               	infsnz	sprintf@ccnt& (0+255),f,b
 20860  004648  2BB9               	incf	(sprintf@ccnt+1)& (0+255),f,b
 20861  00464A                     l17846:
 20862                           
 20863                           ; BSR set to: 0
 20864                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 20865  00464A  51CC               	movf	sprintf@c& (0+255),w,b
 20866  00464C  ECBD  F031         	call	_scale
 20867  004650  C081  F0B2         	movff	?_scale,_sprintf$7090
 20868  004654  C082  F0B3         	movff	?_scale+1,_sprintf$7090+1
 20869  004658  C083  F0B4         	movff	?_scale+2,_sprintf$7090+2
 20870  00465C  C084  F0B5         	movff	?_scale+3,_sprintf$7090+3
 20871  004660                     
 20872                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
 20873  004660  C0C8  F06C         	movff	sprintf@fval,___flmul@a
 20874  004664  C0C9  F06D         	movff	sprintf@fval+1,___flmul@a+1
 20875  004668  C0CA  F06E         	movff	sprintf@fval+2,___flmul@a+2
 20876  00466C  C0CB  F06F         	movff	sprintf@fval+3,___flmul@a+3
 20877  004670  C0B2  F068         	movff	_sprintf$7090,___flmul@b
 20878  004674  C0B3  F069         	movff	_sprintf$7090+1,___flmul@b+1
 20879  004678  C0B4  F06A         	movff	_sprintf$7090+2,___flmul@b+2
 20880  00467C  C0B5  F06B         	movff	_sprintf$7090+3,___flmul@b+3
 20881  004680  ECA7  F02F         	call	___flmul	;wreg free
 20882  004684  C068  F01D         	movff	?___flmul,___fltol@f1
 20883  004688  C069  F01E         	movff	?___flmul+1,___fltol@f1+1
 20884  00468C  C06A  F01F         	movff	?___flmul+2,___fltol@f1+2
 20885  004690  C06B  F020         	movff	?___flmul+3,___fltol@f1+3
 20886  004694  ECE2  F05A         	call	___fltol	;wreg free
 20887  004698  C01D  F0BC         	movff	?___fltol,sprintf@val
 20888  00469C  C01E  F0BD         	movff	?___fltol+1,sprintf@val+1
 20889  0046A0  C01F  F0BE         	movff	?___fltol+2,sprintf@val+2
 20890  0046A4  C020  F0BF         	movff	?___fltol+3,sprintf@val+3
 20891                           
 20892                           ;doprnt.c: 1254: while(c--) {
 20893  0046A8  EFC8  F023         	goto	l17862
 20894  0046AC                     l17850:
 20895                           
 20896                           ; BSR set to: 0
 20897                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
 20898  0046AC  C0BC  F00F         	movff	sprintf@val,___lldiv@dividend
 20899  0046B0  C0BD  F010         	movff	sprintf@val+1,___lldiv@dividend+1
 20900  0046B4  C0BE  F011         	movff	sprintf@val+2,___lldiv@dividend+2
 20901  0046B8  C0BF  F012         	movff	sprintf@val+3,___lldiv@dividend+3
 20902  0046BC  51CC               	movf	sprintf@c& (0+255),w,b
 20903  0046BE  0D04               	mullw	4
 20904  0046C0  0EE6               	movlw	low _dpowers
 20905  0046C2  24F3               	addwf	243,w,c
 20906  0046C4  6EF6               	movwf	tblptrl,c
 20907  0046C6  0E22               	movlw	high _dpowers
 20908  0046C8  20F4               	addwfc	244,w,c
 20909  0046CA  6EF7               	movwf	tblptrh,c
 20910  0046CC                     	if	0	;There are less than 3 active tblptr bytes
 20911  0046CC                     	endif
 20912  0046CC  0009               	tblrd		*+
 20913  0046CE  CFF5 F013          	movff	tablat,___lldiv@divisor
 20914  0046D2  0009               	tblrd		*+
 20915  0046D4  CFF5 F014          	movff	tablat,___lldiv@divisor+1
 20916  0046D8  0009               	tblrd		*+
 20917  0046DA  CFF5 F015          	movff	tablat,___lldiv@divisor+2
 20918  0046DE  000A               	tblrd		*-
 20919  0046E0  CFF5 F016          	movff	tablat,___lldiv@divisor+3
 20920  0046E4  EC3C  F068         	call	___lldiv	;wreg free
 20921  0046E8  C00F  F0C2         	movff	?___lldiv,sprintf@tmpval
 20922  0046EC  C010  F0C3         	movff	?___lldiv+1,sprintf@tmpval+1
 20923  0046F0  C011  F0C4         	movff	?___lldiv+2,sprintf@tmpval+2
 20924  0046F4  C012  F0C5         	movff	?___lldiv+3,sprintf@tmpval+3
 20925  0046F8                     
 20926                           ;doprnt.c: 1256: tmpval.vd %= 10;
 20927  0046F8  C0C2  F00F         	movff	sprintf@tmpval,___llmod@dividend
 20928  0046FC  C0C3  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
 20929  004700  C0C4  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
 20930  004704  C0C5  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
 20931  004708  0E0A               	movlw	10
 20932  00470A  6E13               	movwf	___llmod@divisor^0,c
 20933  00470C  0E00               	movlw	0
 20934  00470E  6E14               	movwf	(___llmod@divisor+1)^0,c
 20935  004710  0E00               	movlw	0
 20936  004712  6E15               	movwf	(___llmod@divisor+2)^0,c
 20937  004714  0E00               	movlw	0
 20938  004716  6E16               	movwf	(___llmod@divisor+3)^0,c
 20939  004718  ECDE  F06A         	call	___llmod	;wreg free
 20940  00471C  C00F  F0C2         	movff	?___llmod,sprintf@tmpval
 20941  004720  C010  F0C3         	movff	?___llmod+1,sprintf@tmpval+1
 20942  004724  C011  F0C4         	movff	?___llmod+2,sprintf@tmpval+2
 20943  004728  C012  F0C5         	movff	?___llmod+3,sprintf@tmpval+3
 20944  00472C                     
 20945                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 20946  00472C  0100               	movlb	0	; () banked
 20947  00472E  51C2               	movf	sprintf@tmpval& (0+255),w,b
 20948  004730  0F30               	addlw	48
 20949  004732  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 20950  004736  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 20951  00473A  6EDF               	movwf	indf2,c
 20952  00473C                     
 20953                           ; BSR set to: 0
 20954  00473C  4BA6               	infsnz	sprintf@sp& (0+255),f,b
 20955  00473E  2BA7               	incf	(sprintf@sp+1)& (0+255),f,b
 20956  004740                     
 20957                           ; BSR set to: 0
 20958  004740  4BB8               	infsnz	sprintf@ccnt& (0+255),f,b
 20959  004742  2BB9               	incf	(sprintf@ccnt+1)& (0+255),f,b
 20960  004744                     
 20961                           ; BSR set to: 0
 20962                           ;doprnt.c: 1258: val %= dpowers[c];
 20963  004744  C0BC  F00F         	movff	sprintf@val,___llmod@dividend
 20964  004748  C0BD  F010         	movff	sprintf@val+1,___llmod@dividend+1
 20965  00474C  C0BE  F011         	movff	sprintf@val+2,___llmod@dividend+2
 20966  004750  C0BF  F012         	movff	sprintf@val+3,___llmod@dividend+3
 20967  004754  51CC               	movf	sprintf@c& (0+255),w,b
 20968  004756  0D04               	mullw	4
 20969  004758  0EE6               	movlw	low _dpowers
 20970  00475A  24F3               	addwf	243,w,c
 20971  00475C  6EF6               	movwf	tblptrl,c
 20972  00475E  0E22               	movlw	high _dpowers
 20973  004760  20F4               	addwfc	244,w,c
 20974  004762  6EF7               	movwf	tblptrh,c
 20975  004764                     	if	0	;There are less than 3 active tblptr bytes
 20976  004764                     	endif
 20977  004764  0009               	tblrd		*+
 20978  004766  CFF5 F013          	movff	tablat,___llmod@divisor
 20979  00476A  0009               	tblrd		*+
 20980  00476C  CFF5 F014          	movff	tablat,___llmod@divisor+1
 20981  004770  0009               	tblrd		*+
 20982  004772  CFF5 F015          	movff	tablat,___llmod@divisor+2
 20983  004776  000A               	tblrd		*-
 20984  004778  CFF5 F016          	movff	tablat,___llmod@divisor+3
 20985  00477C  ECDE  F06A         	call	___llmod	;wreg free
 20986  004780  C00F  F0BC         	movff	?___llmod,sprintf@val
 20987  004784  C010  F0BD         	movff	?___llmod+1,sprintf@val+1
 20988  004788  C011  F0BE         	movff	?___llmod+2,sprintf@val+2
 20989  00478C  C012  F0BF         	movff	?___llmod+3,sprintf@val+3
 20990  004790                     l17862:
 20991  004790  0100               	movlb	0	; () banked
 20992  004792  07CC               	decf	sprintf@c& (0+255),f,b
 20993  004794  29CC               	incf	sprintf@c& (0+255),w,b
 20994  004796  A4D8               	btfss	status,2,c
 20995  004798  EFD0  F023         	goto	u19341
 20996  00479C  EFD2  F023         	goto	u19340
 20997  0047A0                     u19341:
 20998  0047A0  EF56  F023         	goto	l17850
 20999  0047A4                     u19340:
 21000  0047A4  EFE1  F023         	goto	l17872
 21001  0047A8                     l17864:
 21002                           
 21003                           ; BSR set to: 0
 21004                           ;doprnt.c: 1262: ((*sp++ = ('0')),(++ccnt));
 21005  0047A8  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 21006  0047AC  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 21007  0047B0  0E30               	movlw	48
 21008  0047B2  6EDF               	movwf	indf2,c
 21009  0047B4                     
 21010                           ; BSR set to: 0
 21011  0047B4  4BA6               	infsnz	sprintf@sp& (0+255),f,b
 21012  0047B6  2BA7               	incf	(sprintf@sp+1)& (0+255),f,b
 21013  0047B8                     
 21014                           ; BSR set to: 0
 21015  0047B8  4BB8               	infsnz	sprintf@ccnt& (0+255),f,b
 21016  0047BA  2BB9               	incf	(sprintf@ccnt+1)& (0+255),f,b
 21017  0047BC                     
 21018                           ; BSR set to: 0
 21019                           ;doprnt.c: 1263: prec--;
 21020  0047BC  07C6               	decf	sprintf@prec& (0+255),f,b
 21021  0047BE  A0D8               	btfss	status,0,c
 21022  0047C0  07C7               	decf	(sprintf@prec+1)& (0+255),f,b
 21023  0047C2                     l17872:
 21024                           
 21025                           ; BSR set to: 0
 21026  0047C2  51C6               	movf	sprintf@prec& (0+255),w,b
 21027  0047C4  11C7               	iorwf	(sprintf@prec+1)& (0+255),w,b
 21028  0047C6  A4D8               	btfss	status,2,c
 21029  0047C8  EFE8  F023         	goto	u19351
 21030  0047CC  EFEA  F023         	goto	u19350
 21031  0047D0                     u19351:
 21032  0047D0  EFD4  F023         	goto	l17864
 21033  0047D4                     u19350:
 21034  0047D4  EF3F  F024         	goto	l17896
 21035  0047D8                     l17874:
 21036                           
 21037                           ; BSR set to: 0
 21038                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
 21039  0047D8  51C6               	movf	sprintf@prec& (0+255),w,b
 21040  0047DA  11C7               	iorwf	(sprintf@prec+1)& (0+255),w,b
 21041  0047DC  A4D8               	btfss	status,2,c
 21042  0047DE  EFF3  F023         	goto	u19361
 21043  0047E2  EFF5  F023         	goto	u19360
 21044  0047E6                     u19361:
 21045  0047E6  EF02  F024         	goto	l17880
 21046  0047EA                     u19360:
 21047  0047EA                     
 21048                           ; BSR set to: 0
 21049  0047EA  51BC               	movf	sprintf@val& (0+255),w,b
 21050  0047EC  11BD               	iorwf	(sprintf@val+1)& (0+255),w,b
 21051  0047EE  11BE               	iorwf	(sprintf@val+2)& (0+255),w,b
 21052  0047F0  11BF               	iorwf	(sprintf@val+3)& (0+255),w,b
 21053  0047F2  A4D8               	btfss	status,2,c
 21054  0047F4  EFFE  F023         	goto	u19371
 21055  0047F8  EF00  F024         	goto	u19370
 21056  0047FC                     u19371:
 21057  0047FC  EF02  F024         	goto	l17880
 21058  004800                     u19370:
 21059  004800                     
 21060                           ; BSR set to: 0
 21061                           ;doprnt.c: 1317: prec++;
 21062  004800  4BC6               	infsnz	sprintf@prec& (0+255),f,b
 21063  004802  2BC7               	incf	(sprintf@prec+1)& (0+255),f,b
 21064  004804                     l17880:
 21065                           
 21066                           ; BSR set to: 0
 21067                           ;doprnt.c: 1365: if(c < prec)
 21068  004804  51CC               	movf	sprintf@c& (0+255),w,b
 21069  004806  6FAE               	movwf	??_sprintf& (0+255),b
 21070  004808  6BAF               	clrf	(??_sprintf+1)& (0+255),b
 21071  00480A  51C6               	movf	sprintf@prec& (0+255),w,b
 21072  00480C  5DAE               	subwf	??_sprintf& (0+255),w,b
 21073  00480E  51AF               	movf	(??_sprintf+1)& (0+255),w,b
 21074  004810  0A80               	xorlw	128
 21075  004812  6FB0               	movwf	(??_sprintf+2)& (0+255),b
 21076  004814  51C7               	movf	(sprintf@prec+1)& (0+255),w,b
 21077  004816  0A80               	xorlw	128
 21078  004818  59B0               	subwfb	(??_sprintf+2)& (0+255),w,b
 21079  00481A  B0D8               	btfsc	status,0,c
 21080  00481C  EF12  F024         	goto	u19381
 21081  004820  EF14  F024         	goto	u19380
 21082  004824                     u19381:
 21083  004824  EF16  F024         	goto	l17884
 21084  004828                     u19380:
 21085  004828                     
 21086                           ; BSR set to: 0
 21087  004828  EF28  F024         	goto	l17888
 21088  00482C                     l17884:
 21089                           
 21090                           ; BSR set to: 0
 21091                           ;doprnt.c: 1367: else if(prec < c)
 21092  00482C  51CC               	movf	sprintf@c& (0+255),w,b
 21093  00482E  6FAE               	movwf	??_sprintf& (0+255),b
 21094  004830  6BAF               	clrf	(??_sprintf+1)& (0+255),b
 21095  004832  51AE               	movf	??_sprintf& (0+255),w,b
 21096  004834  5DC6               	subwf	sprintf@prec& (0+255),w,b
 21097  004836  51C7               	movf	(sprintf@prec+1)& (0+255),w,b
 21098  004838  0A80               	xorlw	128
 21099  00483A  6FB0               	movwf	(??_sprintf+2)& (0+255),b
 21100  00483C  51AF               	movf	(??_sprintf+1)& (0+255),w,b
 21101  00483E  0A80               	xorlw	128
 21102  004840  59B0               	subwfb	(??_sprintf+2)& (0+255),w,b
 21103  004842  B0D8               	btfsc	status,0,c
 21104  004844  EF26  F024         	goto	u19391
 21105  004848  EF28  F024         	goto	u19390
 21106  00484C                     u19391:
 21107  00484C  EF28  F024         	goto	l17888
 21108  004850                     u19390:
 21109  004850                     l17888:
 21110                           
 21111                           ; BSR set to: 0
 21112                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
 21113  004850  0E03               	movlw	3
 21114  004852  15BA               	andwf	sprintf@flag& (0+255),w,b
 21115  004854  6FAE               	movwf	??_sprintf& (0+255),b
 21116  004856  0E00               	movlw	0
 21117  004858  15BB               	andwf	(sprintf@flag+1)& (0+255),w,b
 21118  00485A  6FAF               	movwf	(??_sprintf+1)& (0+255),b
 21119  00485C  51AE               	movf	??_sprintf& (0+255),w,b
 21120  00485E  11AF               	iorwf	(??_sprintf+1)& (0+255),w,b
 21121  004860  B4D8               	btfsc	status,2,c
 21122  004862  EF35  F024         	goto	u19401
 21123  004866  EF37  F024         	goto	u19400
 21124  00486A                     u19401:
 21125  00486A  EF3F  F024         	goto	l17896
 21126  00486E                     u19400:
 21127  00486E                     
 21128                           ; BSR set to: 0
 21129                           ;doprnt.c: 1465: ((*sp++ = ('-')),(++ccnt));
 21130  00486E  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 21131  004872  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 21132  004876  0E2D               	movlw	45
 21133  004878  6EDF               	movwf	indf2,c
 21134  00487A  EFD9  F01F         	goto	l17684
 21135  00487E                     l17896:
 21136                           
 21137                           ; BSR set to: 0
 21138  00487E  C0A8  FFF6         	movff	sprintf@f,tblptrl
 21139  004882  C0A9  FFF7         	movff	sprintf@f+1,tblptrh
 21140  004886  4BA8               	infsnz	sprintf@f& (0+255),f,b
 21141  004888  2BA9               	incf	(sprintf@f+1)& (0+255),f,b
 21142  00488A                     	if	0	;tblptru may be non-zero
 21143  00488A                     	endif
 21144  00488A                     	if	0	;tblptru may be non-zero
 21145  00488A                     	endif
 21146  00488A  0008               	tblrd		*
 21147  00488C  CFF5 F0CC          	movff	tablat,sprintf@c
 21148  004890  51CC               	movf	sprintf@c& (0+255),w,b
 21149  004892  A4D8               	btfss	status,2,c
 21150  004894  EF4E  F024         	goto	u19411
 21151  004898  EF50  F024         	goto	u19410
 21152  00489C                     u19411:
 21153  00489C  EFCA  F01F         	goto	l17680
 21154  0048A0                     u19410:
 21155  0048A0                     l17898:
 21156                           
 21157                           ; BSR set to: 0
 21158                           ;doprnt.c: 1564: *sp = 0;
 21159  0048A0  C0A6  FFD9         	movff	sprintf@sp,fsr2l
 21160  0048A4  C0A7  FFDA         	movff	sprintf@sp+1,fsr2h
 21161  0048A8  0E00               	movlw	0
 21162  0048AA  6EDF               	movwf	indf2,c
 21163  0048AC                     
 21164                           ; BSR set to: 0
 21165                           ;doprnt.c: 1566: return ccnt;
 21166  0048AC  C0B8  F0A6         	movff	sprintf@ccnt,?_sprintf
 21167  0048B0  C0B9  F0A7         	movff	sprintf@ccnt+1,?_sprintf+1
 21168  0048B4                     
 21169                           ; BSR set to: 0
 21170  0048B4  0012               	return		;funcret
 21171  0048B6                     __end_of_sprintf:
 21172                           	callstack 0
 21173                           
 21174 ;; *************** function _scale *****************
 21175 ;; Defined at:
 21176 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 21177 ;; Parameters:    Size  Location     Type
 21178 ;;  scl             1    wreg     char 
 21179 ;; Auto vars:     Size  Location     Type
 21180 ;;  scl             1   41[BANK0 ] char 
 21181 ;; Return value:  Size  Location     Type
 21182 ;;                  4   33[BANK0 ] char 
 21183 ;; Registers used:
 21184 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21185 ;; Tracked objects:
 21186 ;;		On entry : 0/0
 21187 ;;		On exit  : 0/0
 21188 ;;		Unchanged: 0/0
 21189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21190 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21191 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21193 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21194 ;;Total ram usage:        9 bytes
 21195 ;; Hardware stack levels used: 1
 21196 ;; Hardware stack levels required when called: 4
 21197 ;; This function calls:
 21198 ;;		___awdiv
 21199 ;;		___awmod
 21200 ;;		___flmul
 21201 ;; This function is called by:
 21202 ;;		_sprintf
 21203 ;; This function uses a non-reentrant model
 21204 ;;
 21205                           
 21206                           	psect	text88
 21207  00637A                     __ptext88:
 21208                           	callstack 0
 21209  00637A                     _scale:
 21210                           	callstack 23
 21211                           
 21212                           ; BSR set to: 0
 21213                           ;incstack = 0
 21214                           ;scale@scl stored from wreg
 21215  00637A  0100               	movlb	0	; () banked
 21216  00637C  6F89               	movwf	scale@scl& (0+255),b
 21217  00637E                     
 21218                           ;doprnt.c: 436: if(scl < 0) {
 21219  00637E  0100               	movlb	0	; () banked
 21220  006380  BF89               	btfsc	scale@scl& (0+255),7,b
 21221  006382  EFC7  F031         	goto	u18650
 21222  006386  EFC5  F031         	goto	u18651
 21223  00638A                     u18651:
 21224  00638A  EFCA  F032         	goto	l17254
 21225  00638E                     u18650:
 21226  00638E                     
 21227                           ; BSR set to: 0
 21228                           ;doprnt.c: 437: scl = -scl;
 21229  00638E  6D89               	negf	scale@scl& (0+255),b
 21230                           
 21231                           ;doprnt.c: 438: if(scl>=110)
 21232  006390  5189               	movf	scale@scl& (0+255),w,b
 21233  006392  0A80               	xorlw	128
 21234  006394  0F12               	addlw	-238
 21235  006396  A0D8               	btfss	status,0,c
 21236  006398  EFD0  F031         	goto	u18661
 21237  00639C  EFD2  F031         	goto	u18660
 21238  0063A0                     u18661:
 21239  0063A0  EF5D  F032         	goto	l17244
 21240  0063A4                     u18660:
 21241  0063A4                     
 21242                           ; BSR set to: 0
 21243                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 21244  0063A4  0E00               	movlw	0
 21245  0063A6  6E18               	movwf	(___awdiv@divisor+1)^0,c
 21246  0063A8  0E0A               	movlw	10
 21247  0063AA  6E17               	movwf	___awdiv@divisor^0,c
 21248  0063AC  0E00               	movlw	0
 21249  0063AE  6E12               	movwf	(___awmod@divisor+1)^0,c
 21250  0063B0  0E64               	movlw	100
 21251  0063B2  6E11               	movwf	___awmod@divisor^0,c
 21252  0063B4  5189               	movf	scale@scl& (0+255),w,b
 21253  0063B6  6E0F               	movwf	___awmod@dividend^0,c
 21254  0063B8  6A10               	clrf	(___awmod@dividend+1)^0,c
 21255  0063BA  BE0F               	btfsc	___awmod@dividend^0,7,c
 21256  0063BC  0610               	decf	(___awmod@dividend+1)^0,f,c
 21257  0063BE  EC39  F066         	call	___awmod	;wreg free
 21258  0063C2  C00F  F015         	movff	?___awmod,___awdiv@dividend
 21259  0063C6  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
 21260  0063CA  EC91  F062         	call	___awdiv	;wreg free
 21261  0063CE  0E09               	movlw	9
 21262  0063D0  2615               	addwf	?___awdiv^0,f,c
 21263  0063D2  5015               	movf	?___awdiv^0,w,c
 21264  0063D4  0D04               	mullw	4
 21265  0063D6  0EB9               	movlw	low __npowers_
 21266  0063D8  24F3               	addwf	243,w,c
 21267  0063DA  6EF6               	movwf	tblptrl,c
 21268  0063DC  0E20               	movlw	high __npowers_
 21269  0063DE  20F4               	addwfc	244,w,c
 21270  0063E0  6EF7               	movwf	tblptrh,c
 21271  0063E2                     	if	0	;There are less than 3 active tblptr bytes
 21272  0063E2                     	endif
 21273  0063E2  0009               	tblrd		*+
 21274  0063E4  CFF5 F06C          	movff	tablat,___flmul@a
 21275  0063E8  0009               	tblrd		*+
 21276  0063EA  CFF5 F06D          	movff	tablat,___flmul@a+1
 21277  0063EE  0009               	tblrd		*+
 21278  0063F0  CFF5 F06E          	movff	tablat,___flmul@a+2
 21279  0063F4  000A               	tblrd		*-
 21280  0063F6  CFF5 F06F          	movff	tablat,___flmul@a+3
 21281  0063FA  0E00               	movlw	0
 21282  0063FC  6E18               	movwf	(___awdiv@divisor+1)^0,c
 21283  0063FE  0E64               	movlw	100
 21284  006400  6E17               	movwf	___awdiv@divisor^0,c
 21285  006402  0100               	movlb	0	; () banked
 21286  006404  5189               	movf	scale@scl& (0+255),w,b
 21287  006406  6E15               	movwf	___awdiv@dividend^0,c
 21288  006408  6A16               	clrf	(___awdiv@dividend+1)^0,c
 21289  00640A  BE15               	btfsc	___awdiv@dividend^0,7,c
 21290  00640C  0616               	decf	(___awdiv@dividend+1)^0,f,c
 21291  00640E  EC91  F062         	call	___awdiv	;wreg free
 21292  006412  0E12               	movlw	18
 21293  006414  2615               	addwf	?___awdiv^0,f,c
 21294  006416  5015               	movf	?___awdiv^0,w,c
 21295  006418  0D04               	mullw	4
 21296  00641A  0EB9               	movlw	low __npowers_
 21297  00641C  24F3               	addwf	243,w,c
 21298  00641E  6EF6               	movwf	tblptrl,c
 21299  006420  0E20               	movlw	high __npowers_
 21300  006422  20F4               	addwfc	244,w,c
 21301  006424  6EF7               	movwf	tblptrh,c
 21302  006426                     	if	0	;There are less than 3 active tblptr bytes
 21303  006426                     	endif
 21304  006426  0009               	tblrd		*+
 21305  006428  CFF5 F068          	movff	tablat,___flmul@b
 21306  00642C  0009               	tblrd		*+
 21307  00642E  CFF5 F069          	movff	tablat,___flmul@b+1
 21308  006432  0009               	tblrd		*+
 21309  006434  CFF5 F06A          	movff	tablat,___flmul@b+2
 21310  006438  000A               	tblrd		*-
 21311  00643A  CFF5 F06B          	movff	tablat,___flmul@b+3
 21312  00643E  ECA7  F02F         	call	___flmul	;wreg free
 21313  006442  C068  F085         	movff	?___flmul,_scale$7089
 21314  006446  C069  F086         	movff	?___flmul+1,_scale$7089+1
 21315  00644A  C06A  F087         	movff	?___flmul+2,_scale$7089+2
 21316  00644E  C06B  F088         	movff	?___flmul+3,_scale$7089+3
 21317                           
 21318                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
 21319  006452  C085  F068         	movff	_scale$7089,___flmul@b
 21320  006456  C086  F069         	movff	_scale$7089+1,___flmul@b+1
 21321  00645A  C087  F06A         	movff	_scale$7089+2,___flmul@b+2
 21322  00645E  C088  F06B         	movff	_scale$7089+3,___flmul@b+3
 21323  006462  0E00               	movlw	0
 21324  006464  6E12               	movwf	(___awmod@divisor+1)^0,c
 21325  006466  0E0A               	movlw	10
 21326  006468  6E11               	movwf	___awmod@divisor^0,c
 21327  00646A  0100               	movlb	0	; () banked
 21328  00646C  5189               	movf	scale@scl& (0+255),w,b
 21329  00646E  6E0F               	movwf	___awmod@dividend^0,c
 21330  006470  6A10               	clrf	(___awmod@dividend+1)^0,c
 21331  006472  BE0F               	btfsc	___awmod@dividend^0,7,c
 21332  006474  0610               	decf	(___awmod@dividend+1)^0,f,c
 21333  006476  EC39  F066         	call	___awmod	;wreg free
 21334  00647A  500F               	movf	?___awmod^0,w,c
 21335  00647C  0D04               	mullw	4
 21336  00647E  0EB9               	movlw	low __npowers_
 21337  006480  24F3               	addwf	243,w,c
 21338  006482  6EF6               	movwf	tblptrl,c
 21339  006484  0E20               	movlw	high __npowers_
 21340  006486  20F4               	addwfc	244,w,c
 21341  006488  6EF7               	movwf	tblptrh,c
 21342  00648A                     	if	0	;There are less than 3 active tblptr bytes
 21343  00648A                     	endif
 21344  00648A  0009               	tblrd		*+
 21345  00648C  CFF5 F06C          	movff	tablat,___flmul@a
 21346  006490  0009               	tblrd		*+
 21347  006492  CFF5 F06D          	movff	tablat,___flmul@a+1
 21348  006496  0009               	tblrd		*+
 21349  006498  CFF5 F06E          	movff	tablat,___flmul@a+2
 21350  00649C  000A               	tblrd		*-
 21351  00649E  CFF5 F06F          	movff	tablat,___flmul@a+3
 21352  0064A2  ECA7  F02F         	call	___flmul	;wreg free
 21353  0064A6  C068  F081         	movff	?___flmul,?_scale
 21354  0064AA  C069  F082         	movff	?___flmul+1,?_scale+1
 21355  0064AE  C06A  F083         	movff	?___flmul+2,?_scale+2
 21356  0064B2  C06B  F084         	movff	?___flmul+3,?_scale+3
 21357  0064B6  EFCA  F033         	goto	l2466
 21358  0064BA                     l17244:
 21359                           
 21360                           ; BSR set to: 0
 21361                           ;doprnt.c: 440: else if(scl > 10)
 21362  0064BA  5189               	movf	scale@scl& (0+255),w,b
 21363  0064BC  0A80               	xorlw	128
 21364  0064BE  0F75               	addlw	-139
 21365  0064C0  A0D8               	btfss	status,0,c
 21366  0064C2  EF65  F032         	goto	u18671
 21367  0064C6  EF67  F032         	goto	u18670
 21368  0064CA                     u18671:
 21369  0064CA  EFB4  F032         	goto	l17250
 21370  0064CE                     u18670:
 21371  0064CE                     
 21372                           ; BSR set to: 0
 21373                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
 21374  0064CE  0E00               	movlw	0
 21375  0064D0  6E18               	movwf	(___awdiv@divisor+1)^0,c
 21376  0064D2  0E0A               	movlw	10
 21377  0064D4  6E17               	movwf	___awdiv@divisor^0,c
 21378  0064D6  5189               	movf	scale@scl& (0+255),w,b
 21379  0064D8  6E15               	movwf	___awdiv@dividend^0,c
 21380  0064DA  6A16               	clrf	(___awdiv@dividend+1)^0,c
 21381  0064DC  BE15               	btfsc	___awdiv@dividend^0,7,c
 21382  0064DE  0616               	decf	(___awdiv@dividend+1)^0,f,c
 21383  0064E0  EC91  F062         	call	___awdiv	;wreg free
 21384  0064E4  0E09               	movlw	9
 21385  0064E6  2615               	addwf	?___awdiv^0,f,c
 21386  0064E8  5015               	movf	?___awdiv^0,w,c
 21387  0064EA  0D04               	mullw	4
 21388  0064EC  0EB9               	movlw	low __npowers_
 21389  0064EE  24F3               	addwf	243,w,c
 21390  0064F0  6EF6               	movwf	tblptrl,c
 21391  0064F2  0E20               	movlw	high __npowers_
 21392  0064F4  20F4               	addwfc	244,w,c
 21393  0064F6  6EF7               	movwf	tblptrh,c
 21394  0064F8                     	if	0	;There are less than 3 active tblptr bytes
 21395  0064F8                     	endif
 21396  0064F8  0009               	tblrd		*+
 21397  0064FA  CFF5 F068          	movff	tablat,___flmul@b
 21398  0064FE  0009               	tblrd		*+
 21399  006500  CFF5 F069          	movff	tablat,___flmul@b+1
 21400  006504  0009               	tblrd		*+
 21401  006506  CFF5 F06A          	movff	tablat,___flmul@b+2
 21402  00650A  000A               	tblrd		*-
 21403  00650C  CFF5 F06B          	movff	tablat,___flmul@b+3
 21404  006510  0E00               	movlw	0
 21405  006512  6E12               	movwf	(___awmod@divisor+1)^0,c
 21406  006514  0E0A               	movlw	10
 21407  006516  6E11               	movwf	___awmod@divisor^0,c
 21408  006518  0100               	movlb	0	; () banked
 21409  00651A  5189               	movf	scale@scl& (0+255),w,b
 21410  00651C  6E0F               	movwf	___awmod@dividend^0,c
 21411  00651E  6A10               	clrf	(___awmod@dividend+1)^0,c
 21412  006520  BE0F               	btfsc	___awmod@dividend^0,7,c
 21413  006522  0610               	decf	(___awmod@dividend+1)^0,f,c
 21414  006524  EC39  F066         	call	___awmod	;wreg free
 21415  006528  500F               	movf	?___awmod^0,w,c
 21416  00652A  0D04               	mullw	4
 21417  00652C  0EB9               	movlw	low __npowers_
 21418  00652E  24F3               	addwf	243,w,c
 21419  006530  6EF6               	movwf	tblptrl,c
 21420  006532  0E20               	movlw	high __npowers_
 21421  006534  20F4               	addwfc	244,w,c
 21422  006536  6EF7               	movwf	tblptrh,c
 21423  006538                     	if	0	;There are less than 3 active tblptr bytes
 21424  006538                     	endif
 21425  006538  0009               	tblrd		*+
 21426  00653A  CFF5 F06C          	movff	tablat,___flmul@a
 21427  00653E  0009               	tblrd		*+
 21428  006540  CFF5 F06D          	movff	tablat,___flmul@a+1
 21429  006544  0009               	tblrd		*+
 21430  006546  CFF5 F06E          	movff	tablat,___flmul@a+2
 21431  00654A  000A               	tblrd		*-
 21432  00654C  CFF5 F06F          	movff	tablat,___flmul@a+3
 21433  006550  ECA7  F02F         	call	___flmul	;wreg free
 21434  006554  C068  F081         	movff	?___flmul,?_scale
 21435  006558  C069  F082         	movff	?___flmul+1,?_scale+1
 21436  00655C  C06A  F083         	movff	?___flmul+2,?_scale+2
 21437  006560  C06B  F084         	movff	?___flmul+3,?_scale+3
 21438  006564  EFCA  F033         	goto	l2466
 21439  006568                     l17250:
 21440                           
 21441                           ; BSR set to: 0
 21442                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
 21443  006568  5189               	movf	scale@scl& (0+255),w,b
 21444  00656A  0D04               	mullw	4
 21445  00656C  0EB9               	movlw	low __npowers_
 21446  00656E  24F3               	addwf	243,w,c
 21447  006570  6EF6               	movwf	tblptrl,c
 21448  006572  0E20               	movlw	high __npowers_
 21449  006574  20F4               	addwfc	244,w,c
 21450  006576  6EF7               	movwf	tblptrh,c
 21451  006578                     	if	0	;There are less than 3 active tblptr bytes
 21452  006578                     	endif
 21453  006578  0009               	tblrd		*+
 21454  00657A  CFF5 F081          	movff	tablat,?_scale
 21455  00657E  0009               	tblrd		*+
 21456  006580  CFF5 F082          	movff	tablat,?_scale+1
 21457  006584  0009               	tblrd		*+
 21458  006586  CFF5 F083          	movff	tablat,?_scale+2
 21459  00658A  000A               	tblrd		*-
 21460  00658C  CFF5 F084          	movff	tablat,?_scale+3
 21461  006590  EFCA  F033         	goto	l2466
 21462  006594                     l17254:
 21463                           
 21464                           ; BSR set to: 0
 21465                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
 21466  006594  5189               	movf	scale@scl& (0+255),w,b
 21467  006596  0A80               	xorlw	128
 21468  006598  0F12               	addlw	-238
 21469  00659A  A0D8               	btfss	status,0,c
 21470  00659C  EFD2  F032         	goto	u18681
 21471  0065A0  EFD4  F032         	goto	u18680
 21472  0065A4                     u18681:
 21473  0065A4  EF5F  F033         	goto	l17262
 21474  0065A8                     u18680:
 21475  0065A8                     
 21476                           ; BSR set to: 0
 21477                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 21478  0065A8  0E00               	movlw	0
 21479  0065AA  6E18               	movwf	(___awdiv@divisor+1)^0,c
 21480  0065AC  0E0A               	movlw	10
 21481  0065AE  6E17               	movwf	___awdiv@divisor^0,c
 21482  0065B0  0E00               	movlw	0
 21483  0065B2  6E12               	movwf	(___awmod@divisor+1)^0,c
 21484  0065B4  0E64               	movlw	100
 21485  0065B6  6E11               	movwf	___awmod@divisor^0,c
 21486  0065B8  5189               	movf	scale@scl& (0+255),w,b
 21487  0065BA  6E0F               	movwf	___awmod@dividend^0,c
 21488  0065BC  6A10               	clrf	(___awmod@dividend+1)^0,c
 21489  0065BE  BE0F               	btfsc	___awmod@dividend^0,7,c
 21490  0065C0  0610               	decf	(___awmod@dividend+1)^0,f,c
 21491  0065C2  EC39  F066         	call	___awmod	;wreg free
 21492  0065C6  C00F  F015         	movff	?___awmod,___awdiv@dividend
 21493  0065CA  C010  F016         	movff	?___awmod+1,___awdiv@dividend+1
 21494  0065CE  EC91  F062         	call	___awdiv	;wreg free
 21495  0065D2  0E09               	movlw	9
 21496  0065D4  2615               	addwf	?___awdiv^0,f,c
 21497  0065D6  5015               	movf	?___awdiv^0,w,c
 21498  0065D8  0D04               	mullw	4
 21499  0065DA  0E85               	movlw	low __powers_
 21500  0065DC  24F3               	addwf	243,w,c
 21501  0065DE  6EF6               	movwf	tblptrl,c
 21502  0065E0  0E20               	movlw	high __powers_
 21503  0065E2  20F4               	addwfc	244,w,c
 21504  0065E4  6EF7               	movwf	tblptrh,c
 21505  0065E6                     	if	0	;There are less than 3 active tblptr bytes
 21506  0065E6                     	endif
 21507  0065E6  0009               	tblrd		*+
 21508  0065E8  CFF5 F06C          	movff	tablat,___flmul@a
 21509  0065EC  0009               	tblrd		*+
 21510  0065EE  CFF5 F06D          	movff	tablat,___flmul@a+1
 21511  0065F2  0009               	tblrd		*+
 21512  0065F4  CFF5 F06E          	movff	tablat,___flmul@a+2
 21513  0065F8  000A               	tblrd		*-
 21514  0065FA  CFF5 F06F          	movff	tablat,___flmul@a+3
 21515  0065FE  0E00               	movlw	0
 21516  006600  6E18               	movwf	(___awdiv@divisor+1)^0,c
 21517  006602  0E64               	movlw	100
 21518  006604  6E17               	movwf	___awdiv@divisor^0,c
 21519  006606  0100               	movlb	0	; () banked
 21520  006608  5189               	movf	scale@scl& (0+255),w,b
 21521  00660A  6E15               	movwf	___awdiv@dividend^0,c
 21522  00660C  6A16               	clrf	(___awdiv@dividend+1)^0,c
 21523  00660E  BE15               	btfsc	___awdiv@dividend^0,7,c
 21524  006610  0616               	decf	(___awdiv@dividend+1)^0,f,c
 21525  006612  EC91  F062         	call	___awdiv	;wreg free
 21526  006616  0E12               	movlw	18
 21527  006618  2615               	addwf	?___awdiv^0,f,c
 21528  00661A  5015               	movf	?___awdiv^0,w,c
 21529  00661C  0D04               	mullw	4
 21530  00661E  0E85               	movlw	low __powers_
 21531  006620  24F3               	addwf	243,w,c
 21532  006622  6EF6               	movwf	tblptrl,c
 21533  006624  0E20               	movlw	high __powers_
 21534  006626  20F4               	addwfc	244,w,c
 21535  006628  6EF7               	movwf	tblptrh,c
 21536  00662A                     	if	0	;There are less than 3 active tblptr bytes
 21537  00662A                     	endif
 21538  00662A  0009               	tblrd		*+
 21539  00662C  CFF5 F068          	movff	tablat,___flmul@b
 21540  006630  0009               	tblrd		*+
 21541  006632  CFF5 F069          	movff	tablat,___flmul@b+1
 21542  006636  0009               	tblrd		*+
 21543  006638  CFF5 F06A          	movff	tablat,___flmul@b+2
 21544  00663C  000A               	tblrd		*-
 21545  00663E  CFF5 F06B          	movff	tablat,___flmul@b+3
 21546  006642  ECA7  F02F         	call	___flmul	;wreg free
 21547  006646  C068  F085         	movff	?___flmul,_scale$7089
 21548  00664A  C069  F086         	movff	?___flmul+1,_scale$7089+1
 21549  00664E  C06A  F087         	movff	?___flmul+2,_scale$7089+2
 21550  006652  C06B  F088         	movff	?___flmul+3,_scale$7089+3
 21551                           
 21552                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
 21553  006656  C085  F068         	movff	_scale$7089,___flmul@b
 21554  00665A  C086  F069         	movff	_scale$7089+1,___flmul@b+1
 21555  00665E  C087  F06A         	movff	_scale$7089+2,___flmul@b+2
 21556  006662  C088  F06B         	movff	_scale$7089+3,___flmul@b+3
 21557  006666  0E00               	movlw	0
 21558  006668  6E12               	movwf	(___awmod@divisor+1)^0,c
 21559  00666A  0E0A               	movlw	10
 21560  00666C  6E11               	movwf	___awmod@divisor^0,c
 21561  00666E  0100               	movlb	0	; () banked
 21562  006670  5189               	movf	scale@scl& (0+255),w,b
 21563  006672  6E0F               	movwf	___awmod@dividend^0,c
 21564  006674  6A10               	clrf	(___awmod@dividend+1)^0,c
 21565  006676  BE0F               	btfsc	___awmod@dividend^0,7,c
 21566  006678  0610               	decf	(___awmod@dividend+1)^0,f,c
 21567  00667A  EC39  F066         	call	___awmod	;wreg free
 21568  00667E  500F               	movf	?___awmod^0,w,c
 21569  006680  0D04               	mullw	4
 21570  006682  0E85               	movlw	low __powers_
 21571  006684  24F3               	addwf	243,w,c
 21572  006686  6EF6               	movwf	tblptrl,c
 21573  006688  0E20               	movlw	high __powers_
 21574  00668A  20F4               	addwfc	244,w,c
 21575  00668C  6EF7               	movwf	tblptrh,c
 21576  00668E                     	if	0	;There are less than 3 active tblptr bytes
 21577  00668E                     	endif
 21578  00668E  0009               	tblrd		*+
 21579  006690  CFF5 F06C          	movff	tablat,___flmul@a
 21580  006694  0009               	tblrd		*+
 21581  006696  CFF5 F06D          	movff	tablat,___flmul@a+1
 21582  00669A  0009               	tblrd		*+
 21583  00669C  CFF5 F06E          	movff	tablat,___flmul@a+2
 21584  0066A0  000A               	tblrd		*-
 21585  0066A2  CFF5 F06F          	movff	tablat,___flmul@a+3
 21586  0066A6  ECA7  F02F         	call	___flmul	;wreg free
 21587  0066AA  C068  F081         	movff	?___flmul,?_scale
 21588  0066AE  C069  F082         	movff	?___flmul+1,?_scale+1
 21589  0066B2  C06A  F083         	movff	?___flmul+2,?_scale+2
 21590  0066B6  C06B  F084         	movff	?___flmul+3,?_scale+3
 21591  0066BA  EFCA  F033         	goto	l2466
 21592  0066BE                     l17262:
 21593                           
 21594                           ; BSR set to: 0
 21595                           ;doprnt.c: 446: else if(scl > 10)
 21596  0066BE  5189               	movf	scale@scl& (0+255),w,b
 21597  0066C0  0A80               	xorlw	128
 21598  0066C2  0F75               	addlw	-139
 21599  0066C4  A0D8               	btfss	status,0,c
 21600  0066C6  EF67  F033         	goto	u18691
 21601  0066CA  EF69  F033         	goto	u18690
 21602  0066CE                     u18691:
 21603  0066CE  EFB6  F033         	goto	l17268
 21604  0066D2                     u18690:
 21605  0066D2                     
 21606                           ; BSR set to: 0
 21607                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
 21608  0066D2  0E00               	movlw	0
 21609  0066D4  6E18               	movwf	(___awdiv@divisor+1)^0,c
 21610  0066D6  0E0A               	movlw	10
 21611  0066D8  6E17               	movwf	___awdiv@divisor^0,c
 21612  0066DA  5189               	movf	scale@scl& (0+255),w,b
 21613  0066DC  6E15               	movwf	___awdiv@dividend^0,c
 21614  0066DE  6A16               	clrf	(___awdiv@dividend+1)^0,c
 21615  0066E0  BE15               	btfsc	___awdiv@dividend^0,7,c
 21616  0066E2  0616               	decf	(___awdiv@dividend+1)^0,f,c
 21617  0066E4  EC91  F062         	call	___awdiv	;wreg free
 21618  0066E8  0E09               	movlw	9
 21619  0066EA  2615               	addwf	?___awdiv^0,f,c
 21620  0066EC  5015               	movf	?___awdiv^0,w,c
 21621  0066EE  0D04               	mullw	4
 21622  0066F0  0E85               	movlw	low __powers_
 21623  0066F2  24F3               	addwf	243,w,c
 21624  0066F4  6EF6               	movwf	tblptrl,c
 21625  0066F6  0E20               	movlw	high __powers_
 21626  0066F8  20F4               	addwfc	244,w,c
 21627  0066FA  6EF7               	movwf	tblptrh,c
 21628  0066FC                     	if	0	;There are less than 3 active tblptr bytes
 21629  0066FC                     	endif
 21630  0066FC  0009               	tblrd		*+
 21631  0066FE  CFF5 F068          	movff	tablat,___flmul@b
 21632  006702  0009               	tblrd		*+
 21633  006704  CFF5 F069          	movff	tablat,___flmul@b+1
 21634  006708  0009               	tblrd		*+
 21635  00670A  CFF5 F06A          	movff	tablat,___flmul@b+2
 21636  00670E  000A               	tblrd		*-
 21637  006710  CFF5 F06B          	movff	tablat,___flmul@b+3
 21638  006714  0E00               	movlw	0
 21639  006716  6E12               	movwf	(___awmod@divisor+1)^0,c
 21640  006718  0E0A               	movlw	10
 21641  00671A  6E11               	movwf	___awmod@divisor^0,c
 21642  00671C  0100               	movlb	0	; () banked
 21643  00671E  5189               	movf	scale@scl& (0+255),w,b
 21644  006720  6E0F               	movwf	___awmod@dividend^0,c
 21645  006722  6A10               	clrf	(___awmod@dividend+1)^0,c
 21646  006724  BE0F               	btfsc	___awmod@dividend^0,7,c
 21647  006726  0610               	decf	(___awmod@dividend+1)^0,f,c
 21648  006728  EC39  F066         	call	___awmod	;wreg free
 21649  00672C  500F               	movf	?___awmod^0,w,c
 21650  00672E  0D04               	mullw	4
 21651  006730  0E85               	movlw	low __powers_
 21652  006732  24F3               	addwf	243,w,c
 21653  006734  6EF6               	movwf	tblptrl,c
 21654  006736  0E20               	movlw	high __powers_
 21655  006738  20F4               	addwfc	244,w,c
 21656  00673A  6EF7               	movwf	tblptrh,c
 21657  00673C                     	if	0	;There are less than 3 active tblptr bytes
 21658  00673C                     	endif
 21659  00673C  0009               	tblrd		*+
 21660  00673E  CFF5 F06C          	movff	tablat,___flmul@a
 21661  006742  0009               	tblrd		*+
 21662  006744  CFF5 F06D          	movff	tablat,___flmul@a+1
 21663  006748  0009               	tblrd		*+
 21664  00674A  CFF5 F06E          	movff	tablat,___flmul@a+2
 21665  00674E  000A               	tblrd		*-
 21666  006750  CFF5 F06F          	movff	tablat,___flmul@a+3
 21667  006754  ECA7  F02F         	call	___flmul	;wreg free
 21668  006758  C068  F081         	movff	?___flmul,?_scale
 21669  00675C  C069  F082         	movff	?___flmul+1,?_scale+1
 21670  006760  C06A  F083         	movff	?___flmul+2,?_scale+2
 21671  006764  C06B  F084         	movff	?___flmul+3,?_scale+3
 21672  006768  EFCA  F033         	goto	l2466
 21673  00676C                     l17268:
 21674                           
 21675                           ; BSR set to: 0
 21676                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
 21677  00676C  5189               	movf	scale@scl& (0+255),w,b
 21678  00676E  0D04               	mullw	4
 21679  006770  0E85               	movlw	low __powers_
 21680  006772  24F3               	addwf	243,w,c
 21681  006774  6EF6               	movwf	tblptrl,c
 21682  006776  0E20               	movlw	high __powers_
 21683  006778  20F4               	addwfc	244,w,c
 21684  00677A  6EF7               	movwf	tblptrh,c
 21685  00677C                     	if	0	;There are less than 3 active tblptr bytes
 21686  00677C                     	endif
 21687  00677C  0009               	tblrd		*+
 21688  00677E  CFF5 F081          	movff	tablat,?_scale
 21689  006782  0009               	tblrd		*+
 21690  006784  CFF5 F082          	movff	tablat,?_scale+1
 21691  006788  0009               	tblrd		*+
 21692  00678A  CFF5 F083          	movff	tablat,?_scale+2
 21693  00678E  000A               	tblrd		*-
 21694  006790  CFF5 F084          	movff	tablat,?_scale+3
 21695  006794                     l2466:
 21696  006794  0012               	return		;funcret
 21697  006796                     __end_of_scale:
 21698                           	callstack 0
 21699                           
 21700 ;; *************** function ___awmod *****************
 21701 ;; Defined at:
 21702 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
 21703 ;; Parameters:    Size  Location     Type
 21704 ;;  dividend        2   14[COMRAM] int 
 21705 ;;  divisor         2   16[COMRAM] int 
 21706 ;; Auto vars:     Size  Location     Type
 21707 ;;  sign            1   19[COMRAM] unsigned char 
 21708 ;;  counter         1   18[COMRAM] unsigned char 
 21709 ;; Return value:  Size  Location     Type
 21710 ;;                  2   14[COMRAM] int 
 21711 ;; Registers used:
 21712 ;;		wreg, status,2, status,0
 21713 ;; Tracked objects:
 21714 ;;		On entry : 0/0
 21715 ;;		On exit  : 0/0
 21716 ;;		Unchanged: 0/0
 21717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21719 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21721 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21722 ;;Total ram usage:        6 bytes
 21723 ;; Hardware stack levels used: 1
 21724 ;; Hardware stack levels required when called: 3
 21725 ;; This function calls:
 21726 ;;		Nothing
 21727 ;; This function is called by:
 21728 ;;		_scale
 21729 ;; This function uses a non-reentrant model
 21730 ;;
 21731                           
 21732                           	psect	text89
 21733  00CC72                     __ptext89:
 21734                           	callstack 0
 21735  00CC72                     ___awmod:
 21736                           	callstack 23
 21737  00CC72  0E00               	movlw	0
 21738  00CC74  6E14               	movwf	___awmod@sign^0,c
 21739  00CC76  BE10               	btfsc	(___awmod@dividend+1)^0,7,c
 21740  00CC78  EF42  F066         	goto	u10550
 21741  00CC7C  EF40  F066         	goto	u10551
 21742  00CC80                     u10551:
 21743  00CC80  EF48  F066         	goto	l11172
 21744  00CC84                     u10550:
 21745  00CC84  6C0F               	negf	___awmod@dividend^0,c
 21746  00CC86  1E10               	comf	(___awmod@dividend+1)^0,f,c
 21747  00CC88  B0D8               	btfsc	status,0,c
 21748  00CC8A  2A10               	incf	(___awmod@dividend+1)^0,f,c
 21749  00CC8C  0E01               	movlw	1
 21750  00CC8E  6E14               	movwf	___awmod@sign^0,c
 21751  00CC90                     l11172:
 21752  00CC90  BE12               	btfsc	(___awmod@divisor+1)^0,7,c
 21753  00CC92  EF4F  F066         	goto	u10560
 21754  00CC96  EF4D  F066         	goto	u10561
 21755  00CC9A                     u10561:
 21756  00CC9A  EF53  F066         	goto	l11176
 21757  00CC9E                     u10560:
 21758  00CC9E  6C11               	negf	___awmod@divisor^0,c
 21759  00CCA0  1E12               	comf	(___awmod@divisor+1)^0,f,c
 21760  00CCA2  B0D8               	btfsc	status,0,c
 21761  00CCA4  2A12               	incf	(___awmod@divisor+1)^0,f,c
 21762  00CCA6                     l11176:
 21763  00CCA6  5011               	movf	___awmod@divisor^0,w,c
 21764  00CCA8  1012               	iorwf	(___awmod@divisor+1)^0,w,c
 21765  00CCAA  B4D8               	btfsc	status,2,c
 21766  00CCAC  EF5A  F066         	goto	u10571
 21767  00CCB0  EF5C  F066         	goto	u10570
 21768  00CCB4                     u10571:
 21769  00CCB4  EF80  F066         	goto	l11192
 21770  00CCB8                     u10570:
 21771  00CCB8  0E01               	movlw	1
 21772  00CCBA  6E13               	movwf	___awmod@counter^0,c
 21773  00CCBC  EF64  F066         	goto	l11182
 21774  00CCC0                     l11180:
 21775  00CCC0  90D8               	bcf	status,0,c
 21776  00CCC2  3611               	rlcf	___awmod@divisor^0,f,c
 21777  00CCC4  3612               	rlcf	(___awmod@divisor+1)^0,f,c
 21778  00CCC6  2A13               	incf	___awmod@counter^0,f,c
 21779  00CCC8                     l11182:
 21780  00CCC8  AE12               	btfss	(___awmod@divisor+1)^0,7,c
 21781  00CCCA  EF69  F066         	goto	u10581
 21782  00CCCE  EF6B  F066         	goto	u10580
 21783  00CCD2                     u10581:
 21784  00CCD2  EF60  F066         	goto	l11180
 21785  00CCD6                     u10580:
 21786  00CCD6                     l11184:
 21787  00CCD6  5011               	movf	___awmod@divisor^0,w,c
 21788  00CCD8  5C0F               	subwf	___awmod@dividend^0,w,c
 21789  00CCDA  5012               	movf	(___awmod@divisor+1)^0,w,c
 21790  00CCDC  5810               	subwfb	(___awmod@dividend+1)^0,w,c
 21791  00CCDE  A0D8               	btfss	status,0,c
 21792  00CCE0  EF74  F066         	goto	u10591
 21793  00CCE4  EF76  F066         	goto	u10590
 21794  00CCE8                     u10591:
 21795  00CCE8  EF7A  F066         	goto	l11188
 21796  00CCEC                     u10590:
 21797  00CCEC  5011               	movf	___awmod@divisor^0,w,c
 21798  00CCEE  5E0F               	subwf	___awmod@dividend^0,f,c
 21799  00CCF0  5012               	movf	(___awmod@divisor+1)^0,w,c
 21800  00CCF2  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
 21801  00CCF4                     l11188:
 21802  00CCF4  90D8               	bcf	status,0,c
 21803  00CCF6  3212               	rrcf	(___awmod@divisor+1)^0,f,c
 21804  00CCF8  3211               	rrcf	___awmod@divisor^0,f,c
 21805  00CCFA  2E13               	decfsz	___awmod@counter^0,f,c
 21806  00CCFC  EF6B  F066         	goto	l11184
 21807  00CD00                     l11192:
 21808  00CD00  5014               	movf	___awmod@sign^0,w,c
 21809  00CD02  B4D8               	btfsc	status,2,c
 21810  00CD04  EF86  F066         	goto	u10601
 21811  00CD08  EF88  F066         	goto	u10600
 21812  00CD0C                     u10601:
 21813  00CD0C  EF8C  F066         	goto	l11196
 21814  00CD10                     u10600:
 21815  00CD10  6C0F               	negf	___awmod@dividend^0,c
 21816  00CD12  1E10               	comf	(___awmod@dividend+1)^0,f,c
 21817  00CD14  B0D8               	btfsc	status,0,c
 21818  00CD16  2A10               	incf	(___awmod@dividend+1)^0,f,c
 21819  00CD18                     l11196:
 21820  00CD18  C00F  F00F         	movff	___awmod@dividend,?___awmod
 21821  00CD1C  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
 21822  00CD20  0012               	return		;funcret
 21823  00CD22                     __end_of___awmod:
 21824                           	callstack 0
 21825                           
 21826 ;; *************** function ___awdiv *****************
 21827 ;; Defined at:
 21828 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
 21829 ;; Parameters:    Size  Location     Type
 21830 ;;  dividend        2   20[COMRAM] int 
 21831 ;;  divisor         2   22[COMRAM] int 
 21832 ;; Auto vars:     Size  Location     Type
 21833 ;;  quotient        2   26[COMRAM] int 
 21834 ;;  sign            1   25[COMRAM] unsigned char 
 21835 ;;  counter         1   24[COMRAM] unsigned char 
 21836 ;; Return value:  Size  Location     Type
 21837 ;;                  2   20[COMRAM] int 
 21838 ;; Registers used:
 21839 ;;		wreg, status,2, status,0
 21840 ;; Tracked objects:
 21841 ;;		On entry : 0/0
 21842 ;;		On exit  : 0/0
 21843 ;;		Unchanged: 0/0
 21844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21845 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21846 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21848 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21849 ;;Total ram usage:        8 bytes
 21850 ;; Hardware stack levels used: 1
 21851 ;; Hardware stack levels required when called: 3
 21852 ;; This function calls:
 21853 ;;		Nothing
 21854 ;; This function is called by:
 21855 ;;		_scale
 21856 ;;		_sprintf
 21857 ;; This function uses a non-reentrant model
 21858 ;;
 21859                           
 21860                           	psect	text90
 21861  00C522                     __ptext90:
 21862                           	callstack 0
 21863  00C522                     ___awdiv:
 21864                           	callstack 23
 21865  00C522  0E00               	movlw	0
 21866  00C524  6E1A               	movwf	___awdiv@sign^0,c
 21867  00C526  BE18               	btfsc	(___awdiv@divisor+1)^0,7,c
 21868  00C528  EF9A  F062         	goto	u10490
 21869  00C52C  EF98  F062         	goto	u10491
 21870  00C530                     u10491:
 21871  00C530  EFA0  F062         	goto	l11128
 21872  00C534                     u10490:
 21873  00C534  6C17               	negf	___awdiv@divisor^0,c
 21874  00C536  1E18               	comf	(___awdiv@divisor+1)^0,f,c
 21875  00C538  B0D8               	btfsc	status,0,c
 21876  00C53A  2A18               	incf	(___awdiv@divisor+1)^0,f,c
 21877  00C53C  0E01               	movlw	1
 21878  00C53E  6E1A               	movwf	___awdiv@sign^0,c
 21879  00C540                     l11128:
 21880  00C540  BE16               	btfsc	(___awdiv@dividend+1)^0,7,c
 21881  00C542  EFA7  F062         	goto	u10500
 21882  00C546  EFA5  F062         	goto	u10501
 21883  00C54A                     u10501:
 21884  00C54A  EFAD  F062         	goto	l11134
 21885  00C54E                     u10500:
 21886  00C54E  6C15               	negf	___awdiv@dividend^0,c
 21887  00C550  1E16               	comf	(___awdiv@dividend+1)^0,f,c
 21888  00C552  B0D8               	btfsc	status,0,c
 21889  00C554  2A16               	incf	(___awdiv@dividend+1)^0,f,c
 21890  00C556  0E01               	movlw	1
 21891  00C558  1A1A               	xorwf	___awdiv@sign^0,f,c
 21892  00C55A                     l11134:
 21893  00C55A  0E00               	movlw	0
 21894  00C55C  6E1C               	movwf	(___awdiv@quotient+1)^0,c
 21895  00C55E  0E00               	movlw	0
 21896  00C560  6E1B               	movwf	___awdiv@quotient^0,c
 21897  00C562  5017               	movf	___awdiv@divisor^0,w,c
 21898  00C564  1018               	iorwf	(___awdiv@divisor+1)^0,w,c
 21899  00C566  B4D8               	btfsc	status,2,c
 21900  00C568  EFB8  F062         	goto	u10511
 21901  00C56C  EFBA  F062         	goto	u10510
 21902  00C570                     u10511:
 21903  00C570  EFE2  F062         	goto	l11156
 21904  00C574                     u10510:
 21905  00C574  0E01               	movlw	1
 21906  00C576  6E19               	movwf	___awdiv@counter^0,c
 21907  00C578  EFC2  F062         	goto	l11142
 21908  00C57C                     l11140:
 21909  00C57C  90D8               	bcf	status,0,c
 21910  00C57E  3617               	rlcf	___awdiv@divisor^0,f,c
 21911  00C580  3618               	rlcf	(___awdiv@divisor+1)^0,f,c
 21912  00C582  2A19               	incf	___awdiv@counter^0,f,c
 21913  00C584                     l11142:
 21914  00C584  AE18               	btfss	(___awdiv@divisor+1)^0,7,c
 21915  00C586  EFC7  F062         	goto	u10521
 21916  00C58A  EFC9  F062         	goto	u10520
 21917  00C58E                     u10521:
 21918  00C58E  EFBE  F062         	goto	l11140
 21919  00C592                     u10520:
 21920  00C592                     l11144:
 21921  00C592  90D8               	bcf	status,0,c
 21922  00C594  361B               	rlcf	___awdiv@quotient^0,f,c
 21923  00C596  361C               	rlcf	(___awdiv@quotient+1)^0,f,c
 21924  00C598  5017               	movf	___awdiv@divisor^0,w,c
 21925  00C59A  5C15               	subwf	___awdiv@dividend^0,w,c
 21926  00C59C  5018               	movf	(___awdiv@divisor+1)^0,w,c
 21927  00C59E  5816               	subwfb	(___awdiv@dividend+1)^0,w,c
 21928  00C5A0  A0D8               	btfss	status,0,c
 21929  00C5A2  EFD5  F062         	goto	u10531
 21930  00C5A6  EFD7  F062         	goto	u10530
 21931  00C5AA                     u10531:
 21932  00C5AA  EFDC  F062         	goto	l11152
 21933  00C5AE                     u10530:
 21934  00C5AE  5017               	movf	___awdiv@divisor^0,w,c
 21935  00C5B0  5E15               	subwf	___awdiv@dividend^0,f,c
 21936  00C5B2  5018               	movf	(___awdiv@divisor+1)^0,w,c
 21937  00C5B4  5A16               	subwfb	(___awdiv@dividend+1)^0,f,c
 21938  00C5B6  801B               	bsf	___awdiv@quotient^0,0,c
 21939  00C5B8                     l11152:
 21940  00C5B8  90D8               	bcf	status,0,c
 21941  00C5BA  3218               	rrcf	(___awdiv@divisor+1)^0,f,c
 21942  00C5BC  3217               	rrcf	___awdiv@divisor^0,f,c
 21943  00C5BE  2E19               	decfsz	___awdiv@counter^0,f,c
 21944  00C5C0  EFC9  F062         	goto	l11144
 21945  00C5C4                     l11156:
 21946  00C5C4  501A               	movf	___awdiv@sign^0,w,c
 21947  00C5C6  B4D8               	btfsc	status,2,c
 21948  00C5C8  EFE8  F062         	goto	u10541
 21949  00C5CC  EFEA  F062         	goto	u10540
 21950  00C5D0                     u10541:
 21951  00C5D0  EFEE  F062         	goto	l11160
 21952  00C5D4                     u10540:
 21953  00C5D4  6C1B               	negf	___awdiv@quotient^0,c
 21954  00C5D6  1E1C               	comf	(___awdiv@quotient+1)^0,f,c
 21955  00C5D8  B0D8               	btfsc	status,0,c
 21956  00C5DA  2A1C               	incf	(___awdiv@quotient+1)^0,f,c
 21957  00C5DC                     l11160:
 21958  00C5DC  C01B  F015         	movff	___awdiv@quotient,?___awdiv
 21959  00C5E0  C01C  F016         	movff	___awdiv@quotient+1,?___awdiv+1
 21960  00C5E4  0012               	return		;funcret
 21961  00C5E6                     __end_of___awdiv:
 21962                           	callstack 0
 21963                           
 21964 ;; *************** function _isdigit *****************
 21965 ;; Defined at:
 21966 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
 21967 ;; Parameters:    Size  Location     Type
 21968 ;;  c               1    wreg     unsigned char 
 21969 ;; Auto vars:     Size  Location     Type
 21970 ;;  c               1   16[COMRAM] unsigned char 
 21971 ;; Return value:  Size  Location     Type
 21972 ;;		None               void
 21973 ;; Registers used:
 21974 ;;		wreg, status,2, status,0
 21975 ;; Tracked objects:
 21976 ;;		On entry : 0/0
 21977 ;;		On exit  : 0/0
 21978 ;;		Unchanged: 0/0
 21979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21983 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21984 ;;Total ram usage:        3 bytes
 21985 ;; Hardware stack levels used: 1
 21986 ;; Hardware stack levels required when called: 3
 21987 ;; This function calls:
 21988 ;;		Nothing
 21989 ;; This function is called by:
 21990 ;;		_sprintf
 21991 ;; This function uses a non-reentrant model
 21992 ;;
 21993                           
 21994                           	psect	text91
 21995  00EC7A                     __ptext91:
 21996                           	callstack 0
 21997  00EC7A                     _isdigit:
 21998                           	callstack 24
 21999                           
 22000                           ;incstack = 0
 22001                           ;isdigit@c stored from wreg
 22002  00EC7A  6E11               	movwf	isdigit@c^0,c
 22003  00EC7C  0E00               	movlw	0
 22004  00EC7E  6E10               	movwf	_isdigit$6494^0,c
 22005  00EC80  0E3A               	movlw	58
 22006  00EC82  6011               	cpfslt	isdigit@c^0,c
 22007  00EC84  EF46  F076         	goto	u11261
 22008  00EC88  EF48  F076         	goto	u11260
 22009  00EC8C                     u11261:
 22010  00EC8C  EF52  F076         	goto	l11664
 22011  00EC90                     u11260:
 22012  00EC90  0E2F               	movlw	47
 22013  00EC92  6411               	cpfsgt	isdigit@c^0,c
 22014  00EC94  EF4E  F076         	goto	u11271
 22015  00EC98  EF50  F076         	goto	u11270
 22016  00EC9C                     u11271:
 22017  00EC9C  EF52  F076         	goto	l11664
 22018  00ECA0                     u11270:
 22019  00ECA0  0E01               	movlw	1
 22020  00ECA2  6E10               	movwf	_isdigit$6494^0,c
 22021  00ECA4                     l11664:
 22022  00ECA4  C010  F00F         	movff	_isdigit$6494,??_isdigit
 22023  00ECA8  300F               	rrcf	??_isdigit^0,w,c
 22024  00ECAA  0012               	return		;funcret
 22025  00ECAC                     __end_of_isdigit:
 22026                           	callstack 0
 22027                           
 22028 ;; *************** function _fround *****************
 22029 ;; Defined at:
 22030 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
 22031 ;; Parameters:    Size  Location     Type
 22032 ;;  prec            1    wreg     unsigned char 
 22033 ;; Auto vars:     Size  Location     Type
 22034 ;;  prec            1   45[BANK0 ] unsigned char 
 22035 ;; Return value:  Size  Location     Type
 22036 ;;                  4   33[BANK0 ] unsigned char 
 22037 ;; Registers used:
 22038 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22039 ;; Tracked objects:
 22040 ;;		On entry : 0/0
 22041 ;;		On exit  : 0/0
 22042 ;;		Unchanged: 0/0
 22043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22044 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22045 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22047 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22048 ;;Total ram usage:       13 bytes
 22049 ;; Hardware stack levels used: 1
 22050 ;; Hardware stack levels required when called: 4
 22051 ;; This function calls:
 22052 ;;		___flmul
 22053 ;;		___lwdiv
 22054 ;;		___lwmod
 22055 ;; This function is called by:
 22056 ;;		_sprintf
 22057 ;; This function uses a non-reentrant model
 22058 ;;
 22059                           
 22060                           	psect	text92
 22061  007DD4                     __ptext92:
 22062                           	callstack 0
 22063  007DD4                     _fround:
 22064                           	callstack 23
 22065                           
 22066                           ;incstack = 0
 22067                           ;fround@prec stored from wreg
 22068  007DD4  0100               	movlb	0	; () banked
 22069  007DD6  6F8D               	movwf	fround@prec& (0+255),b
 22070  007DD8                     
 22071                           ;doprnt.c: 421: if(prec>=110)
 22072  007DD8  0E6D               	movlw	109
 22073  007DDA  0100               	movlb	0	; () banked
 22074  007DDC  658D               	cpfsgt	fround@prec& (0+255),b
 22075  007DDE  EFF3  F03E         	goto	u18631
 22076  007DE2  EFF5  F03E         	goto	u18630
 22077  007DE6                     u18631:
 22078  007DE6  EFA2  F03F         	goto	l17224
 22079  007DEA                     u18630:
 22080  007DEA                     
 22081                           ; BSR set to: 0
 22082                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 22083  007DEA  0E00               	movlw	0
 22084  007DEC  6F6C               	movwf	___flmul@a& (0+255),b
 22085  007DEE  0E00               	movlw	0
 22086  007DF0  6F6D               	movwf	(___flmul@a+1)& (0+255),b
 22087  007DF2  0E00               	movlw	0
 22088  007DF4  6F6E               	movwf	(___flmul@a+2)& (0+255),b
 22089  007DF6  0E3F               	movlw	63
 22090  007DF8  6F6F               	movwf	(___flmul@a+3)& (0+255),b
 22091  007DFA  0E00               	movlw	0
 22092  007DFC  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 22093  007DFE  0E64               	movlw	100
 22094  007E00  6E17               	movwf	___lwdiv@divisor^0,c
 22095  007E02  C08D  F015         	movff	fround@prec,___lwdiv@dividend
 22096  007E06  6A16               	clrf	(___lwdiv@dividend+1)^0,c
 22097  007E08  EC92  F06D         	call	___lwdiv	;wreg free
 22098  007E0C  90D8               	bcf	status,0,c
 22099  007E0E  3615               	rlcf	?___lwdiv^0,f,c
 22100  007E10  3616               	rlcf	(?___lwdiv+1)^0,f,c
 22101  007E12  90D8               	bcf	status,0,c
 22102  007E14  3615               	rlcf	?___lwdiv^0,f,c
 22103  007E16  3616               	rlcf	(?___lwdiv+1)^0,f,c
 22104  007E18  0E48               	movlw	72
 22105  007E1A  2615               	addwf	?___lwdiv^0,f,c
 22106  007E1C  0E00               	movlw	0
 22107  007E1E  2216               	addwfc	(?___lwdiv+1)^0,f,c
 22108  007E20  0EB9               	movlw	low __npowers_
 22109  007E22  2415               	addwf	?___lwdiv^0,w,c
 22110  007E24  6EF6               	movwf	tblptrl,c
 22111  007E26  0E20               	movlw	high __npowers_
 22112  007E28  2016               	addwfc	(?___lwdiv+1)^0,w,c
 22113  007E2A  6EF7               	movwf	tblptrh,c
 22114  007E2C                     	if	0	;There are less than 3 active tblptr bytes
 22115  007E2C                     	endif
 22116  007E2C  0009               	tblrd		*+
 22117  007E2E  CFF5 F068          	movff	tablat,___flmul@b
 22118  007E32  0009               	tblrd		*+
 22119  007E34  CFF5 F069          	movff	tablat,___flmul@b+1
 22120  007E38  0009               	tblrd		*+
 22121  007E3A  CFF5 F06A          	movff	tablat,___flmul@b+2
 22122  007E3E  000A               	tblrd		*-
 22123  007E40  CFF5 F06B          	movff	tablat,___flmul@b+3
 22124  007E44  ECA7  F02F         	call	___flmul	;wreg free
 22125  007E48  C068  F089         	movff	?___flmul,_fround$7087
 22126  007E4C  C069  F08A         	movff	?___flmul+1,_fround$7087+1
 22127  007E50  C06A  F08B         	movff	?___flmul+2,_fround$7087+2
 22128  007E54  C06B  F08C         	movff	?___flmul+3,_fround$7087+3
 22129                           
 22130                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 22131  007E58  0E00               	movlw	0
 22132  007E5A  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 22133  007E5C  0E0A               	movlw	10
 22134  007E5E  6E17               	movwf	___lwdiv@divisor^0,c
 22135  007E60  0E00               	movlw	0
 22136  007E62  6E12               	movwf	(___lwmod@divisor+1)^0,c
 22137  007E64  0E64               	movlw	100
 22138  007E66  6E11               	movwf	___lwmod@divisor^0,c
 22139  007E68  C08D  F00F         	movff	fround@prec,___lwmod@dividend
 22140  007E6C  6A10               	clrf	(___lwmod@dividend+1)^0,c
 22141  007E6E  EC47  F070         	call	___lwmod	;wreg free
 22142  007E72  C00F  F015         	movff	?___lwmod,___lwdiv@dividend
 22143  007E76  C010  F016         	movff	?___lwmod+1,___lwdiv@dividend+1
 22144  007E7A  EC92  F06D         	call	___lwdiv	;wreg free
 22145  007E7E  90D8               	bcf	status,0,c
 22146  007E80  3615               	rlcf	?___lwdiv^0,f,c
 22147  007E82  3616               	rlcf	(?___lwdiv+1)^0,f,c
 22148  007E84  90D8               	bcf	status,0,c
 22149  007E86  3615               	rlcf	?___lwdiv^0,f,c
 22150  007E88  3616               	rlcf	(?___lwdiv+1)^0,f,c
 22151  007E8A  0E24               	movlw	36
 22152  007E8C  2615               	addwf	?___lwdiv^0,f,c
 22153  007E8E  0E00               	movlw	0
 22154  007E90  2216               	addwfc	(?___lwdiv+1)^0,f,c
 22155  007E92  0EB9               	movlw	low __npowers_
 22156  007E94  2415               	addwf	?___lwdiv^0,w,c
 22157  007E96  6EF6               	movwf	tblptrl,c
 22158  007E98  0E20               	movlw	high __npowers_
 22159  007E9A  2016               	addwfc	(?___lwdiv+1)^0,w,c
 22160  007E9C  6EF7               	movwf	tblptrh,c
 22161  007E9E                     	if	0	;There are less than 3 active tblptr bytes
 22162  007E9E                     	endif
 22163  007E9E  0009               	tblrd		*+
 22164  007EA0  CFF5 F06C          	movff	tablat,___flmul@a
 22165  007EA4  0009               	tblrd		*+
 22166  007EA6  CFF5 F06D          	movff	tablat,___flmul@a+1
 22167  007EAA  0009               	tblrd		*+
 22168  007EAC  CFF5 F06E          	movff	tablat,___flmul@a+2
 22169  007EB0  000A               	tblrd		*-
 22170  007EB2  CFF5 F06F          	movff	tablat,___flmul@a+3
 22171  007EB6  C089  F068         	movff	_fround$7087,___flmul@b
 22172  007EBA  C08A  F069         	movff	_fround$7087+1,___flmul@b+1
 22173  007EBE  C08B  F06A         	movff	_fround$7087+2,___flmul@b+2
 22174  007EC2  C08C  F06B         	movff	_fround$7087+3,___flmul@b+3
 22175  007EC6  ECA7  F02F         	call	___flmul	;wreg free
 22176  007ECA  C068  F085         	movff	?___flmul,_fround$7088
 22177  007ECE  C069  F086         	movff	?___flmul+1,_fround$7088+1
 22178  007ED2  C06A  F087         	movff	?___flmul+2,_fround$7088+2
 22179  007ED6  C06B  F088         	movff	?___flmul+3,_fround$7088+3
 22180                           
 22181                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
 22182  007EDA  C085  F068         	movff	_fround$7088,___flmul@b
 22183  007EDE  C086  F069         	movff	_fround$7088+1,___flmul@b+1
 22184  007EE2  C087  F06A         	movff	_fround$7088+2,___flmul@b+2
 22185  007EE6  C088  F06B         	movff	_fround$7088+3,___flmul@b+3
 22186  007EEA  0E00               	movlw	0
 22187  007EEC  6E12               	movwf	(___lwmod@divisor+1)^0,c
 22188  007EEE  0E0A               	movlw	10
 22189  007EF0  6E11               	movwf	___lwmod@divisor^0,c
 22190  007EF2  C08D  F00F         	movff	fround@prec,___lwmod@dividend
 22191  007EF6  6A10               	clrf	(___lwmod@dividend+1)^0,c
 22192  007EF8  EC47  F070         	call	___lwmod	;wreg free
 22193  007EFC  90D8               	bcf	status,0,c
 22194  007EFE  360F               	rlcf	?___lwmod^0,f,c
 22195  007F00  3610               	rlcf	(?___lwmod+1)^0,f,c
 22196  007F02  90D8               	bcf	status,0,c
 22197  007F04  360F               	rlcf	?___lwmod^0,f,c
 22198  007F06  3610               	rlcf	(?___lwmod+1)^0,f,c
 22199  007F08  0EB9               	movlw	low __npowers_
 22200  007F0A  240F               	addwf	?___lwmod^0,w,c
 22201  007F0C  6EF6               	movwf	tblptrl,c
 22202  007F0E  0E20               	movlw	high __npowers_
 22203  007F10  2010               	addwfc	(?___lwmod+1)^0,w,c
 22204  007F12  6EF7               	movwf	tblptrh,c
 22205  007F14                     	if	0	;There are less than 3 active tblptr bytes
 22206  007F14                     	endif
 22207  007F14  0009               	tblrd		*+
 22208  007F16  CFF5 F06C          	movff	tablat,___flmul@a
 22209  007F1A  0009               	tblrd		*+
 22210  007F1C  CFF5 F06D          	movff	tablat,___flmul@a+1
 22211  007F20  0009               	tblrd		*+
 22212  007F22  CFF5 F06E          	movff	tablat,___flmul@a+2
 22213  007F26  000A               	tblrd		*-
 22214  007F28  CFF5 F06F          	movff	tablat,___flmul@a+3
 22215  007F2C  ECA7  F02F         	call	___flmul	;wreg free
 22216  007F30  C068  F081         	movff	?___flmul,?_fround
 22217  007F34  C069  F082         	movff	?___flmul+1,?_fround+1
 22218  007F38  C06A  F083         	movff	?___flmul+2,?_fround+2
 22219  007F3C  C06B  F084         	movff	?___flmul+3,?_fround+3
 22220  007F40  EF3C  F040         	goto	l2459
 22221  007F44                     l17224:
 22222                           
 22223                           ; BSR set to: 0
 22224                           ;doprnt.c: 423: else if(prec > 10)
 22225  007F44  0E0A               	movlw	10
 22226  007F46  658D               	cpfsgt	fround@prec& (0+255),b
 22227  007F48  EFA8  F03F         	goto	u18641
 22228  007F4C  EFAA  F03F         	goto	u18640
 22229  007F50                     u18641:
 22230  007F50  EF16  F040         	goto	l17230
 22231  007F54                     u18640:
 22232  007F54                     
 22233                           ; BSR set to: 0
 22234                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 22235  007F54  0E00               	movlw	0
 22236  007F56  6F6C               	movwf	___flmul@a& (0+255),b
 22237  007F58  0E00               	movlw	0
 22238  007F5A  6F6D               	movwf	(___flmul@a+1)& (0+255),b
 22239  007F5C  0E00               	movlw	0
 22240  007F5E  6F6E               	movwf	(___flmul@a+2)& (0+255),b
 22241  007F60  0E3F               	movlw	63
 22242  007F62  6F6F               	movwf	(___flmul@a+3)& (0+255),b
 22243  007F64  0E00               	movlw	0
 22244  007F66  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 22245  007F68  0E0A               	movlw	10
 22246  007F6A  6E17               	movwf	___lwdiv@divisor^0,c
 22247  007F6C  C08D  F015         	movff	fround@prec,___lwdiv@dividend
 22248  007F70  6A16               	clrf	(___lwdiv@dividend+1)^0,c
 22249  007F72  EC92  F06D         	call	___lwdiv	;wreg free
 22250  007F76  90D8               	bcf	status,0,c
 22251  007F78  3615               	rlcf	?___lwdiv^0,f,c
 22252  007F7A  3616               	rlcf	(?___lwdiv+1)^0,f,c
 22253  007F7C  90D8               	bcf	status,0,c
 22254  007F7E  3615               	rlcf	?___lwdiv^0,f,c
 22255  007F80  3616               	rlcf	(?___lwdiv+1)^0,f,c
 22256  007F82  0E24               	movlw	36
 22257  007F84  2615               	addwf	?___lwdiv^0,f,c
 22258  007F86  0E00               	movlw	0
 22259  007F88  2216               	addwfc	(?___lwdiv+1)^0,f,c
 22260  007F8A  0EB9               	movlw	low __npowers_
 22261  007F8C  2415               	addwf	?___lwdiv^0,w,c
 22262  007F8E  6EF6               	movwf	tblptrl,c
 22263  007F90  0E20               	movlw	high __npowers_
 22264  007F92  2016               	addwfc	(?___lwdiv+1)^0,w,c
 22265  007F94  6EF7               	movwf	tblptrh,c
 22266  007F96                     	if	0	;There are less than 3 active tblptr bytes
 22267  007F96                     	endif
 22268  007F96  0009               	tblrd		*+
 22269  007F98  CFF5 F068          	movff	tablat,___flmul@b
 22270  007F9C  0009               	tblrd		*+
 22271  007F9E  CFF5 F069          	movff	tablat,___flmul@b+1
 22272  007FA2  0009               	tblrd		*+
 22273  007FA4  CFF5 F06A          	movff	tablat,___flmul@b+2
 22274  007FA8  000A               	tblrd		*-
 22275  007FAA  CFF5 F06B          	movff	tablat,___flmul@b+3
 22276  007FAE  ECA7  F02F         	call	___flmul	;wreg free
 22277  007FB2  C068  F089         	movff	?___flmul,_fround$7087
 22278  007FB6  C069  F08A         	movff	?___flmul+1,_fround$7087+1
 22279  007FBA  C06A  F08B         	movff	?___flmul+2,_fround$7087+2
 22280  007FBE  C06B  F08C         	movff	?___flmul+3,_fround$7087+3
 22281                           
 22282                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
 22283  007FC2  C089  F068         	movff	_fround$7087,___flmul@b
 22284  007FC6  C08A  F069         	movff	_fround$7087+1,___flmul@b+1
 22285  007FCA  C08B  F06A         	movff	_fround$7087+2,___flmul@b+2
 22286  007FCE  C08C  F06B         	movff	_fround$7087+3,___flmul@b+3
 22287  007FD2  0E00               	movlw	0
 22288  007FD4  6E12               	movwf	(___lwmod@divisor+1)^0,c
 22289  007FD6  0E0A               	movlw	10
 22290  007FD8  6E11               	movwf	___lwmod@divisor^0,c
 22291  007FDA  C08D  F00F         	movff	fround@prec,___lwmod@dividend
 22292  007FDE  6A10               	clrf	(___lwmod@dividend+1)^0,c
 22293  007FE0  EC47  F070         	call	___lwmod	;wreg free
 22294  007FE4  90D8               	bcf	status,0,c
 22295  007FE6  360F               	rlcf	?___lwmod^0,f,c
 22296  007FE8  3610               	rlcf	(?___lwmod+1)^0,f,c
 22297  007FEA  90D8               	bcf	status,0,c
 22298  007FEC  360F               	rlcf	?___lwmod^0,f,c
 22299  007FEE  3610               	rlcf	(?___lwmod+1)^0,f,c
 22300  007FF0  0EB9               	movlw	low __npowers_
 22301  007FF2  240F               	addwf	?___lwmod^0,w,c
 22302  007FF4  6EF6               	movwf	tblptrl,c
 22303  007FF6  0E20               	movlw	high __npowers_
 22304  007FF8  2010               	addwfc	(?___lwmod+1)^0,w,c
 22305  007FFA  6EF7               	movwf	tblptrh,c
 22306  007FFC                     	if	0	;There are less than 3 active tblptr bytes
 22307  007FFC                     	endif
 22308  007FFC  0009               	tblrd		*+
 22309  007FFE  CFF5 F06C          	movff	tablat,___flmul@a
 22310  008002  0009               	tblrd		*+
 22311  008004  CFF5 F06D          	movff	tablat,___flmul@a+1
 22312  008008  0009               	tblrd		*+
 22313  00800A  CFF5 F06E          	movff	tablat,___flmul@a+2
 22314  00800E  000A               	tblrd		*-
 22315  008010  CFF5 F06F          	movff	tablat,___flmul@a+3
 22316  008014  ECA7  F02F         	call	___flmul	;wreg free
 22317  008018  C068  F081         	movff	?___flmul,?_fround
 22318  00801C  C069  F082         	movff	?___flmul+1,?_fround+1
 22319  008020  C06A  F083         	movff	?___flmul+2,?_fround+2
 22320  008024  C06B  F084         	movff	?___flmul+3,?_fround+3
 22321  008028  EF3C  F040         	goto	l2459
 22322  00802C                     l17230:
 22323                           
 22324                           ; BSR set to: 0
 22325                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
 22326  00802C  518D               	movf	fround@prec& (0+255),w,b
 22327  00802E  0D04               	mullw	4
 22328  008030  0EB9               	movlw	low __npowers_
 22329  008032  24F3               	addwf	243,w,c
 22330  008034  6EF6               	movwf	tblptrl,c
 22331  008036  0E20               	movlw	high __npowers_
 22332  008038  20F4               	addwfc	244,w,c
 22333  00803A  6EF7               	movwf	tblptrh,c
 22334  00803C                     	if	0	;There are less than 3 active tblptr bytes
 22335  00803C                     	endif
 22336  00803C  0009               	tblrd		*+
 22337  00803E  CFF5 F068          	movff	tablat,___flmul@b
 22338  008042  0009               	tblrd		*+
 22339  008044  CFF5 F069          	movff	tablat,___flmul@b+1
 22340  008048  0009               	tblrd		*+
 22341  00804A  CFF5 F06A          	movff	tablat,___flmul@b+2
 22342  00804E  000A               	tblrd		*-
 22343  008050  CFF5 F06B          	movff	tablat,___flmul@b+3
 22344  008054  0E00               	movlw	0
 22345  008056  6F6C               	movwf	___flmul@a& (0+255),b
 22346  008058  0E00               	movlw	0
 22347  00805A  6F6D               	movwf	(___flmul@a+1)& (0+255),b
 22348  00805C  0E00               	movlw	0
 22349  00805E  6F6E               	movwf	(___flmul@a+2)& (0+255),b
 22350  008060  0E3F               	movlw	63
 22351  008062  6F6F               	movwf	(___flmul@a+3)& (0+255),b
 22352  008064  ECA7  F02F         	call	___flmul	;wreg free
 22353  008068  C068  F081         	movff	?___flmul,?_fround
 22354  00806C  C069  F082         	movff	?___flmul+1,?_fround+1
 22355  008070  C06A  F083         	movff	?___flmul+2,?_fround+2
 22356  008074  C06B  F084         	movff	?___flmul+3,?_fround+3
 22357  008078                     l2459:
 22358  008078  0012               	return		;funcret
 22359  00807A                     __end_of_fround:
 22360                           	callstack 0
 22361                           
 22362 ;; *************** function __tdiv_to_l_ *****************
 22363 ;; Defined at:
 22364 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
 22365 ;; Parameters:    Size  Location     Type
 22366 ;;  f1              4   14[COMRAM] float 
 22367 ;;  f2              4   18[COMRAM] float 
 22368 ;; Auto vars:     Size  Location     Type
 22369 ;;  quot            4   25[COMRAM] unsigned long 
 22370 ;;  exp1            1   30[COMRAM] unsigned char 
 22371 ;;  cntr            1   29[COMRAM] unsigned char 
 22372 ;; Return value:  Size  Location     Type
 22373 ;;                  4   14[COMRAM] unsigned long 
 22374 ;; Registers used:
 22375 ;;		wreg, status,2, status,0
 22376 ;; Tracked objects:
 22377 ;;		On entry : 0/0
 22378 ;;		On exit  : 0/0
 22379 ;;		Unchanged: 0/0
 22380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22381 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22382 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22384 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22385 ;;Total ram usage:       17 bytes
 22386 ;; Hardware stack levels used: 1
 22387 ;; Hardware stack levels required when called: 3
 22388 ;; This function calls:
 22389 ;;		Nothing
 22390 ;; This function is called by:
 22391 ;;		_sprintf
 22392 ;; This function uses a non-reentrant model
 22393 ;;
 22394                           
 22395                           	psect	text93
 22396  00A048                     __ptext93:
 22397                           	callstack 0
 22398  00A048                     __tdiv_to_l_:
 22399                           	callstack 24
 22400  00A048  C011  F017         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 22401  00A04C  6A18               	clrf	(??__tdiv_to_l_+1)^0,c
 22402  00A04E  6A19               	clrf	(??__tdiv_to_l_+2)^0,c
 22403  00A050  3410               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
 22404  00A052  3617               	rlcf	??__tdiv_to_l_^0,f,c
 22405  00A054  E301               	bnc	u11281
 22406  00A056  8018               	bsf	(??__tdiv_to_l_+1)^0,0,c
 22407  00A058                     u11281:
 22408  00A058  5017               	movf	??__tdiv_to_l_^0,w,c
 22409  00A05A  6E1F               	movwf	__tdiv_to_l_@exp1^0,c
 22410  00A05C  501F               	movf	__tdiv_to_l_@exp1^0,w,c
 22411  00A05E  A4D8               	btfss	status,2,c
 22412  00A060  EF34  F050         	goto	u11291
 22413  00A064  EF36  F050         	goto	u11290
 22414  00A068                     u11291:
 22415  00A068  EF40  F050         	goto	l11674
 22416  00A06C                     u11290:
 22417  00A06C                     l11670:
 22418  00A06C  0E00               	movlw	0
 22419  00A06E  6E0F               	movwf	?__tdiv_to_l_^0,c
 22420  00A070  0E00               	movlw	0
 22421  00A072  6E10               	movwf	(?__tdiv_to_l_+1)^0,c
 22422  00A074  0E00               	movlw	0
 22423  00A076  6E11               	movwf	(?__tdiv_to_l_+2)^0,c
 22424  00A078  0E00               	movlw	0
 22425  00A07A  6E12               	movwf	(?__tdiv_to_l_+3)^0,c
 22426  00A07C  EFCE  F050         	goto	l2898
 22427  00A080                     l11674:
 22428  00A080  C015  F017         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 22429  00A084  6A18               	clrf	(??__tdiv_to_l_+1)^0,c
 22430  00A086  6A19               	clrf	(??__tdiv_to_l_+2)^0,c
 22431  00A088  3414               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
 22432  00A08A  3617               	rlcf	??__tdiv_to_l_^0,f,c
 22433  00A08C  E301               	bnc	u11301
 22434  00A08E  8018               	bsf	(??__tdiv_to_l_+1)^0,0,c
 22435  00A090                     u11301:
 22436  00A090  5017               	movf	??__tdiv_to_l_^0,w,c
 22437  00A092  6E1E               	movwf	__tdiv_to_l_@cntr^0,c
 22438  00A094  501E               	movf	__tdiv_to_l_@cntr^0,w,c
 22439  00A096  A4D8               	btfss	status,2,c
 22440  00A098  EF50  F050         	goto	u11311
 22441  00A09C  EF52  F050         	goto	u11310
 22442  00A0A0                     u11311:
 22443  00A0A0  EF54  F050         	goto	l11680
 22444  00A0A4                     u11310:
 22445  00A0A4  EF36  F050         	goto	l11670
 22446  00A0A8                     l11680:
 22447  00A0A8  8E10               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
 22448  00A0AA  0EFF               	movlw	255
 22449  00A0AC  160F               	andwf	__tdiv_to_l_@f1^0,f,c
 22450  00A0AE  0EFF               	movlw	255
 22451  00A0B0  1610               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
 22452  00A0B2  0E00               	movlw	0
 22453  00A0B4  1611               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
 22454  00A0B6  8E14               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
 22455  00A0B8  0EFF               	movlw	255
 22456  00A0BA  1613               	andwf	__tdiv_to_l_@f2^0,f,c
 22457  00A0BC  0EFF               	movlw	255
 22458  00A0BE  1614               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
 22459  00A0C0  0E00               	movlw	0
 22460  00A0C2  1615               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
 22461  00A0C4  0E00               	movlw	0
 22462  00A0C6  6E1A               	movwf	__tdiv_to_l_@quot^0,c
 22463  00A0C8  0E00               	movlw	0
 22464  00A0CA  6E1B               	movwf	(__tdiv_to_l_@quot+1)^0,c
 22465  00A0CC  0E00               	movlw	0
 22466  00A0CE  6E1C               	movwf	(__tdiv_to_l_@quot+2)^0,c
 22467  00A0D0  0E00               	movlw	0
 22468  00A0D2  6E1D               	movwf	(__tdiv_to_l_@quot+3)^0,c
 22469  00A0D4  0E7F               	movlw	127
 22470  00A0D6  5E1F               	subwf	__tdiv_to_l_@exp1^0,f,c
 22471  00A0D8  501E               	movf	__tdiv_to_l_@cntr^0,w,c
 22472  00A0DA  0F98               	addlw	152
 22473  00A0DC  5E1F               	subwf	__tdiv_to_l_@exp1^0,f,c
 22474  00A0DE  0E18               	movlw	24
 22475  00A0E0  6E1E               	movwf	__tdiv_to_l_@cntr^0,c
 22476  00A0E2                     l2900:
 22477  00A0E2  90D8               	bcf	status,0,c
 22478  00A0E4  361A               	rlcf	__tdiv_to_l_@quot^0,f,c
 22479  00A0E6  361B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
 22480  00A0E8  361C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
 22481  00A0EA  361D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
 22482  00A0EC  5013               	movf	__tdiv_to_l_@f2^0,w,c
 22483  00A0EE  5C0F               	subwf	__tdiv_to_l_@f1^0,w,c
 22484  00A0F0  5014               	movf	(__tdiv_to_l_@f2+1)^0,w,c
 22485  00A0F2  5810               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
 22486  00A0F4  5015               	movf	(__tdiv_to_l_@f2+2)^0,w,c
 22487  00A0F6  5811               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
 22488  00A0F8  A0D8               	btfss	status,0,c
 22489  00A0FA  EF81  F050         	goto	u11321
 22490  00A0FE  EF83  F050         	goto	u11320
 22491  00A102                     u11321:
 22492  00A102  EF8A  F050         	goto	l2901
 22493  00A106                     u11320:
 22494  00A106  5013               	movf	__tdiv_to_l_@f2^0,w,c
 22495  00A108  5E0F               	subwf	__tdiv_to_l_@f1^0,f,c
 22496  00A10A  5014               	movf	(__tdiv_to_l_@f2+1)^0,w,c
 22497  00A10C  5A10               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
 22498  00A10E  5015               	movf	(__tdiv_to_l_@f2+2)^0,w,c
 22499  00A110  5A11               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
 22500  00A112  801A               	bsf	__tdiv_to_l_@quot^0,0,c
 22501  00A114                     l2901:
 22502  00A114  90D8               	bcf	status,0,c
 22503  00A116  360F               	rlcf	__tdiv_to_l_@f1^0,f,c
 22504  00A118  3610               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
 22505  00A11A  3611               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
 22506  00A11C  2E1E               	decfsz	__tdiv_to_l_@cntr^0,f,c
 22507  00A11E  EF71  F050         	goto	l2900
 22508  00A122  BE1F               	btfsc	__tdiv_to_l_@exp1^0,7,c
 22509  00A124  EF98  F050         	goto	u11330
 22510  00A128  EF96  F050         	goto	u11331
 22511  00A12C                     u11331:
 22512  00A12C  EFAE  F050         	goto	l11714
 22513  00A130                     u11330:
 22514  00A130  501F               	movf	__tdiv_to_l_@exp1^0,w,c
 22515  00A132  0A80               	xorlw	128
 22516  00A134  0F97               	addlw	151
 22517  00A136  B0D8               	btfsc	status,0,c
 22518  00A138  EFA0  F050         	goto	u11341
 22519  00A13C  EFA2  F050         	goto	u11340
 22520  00A140                     u11341:
 22521  00A140  EFA4  F050         	goto	l11710
 22522  00A144                     u11340:
 22523  00A144  EF36  F050         	goto	l11670
 22524  00A148                     l11710:
 22525  00A148  90D8               	bcf	status,0,c
 22526  00A14A  321D               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
 22527  00A14C  321C               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
 22528  00A14E  321B               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
 22529  00A150  321A               	rrcf	__tdiv_to_l_@quot^0,f,c
 22530  00A152  3E1F               	incfsz	__tdiv_to_l_@exp1^0,f,c
 22531  00A154  EFA4  F050         	goto	l11710
 22532  00A158  EFC6  F050         	goto	l2907
 22533  00A15C                     l11714:
 22534  00A15C  0E17               	movlw	23
 22535  00A15E  641F               	cpfsgt	__tdiv_to_l_@exp1^0,c
 22536  00A160  EFB4  F050         	goto	u11351
 22537  00A164  EFB6  F050         	goto	u11350
 22538  00A168                     u11351:
 22539  00A168  EFBE  F050         	goto	l11722
 22540  00A16C                     u11350:
 22541  00A16C  EF36  F050         	goto	l11670
 22542  00A170                     l11720:
 22543  00A170  90D8               	bcf	status,0,c
 22544  00A172  361A               	rlcf	__tdiv_to_l_@quot^0,f,c
 22545  00A174  361B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
 22546  00A176  361C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
 22547  00A178  361D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
 22548  00A17A  061F               	decf	__tdiv_to_l_@exp1^0,f,c
 22549  00A17C                     l11722:
 22550  00A17C  501F               	movf	__tdiv_to_l_@exp1^0,w,c
 22551  00A17E  A4D8               	btfss	status,2,c
 22552  00A180  EFC4  F050         	goto	u11361
 22553  00A184  EFC6  F050         	goto	u11360
 22554  00A188                     u11361:
 22555  00A188  EFB8  F050         	goto	l11720
 22556  00A18C                     u11360:
 22557  00A18C                     l2907:
 22558  00A18C  C01A  F00F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 22559  00A190  C01B  F010         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 22560  00A194  C01C  F011         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 22561  00A198  C01D  F012         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 22562  00A19C                     l2898:
 22563  00A19C  0012               	return		;funcret
 22564  00A19E                     __end_of__tdiv_to_l_:
 22565                           	callstack 0
 22566                           
 22567 ;; *************** function __div_to_l_ *****************
 22568 ;; Defined at:
 22569 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
 22570 ;; Parameters:    Size  Location     Type
 22571 ;;  f1              4   14[COMRAM] unsigned long 
 22572 ;;  f2              4   18[COMRAM] unsigned long 
 22573 ;; Auto vars:     Size  Location     Type
 22574 ;;  quot            4   22[COMRAM] unsigned long 
 22575 ;;  exp1            1   27[COMRAM] unsigned char 
 22576 ;;  cntr            1   26[COMRAM] unsigned char 
 22577 ;; Return value:  Size  Location     Type
 22578 ;;                  4   14[COMRAM] unsigned long 
 22579 ;; Registers used:
 22580 ;;		wreg, status,2, status,0
 22581 ;; Tracked objects:
 22582 ;;		On entry : 0/0
 22583 ;;		On exit  : 0/0
 22584 ;;		Unchanged: 0/0
 22585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22586 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22587 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22589 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22590 ;;Total ram usage:       14 bytes
 22591 ;; Hardware stack levels used: 1
 22592 ;; Hardware stack levels required when called: 3
 22593 ;; This function calls:
 22594 ;;		Nothing
 22595 ;; This function is called by:
 22596 ;;		_sprintf
 22597 ;; This function uses a non-reentrant model
 22598 ;;
 22599                           
 22600                           	psect	text94
 22601  00A444                     __ptext94:
 22602                           	callstack 0
 22603  00A444                     __div_to_l_:
 22604                           	callstack 24
 22605  00A444  3411               	rlcf	(__div_to_l_@f1+2)^0,w,c
 22606  00A446  3412               	rlcf	(__div_to_l_@f1+3)^0,w,c
 22607  00A448  6E1C               	movwf	__div_to_l_@exp1^0,c
 22608  00A44A  501C               	movf	__div_to_l_@exp1^0,w,c
 22609  00A44C  A4D8               	btfss	status,2,c
 22610  00A44E  EF2B  F052         	goto	u11371
 22611  00A452  EF2D  F052         	goto	u11370
 22612  00A456                     u11371:
 22613  00A456  EF37  F052         	goto	l11730
 22614  00A45A                     u11370:
 22615  00A45A                     l11726:
 22616  00A45A  0E00               	movlw	0
 22617  00A45C  6E0F               	movwf	?__div_to_l_^0,c
 22618  00A45E  0E00               	movlw	0
 22619  00A460  6E10               	movwf	(?__div_to_l_+1)^0,c
 22620  00A462  0E00               	movlw	0
 22621  00A464  6E11               	movwf	(?__div_to_l_+2)^0,c
 22622  00A466  0E00               	movlw	0
 22623  00A468  6E12               	movwf	(?__div_to_l_+3)^0,c
 22624  00A46A  EFC7  F052         	goto	l2789
 22625  00A46E                     l11730:
 22626  00A46E  3415               	rlcf	(__div_to_l_@f2+2)^0,w,c
 22627  00A470  3416               	rlcf	(__div_to_l_@f2+3)^0,w,c
 22628  00A472  6E1B               	movwf	__div_to_l_@cntr^0,c
 22629  00A474  501B               	movf	__div_to_l_@cntr^0,w,c
 22630  00A476  A4D8               	btfss	status,2,c
 22631  00A478  EF40  F052         	goto	u11381
 22632  00A47C  EF42  F052         	goto	u11380
 22633  00A480                     u11381:
 22634  00A480  EF44  F052         	goto	l11736
 22635  00A484                     u11380:
 22636  00A484  EF2D  F052         	goto	l11726
 22637  00A488                     l11736:
 22638  00A488  8E11               	bsf	(__div_to_l_@f1+2)^0,7,c
 22639  00A48A  0EFF               	movlw	255
 22640  00A48C  160F               	andwf	__div_to_l_@f1^0,f,c
 22641  00A48E  0EFF               	movlw	255
 22642  00A490  1610               	andwf	(__div_to_l_@f1+1)^0,f,c
 22643  00A492  0EFF               	movlw	255
 22644  00A494  1611               	andwf	(__div_to_l_@f1+2)^0,f,c
 22645  00A496  0E00               	movlw	0
 22646  00A498  1612               	andwf	(__div_to_l_@f1+3)^0,f,c
 22647  00A49A  8E15               	bsf	(__div_to_l_@f2+2)^0,7,c
 22648  00A49C  0EFF               	movlw	255
 22649  00A49E  1613               	andwf	__div_to_l_@f2^0,f,c
 22650  00A4A0  0EFF               	movlw	255
 22651  00A4A2  1614               	andwf	(__div_to_l_@f2+1)^0,f,c
 22652  00A4A4  0EFF               	movlw	255
 22653  00A4A6  1615               	andwf	(__div_to_l_@f2+2)^0,f,c
 22654  00A4A8  0E00               	movlw	0
 22655  00A4AA  1616               	andwf	(__div_to_l_@f2+3)^0,f,c
 22656  00A4AC  0E00               	movlw	0
 22657  00A4AE  6E17               	movwf	__div_to_l_@quot^0,c
 22658  00A4B0  0E00               	movlw	0
 22659  00A4B2  6E18               	movwf	(__div_to_l_@quot+1)^0,c
 22660  00A4B4  0E00               	movlw	0
 22661  00A4B6  6E19               	movwf	(__div_to_l_@quot+2)^0,c
 22662  00A4B8  0E00               	movlw	0
 22663  00A4BA  6E1A               	movwf	(__div_to_l_@quot+3)^0,c
 22664  00A4BC  0E7F               	movlw	127
 22665  00A4BE  5E1C               	subwf	__div_to_l_@exp1^0,f,c
 22666  00A4C0  501B               	movf	__div_to_l_@cntr^0,w,c
 22667  00A4C2  0FA0               	addlw	160
 22668  00A4C4  5E1C               	subwf	__div_to_l_@exp1^0,f,c
 22669  00A4C6  0E20               	movlw	32
 22670  00A4C8  6E1B               	movwf	__div_to_l_@cntr^0,c
 22671  00A4CA                     l11750:
 22672  00A4CA  90D8               	bcf	status,0,c
 22673  00A4CC  3617               	rlcf	__div_to_l_@quot^0,f,c
 22674  00A4CE  3618               	rlcf	(__div_to_l_@quot+1)^0,f,c
 22675  00A4D0  3619               	rlcf	(__div_to_l_@quot+2)^0,f,c
 22676  00A4D2  361A               	rlcf	(__div_to_l_@quot+3)^0,f,c
 22677  00A4D4  5013               	movf	__div_to_l_@f2^0,w,c
 22678  00A4D6  5C0F               	subwf	__div_to_l_@f1^0,w,c
 22679  00A4D8  5014               	movf	(__div_to_l_@f2+1)^0,w,c
 22680  00A4DA  5810               	subwfb	(__div_to_l_@f1+1)^0,w,c
 22681  00A4DC  5015               	movf	(__div_to_l_@f2+2)^0,w,c
 22682  00A4DE  5811               	subwfb	(__div_to_l_@f1+2)^0,w,c
 22683  00A4E0  5016               	movf	(__div_to_l_@f2+3)^0,w,c
 22684  00A4E2  5812               	subwfb	(__div_to_l_@f1+3)^0,w,c
 22685  00A4E4  A0D8               	btfss	status,0,c
 22686  00A4E6  EF77  F052         	goto	u11391
 22687  00A4EA  EF79  F052         	goto	u11390
 22688  00A4EE                     u11391:
 22689  00A4EE  EF82  F052         	goto	l11758
 22690  00A4F2                     u11390:
 22691  00A4F2  5013               	movf	__div_to_l_@f2^0,w,c
 22692  00A4F4  5E0F               	subwf	__div_to_l_@f1^0,f,c
 22693  00A4F6  5014               	movf	(__div_to_l_@f2+1)^0,w,c
 22694  00A4F8  5A10               	subwfb	(__div_to_l_@f1+1)^0,f,c
 22695  00A4FA  5015               	movf	(__div_to_l_@f2+2)^0,w,c
 22696  00A4FC  5A11               	subwfb	(__div_to_l_@f1+2)^0,f,c
 22697  00A4FE  5016               	movf	(__div_to_l_@f2+3)^0,w,c
 22698  00A500  5A12               	subwfb	(__div_to_l_@f1+3)^0,f,c
 22699  00A502  8017               	bsf	__div_to_l_@quot^0,0,c
 22700  00A504                     l11758:
 22701  00A504  90D8               	bcf	status,0,c
 22702  00A506  360F               	rlcf	__div_to_l_@f1^0,f,c
 22703  00A508  3610               	rlcf	(__div_to_l_@f1+1)^0,f,c
 22704  00A50A  3611               	rlcf	(__div_to_l_@f1+2)^0,f,c
 22705  00A50C  3612               	rlcf	(__div_to_l_@f1+3)^0,f,c
 22706  00A50E  2E1B               	decfsz	__div_to_l_@cntr^0,f,c
 22707  00A510  EF65  F052         	goto	l11750
 22708  00A514  BE1C               	btfsc	__div_to_l_@exp1^0,7,c
 22709  00A516  EF91  F052         	goto	u11400
 22710  00A51A  EF8F  F052         	goto	u11401
 22711  00A51E                     u11401:
 22712  00A51E  EFA7  F052         	goto	l11774
 22713  00A522                     u11400:
 22714  00A522  501C               	movf	__div_to_l_@exp1^0,w,c
 22715  00A524  0A80               	xorlw	128
 22716  00A526  0F9F               	addlw	159
 22717  00A528  B0D8               	btfsc	status,0,c
 22718  00A52A  EF99  F052         	goto	u11411
 22719  00A52E  EF9B  F052         	goto	u11410
 22720  00A532                     u11411:
 22721  00A532  EF9D  F052         	goto	l11770
 22722  00A536                     u11410:
 22723  00A536  EF2D  F052         	goto	l11726
 22724  00A53A                     l11770:
 22725  00A53A  90D8               	bcf	status,0,c
 22726  00A53C  321A               	rrcf	(__div_to_l_@quot+3)^0,f,c
 22727  00A53E  3219               	rrcf	(__div_to_l_@quot+2)^0,f,c
 22728  00A540  3218               	rrcf	(__div_to_l_@quot+1)^0,f,c
 22729  00A542  3217               	rrcf	__div_to_l_@quot^0,f,c
 22730  00A544  3E1C               	incfsz	__div_to_l_@exp1^0,f,c
 22731  00A546  EF9D  F052         	goto	l11770
 22732  00A54A  EFBF  F052         	goto	l2798
 22733  00A54E                     l11774:
 22734  00A54E  0E1F               	movlw	31
 22735  00A550  641C               	cpfsgt	__div_to_l_@exp1^0,c
 22736  00A552  EFAD  F052         	goto	u11421
 22737  00A556  EFAF  F052         	goto	u11420
 22738  00A55A                     u11421:
 22739  00A55A  EFB7  F052         	goto	l11782
 22740  00A55E                     u11420:
 22741  00A55E  EF2D  F052         	goto	l11726
 22742  00A562                     l11780:
 22743  00A562  90D8               	bcf	status,0,c
 22744  00A564  3617               	rlcf	__div_to_l_@quot^0,f,c
 22745  00A566  3618               	rlcf	(__div_to_l_@quot+1)^0,f,c
 22746  00A568  3619               	rlcf	(__div_to_l_@quot+2)^0,f,c
 22747  00A56A  361A               	rlcf	(__div_to_l_@quot+3)^0,f,c
 22748  00A56C  061C               	decf	__div_to_l_@exp1^0,f,c
 22749  00A56E                     l11782:
 22750  00A56E  501C               	movf	__div_to_l_@exp1^0,w,c
 22751  00A570  A4D8               	btfss	status,2,c
 22752  00A572  EFBD  F052         	goto	u11431
 22753  00A576  EFBF  F052         	goto	u11430
 22754  00A57A                     u11431:
 22755  00A57A  EFB1  F052         	goto	l11780
 22756  00A57E                     u11430:
 22757  00A57E                     l2798:
 22758  00A57E  C017  F00F         	movff	__div_to_l_@quot,?__div_to_l_
 22759  00A582  C018  F010         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 22760  00A586  C019  F011         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 22761  00A58A  C01A  F012         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 22762  00A58E                     l2789:
 22763  00A58E  0012               	return		;funcret
 22764  00A590                     __end_of__div_to_l_:
 22765                           	callstack 0
 22766                           
 22767 ;; *************** function ___llmod *****************
 22768 ;; Defined at:
 22769 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
 22770 ;; Parameters:    Size  Location     Type
 22771 ;;  dividend        4   14[COMRAM] unsigned long 
 22772 ;;  divisor         4   18[COMRAM] unsigned long 
 22773 ;; Auto vars:     Size  Location     Type
 22774 ;;  counter         1   22[COMRAM] unsigned char 
 22775 ;; Return value:  Size  Location     Type
 22776 ;;                  4   14[COMRAM] unsigned long 
 22777 ;; Registers used:
 22778 ;;		wreg, status,2, status,0
 22779 ;; Tracked objects:
 22780 ;;		On entry : 0/0
 22781 ;;		On exit  : 0/0
 22782 ;;		Unchanged: 0/0
 22783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22784 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22787 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22788 ;;Total ram usage:        9 bytes
 22789 ;; Hardware stack levels used: 1
 22790 ;; Hardware stack levels required when called: 3
 22791 ;; This function calls:
 22792 ;;		Nothing
 22793 ;; This function is called by:
 22794 ;;		_sprintf
 22795 ;; This function uses a non-reentrant model
 22796 ;;
 22797                           
 22798                           	psect	text95
 22799  00D5BC                     __ptext95:
 22800                           	callstack 0
 22801  00D5BC                     ___llmod:
 22802                           	callstack 24
 22803  00D5BC  5013               	movf	___llmod@divisor^0,w,c
 22804  00D5BE  1014               	iorwf	(___llmod@divisor+1)^0,w,c
 22805  00D5C0  1015               	iorwf	(___llmod@divisor+2)^0,w,c
 22806  00D5C2  1016               	iorwf	(___llmod@divisor+3)^0,w,c
 22807  00D5C4  B4D8               	btfsc	status,2,c
 22808  00D5C6  EFE7  F06A         	goto	u11471
 22809  00D5CA  EFE9  F06A         	goto	u11470
 22810  00D5CE                     u11471:
 22811  00D5CE  EF19  F06B         	goto	l2977
 22812  00D5D2                     u11470:
 22813  00D5D2  0E01               	movlw	1
 22814  00D5D4  6E17               	movwf	___llmod@counter^0,c
 22815  00D5D6  EFF3  F06A         	goto	l11812
 22816  00D5DA                     l11810:
 22817  00D5DA  90D8               	bcf	status,0,c
 22818  00D5DC  3613               	rlcf	___llmod@divisor^0,f,c
 22819  00D5DE  3614               	rlcf	(___llmod@divisor+1)^0,f,c
 22820  00D5E0  3615               	rlcf	(___llmod@divisor+2)^0,f,c
 22821  00D5E2  3616               	rlcf	(___llmod@divisor+3)^0,f,c
 22822  00D5E4  2A17               	incf	___llmod@counter^0,f,c
 22823  00D5E6                     l11812:
 22824  00D5E6  AE16               	btfss	(___llmod@divisor+3)^0,7,c
 22825  00D5E8  EFF8  F06A         	goto	u11481
 22826  00D5EC  EFFA  F06A         	goto	u11480
 22827  00D5F0                     u11481:
 22828  00D5F0  EFED  F06A         	goto	l11810
 22829  00D5F4                     u11480:
 22830  00D5F4                     l11814:
 22831  00D5F4  5013               	movf	___llmod@divisor^0,w,c
 22832  00D5F6  5C0F               	subwf	___llmod@dividend^0,w,c
 22833  00D5F8  5014               	movf	(___llmod@divisor+1)^0,w,c
 22834  00D5FA  5810               	subwfb	(___llmod@dividend+1)^0,w,c
 22835  00D5FC  5015               	movf	(___llmod@divisor+2)^0,w,c
 22836  00D5FE  5811               	subwfb	(___llmod@dividend+2)^0,w,c
 22837  00D600  5016               	movf	(___llmod@divisor+3)^0,w,c
 22838  00D602  5812               	subwfb	(___llmod@dividend+3)^0,w,c
 22839  00D604  A0D8               	btfss	status,0,c
 22840  00D606  EF07  F06B         	goto	u11491
 22841  00D60A  EF09  F06B         	goto	u11490
 22842  00D60E                     u11491:
 22843  00D60E  EF11  F06B         	goto	l11818
 22844  00D612                     u11490:
 22845  00D612  5013               	movf	___llmod@divisor^0,w,c
 22846  00D614  5E0F               	subwf	___llmod@dividend^0,f,c
 22847  00D616  5014               	movf	(___llmod@divisor+1)^0,w,c
 22848  00D618  5A10               	subwfb	(___llmod@dividend+1)^0,f,c
 22849  00D61A  5015               	movf	(___llmod@divisor+2)^0,w,c
 22850  00D61C  5A11               	subwfb	(___llmod@dividend+2)^0,f,c
 22851  00D61E  5016               	movf	(___llmod@divisor+3)^0,w,c
 22852  00D620  5A12               	subwfb	(___llmod@dividend+3)^0,f,c
 22853  00D622                     l11818:
 22854  00D622  90D8               	bcf	status,0,c
 22855  00D624  3216               	rrcf	(___llmod@divisor+3)^0,f,c
 22856  00D626  3215               	rrcf	(___llmod@divisor+2)^0,f,c
 22857  00D628  3214               	rrcf	(___llmod@divisor+1)^0,f,c
 22858  00D62A  3213               	rrcf	___llmod@divisor^0,f,c
 22859  00D62C  2E17               	decfsz	___llmod@counter^0,f,c
 22860  00D62E  EFFA  F06A         	goto	l11814
 22861  00D632                     l2977:
 22862  00D632  C00F  F00F         	movff	___llmod@dividend,?___llmod
 22863  00D636  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
 22864  00D63A  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
 22865  00D63E  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
 22866  00D642  0012               	return		;funcret
 22867  00D644                     __end_of___llmod:
 22868                           	callstack 0
 22869                           
 22870 ;; *************** function ___flge *****************
 22871 ;; Defined at:
 22872 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
 22873 ;; Parameters:    Size  Location     Type
 22874 ;;  ff1             4   14[COMRAM] unsigned long 
 22875 ;;  ff2             4   18[COMRAM] unsigned long 
 22876 ;; Auto vars:     Size  Location     Type
 22877 ;;		None
 22878 ;; Return value:  Size  Location     Type
 22879 ;;		None               void
 22880 ;; Registers used:
 22881 ;;		wreg, status,2, status,0
 22882 ;; Tracked objects:
 22883 ;;		On entry : 0/0
 22884 ;;		On exit  : 0/0
 22885 ;;		Unchanged: 0/0
 22886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22887 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22889 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22890 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22891 ;;Total ram usage:       12 bytes
 22892 ;; Hardware stack levels used: 1
 22893 ;; Hardware stack levels required when called: 3
 22894 ;; This function calls:
 22895 ;;		Nothing
 22896 ;; This function is called by:
 22897 ;;		_gasSensor_temperature_cmp_coefficient
 22898 ;;		_GasSensor_Zerofilter
 22899 ;;		_sprintf
 22900 ;;		_floor
 22901 ;;		_pow
 22902 ;;		_exp
 22903 ;;		_sht3x_write_alert_limits
 22904 ;; This function uses a non-reentrant model
 22905 ;;
 22906                           
 22907                           	psect	text96
 22908  00B7CE                     __ptext96:
 22909                           	callstack 0
 22910  00B7CE                     ___flge:
 22911                           	callstack 21
 22912  00B7CE  0E00               	movlw	0
 22913  00B7D0  140F               	andwf	___flge@ff1^0,w,c
 22914  00B7D2  6E17               	movwf	??___flge^0,c
 22915  00B7D4  0E00               	movlw	0
 22916  00B7D6  1410               	andwf	(___flge@ff1+1)^0,w,c
 22917  00B7D8  6E18               	movwf	(??___flge+1)^0,c
 22918  00B7DA  0E80               	movlw	128
 22919  00B7DC  1411               	andwf	(___flge@ff1+2)^0,w,c
 22920  00B7DE  6E19               	movwf	(??___flge+2)^0,c
 22921  00B7E0  0E7F               	movlw	127
 22922  00B7E2  1412               	andwf	(___flge@ff1+3)^0,w,c
 22923  00B7E4  6E1A               	movwf	(??___flge+3)^0,c
 22924  00B7E6  5017               	movf	??___flge^0,w,c
 22925  00B7E8  1018               	iorwf	(??___flge+1)^0,w,c
 22926  00B7EA  1019               	iorwf	(??___flge+2)^0,w,c
 22927  00B7EC  101A               	iorwf	(??___flge+3)^0,w,c
 22928  00B7EE  A4D8               	btfss	status,2,c
 22929  00B7F0  EFFC  F05B         	goto	u17551
 22930  00B7F4  EFFE  F05B         	goto	u17550
 22931  00B7F8                     u17551:
 22932  00B7F8  EF06  F05C         	goto	l16556
 22933  00B7FC                     u17550:
 22934  00B7FC  0E00               	movlw	0
 22935  00B7FE  6E0F               	movwf	___flge@ff1^0,c
 22936  00B800  0E00               	movlw	0
 22937  00B802  6E10               	movwf	(___flge@ff1+1)^0,c
 22938  00B804  0E00               	movlw	0
 22939  00B806  6E11               	movwf	(___flge@ff1+2)^0,c
 22940  00B808  0E00               	movlw	0
 22941  00B80A  6E12               	movwf	(___flge@ff1+3)^0,c
 22942  00B80C                     l16556:
 22943  00B80C  0E00               	movlw	0
 22944  00B80E  1413               	andwf	___flge@ff2^0,w,c
 22945  00B810  6E17               	movwf	??___flge^0,c
 22946  00B812  0E00               	movlw	0
 22947  00B814  1414               	andwf	(___flge@ff2+1)^0,w,c
 22948  00B816  6E18               	movwf	(??___flge+1)^0,c
 22949  00B818  0E80               	movlw	128
 22950  00B81A  1415               	andwf	(___flge@ff2+2)^0,w,c
 22951  00B81C  6E19               	movwf	(??___flge+2)^0,c
 22952  00B81E  0E7F               	movlw	127
 22953  00B820  1416               	andwf	(___flge@ff2+3)^0,w,c
 22954  00B822  6E1A               	movwf	(??___flge+3)^0,c
 22955  00B824  5017               	movf	??___flge^0,w,c
 22956  00B826  1018               	iorwf	(??___flge+1)^0,w,c
 22957  00B828  1019               	iorwf	(??___flge+2)^0,w,c
 22958  00B82A  101A               	iorwf	(??___flge+3)^0,w,c
 22959  00B82C  A4D8               	btfss	status,2,c
 22960  00B82E  EF1B  F05C         	goto	u17561
 22961  00B832  EF1D  F05C         	goto	u17560
 22962  00B836                     u17561:
 22963  00B836  EF25  F05C         	goto	l16560
 22964  00B83A                     u17560:
 22965  00B83A  0E00               	movlw	0
 22966  00B83C  6E13               	movwf	___flge@ff2^0,c
 22967  00B83E  0E00               	movlw	0
 22968  00B840  6E14               	movwf	(___flge@ff2+1)^0,c
 22969  00B842  0E00               	movlw	0
 22970  00B844  6E15               	movwf	(___flge@ff2+2)^0,c
 22971  00B846  0E00               	movlw	0
 22972  00B848  6E16               	movwf	(___flge@ff2+3)^0,c
 22973  00B84A                     l16560:
 22974  00B84A  AE12               	btfss	(___flge@ff1+3)^0,7,c
 22975  00B84C  EF2A  F05C         	goto	u17571
 22976  00B850  EF2C  F05C         	goto	u17570
 22977  00B854                     u17571:
 22978  00B854  EF35  F05C         	goto	l16564
 22979  00B858                     u17570:
 22980  00B858  6C0F               	negf	___flge@ff1^0,c
 22981  00B85A  1E10               	comf	(___flge@ff1+1)^0,f,c
 22982  00B85C  B0D8               	btfsc	status,0,c
 22983  00B85E  2A10               	incf	(___flge@ff1+1)^0,f,c
 22984  00B860  1E11               	comf	(___flge@ff1+2)^0,f,c
 22985  00B862  B0D8               	btfsc	status,0,c
 22986  00B864  2A11               	incf	(___flge@ff1+2)^0,f,c
 22987  00B866  0E80               	movlw	128
 22988  00B868  5612               	subfwb	(___flge@ff1+3)^0,f,c
 22989  00B86A                     l16564:
 22990  00B86A  AE16               	btfss	(___flge@ff2+3)^0,7,c
 22991  00B86C  EF3A  F05C         	goto	u17581
 22992  00B870  EF3C  F05C         	goto	u17580
 22993  00B874                     u17581:
 22994  00B874  EF45  F05C         	goto	l2813
 22995  00B878                     u17580:
 22996  00B878  6C13               	negf	___flge@ff2^0,c
 22997  00B87A  1E14               	comf	(___flge@ff2+1)^0,f,c
 22998  00B87C  B0D8               	btfsc	status,0,c
 22999  00B87E  2A14               	incf	(___flge@ff2+1)^0,f,c
 23000  00B880  1E15               	comf	(___flge@ff2+2)^0,f,c
 23001  00B882  B0D8               	btfsc	status,0,c
 23002  00B884  2A15               	incf	(___flge@ff2+2)^0,f,c
 23003  00B886  0E80               	movlw	128
 23004  00B888  5616               	subfwb	(___flge@ff2+3)^0,f,c
 23005  00B88A                     l2813:
 23006  00B88A  0E00               	movlw	0
 23007  00B88C  1A0F               	xorwf	___flge@ff1^0,f,c
 23008  00B88E  0E00               	movlw	0
 23009  00B890  1A10               	xorwf	(___flge@ff1+1)^0,f,c
 23010  00B892  0E00               	movlw	0
 23011  00B894  1A11               	xorwf	(___flge@ff1+2)^0,f,c
 23012  00B896  0E80               	movlw	128
 23013  00B898  1A12               	xorwf	(___flge@ff1+3)^0,f,c
 23014  00B89A  0E00               	movlw	0
 23015  00B89C  1A13               	xorwf	___flge@ff2^0,f,c
 23016  00B89E  0E00               	movlw	0
 23017  00B8A0  1A14               	xorwf	(___flge@ff2+1)^0,f,c
 23018  00B8A2  0E00               	movlw	0
 23019  00B8A4  1A15               	xorwf	(___flge@ff2+2)^0,f,c
 23020  00B8A6  0E80               	movlw	128
 23021  00B8A8  1A16               	xorwf	(___flge@ff2+3)^0,f,c
 23022  00B8AA  5013               	movf	___flge@ff2^0,w,c
 23023  00B8AC  5C0F               	subwf	___flge@ff1^0,w,c
 23024  00B8AE  5014               	movf	(___flge@ff2+1)^0,w,c
 23025  00B8B0  5810               	subwfb	(___flge@ff1+1)^0,w,c
 23026  00B8B2  5015               	movf	(___flge@ff2+2)^0,w,c
 23027  00B8B4  5811               	subwfb	(___flge@ff1+2)^0,w,c
 23028  00B8B6  5016               	movf	(___flge@ff2+3)^0,w,c
 23029  00B8B8  5812               	subwfb	(___flge@ff1+3)^0,w,c
 23030  00B8BA  B0D8               	btfsc	status,0,c
 23031  00B8BC  EF62  F05C         	goto	u17591
 23032  00B8C0  EF64  F05C         	goto	u17590
 23033  00B8C4                     u17591:
 23034  00B8C4  EF67  F05C         	goto	l16570
 23035  00B8C8                     u17590:
 23036  00B8C8  90D8               	bcf	status,0,c
 23037  00B8CA  EF68  F05C         	goto	l2814
 23038  00B8CE                     l16570:
 23039  00B8CE  80D8               	bsf	status,0,c
 23040  00B8D0                     l2814:
 23041  00B8D0  0012               	return		;funcret
 23042  00B8D2                     __end_of___flge:
 23043                           	callstack 0
 23044                           
 23045 ;; *************** function ___fleq *****************
 23046 ;; Defined at:
 23047 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
 23048 ;; Parameters:    Size  Location     Type
 23049 ;;  ff1             4   52[COMRAM] unsigned long 
 23050 ;;  ff2             4   56[COMRAM] unsigned long 
 23051 ;; Auto vars:     Size  Location     Type
 23052 ;;		None
 23053 ;; Return value:  Size  Location     Type
 23054 ;;		None               void
 23055 ;; Registers used:
 23056 ;;		wreg, status,2, status,0
 23057 ;; Tracked objects:
 23058 ;;		On entry : 0/0
 23059 ;;		On exit  : 0/0
 23060 ;;		Unchanged: 0/0
 23061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23062 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23064 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23065 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23066 ;;Total ram usage:       12 bytes
 23067 ;; Hardware stack levels used: 1
 23068 ;; Hardware stack levels required when called: 3
 23069 ;; This function calls:
 23070 ;;		Nothing
 23071 ;; This function is called by:
 23072 ;;		_update_command
 23073 ;;		_build_response
 23074 ;;		_sprintf
 23075 ;;		_frexp
 23076 ;;		_ldexp
 23077 ;;		_pow
 23078 ;;		_exp
 23079 ;;		_log
 23080 ;; This function uses a non-reentrant model
 23081 ;;
 23082                           
 23083                           	psect	text97
 23084  00CF28                     __ptext97:
 23085                           	callstack 0
 23086  00CF28                     ___fleq:
 23087                           	callstack 21
 23088  00CF28  0E00               	movlw	0
 23089  00CF2A  1435               	andwf	___fleq@ff1^0,w,c
 23090  00CF2C  6E3D               	movwf	??___fleq^0,c
 23091  00CF2E  0E00               	movlw	0
 23092  00CF30  1436               	andwf	(___fleq@ff1+1)^0,w,c
 23093  00CF32  6E3E               	movwf	(??___fleq+1)^0,c
 23094  00CF34  0E80               	movlw	128
 23095  00CF36  1437               	andwf	(___fleq@ff1+2)^0,w,c
 23096  00CF38  6E3F               	movwf	(??___fleq+2)^0,c
 23097  00CF3A  0E7F               	movlw	127
 23098  00CF3C  1438               	andwf	(___fleq@ff1+3)^0,w,c
 23099  00CF3E  6E40               	movwf	(??___fleq+3)^0,c
 23100  00CF40  503D               	movf	??___fleq^0,w,c
 23101  00CF42  103E               	iorwf	(??___fleq+1)^0,w,c
 23102  00CF44  103F               	iorwf	(??___fleq+2)^0,w,c
 23103  00CF46  1040               	iorwf	(??___fleq+3)^0,w,c
 23104  00CF48  A4D8               	btfss	status,2,c
 23105  00CF4A  EFA9  F067         	goto	u16811
 23106  00CF4E  EFAB  F067         	goto	u16810
 23107  00CF52                     u16811:
 23108  00CF52  EFB3  F067         	goto	l16102
 23109  00CF56                     u16810:
 23110  00CF56  0E00               	movlw	0
 23111  00CF58  6E35               	movwf	___fleq@ff1^0,c
 23112  00CF5A  0E00               	movlw	0
 23113  00CF5C  6E36               	movwf	(___fleq@ff1+1)^0,c
 23114  00CF5E  0E00               	movlw	0
 23115  00CF60  6E37               	movwf	(___fleq@ff1+2)^0,c
 23116  00CF62  0E00               	movlw	0
 23117  00CF64  6E38               	movwf	(___fleq@ff1+3)^0,c
 23118  00CF66                     l16102:
 23119  00CF66  0E00               	movlw	0
 23120  00CF68  1439               	andwf	___fleq@ff2^0,w,c
 23121  00CF6A  6E3D               	movwf	??___fleq^0,c
 23122  00CF6C  0E00               	movlw	0
 23123  00CF6E  143A               	andwf	(___fleq@ff2+1)^0,w,c
 23124  00CF70  6E3E               	movwf	(??___fleq+1)^0,c
 23125  00CF72  0E80               	movlw	128
 23126  00CF74  143B               	andwf	(___fleq@ff2+2)^0,w,c
 23127  00CF76  6E3F               	movwf	(??___fleq+2)^0,c
 23128  00CF78  0E7F               	movlw	127
 23129  00CF7A  143C               	andwf	(___fleq@ff2+3)^0,w,c
 23130  00CF7C  6E40               	movwf	(??___fleq+3)^0,c
 23131  00CF7E  503D               	movf	??___fleq^0,w,c
 23132  00CF80  103E               	iorwf	(??___fleq+1)^0,w,c
 23133  00CF82  103F               	iorwf	(??___fleq+2)^0,w,c
 23134  00CF84  1040               	iorwf	(??___fleq+3)^0,w,c
 23135  00CF86  A4D8               	btfss	status,2,c
 23136  00CF88  EFC8  F067         	goto	u16821
 23137  00CF8C  EFCA  F067         	goto	u16820
 23138  00CF90                     u16821:
 23139  00CF90  EFD2  F067         	goto	l16106
 23140  00CF94                     u16820:
 23141  00CF94  0E00               	movlw	0
 23142  00CF96  6E39               	movwf	___fleq@ff2^0,c
 23143  00CF98  0E00               	movlw	0
 23144  00CF9A  6E3A               	movwf	(___fleq@ff2+1)^0,c
 23145  00CF9C  0E00               	movlw	0
 23146  00CF9E  6E3B               	movwf	(___fleq@ff2+2)^0,c
 23147  00CFA0  0E00               	movlw	0
 23148  00CFA2  6E3C               	movwf	(___fleq@ff2+3)^0,c
 23149  00CFA4                     l16106:
 23150  00CFA4  5039               	movf	___fleq@ff2^0,w,c
 23151  00CFA6  1835               	xorwf	___fleq@ff1^0,w,c
 23152  00CFA8  E10F               	bnz	u16830
 23153  00CFAA  503A               	movf	(___fleq@ff2+1)^0,w,c
 23154  00CFAC  1836               	xorwf	(___fleq@ff1+1)^0,w,c
 23155  00CFAE  E10C               	bnz	u16830
 23156  00CFB0  503B               	movf	(___fleq@ff2+2)^0,w,c
 23157  00CFB2  1837               	xorwf	(___fleq@ff1+2)^0,w,c
 23158  00CFB4  E109               	bnz	u16830
 23159  00CFB6  503C               	movf	(___fleq@ff2+3)^0,w,c
 23160  00CFB8  1838               	xorwf	(___fleq@ff1+3)^0,w,c
 23161  00CFBA  B4D8               	btfsc	status,2,c
 23162  00CFBC  EFE2  F067         	goto	u16831
 23163  00CFC0  EFE4  F067         	goto	u16830
 23164  00CFC4                     u16831:
 23165  00CFC4  EFE7  F067         	goto	l16110
 23166  00CFC8                     u16830:
 23167  00CFC8  90D8               	bcf	status,0,c
 23168  00CFCA  EFE8  F067         	goto	l2807
 23169  00CFCE                     l16110:
 23170  00CFCE  80D8               	bsf	status,0,c
 23171  00CFD0                     l2807:
 23172  00CFD0  0012               	return		;funcret
 23173  00CFD2                     __end_of___fleq:
 23174                           	callstack 0
 23175                           
 23176 ;; *************** function _buffer_de_queue *****************
 23177 ;; Defined at:
 23178 ;;		line 23 in file "util/buffer.c"
 23179 ;; Parameters:    Size  Location     Type
 23180 ;;  queue           2   14[COMRAM] PTR struct buff_queue
 23181 ;;		 -> g_usb_queue(67), 
 23182 ;; Auto vars:     Size  Location     Type
 23183 ;;  ch              1   19[COMRAM] unsigned char 
 23184 ;; Return value:  Size  Location     Type
 23185 ;;                  1    wreg      unsigned char 
 23186 ;; Registers used:
 23187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23188 ;; Tracked objects:
 23189 ;;		On entry : 0/0
 23190 ;;		On exit  : 0/0
 23191 ;;		Unchanged: 0/0
 23192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23194 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23195 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23196 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23197 ;;Total ram usage:        6 bytes
 23198 ;; Hardware stack levels used: 1
 23199 ;; Hardware stack levels required when called: 3
 23200 ;; This function calls:
 23201 ;;		Nothing
 23202 ;; This function is called by:
 23203 ;;		_atcommand_task
 23204 ;; This function uses a non-reentrant model
 23205 ;;
 23206                           
 23207                           	psect	text98
 23208  00D7D4                     __ptext98:
 23209                           	callstack 0
 23210  00D7D4                     _buffer_de_queue:
 23211                           	callstack 26
 23212  00D7D4                     
 23213                           ;buffer.c: 26: if (queue->read_pos == queue->write_pos)
 23214  00D7D4  EE20 F002          	lfsr	2,2
 23215  00D7D8  500F               	movf	buffer_de_queue@queue^0,w,c
 23216  00D7DA  26D9               	addwf	fsr2l,f,c
 23217  00D7DC  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 23218  00D7DE  22DA               	addwfc	fsr2h,f,c
 23219  00D7E0  EE10 F001          	lfsr	1,1
 23220  00D7E4  500F               	movf	buffer_de_queue@queue^0,w,c
 23221  00D7E6  26E1               	addwf	fsr1l,f,c
 23222  00D7E8  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 23223  00D7EA  22E2               	addwfc	fsr1h,f,c
 23224  00D7EC  50DE               	movf	postinc2,w,c
 23225  00D7EE  18E6               	xorwf	postinc1,w,c
 23226  00D7F0  A4D8               	btfss	status,2,c
 23227  00D7F2  EFFD  F06B         	goto	u13731
 23228  00D7F6  EFFF  F06B         	goto	u13730
 23229  00D7FA                     u13731:
 23230  00D7FA  EF02  F06C         	goto	l13832
 23231  00D7FE                     u13730:
 23232  00D7FE                     
 23233                           ;buffer.c: 27: return ch;
 23234  00D7FE  0E00               	movlw	0
 23235  00D800  EF29  F06C         	goto	l2336
 23236  00D804                     l13832:
 23237                           
 23238                           ;buffer.c: 28: else {;buffer.c: 29: ch = queue->buffer[queue->read_pos];
 23239  00D804  EE20 F001          	lfsr	2,1
 23240  00D808  500F               	movf	buffer_de_queue@queue^0,w,c
 23241  00D80A  26D9               	addwf	fsr2l,f,c
 23242  00D80C  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 23243  00D80E  22DA               	addwfc	fsr2h,f,c
 23244  00D810  50DF               	movf	indf2,w,c
 23245  00D812  6E11               	movwf	??_buffer_de_queue^0,c
 23246  00D814  5011               	movf	??_buffer_de_queue^0,w,c
 23247  00D816  240F               	addwf	buffer_de_queue@queue^0,w,c
 23248  00D818  6E12               	movwf	(??_buffer_de_queue+1)^0,c
 23249  00D81A  0E00               	movlw	0
 23250  00D81C  2010               	addwfc	(buffer_de_queue@queue+1)^0,w,c
 23251  00D81E  6E13               	movwf	(??_buffer_de_queue+2)^0,c
 23252  00D820  0E03               	movlw	3
 23253  00D822  2412               	addwf	(??_buffer_de_queue+1)^0,w,c
 23254  00D824  6ED9               	movwf	fsr2l,c
 23255  00D826  0E00               	movlw	0
 23256  00D828  2013               	addwfc	(??_buffer_de_queue+2)^0,w,c
 23257  00D82A  6EDA               	movwf	fsr2h,c
 23258  00D82C  50DF               	movf	indf2,w,c
 23259  00D82E  6E14               	movwf	buffer_de_queue@ch^0,c
 23260  00D830                     
 23261                           ;buffer.c: 30: queue->read_pos = (++queue->read_pos)%64;
 23262  00D830  EE20 F001          	lfsr	2,1
 23263  00D834  500F               	movf	buffer_de_queue@queue^0,w,c
 23264  00D836  26D9               	addwf	fsr2l,f,c
 23265  00D838  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 23266  00D83A  22DA               	addwfc	fsr2h,f,c
 23267  00D83C  EE10 F001          	lfsr	1,1
 23268  00D840  500F               	movf	buffer_de_queue@queue^0,w,c
 23269  00D842  26E1               	addwf	fsr1l,f,c
 23270  00D844  5010               	movf	(buffer_de_queue@queue+1)^0,w,c
 23271  00D846  22E2               	addwfc	fsr1h,f,c
 23272  00D848  2AE7               	incf	indf1,f,c
 23273  00D84A  50E7               	movf	indf1,w,c
 23274  00D84C  0B3F               	andlw	63
 23275  00D84E  6EDF               	movwf	indf2,c
 23276  00D850                     
 23277                           ;buffer.c: 31: };buffer.c: 32: return ch;
 23278  00D850  5014               	movf	buffer_de_queue@ch^0,w,c
 23279  00D852                     l2336:
 23280  00D852  0012               	return		;funcret
 23281  00D854                     __end_of_buffer_de_queue:
 23282                           	callstack 0
 23283                           
 23284 ;; *************** function _app_usb_task *****************
 23285 ;; Defined at:
 23286 ;;		line 72 in file "app_usb_cdc.c"
 23287 ;; Parameters:    Size  Location     Type
 23288 ;;		None
 23289 ;; Auto vars:     Size  Location     Type
 23290 ;;  i               1   30[COMRAM] unsigned char 
 23291 ;;  numBytesRead    1   29[COMRAM] unsigned char 
 23292 ;; Return value:  Size  Location     Type
 23293 ;;                  1    wreg      void 
 23294 ;; Registers used:
 23295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23296 ;; Tracked objects:
 23297 ;;		On entry : 0/0
 23298 ;;		On exit  : 0/0
 23299 ;;		Unchanged: 0/0
 23300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23305 ;;Total ram usage:        2 bytes
 23306 ;; Hardware stack levels used: 1
 23307 ;; Hardware stack levels required when called: 5
 23308 ;; This function calls:
 23309 ;;		_CDCTxService
 23310 ;;		_buffer_en_queue
 23311 ;;		_getsUSBUSART
 23312 ;; This function is called by:
 23313 ;;		_main
 23314 ;; This function uses a non-reentrant model
 23315 ;;
 23316                           
 23317                           	psect	text99
 23318  00D254                     __ptext99:
 23319                           	callstack 0
 23320  00D254                     _app_usb_task:
 23321                           	callstack 25
 23322  00D254                     
 23323                           ;app_usb_cdc.c: 77: if( USBDeviceState < CONFIGURED_STATE )
 23324  00D254  0E20               	movlw	32
 23325  00D256  604F               	cpfslt	_USBDeviceState^0,c
 23326  00D258  EF30  F069         	goto	u15671
 23327  00D25C  EF32  F069         	goto	u15670
 23328  00D260                     u15671:
 23329  00D260  EF34  F069         	goto	l1172
 23330  00D264                     u15670:
 23331  00D264  EF74  F069         	goto	l1173
 23332  00D268                     l1172:
 23333                           
 23334                           ;app_usb_cdc.c: 80: };app_usb_cdc.c: 86: if( UCONbits.SUSPND== 1 )
 23335  00D268  A265               	btfss	101,1,c	;volatile
 23336  00D26A  EF39  F069         	goto	u15681
 23337  00D26E  EF3B  F069         	goto	u15680
 23338  00D272                     u15681:
 23339  00D272  EF3D  F069         	goto	l15138
 23340  00D276                     u15680:
 23341  00D276  EF74  F069         	goto	l1173
 23342  00D27A                     l15138:
 23343                           
 23344                           ;app_usb_cdc.c: 89: };app_usb_cdc.c: 94: if( (cdc_trf_state == 0) == 1)
 23345  00D27A  504E               	movf	_cdc_trf_state^0,w,c
 23346  00D27C  A4D8               	btfss	status,2,c
 23347  00D27E  EF43  F069         	goto	u15691
 23348  00D282  EF45  F069         	goto	u15690
 23349  00D286                     u15691:
 23350  00D286  EF72  F069         	goto	l15152
 23351  00D28A                     u15690:
 23352  00D28A                     
 23353                           ;app_usb_cdc.c: 95: {;app_usb_cdc.c: 96: uint8_t i;;app_usb_cdc.c: 97: uint8_t numBytesR
      +                          ead;;app_usb_cdc.c: 99: numBytesRead = getsUSBUSART(readBuffer, sizeof(readBuffer));
 23354  00D28A  0EAC               	movlw	low _readBuffer
 23355  00D28C  6E1A               	movwf	getsUSBUSART@buffer^0,c
 23356  00D28E  0E06               	movlw	high _readBuffer
 23357  00D290  6E1B               	movwf	(getsUSBUSART@buffer+1)^0,c
 23358  00D292  0E40               	movlw	64
 23359  00D294  6E1C               	movwf	getsUSBUSART@len^0,c
 23360  00D296  EC72  F064         	call	_getsUSBUSART	;wreg free
 23361  00D29A  6E1E               	movwf	app_usb_task@numBytesRead^0,c
 23362  00D29C                     
 23363                           ;app_usb_cdc.c: 101: if(numBytesRead > 0)
 23364  00D29C  501E               	movf	app_usb_task@numBytesRead^0,w,c
 23365  00D29E  B4D8               	btfsc	status,2,c
 23366  00D2A0  EF54  F069         	goto	u15701
 23367  00D2A4  EF56  F069         	goto	u15700
 23368  00D2A8                     u15701:
 23369  00D2A8  EF72  F069         	goto	l15152
 23370  00D2AC                     u15700:
 23371  00D2AC                     
 23372                           ;app_usb_cdc.c: 102: {;app_usb_cdc.c: 103: for (i = 0 ; i < numBytesRead ; i++) {
 23373  00D2AC  0E00               	movlw	0
 23374  00D2AE  6E1F               	movwf	app_usb_task@i^0,c
 23375  00D2B0  EF69  F069         	goto	l15150
 23376  00D2B4                     l15146:
 23377                           
 23378                           ;app_usb_cdc.c: 104: buffer_en_queue(&g_usb_queue, readBuffer[i]);
 23379  00D2B4  0E40               	movlw	low _g_usb_queue
 23380  00D2B6  6E0F               	movwf	buffer_en_queue@queue^0,c
 23381  00D2B8  0E04               	movlw	high _g_usb_queue
 23382  00D2BA  6E10               	movwf	(buffer_en_queue@queue+1)^0,c
 23383  00D2BC  0EAC               	movlw	low _readBuffer
 23384  00D2BE  241F               	addwf	app_usb_task@i^0,w,c
 23385  00D2C0  6ED9               	movwf	fsr2l,c
 23386  00D2C2  6ADA               	clrf	fsr2h,c
 23387  00D2C4  0E06               	movlw	high _readBuffer
 23388  00D2C6  22DA               	addwfc	fsr2h,f,c
 23389  00D2C8  50DF               	movf	indf2,w,c
 23390  00D2CA  6E11               	movwf	buffer_en_queue@ch^0,c
 23391  00D2CC  EC96  F073         	call	_buffer_en_queue	;wreg free
 23392  00D2D0  2A1F               	incf	app_usb_task@i^0,f,c
 23393  00D2D2                     l15150:
 23394  00D2D2  501E               	movf	app_usb_task@numBytesRead^0,w,c
 23395  00D2D4  5C1F               	subwf	app_usb_task@i^0,w,c
 23396  00D2D6  A0D8               	btfss	status,0,c
 23397  00D2D8  EF70  F069         	goto	u15711
 23398  00D2DC  EF72  F069         	goto	u15710
 23399  00D2E0                     u15711:
 23400  00D2E0  EF5A  F069         	goto	l15146
 23401  00D2E4                     u15710:
 23402  00D2E4                     l15152:
 23403                           
 23404                           ;app_usb_cdc.c: 105: };app_usb_cdc.c: 106: };app_usb_cdc.c: 107: };app_usb_cdc.c: 109: C
      +                          DCTxService();
 23405  00D2E4  EC1A  F04D         	call	_CDCTxService	;wreg free
 23406  00D2E8                     l1173:
 23407  00D2E8  0012               	return		;funcret
 23408  00D2EA                     __end_of_app_usb_task:
 23409                           	callstack 0
 23410                           
 23411 ;; *************** function _getsUSBUSART *****************
 23412 ;; Defined at:
 23413 ;;		line 486 in file "usb/usb_device_cdc.c"
 23414 ;; Parameters:    Size  Location     Type
 23415 ;;  buffer          2   25[COMRAM] PTR unsigned char 
 23416 ;;		 -> readBuffer(64), 
 23417 ;;  len             1   27[COMRAM] unsigned char 
 23418 ;; Auto vars:     Size  Location     Type
 23419 ;;		None
 23420 ;; Return value:  Size  Location     Type
 23421 ;;                  1    wreg      unsigned char 
 23422 ;; Registers used:
 23423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23424 ;; Tracked objects:
 23425 ;;		On entry : 0/0
 23426 ;;		On exit  : 0/0
 23427 ;;		Unchanged: 0/0
 23428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23432 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23433 ;;Total ram usage:        4 bytes
 23434 ;; Hardware stack levels used: 1
 23435 ;; Hardware stack levels required when called: 4
 23436 ;; This function calls:
 23437 ;;		_USBTransferOnePacket
 23438 ;; This function is called by:
 23439 ;;		_app_usb_task
 23440 ;; This function uses a non-reentrant model
 23441 ;;
 23442                           
 23443                           	psect	text100
 23444  00C8E4                     __ptext100:
 23445                           	callstack 0
 23446  00C8E4                     _getsUSBUSART:
 23447                           	callstack 25
 23448  00C8E4                     
 23449                           ;usb_device_cdc.c: 488: cdc_rx_len = 0;
 23450  00C8E4  0E00               	movlw	0
 23451  00C8E6  0101               	movlb	1	; () banked
 23452  00C8E8  6F69               	movwf	_cdc_rx_len& (0+255),b
 23453  00C8EA                     
 23454                           ; BSR set to: 1
 23455                           ;usb_device_cdc.c: 490: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 23456  00C8EA  515E               	movf	_CDCDataOutHandle& (0+255),w,b
 23457  00C8EC  115F               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 23458  00C8EE  B4D8               	btfsc	status,2,c
 23459  00C8F0  EF7C  F064         	goto	u15061
 23460  00C8F4  EF7E  F064         	goto	u15060
 23461  00C8F8                     u15061:
 23462  00C8F8  EF89  F064         	goto	l14682
 23463  00C8FC                     u15060:
 23464  00C8FC                     
 23465                           ; BSR set to: 1
 23466  00C8FC  C15E  FFD9         	movff	_CDCDataOutHandle,fsr2l
 23467  00C900  C15F  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 23468  00C904  BEDF               	btfsc	indf2,7,c
 23469  00C906  EF87  F064         	goto	u15071
 23470  00C90A  EF89  F064         	goto	u15070
 23471  00C90E                     u15071:
 23472  00C90E  EFCB  F064         	goto	l14696
 23473  00C912                     u15070:
 23474  00C912                     l14682:
 23475                           
 23476                           ; BSR set to: 1
 23477                           ;usb_device_cdc.c: 491: {;usb_device_cdc.c: 496: if(len > (((volatile BDT_ENTRY*)CDCData
      +                          OutHandle)->CNT))
 23478  00C912  EE20 F001          	lfsr	2,1
 23479  00C916  515E               	movf	_CDCDataOutHandle& (0+255),w,b
 23480  00C918  26D9               	addwf	fsr2l,f,c
 23481  00C91A  515F               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23482  00C91C  22DA               	addwfc	fsr2h,f,c
 23483  00C91E  501C               	movf	getsUSBUSART@len^0,w,c
 23484  00C920  5CDE               	subwf	postinc2,w,c
 23485  00C922  B0D8               	btfsc	status,0,c
 23486  00C924  EF96  F064         	goto	u15081
 23487  00C928  EF98  F064         	goto	u15080
 23488  00C92C                     u15081:
 23489  00C92C  EFA0  F064         	goto	l14686
 23490  00C930                     u15080:
 23491  00C930                     
 23492                           ; BSR set to: 1
 23493                           ;usb_device_cdc.c: 497: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 23494  00C930  EE20 F001          	lfsr	2,1
 23495  00C934  515E               	movf	_CDCDataOutHandle& (0+255),w,b
 23496  00C936  26D9               	addwf	fsr2l,f,c
 23497  00C938  515F               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 23498  00C93A  22DA               	addwfc	fsr2h,f,c
 23499  00C93C  50DF               	movf	indf2,w,c
 23500  00C93E  6E1C               	movwf	getsUSBUSART@len^0,c
 23501  00C940                     l14686:
 23502                           
 23503                           ; BSR set to: 1
 23504                           ;usb_device_cdc.c: 502: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 23505  00C940  0E00               	movlw	0
 23506  00C942  6F69               	movwf	_cdc_rx_len& (0+255),b
 23507  00C944  EFB3  F064         	goto	l14692
 23508  00C948                     l14688:
 23509                           
 23510                           ; BSR set to: 1
 23511                           ;usb_device_cdc.c: 503: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 23512  00C948  0EBA               	movlw	low _cdc_data_rx
 23513  00C94A  2569               	addwf	_cdc_rx_len& (0+255),w,b
 23514  00C94C  6ED9               	movwf	fsr2l,c
 23515  00C94E  6ADA               	clrf	fsr2h,c
 23516  00C950  0E03               	movlw	high _cdc_data_rx
 23517  00C952  22DA               	addwfc	fsr2h,f,c
 23518  00C954  5169               	movf	_cdc_rx_len& (0+255),w,b
 23519  00C956  241A               	addwf	getsUSBUSART@buffer^0,w,c
 23520  00C958  6EE1               	movwf	fsr1l,c
 23521  00C95A  0E00               	movlw	0
 23522  00C95C  201B               	addwfc	(getsUSBUSART@buffer+1)^0,w,c
 23523  00C95E  6EE2               	movwf	fsr1h,c
 23524  00C960  CFDF FFE7          	movff	indf2,indf1
 23525  00C964                     
 23526                           ; BSR set to: 1
 23527  00C964  2B69               	incf	_cdc_rx_len& (0+255),f,b
 23528  00C966                     l14692:
 23529                           
 23530                           ; BSR set to: 1
 23531  00C966  501C               	movf	getsUSBUSART@len^0,w,c
 23532  00C968  5D69               	subwf	_cdc_rx_len& (0+255),w,b
 23533  00C96A  A0D8               	btfss	status,0,c
 23534  00C96C  EFBA  F064         	goto	u15091
 23535  00C970  EFBC  F064         	goto	u15090
 23536  00C974                     u15091:
 23537  00C974  EFA4  F064         	goto	l14688
 23538  00C978                     u15090:
 23539  00C978                     
 23540                           ; BSR set to: 1
 23541                           ;usb_device_cdc.c: 509: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 23542  00C978  0E00               	movlw	0
 23543  00C97A  6E0F               	movwf	USBTransferOnePacket@dir^0,c
 23544  00C97C  0EBA               	movlw	low _cdc_data_rx
 23545  00C97E  6E10               	movwf	USBTransferOnePacket@data^0,c
 23546  00C980  0E03               	movlw	high _cdc_data_rx
 23547  00C982  6E11               	movwf	(USBTransferOnePacket@data+1)^0,c
 23548  00C984  0E40               	movlw	64
 23549  00C986  6E12               	movwf	USBTransferOnePacket@len^0,c
 23550  00C988  0E02               	movlw	2
 23551  00C98A  EC4F  F055         	call	_USBTransferOnePacket
 23552  00C98E  C00F  F15E         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 23553  00C992  C010  F15F         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 23554  00C996                     l14696:
 23555                           
 23556                           ;usb_device_cdc.c: 511: };usb_device_cdc.c: 513: return cdc_rx_len;
 23557  00C996  0101               	movlb	1	; () banked
 23558  00C998  5169               	movf	_cdc_rx_len& (0+255),w,b
 23559  00C99A                     
 23560                           ; BSR set to: 1
 23561  00C99A  0012               	return		;funcret
 23562  00C99C                     __end_of_getsUSBUSART:
 23563                           	callstack 0
 23564                           
 23565 ;; *************** function _buffer_en_queue *****************
 23566 ;; Defined at:
 23567 ;;		line 16 in file "util/buffer.c"
 23568 ;; Parameters:    Size  Location     Type
 23569 ;;  queue           2   14[COMRAM] PTR struct buff_queue
 23570 ;;		 -> g_usb_queue(67), g_usart_queue(67), 
 23571 ;;  ch              1   16[COMRAM] unsigned char 
 23572 ;; Auto vars:     Size  Location     Type
 23573 ;;		None
 23574 ;; Return value:  Size  Location     Type
 23575 ;;                  1    wreg      void 
 23576 ;; Registers used:
 23577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23578 ;; Tracked objects:
 23579 ;;		On entry : 0/0
 23580 ;;		On exit  : 0/0
 23581 ;;		Unchanged: 0/0
 23582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23583 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23585 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23586 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23587 ;;Total ram usage:        6 bytes
 23588 ;; Hardware stack levels used: 1
 23589 ;; Hardware stack levels required when called: 3
 23590 ;; This function calls:
 23591 ;;		Nothing
 23592 ;; This function is called by:
 23593 ;;		_app_usb_task
 23594 ;; This function uses a non-reentrant model
 23595 ;;
 23596                           
 23597                           	psect	text101
 23598  00E72C                     __ptext101:
 23599                           	callstack 0
 23600  00E72C                     _buffer_en_queue:
 23601                           	callstack 26
 23602  00E72C                     
 23603                           ;buffer.c: 18: queue->buffer[queue->write_pos] = ch;
 23604  00E72C  EE20 F002          	lfsr	2,2
 23605  00E730  500F               	movf	buffer_en_queue@queue^0,w,c
 23606  00E732  26D9               	addwf	fsr2l,f,c
 23607  00E734  5010               	movf	(buffer_en_queue@queue+1)^0,w,c
 23608  00E736  22DA               	addwfc	fsr2h,f,c
 23609  00E738  50DF               	movf	indf2,w,c
 23610  00E73A  6E12               	movwf	??_buffer_en_queue^0,c
 23611  00E73C  5012               	movf	??_buffer_en_queue^0,w,c
 23612  00E73E  240F               	addwf	buffer_en_queue@queue^0,w,c
 23613  00E740  6E13               	movwf	(??_buffer_en_queue+1)^0,c
 23614  00E742  0E00               	movlw	0
 23615  00E744  2010               	addwfc	(buffer_en_queue@queue+1)^0,w,c
 23616  00E746  6E14               	movwf	(??_buffer_en_queue+2)^0,c
 23617  00E748  0E03               	movlw	3
 23618  00E74A  2413               	addwf	(??_buffer_en_queue+1)^0,w,c
 23619  00E74C  6ED9               	movwf	fsr2l,c
 23620  00E74E  0E00               	movlw	0
 23621  00E750  2014               	addwfc	(??_buffer_en_queue+2)^0,w,c
 23622  00E752  6EDA               	movwf	fsr2h,c
 23623  00E754  C011  FFDF         	movff	buffer_en_queue@ch,indf2
 23624  00E758                     
 23625                           ;buffer.c: 19: queue->write_pos = (++queue->write_pos)%64;
 23626  00E758  EE20 F002          	lfsr	2,2
 23627  00E75C  500F               	movf	buffer_en_queue@queue^0,w,c
 23628  00E75E  26D9               	addwf	fsr2l,f,c
 23629  00E760  5010               	movf	(buffer_en_queue@queue+1)^0,w,c
 23630  00E762  22DA               	addwfc	fsr2h,f,c
 23631  00E764  EE10 F002          	lfsr	1,2
 23632  00E768  500F               	movf	buffer_en_queue@queue^0,w,c
 23633  00E76A  26E1               	addwf	fsr1l,f,c
 23634  00E76C  5010               	movf	(buffer_en_queue@queue+1)^0,w,c
 23635  00E76E  22E2               	addwfc	fsr1h,f,c
 23636  00E770  2AE7               	incf	indf1,f,c
 23637  00E772  50E7               	movf	indf1,w,c
 23638  00E774  0B3F               	andlw	63
 23639  00E776  6EDF               	movwf	indf2,c
 23640  00E778  0012               	return		;funcret
 23641  00E77A                     __end_of_buffer_en_queue:
 23642                           	callstack 0
 23643                           
 23644 ;; *************** function _CDCTxService *****************
 23645 ;; Defined at:
 23646 ;;		line 837 in file "usb/usb_device_cdc.c"
 23647 ;; Parameters:    Size  Location     Type
 23648 ;;		None
 23649 ;; Auto vars:     Size  Location     Type
 23650 ;;  byte_to_send    1   26[COMRAM] unsigned char 
 23651 ;;  i               1   25[COMRAM] unsigned char 
 23652 ;; Return value:  Size  Location     Type
 23653 ;;                  1    wreg      void 
 23654 ;; Registers used:
 23655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23656 ;; Tracked objects:
 23657 ;;		On entry : 0/0
 23658 ;;		On exit  : 0/0
 23659 ;;		Unchanged: 0/0
 23660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23662 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23665 ;;Total ram usage:        2 bytes
 23666 ;; Hardware stack levels used: 1
 23667 ;; Hardware stack levels required when called: 4
 23668 ;; This function calls:
 23669 ;;		_USBTransferOnePacket
 23670 ;; This function is called by:
 23671 ;;		_app_usb_task
 23672 ;; This function uses a non-reentrant model
 23673 ;;
 23674                           
 23675                           	psect	text102
 23676  009A34                     __ptext102:
 23677                           	callstack 0
 23678  009A34                     _CDCTxService:
 23679                           	callstack 25
 23680  009A34                     
 23681                           ;usb_device_cdc.c: 839: uint8_t byte_to_send;;usb_device_cdc.c: 840: uint8_t i;;usb_devi
      +                          ce_cdc.c: 842: ;;usb_device_cdc.c: 844: {};;usb_device_cdc.c: 846: if(((CDCDataInHandle 
      +                          != 0x0000) && ((*(volatile uint8_t*)CDCDataInHandle & 0x80) != 0x00)))
 23682  009A34  0101               	movlb	1	; () banked
 23683  009A36  515C               	movf	_CDCDataInHandle& (0+255),w,b
 23684  009A38  115D               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 23685  009A3A  B4D8               	btfsc	status,2,c
 23686  009A3C  EF22  F04D         	goto	u15101
 23687  009A40  EF24  F04D         	goto	u15100
 23688  009A44                     u15101:
 23689  009A44  EF31  F04D         	goto	l14706
 23690  009A48                     u15100:
 23691  009A48                     
 23692                           ; BSR set to: 1
 23693  009A48  C15C  FFD9         	movff	_CDCDataInHandle,fsr2l
 23694  009A4C  C15D  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 23695  009A50  AEDF               	btfss	indf2,7,c
 23696  009A52  EF2D  F04D         	goto	u15111
 23697  009A56  EF2F  F04D         	goto	u15110
 23698  009A5A                     u15111:
 23699  009A5A  EF31  F04D         	goto	l14706
 23700  009A5E                     u15110:
 23701  009A5E  EFE1  F04D         	goto	l2204
 23702  009A62                     l14706:
 23703                           
 23704                           ; BSR set to: 1
 23705                           ;usb_device_cdc.c: 850: };usb_device_cdc.c: 857: if(cdc_trf_state == 3)
 23706  009A62  0E03               	movlw	3
 23707  009A64  184E               	xorwf	_cdc_trf_state^0,w,c
 23708  009A66  A4D8               	btfss	status,2,c
 23709  009A68  EF38  F04D         	goto	u15121
 23710  009A6C  EF3A  F04D         	goto	u15120
 23711  009A70                     u15121:
 23712  009A70  EF3C  F04D         	goto	l2205
 23713  009A74                     u15120:
 23714  009A74                     
 23715                           ; BSR set to: 1
 23716                           ;usb_device_cdc.c: 858: cdc_trf_state = 0;
 23717  009A74  0E00               	movlw	0
 23718  009A76  6E4E               	movwf	_cdc_trf_state^0,c
 23719  009A78                     l2205:
 23720                           
 23721                           ; BSR set to: 1
 23722                           ;usb_device_cdc.c: 863: if(cdc_trf_state == 0)
 23723  009A78  504E               	movf	_cdc_trf_state^0,w,c
 23724  009A7A  A4D8               	btfss	status,2,c
 23725  009A7C  EF42  F04D         	goto	u15131
 23726  009A80  EF44  F04D         	goto	u15130
 23727  009A84                     u15131:
 23728  009A84  EF46  F04D         	goto	l14712
 23729  009A88                     u15130:
 23730  009A88  EFE1  F04D         	goto	l2204
 23731  009A8C                     l14712:
 23732                           
 23733                           ; BSR set to: 1
 23734                           ;usb_device_cdc.c: 867: };usb_device_cdc.c: 872: if(cdc_trf_state == 2)
 23735  009A8C  0E02               	movlw	2
 23736  009A8E  184E               	xorwf	_cdc_trf_state^0,w,c
 23737  009A90  A4D8               	btfss	status,2,c
 23738  009A92  EF4D  F04D         	goto	u15141
 23739  009A96  EF4F  F04D         	goto	u15140
 23740  009A9A                     u15141:
 23741  009A9A  EF62  F04D         	goto	l14718
 23742  009A9E                     u15140:
 23743  009A9E                     
 23744                           ; BSR set to: 1
 23745                           ;usb_device_cdc.c: 873: {;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(
      +                          2,1,(0),0);
 23746  009A9E  0E01               	movlw	1
 23747  009AA0  6E0F               	movwf	USBTransferOnePacket@dir^0,c
 23748  009AA2  0E00               	movlw	0
 23749  009AA4  6E10               	movwf	USBTransferOnePacket@data^0,c
 23750  009AA6  0E00               	movlw	0
 23751  009AA8  6E11               	movwf	(USBTransferOnePacket@data+1)^0,c
 23752  009AAA  0E00               	movlw	0
 23753  009AAC  6E12               	movwf	USBTransferOnePacket@len^0,c
 23754  009AAE  0E02               	movlw	2
 23755  009AB0  EC4F  F055         	call	_USBTransferOnePacket
 23756  009AB4  C00F  F15C         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23757  009AB8  C010  F15D         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23758  009ABC                     
 23759                           ;usb_device_cdc.c: 876: cdc_trf_state = 3;
 23760  009ABC  0E03               	movlw	3
 23761  009ABE  6E4E               	movwf	_cdc_trf_state^0,c
 23762                           
 23763                           ;usb_device_cdc.c: 877: }
 23764  009AC0  EFE1  F04D         	goto	l2204
 23765  009AC4                     l14718:
 23766                           
 23767                           ; BSR set to: 1
 23768                           ;usb_device_cdc.c: 878: else if(cdc_trf_state == 1)
 23769  009AC4  044E               	decf	_cdc_trf_state^0,w,c
 23770  009AC6  A4D8               	btfss	status,2,c
 23771  009AC8  EF68  F04D         	goto	u15151
 23772  009ACC  EF6A  F04D         	goto	u15150
 23773  009AD0                     u15151:
 23774  009AD0  EFE1  F04D         	goto	l2204
 23775  009AD4                     u15150:
 23776  009AD4                     
 23777                           ; BSR set to: 1
 23778                           ;usb_device_cdc.c: 879: {;usb_device_cdc.c: 883: if(cdc_tx_len > sizeof(cdc_data_tx))
 23779  009AD4  0E40               	movlw	64
 23780  009AD6  6568               	cpfsgt	_cdc_tx_len& (0+255),b
 23781  009AD8  EF70  F04D         	goto	u15161
 23782  009ADC  EF72  F04D         	goto	u15160
 23783  009AE0                     u15161:
 23784  009AE0  EF76  F04D         	goto	l2210
 23785  009AE4                     u15160:
 23786  009AE4                     
 23787                           ; BSR set to: 1
 23788                           ;usb_device_cdc.c: 884: byte_to_send = sizeof(cdc_data_tx);
 23789  009AE4  0E40               	movlw	64
 23790  009AE6  6E1B               	movwf	CDCTxService@byte_to_send^0,c
 23791  009AE8  EF78  F04D         	goto	l14724
 23792  009AEC                     l2210:
 23793                           
 23794                           ; BSR set to: 1
 23795                           ;usb_device_cdc.c: 885: else;usb_device_cdc.c: 886: byte_to_send = cdc_tx_len;
 23796  009AEC  C168  F01B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 23797  009AF0                     l14724:
 23798                           
 23799                           ; BSR set to: 1
 23800                           ;usb_device_cdc.c: 891: cdc_tx_len = cdc_tx_len - byte_to_send;
 23801  009AF0  501B               	movf	CDCTxService@byte_to_send^0,w,c
 23802  009AF2  5D68               	subwf	_cdc_tx_len& (0+255),w,b
 23803  009AF4  6F68               	movwf	_cdc_tx_len& (0+255),b
 23804                           
 23805                           ;usb_device_cdc.c: 893: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 23806  009AF6  0E83               	movlw	low _cdc_data_tx
 23807  009AF8  6F4E               	movwf	_pCDCDst& (0+255),b
 23808  009AFA  0E04               	movlw	high _cdc_data_tx
 23809  009AFC  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 23810  009AFE                     
 23811                           ; BSR set to: 1
 23812                           ;usb_device_cdc.c: 895: i = byte_to_send;
 23813  009AFE  C01B  F01A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 23814  009B02                     
 23815                           ; BSR set to: 1
 23816                           ;usb_device_cdc.c: 896: if(cdc_mem_type == 0x00)
 23817  009B02  5167               	movf	_cdc_mem_type& (0+255),w,b
 23818  009B04  A4D8               	btfss	status,2,c
 23819  009B06  EF87  F04D         	goto	u15171
 23820  009B0A  EF89  F04D         	goto	u15170
 23821  009B0E                     u15171:
 23822  009B0E  EFB3  F04D         	goto	l14750
 23823  009B12                     u15170:
 23824  009B12  EF9A  F04D         	goto	l14740
 23825  009B16                     l14732:
 23826                           
 23827                           ; BSR set to: 1
 23828                           ;usb_device_cdc.c: 899: {;usb_device_cdc.c: 900: *pCDCDst.bRam = *pCDCSrc.bRom;
 23829  009B16  C151  FFD9         	movff	_pCDCSrc,fsr2l
 23830  009B1A  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 23831  009B1E  C14E  FFE1         	movff	_pCDCDst,fsr1l
 23832  009B22  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 23833  009B26  CFDF FFE7          	movff	indf2,indf1
 23834  009B2A                     
 23835                           ; BSR set to: 1
 23836                           ;usb_device_cdc.c: 901: pCDCDst.bRam++;
 23837  009B2A  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 23838  009B2C  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 23839  009B2E                     
 23840                           ; BSR set to: 1
 23841                           ;usb_device_cdc.c: 902: pCDCSrc.bRom++;
 23842  009B2E  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 23843  009B30  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 23844  009B32                     
 23845                           ; BSR set to: 1
 23846                           ;usb_device_cdc.c: 903: i--;
 23847  009B32  061A               	decf	CDCTxService@i^0,f,c
 23848  009B34                     l14740:
 23849                           
 23850                           ; BSR set to: 1
 23851  009B34  501A               	movf	CDCTxService@i^0,w,c
 23852  009B36  A4D8               	btfss	status,2,c
 23853  009B38  EFA0  F04D         	goto	u15181
 23854  009B3C  EFA2  F04D         	goto	u15180
 23855  009B40                     u15181:
 23856  009B40  EF8B  F04D         	goto	l14732
 23857  009B44                     u15180:
 23858  009B44  EFBB  F04D         	goto	l14752
 23859  009B48                     l14742:
 23860                           
 23861                           ; BSR set to: 1
 23862                           ;usb_device_cdc.c: 909: {;usb_device_cdc.c: 910: *pCDCDst.bRam = *pCDCSrc.bRam;
 23863  009B48  C151  FFD9         	movff	_pCDCSrc,fsr2l
 23864  009B4C  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 23865  009B50  C14E  FFE1         	movff	_pCDCDst,fsr1l
 23866  009B54  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 23867  009B58  CFDF FFE7          	movff	indf2,indf1
 23868  009B5C                     
 23869                           ; BSR set to: 1
 23870                           ;usb_device_cdc.c: 911: pCDCDst.bRam++;
 23871  009B5C  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 23872  009B5E  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 23873  009B60                     
 23874                           ; BSR set to: 1
 23875                           ;usb_device_cdc.c: 912: pCDCSrc.bRam++;
 23876  009B60  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 23877  009B62  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 23878  009B64                     
 23879                           ; BSR set to: 1
 23880                           ;usb_device_cdc.c: 913: i--;
 23881  009B64  061A               	decf	CDCTxService@i^0,f,c
 23882  009B66                     l14750:
 23883                           
 23884                           ; BSR set to: 1
 23885  009B66  501A               	movf	CDCTxService@i^0,w,c
 23886  009B68  A4D8               	btfss	status,2,c
 23887  009B6A  EFB9  F04D         	goto	u15191
 23888  009B6E  EFBB  F04D         	goto	u15190
 23889  009B72                     u15191:
 23890  009B72  EFA4  F04D         	goto	l14742
 23891  009B76                     u15190:
 23892  009B76                     l14752:
 23893                           
 23894                           ; BSR set to: 1
 23895                           ;usb_device_cdc.c: 914: };usb_device_cdc.c: 915: };usb_device_cdc.c: 921: if(cdc_tx_len 
      +                          == 0)
 23896  009B76  5168               	movf	_cdc_tx_len& (0+255),w,b
 23897  009B78  A4D8               	btfss	status,2,c
 23898  009B7A  EFC1  F04D         	goto	u15201
 23899  009B7E  EFC3  F04D         	goto	u15200
 23900  009B82                     u15201:
 23901  009B82  EFD2  F04D         	goto	l14760
 23902  009B86                     u15200:
 23903  009B86                     
 23904                           ; BSR set to: 1
 23905                           ;usb_device_cdc.c: 922: {;usb_device_cdc.c: 923: if(byte_to_send == 64)
 23906  009B86  0E40               	movlw	64
 23907  009B88  181B               	xorwf	CDCTxService@byte_to_send^0,w,c
 23908  009B8A  A4D8               	btfss	status,2,c
 23909  009B8C  EFCA  F04D         	goto	u15211
 23910  009B90  EFCC  F04D         	goto	u15210
 23911  009B94                     u15211:
 23912  009B94  EFD0  F04D         	goto	l14758
 23913  009B98                     u15210:
 23914  009B98                     
 23915                           ; BSR set to: 1
 23916                           ;usb_device_cdc.c: 924: cdc_trf_state = 2;
 23917  009B98  0E02               	movlw	2
 23918  009B9A  6E4E               	movwf	_cdc_trf_state^0,c
 23919  009B9C  EFD2  F04D         	goto	l14760
 23920  009BA0                     l14758:
 23921                           
 23922                           ; BSR set to: 1
 23923                           ;usb_device_cdc.c: 925: else;usb_device_cdc.c: 926: cdc_trf_state = 3;
 23924  009BA0  0E03               	movlw	3
 23925  009BA2  6E4E               	movwf	_cdc_trf_state^0,c
 23926  009BA4                     l14760:
 23927                           
 23928                           ; BSR set to: 1
 23929                           ;usb_device_cdc.c: 927: };usb_device_cdc.c: 928: CDCDataInHandle = USBTransferOnePacket(
      +                          2,1,(uint8_t*)&cdc_data_tx,byte_to_send);
 23930  009BA4  0E01               	movlw	1
 23931  009BA6  6E0F               	movwf	USBTransferOnePacket@dir^0,c
 23932  009BA8  0E83               	movlw	low _cdc_data_tx
 23933  009BAA  6E10               	movwf	USBTransferOnePacket@data^0,c
 23934  009BAC  0E04               	movlw	high _cdc_data_tx
 23935  009BAE  6E11               	movwf	(USBTransferOnePacket@data+1)^0,c
 23936  009BB0  C01B  F012         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 23937  009BB4  0E02               	movlw	2
 23938  009BB6  EC4F  F055         	call	_USBTransferOnePacket
 23939  009BBA  C00F  F15C         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23940  009BBE  C010  F15D         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23941  009BC2                     l2204:
 23942  009BC2  0012               	return		;funcret
 23943  009BC4                     __end_of_CDCTxService:
 23944                           	callstack 0
 23945                           
 23946 ;; *************** function _WDT_initialize *****************
 23947 ;; Defined at:
 23948 ;;		line 277 in file "system.c"
 23949 ;; Parameters:    Size  Location     Type
 23950 ;;  enabled         1    wreg     unsigned char 
 23951 ;; Auto vars:     Size  Location     Type
 23952 ;;  enabled         1   15[COMRAM] unsigned char 
 23953 ;; Return value:  Size  Location     Type
 23954 ;;                  1    wreg      void 
 23955 ;; Registers used:
 23956 ;;		wreg, status,2, status,0
 23957 ;; Tracked objects:
 23958 ;;		On entry : 0/0
 23959 ;;		On exit  : 0/0
 23960 ;;		Unchanged: 0/0
 23961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23965 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23966 ;;Total ram usage:        2 bytes
 23967 ;; Hardware stack levels used: 1
 23968 ;; Hardware stack levels required when called: 3
 23969 ;; This function calls:
 23970 ;;		Nothing
 23971 ;; This function is called by:
 23972 ;;		_main
 23973 ;; This function uses a non-reentrant model
 23974 ;;
 23975                           
 23976                           	psect	text103
 23977  00EF56                     __ptext103:
 23978                           	callstack 0
 23979  00EF56                     _WDT_initialize:
 23980                           	callstack 27
 23981                           
 23982                           ;incstack = 0
 23983                           ;WDT_initialize@enabled stored from wreg
 23984  00EF56  6E10               	movwf	WDT_initialize@enabled^0,c
 23985  00EF58                     
 23986                           ;system.c: 279: WDTCONbits.SWDTEN = (enabled == 1)?1:0;
 23987  00EF58  0410               	decf	WDT_initialize@enabled^0,w,c
 23988  00EF5A  B4D8               	btfsc	status,2,c
 23989  00EF5C  EFB2  F077         	goto	u7041
 23990  00EF60  EFB6  F077         	goto	u7040
 23991  00EF64                     u7041:
 23992  00EF64  6A0F               	clrf	??_WDT_initialize^0,c
 23993  00EF66  2A0F               	incf	??_WDT_initialize^0,f,c
 23994  00EF68  EFB7  F077         	goto	u7058
 23995  00EF6C                     u7040:
 23996  00EF6C  6A0F               	clrf	??_WDT_initialize^0,c
 23997  00EF6E                     u7058:
 23998  00EF6E  50C0               	movf	192,w,c	;volatile
 23999  00EF70  180F               	xorwf	??_WDT_initialize^0,w,c
 24000  00EF72  0BFE               	andlw	-2
 24001  00EF74  180F               	xorwf	??_WDT_initialize^0,w,c
 24002  00EF76  6EC0               	movwf	192,c	;volatile
 24003  00EF78  0012               	return		;funcret
 24004  00EF7A                     __end_of_WDT_initialize:
 24005                           	callstack 0
 24006                           
 24007 ;; *************** function _USBDeviceTasks *****************
 24008 ;; Defined at:
 24009 ;;		line 481 in file "usb/usb_device.c"
 24010 ;; Parameters:    Size  Location     Type
 24011 ;;		None
 24012 ;; Auto vars:     Size  Location     Type
 24013 ;;  i               1   42[COMRAM] unsigned char 
 24014 ;; Return value:  Size  Location     Type
 24015 ;;                  1    wreg      void 
 24016 ;; Registers used:
 24017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24018 ;; Tracked objects:
 24019 ;;		On entry : 0/0
 24020 ;;		On exit  : 0/0
 24021 ;;		Unchanged: 0/0
 24022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24027 ;;Total ram usage:        1 bytes
 24028 ;; Hardware stack levels used: 1
 24029 ;; Hardware stack levels required when called: 11
 24030 ;; This function calls:
 24031 ;;		_USBCtrlEPAllowStatusStage
 24032 ;;		_USBCtrlEPService
 24033 ;;		_USBDeviceInit
 24034 ;;		_USBIncrement1msInternalTimers
 24035 ;;		_USBStallHandler
 24036 ;;		_USBSuspend
 24037 ;;		_USBWakeFromSuspend
 24038 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24039 ;; This function is called by:
 24040 ;;		_main
 24041 ;; This function uses a non-reentrant model
 24042 ;;
 24043                           
 24044                           	psect	text104
 24045  00807A                     __ptext104:
 24046                           	callstack 0
 24047  00807A                     _USBDeviceTasks:
 24048                           	callstack 19
 24049  00807A                     
 24050                           ;usb_device.c: 548: };usb_device.c: 570: if(USBDeviceState == DETACHED_STATE)
 24051  00807A  504F               	movf	_USBDeviceState^0,w,c
 24052  00807C  A4D8               	btfss	status,2,c
 24053  00807E  EF43  F040         	goto	u15421
 24054  008082  EF45  F040         	goto	u15420
 24055  008086                     u15421:
 24056  008086  EF5C  F040         	goto	l15032
 24057  00808A                     u15420:
 24058  00808A                     
 24059                           ;usb_device.c: 571: {;usb_device.c: 573: UCON = 0;
 24060  00808A  0E00               	movlw	0
 24061  00808C  6E65               	movwf	101,c	;volatile
 24062                           
 24063                           ;usb_device.c: 576: UIE = 0;
 24064  00808E  0E00               	movlw	0
 24065  008090  010F               	movlb	15	; () banked
 24066  008092  6F36               	movwf	54,b	;volatile
 24067                           
 24068                           ;usb_device.c: 580: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24069  008094  0E16               	movlw	22
 24070  008096  6F39               	movwf	57,b	;volatile
 24071  008098  0E9F               	movlw	159
 24072  00809A  6F37               	movwf	55,b	;volatile
 24073  00809C  0E7B               	movlw	123
 24074  00809E  6F36               	movwf	54,b	;volatile
 24075                           
 24076                           ;usb_device.c: 583: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 24077  0080A0  EF53  F040         	goto	l1866
 24078  0080A4                     l1867:
 24079  0080A4  8665               	bsf	101,3,c	;volatile
 24080  0080A6                     l1866:
 24081  0080A6  A665               	btfss	101,3,c	;volatile
 24082  0080A8  EF58  F040         	goto	u15431
 24083  0080AC  EF5A  F040         	goto	u15430
 24084  0080B0                     u15431:
 24085  0080B0  EF52  F040         	goto	l1867
 24086  0080B4                     u15430:
 24087  0080B4                     
 24088                           ;usb_device.c: 586: USBDeviceState = ATTACHED_STATE;
 24089  0080B4  0E01               	movlw	1
 24090  0080B6  6E4F               	movwf	_USBDeviceState^0,c
 24091  0080B8                     l15032:
 24092                           
 24093                           ;usb_device.c: 591: };usb_device.c: 594: if(USBDeviceState == ATTACHED_STATE)
 24094  0080B8  044F               	decf	_USBDeviceState^0,w,c
 24095  0080BA  A4D8               	btfss	status,2,c
 24096  0080BC  EF62  F040         	goto	u15441
 24097  0080C0  EF64  F040         	goto	u15440
 24098  0080C4                     u15441:
 24099  0080C4  EF74  F040         	goto	l15042
 24100  0080C8                     u15440:
 24101  0080C8                     
 24102                           ;usb_device.c: 595: {;usb_device.c: 605: if(!UCONbits.SE0)
 24103  0080C8  BA65               	btfsc	101,5,c	;volatile
 24104  0080CA  EF69  F040         	goto	u15451
 24105  0080CE  EF6B  F040         	goto	u15450
 24106  0080D2                     u15451:
 24107  0080D2  EF74  F040         	goto	l15042
 24108  0080D6                     u15450:
 24109  0080D6                     
 24110                           ;usb_device.c: 606: {;usb_device.c: 612: {UIR = 0;};
 24111  0080D6  0E00               	movlw	0
 24112  0080D8  6E62               	movwf	98,c	;volatile
 24113                           
 24114                           ;usb_device.c: 616: UIE=0;
 24115  0080DA  0E00               	movlw	0
 24116  0080DC  010F               	movlb	15	; () banked
 24117  0080DE  6F36               	movwf	54,b	;volatile
 24118  0080E0                     
 24119                           ; BSR set to: 15
 24120                           ;usb_device.c: 618: UIEbits.URSTIE = 1;
 24121  0080E0  8136               	bsf	54,0,b	;volatile
 24122  0080E2                     
 24123                           ; BSR set to: 15
 24124                           ;usb_device.c: 619: UIEbits.IDLEIE = 1;
 24125  0080E2  8936               	bsf	54,4,b	;volatile
 24126                           
 24127                           ;usb_device.c: 620: USBDeviceState = POWERED_STATE;
 24128  0080E4  0E02               	movlw	2
 24129  0080E6  6E4F               	movwf	_USBDeviceState^0,c
 24130  0080E8                     l15042:
 24131                           
 24132                           ;usb_device.c: 621: };usb_device.c: 622: };usb_device.c: 638: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 24133  0080E8  A462               	btfss	98,2,c	;volatile
 24134  0080EA  EF79  F040         	goto	u15461
 24135  0080EE  EF7B  F040         	goto	u15460
 24136  0080F2                     u15461:
 24137  0080F2  EF86  F040         	goto	l15050
 24138  0080F6                     u15460:
 24139  0080F6  010F               	movlb	15	; () banked
 24140  0080F8  A536               	btfss	54,2,b	;volatile
 24141  0080FA  EF81  F040         	goto	u15471
 24142  0080FE  EF83  F040         	goto	u15470
 24143  008102                     u15471:
 24144  008102  EF86  F040         	goto	l15050
 24145  008106                     u15470:
 24146  008106                     
 24147                           ; BSR set to: 15
 24148                           ;usb_device.c: 639: {;usb_device.c: 640: (UIR &= 0xFB);
 24149  008106  9462               	bcf	98,2,c	;volatile
 24150  008108                     
 24151                           ; BSR set to: 15
 24152                           ;usb_device.c: 644: USBWakeFromSuspend();
 24153  008108  EC06  F075         	call	_USBWakeFromSuspend	;wreg free
 24154  00810C                     l15050:
 24155                           
 24156                           ;usb_device.c: 646: };usb_device.c: 651: if(UCONbits.SUSPND==1)
 24157  00810C  A265               	btfss	101,1,c	;volatile
 24158  00810E  EF8B  F040         	goto	u15481
 24159  008112  EF8D  F040         	goto	u15480
 24160  008116                     u15481:
 24161  008116  EF90  F040         	goto	l1872
 24162  00811A                     u15480:
 24163  00811A                     
 24164                           ;usb_device.c: 652: {;usb_device.c: 653: {PIR2bits.USBIF = 0;};
 24165  00811A  98A1               	bcf	161,4,c	;volatile
 24166                           
 24167                           ;usb_device.c: 654: return;
 24168  00811C  EF78  F041         	goto	l1864
 24169  008120                     l1872:
 24170                           
 24171                           ;usb_device.c: 655: };usb_device.c: 667: if(UIRbits.URSTIF && UIEbits.URSTIE)
 24172  008120  A062               	btfss	98,0,c	;volatile
 24173  008122  EF95  F040         	goto	u15491
 24174  008126  EF97  F040         	goto	u15490
 24175  00812A                     u15491:
 24176  00812A  EFA4  F040         	goto	l15062
 24177  00812E                     u15490:
 24178  00812E  010F               	movlb	15	; () banked
 24179  008130  A136               	btfss	54,0,b	;volatile
 24180  008132  EF9D  F040         	goto	u15501
 24181  008136  EF9F  F040         	goto	u15500
 24182  00813A                     u15501:
 24183  00813A  EFA4  F040         	goto	l15062
 24184  00813E                     u15500:
 24185  00813E                     
 24186                           ; BSR set to: 15
 24187                           ;usb_device.c: 668: {;usb_device.c: 669: USBDeviceInit();
 24188  00813E  ECCF  F050         	call	_USBDeviceInit	;wreg free
 24189  008142                     
 24190                           ;usb_device.c: 673: ;;usb_device.c: 675: USBDeviceState = DEFAULT_STATE;
 24191  008142  0E04               	movlw	4
 24192  008144  6E4F               	movwf	_USBDeviceState^0,c
 24193  008146                     
 24194                           ;usb_device.c: 685: (UIR &= 0xFE);
 24195  008146  9062               	bcf	98,0,c	;volatile
 24196  008148                     l15062:
 24197                           
 24198                           ;usb_device.c: 686: };usb_device.c: 691: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 24199  008148  A862               	btfss	98,4,c	;volatile
 24200  00814A  EFA9  F040         	goto	u15511
 24201  00814E  EFAB  F040         	goto	u15510
 24202  008152                     u15511:
 24203  008152  EFB5  F040         	goto	l15068
 24204  008156                     u15510:
 24205  008156  010F               	movlb	15	; () banked
 24206  008158  A936               	btfss	54,4,b	;volatile
 24207  00815A  EFB1  F040         	goto	u15521
 24208  00815E  EFB3  F040         	goto	u15520
 24209  008162                     u15521:
 24210  008162  EFB5  F040         	goto	l15068
 24211  008166                     u15520:
 24212  008166                     
 24213                           ; BSR set to: 15
 24214                           ;usb_device.c: 692: {;usb_device.c: 698: USBSuspend();
 24215  008166  EC88  F076         	call	_USBSuspend	;wreg free
 24216  00816A                     l15068:
 24217                           
 24218                           ;usb_device.c: 700: };usb_device.c: 712: if(UIRbits.SOFIF)
 24219  00816A  AC62               	btfss	98,6,c	;volatile
 24220  00816C  EFBA  F040         	goto	u15531
 24221  008170  EFBC  F040         	goto	u15530
 24222  008174                     u15531:
 24223  008174  EFE9  F040         	goto	l15086
 24224  008178                     u15530:
 24225  008178                     
 24226                           ;usb_device.c: 713: {;usb_device.c: 715: if(UIEbits.SOFIE)
 24227  008178  010F               	movlb	15	; () banked
 24228  00817A  AD36               	btfss	54,6,b	;volatile
 24229  00817C  EFC2  F040         	goto	u15541
 24230  008180  EFC4  F040         	goto	u15540
 24231  008184                     u15541:
 24232  008184  EFD2  F040         	goto	l15074
 24233  008188                     u15540:
 24234  008188                     
 24235                           ; BSR set to: 15
 24236                           ;usb_device.c: 716: {;usb_device.c: 717: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVEN
      +                          T_SOF,0,1);
 24237  008188  0E00               	movlw	0
 24238  00818A  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24239  00818C  0E73               	movlw	115
 24240  00818E  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24241  008190  0E00               	movlw	0
 24242  008192  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24243  008194  0E00               	movlw	0
 24244  008196  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24245  008198  0E00               	movlw	0
 24246  00819A  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24247  00819C  0E01               	movlw	1
 24248  00819E  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24249  0081A0  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24250  0081A4                     l15074:
 24251                           
 24252                           ;usb_device.c: 718: };usb_device.c: 719: (UIR &= 0xBF);
 24253  0081A4  9C62               	bcf	98,6,c	;volatile
 24254  0081A6                     
 24255                           ;usb_device.c: 722: USBIncrement1msInternalTimers();
 24256  0081A6  EC23  F076         	call	_USBIncrement1msInternalTimers	;wreg free
 24257  0081AA                     
 24258                           ;usb_device.c: 739: if(USBStatusStageTimeoutCounter != 0u)
 24259  0081AA  0101               	movlb	1	; () banked
 24260  0081AC  516F               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 24261  0081AE  B4D8               	btfsc	status,2,c
 24262  0081B0  EFDC  F040         	goto	u15551
 24263  0081B4  EFDE  F040         	goto	u15550
 24264  0081B8                     u15551:
 24265  0081B8  EFDF  F040         	goto	l15082
 24266  0081BC                     u15550:
 24267  0081BC                     
 24268                           ; BSR set to: 1
 24269                           ;usb_device.c: 740: {;usb_device.c: 741: USBStatusStageTimeoutCounter--;
 24270  0081BC  076F               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 24271  0081BE                     l15082:
 24272                           
 24273                           ; BSR set to: 1
 24274                           ;usb_device.c: 742: };usb_device.c: 748: if(USBStatusStageTimeoutCounter == 0)
 24275  0081BE  516F               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 24276  0081C0  A4D8               	btfss	status,2,c
 24277  0081C2  EFE5  F040         	goto	u15561
 24278  0081C6  EFE7  F040         	goto	u15560
 24279  0081CA                     u15561:
 24280  0081CA  EFE9  F040         	goto	l15086
 24281  0081CE                     u15560:
 24282  0081CE                     
 24283                           ; BSR set to: 1
 24284                           ;usb_device.c: 749: {;usb_device.c: 750: USBCtrlEPAllowStatusStage();
 24285  0081CE  EC69  F05D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 24286  0081D2                     l15086:
 24287                           
 24288                           ;usb_device.c: 751: };usb_device.c: 753: };usb_device.c: 755: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 24289  0081D2  AA62               	btfss	98,5,c	;volatile
 24290  0081D4  EFEE  F040         	goto	u15571
 24291  0081D8  EFF0  F040         	goto	u15570
 24292  0081DC                     u15571:
 24293  0081DC  EFFA  F040         	goto	l15092
 24294  0081E0                     u15570:
 24295  0081E0  010F               	movlb	15	; () banked
 24296  0081E2  AB36               	btfss	54,5,b	;volatile
 24297  0081E4  EFF6  F040         	goto	u15581
 24298  0081E8  EFF8  F040         	goto	u15580
 24299  0081EC                     u15581:
 24300  0081EC  EFFA  F040         	goto	l15092
 24301  0081F0                     u15580:
 24302  0081F0                     
 24303                           ; BSR set to: 15
 24304                           ;usb_device.c: 756: {;usb_device.c: 757: USBStallHandler();
 24305  0081F0  ECDB  F070         	call	_USBStallHandler	;wreg free
 24306  0081F4                     l15092:
 24307                           
 24308                           ;usb_device.c: 758: };usb_device.c: 760: if(UIRbits.UERRIF && UIEbits.UERRIE)
 24309  0081F4  A262               	btfss	98,1,c	;volatile
 24310  0081F6  EFFF  F040         	goto	u15591
 24311  0081FA  EF01  F041         	goto	u15590
 24312  0081FE                     u15591:
 24313  0081FE  EF18  F041         	goto	l15100
 24314  008202                     u15590:
 24315  008202  010F               	movlb	15	; () banked
 24316  008204  A336               	btfss	54,1,b	;volatile
 24317  008206  EF07  F041         	goto	u15601
 24318  00820A  EF09  F041         	goto	u15600
 24319  00820E                     u15601:
 24320  00820E  EF18  F041         	goto	l15100
 24321  008212                     u15600:
 24322  008212                     
 24323                           ; BSR set to: 15
 24324                           ;usb_device.c: 761: {;usb_device.c: 762: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVEN
      +                          T_BUS_ERROR,0,1);
 24325  008212  0E7F               	movlw	127
 24326  008214  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24327  008216  681B               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24328  008218  0E00               	movlw	0
 24329  00821A  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24330  00821C  0E00               	movlw	0
 24331  00821E  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24332  008220  0E00               	movlw	0
 24333  008222  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24334  008224  0E01               	movlw	1
 24335  008226  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24336  008228  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24337  00822C                     
 24338                           ;usb_device.c: 763: {UEIR = 0;};
 24339  00822C  0E00               	movlw	0
 24340  00822E  6E63               	movwf	99,c	;volatile
 24341  008230                     l15100:
 24342                           
 24343                           ;usb_device.c: 771: };usb_device.c: 778: if(USBDeviceState < DEFAULT_STATE)
 24344  008230  0E04               	movlw	4
 24345  008232  604F               	cpfslt	_USBDeviceState^0,c
 24346  008234  EF1E  F041         	goto	u15611
 24347  008238  EF20  F041         	goto	u15610
 24348  00823C                     u15611:
 24349  00823C  EF23  F041         	goto	l1881
 24350  008240                     u15610:
 24351  008240                     
 24352                           ;usb_device.c: 779: {;usb_device.c: 780: {PIR2bits.USBIF = 0;};
 24353  008240  98A1               	bcf	161,4,c	;volatile
 24354                           
 24355                           ;usb_device.c: 781: return;
 24356  008242  EF78  F041         	goto	l1864
 24357  008246                     l1881:
 24358                           
 24359                           ;usb_device.c: 782: };usb_device.c: 787: if(UIEbits.TRNIE)
 24360  008246  010F               	movlb	15	; () banked
 24361  008248  A736               	btfss	54,3,b	;volatile
 24362  00824A  EF29  F041         	goto	u15621
 24363  00824E  EF2B  F041         	goto	u15620
 24364  008252                     u15621:
 24365  008252  EF77  F041         	goto	l1882
 24366  008256                     u15620:
 24367  008256                     
 24368                           ; BSR set to: 15
 24369                           ;usb_device.c: 788: {;usb_device.c: 789: for(i = 0; i < 4u; i++)
 24370  008256  0E00               	movlw	0
 24371  008258  6E2B               	movwf	USBDeviceTasks@i^0,c
 24372  00825A                     l1883:
 24373                           
 24374                           ;usb_device.c: 790: {;usb_device.c: 791: if(UIRbits.TRNIF)
 24375  00825A  A662               	btfss	98,3,c	;volatile
 24376  00825C  EF32  F041         	goto	u15631
 24377  008260  EF34  F041         	goto	u15630
 24378  008264                     u15631:
 24379  008264  EF77  F041         	goto	l1882
 24380  008268                     u15630:
 24381  008268                     
 24382                           ;usb_device.c: 792: {;usb_device.c: 794: USTATcopy.Val = USTAT;
 24383  008268  CF64 F050          	movff	3940,_USTATcopy	;volatile
 24384  00826C                     
 24385                           ;usb_device.c: 795: endpoint_number = USTATcopy.endpoint_number;
 24386  00826C  3050               	rrcf	_USTATcopy^0,w,c
 24387  00826E  32E8               	rrcf	wreg,f,c
 24388  008270  32E8               	rrcf	wreg,f,c
 24389  008272  0B0F               	andlw	15
 24390  008274  0101               	movlb	1	; () banked
 24391  008276  6F71               	movwf	_endpoint_number& (0+255),b
 24392  008278                     
 24393                           ; BSR set to: 1
 24394                           ;usb_device.c: 797: (UIR &= 0xF7);
 24395  008278  9662               	bcf	98,3,c	;volatile
 24396  00827A                     
 24397                           ; BSR set to: 1
 24398                           ;usb_device.c: 802: if(USTATcopy.direction == 0)
 24399  00827A  B450               	btfsc	_USTATcopy^0,2,c
 24400  00827C  EF42  F041         	goto	u15641
 24401  008280  EF44  F041         	goto	u15640
 24402  008284                     u15641:
 24403  008284  EF4D  F041         	goto	l15120
 24404  008288                     u15640:
 24405  008288                     
 24406                           ; BSR set to: 1
 24407                           ;usb_device.c: 803: {;usb_device.c: 804: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 24408  008288  0E54               	movlw	low _ep_data_out
 24409  00828A  2571               	addwf	_endpoint_number& (0+255),w,b
 24410  00828C  6ED9               	movwf	fsr2l,c
 24411  00828E  6ADA               	clrf	fsr2h,c
 24412  008290  0E01               	movlw	high _ep_data_out
 24413  008292  22DA               	addwfc	fsr2h,f,c
 24414  008294  70DF               	btg	indf2,0,c
 24415                           
 24416                           ;usb_device.c: 805: }
 24417  008296  EF54  F041         	goto	l15122
 24418  00829A                     l15120:
 24419                           
 24420                           ; BSR set to: 1
 24421                           ;usb_device.c: 806: else;usb_device.c: 807: {;usb_device.c: 808: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 24422  00829A  0E57               	movlw	low _ep_data_in
 24423  00829C  2571               	addwf	_endpoint_number& (0+255),w,b
 24424  00829E  6ED9               	movwf	fsr2l,c
 24425  0082A0  6ADA               	clrf	fsr2h,c
 24426  0082A2  0E01               	movlw	high _ep_data_in
 24427  0082A4  22DA               	addwfc	fsr2h,f,c
 24428  0082A6  70DF               	btg	indf2,0,c
 24429  0082A8                     l15122:
 24430                           
 24431                           ; BSR set to: 1
 24432                           ;usb_device.c: 809: };usb_device.c: 814: if(endpoint_number == 0)
 24433  0082A8  5171               	movf	_endpoint_number& (0+255),w,b
 24434  0082AA  A4D8               	btfss	status,2,c
 24435  0082AC  EF5A  F041         	goto	u15651
 24436  0082B0  EF5C  F041         	goto	u15650
 24437  0082B4                     u15651:
 24438  0082B4  EF60  F041         	goto	l15126
 24439  0082B8                     u15650:
 24440  0082B8                     
 24441                           ; BSR set to: 1
 24442                           ;usb_device.c: 815: {;usb_device.c: 816: USBCtrlEPService();
 24443  0082B8  EC15  F064         	call	_USBCtrlEPService	;wreg free
 24444                           
 24445                           ;usb_device.c: 817: }
 24446  0082BC  EF6E  F041         	goto	l15128
 24447  0082C0                     l15126:
 24448                           
 24449                           ; BSR set to: 1
 24450                           ;usb_device.c: 818: else;usb_device.c: 819: {;usb_device.c: 820: USER_USB_CALLBACK_EVENT
      +                          _HANDLER((USB_EVENT)EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 24451  0082C0  0E00               	movlw	0
 24452  0082C2  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24453  0082C4  0E72               	movlw	114
 24454  0082C6  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24455  0082C8  0E50               	movlw	low _USTATcopy
 24456  0082CA  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24457  0082CC  0E00               	movlw	high _USTATcopy
 24458  0082CE  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24459  0082D0  0E00               	movlw	0
 24460  0082D2  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24461  0082D4  0E00               	movlw	0
 24462  0082D6  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24463  0082D8  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24464  0082DC                     l15128:
 24465  0082DC  2A2B               	incf	USBDeviceTasks@i^0,f,c
 24466  0082DE  0E03               	movlw	3
 24467  0082E0  642B               	cpfsgt	USBDeviceTasks@i^0,c
 24468  0082E2  EF75  F041         	goto	u15661
 24469  0082E6  EF77  F041         	goto	u15660
 24470  0082EA                     u15661:
 24471  0082EA  EF2D  F041         	goto	l1883
 24472  0082EE                     u15660:
 24473  0082EE                     l1882:
 24474                           
 24475                           ;usb_device.c: 826: };usb_device.c: 827: };usb_device.c: 828: };usb_device.c: 830: {PIR2
      +                          bits.USBIF = 0;};
 24476  0082EE  98A1               	bcf	161,4,c	;volatile
 24477  0082F0                     l1864:
 24478  0082F0  0012               	return		;funcret
 24479  0082F2                     __end_of_USBDeviceTasks:
 24480                           	callstack 0
 24481                           
 24482 ;; *************** function _USBWakeFromSuspend *****************
 24483 ;; Defined at:
 24484 ;;		line 2310 in file "usb/usb_device.c"
 24485 ;; Parameters:    Size  Location     Type
 24486 ;;		None
 24487 ;; Auto vars:     Size  Location     Type
 24488 ;;		None
 24489 ;; Return value:  Size  Location     Type
 24490 ;;                  1    wreg      void 
 24491 ;; Registers used:
 24492 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24493 ;; Tracked objects:
 24494 ;;		On entry : 0/0
 24495 ;;		On exit  : 0/0
 24496 ;;		Unchanged: 0/0
 24497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24502 ;;Total ram usage:        0 bytes
 24503 ;; Hardware stack levels used: 1
 24504 ;; Hardware stack levels required when called: 7
 24505 ;; This function calls:
 24506 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24507 ;; This function is called by:
 24508 ;;		_USBDeviceTasks
 24509 ;; This function uses a non-reentrant model
 24510 ;;
 24511                           
 24512                           	psect	text105
 24513  00EA0C                     __ptext105:
 24514                           	callstack 0
 24515  00EA0C                     _USBWakeFromSuspend:
 24516                           	callstack 22
 24517  00EA0C                     
 24518                           ;usb_device.c: 2312: USBBusIsSuspended = 0;
 24519  00EA0C  0E00               	movlw	0
 24520  00EA0E  0101               	movlb	1	; () banked
 24521  00EA10  6F72               	movwf	_USBBusIsSuspended& (0+255),b
 24522  00EA12                     
 24523                           ; BSR set to: 1
 24524                           ;usb_device.c: 2318: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_RESUME,0,0);
 24525  00EA12  0E00               	movlw	0
 24526  00EA14  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24527  00EA16  0E74               	movlw	116
 24528  00EA18  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24529  00EA1A  0E00               	movlw	0
 24530  00EA1C  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24531  00EA1E  0E00               	movlw	0
 24532  00EA20  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24533  00EA22  0E00               	movlw	0
 24534  00EA24  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24535  00EA26  0E00               	movlw	0
 24536  00EA28  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24537  00EA2A  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24538  00EA2E                     
 24539                           ;usb_device.c: 2325: UCONbits.SUSPND = 0;
 24540  00EA2E  9265               	bcf	101,1,c	;volatile
 24541  00EA30                     
 24542                           ;usb_device.c: 2330: UIEbits.ACTVIE = 0;
 24543  00EA30  010F               	movlb	15	; () banked
 24544  00EA32  9536               	bcf	54,2,b	;volatile
 24545                           
 24546                           ;usb_device.c: 2348: while(UIRbits.ACTVIF)
 24547  00EA34  EF1D  F075         	goto	l14828
 24548  00EA38                     l14826:
 24549                           
 24550                           ;usb_device.c: 2350: {;usb_device.c: 2351: (UIR &= 0xFB);
 24551  00EA38  9462               	bcf	98,2,c	;volatile
 24552  00EA3A                     l14828:
 24553  00EA3A  B462               	btfsc	98,2,c	;volatile
 24554  00EA3C  EF22  F075         	goto	u15271
 24555  00EA40  EF24  F075         	goto	u15270
 24556  00EA44                     u15271:
 24557  00EA44  EF1C  F075         	goto	l14826
 24558  00EA48                     u15270:
 24559  00EA48                     
 24560                           ;usb_device.c: 2352: };usb_device.c: 2354: USBTicksSinceSuspendEnd = 0;
 24561  00EA48  0E00               	movlw	0
 24562  00EA4A  0101               	movlb	1	; () banked
 24563  00EA4C  6F6A               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 24564  00EA4E                     
 24565                           ; BSR set to: 1
 24566  00EA4E  0012               	return		;funcret
 24567  00EA50                     __end_of_USBWakeFromSuspend:
 24568                           	callstack 0
 24569                           
 24570 ;; *************** function _USBSuspend *****************
 24571 ;; Defined at:
 24572 ;;		line 2252 in file "usb/usb_device.c"
 24573 ;; Parameters:    Size  Location     Type
 24574 ;;		None
 24575 ;; Auto vars:     Size  Location     Type
 24576 ;;		None
 24577 ;; Return value:  Size  Location     Type
 24578 ;;                  1    wreg      void 
 24579 ;; Registers used:
 24580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24581 ;; Tracked objects:
 24582 ;;		On entry : 0/0
 24583 ;;		On exit  : 0/0
 24584 ;;		Unchanged: 0/0
 24585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24590 ;;Total ram usage:        0 bytes
 24591 ;; Hardware stack levels used: 1
 24592 ;; Hardware stack levels required when called: 7
 24593 ;; This function calls:
 24594 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 24595 ;; This function is called by:
 24596 ;;		_USBDeviceTasks
 24597 ;; This function uses a non-reentrant model
 24598 ;;
 24599                           
 24600                           	psect	text106
 24601  00ED10                     __ptext106:
 24602                           	callstack 0
 24603  00ED10                     _USBSuspend:
 24604                           	callstack 22
 24605  00ED10                     
 24606                           ;usb_device.c: 2277: UIEbits.ACTVIE = 1;
 24607  00ED10  010F               	movlb	15	; () banked
 24608  00ED12  8536               	bsf	54,2,b	;volatile
 24609  00ED14                     
 24610                           ; BSR set to: 15
 24611                           ;usb_device.c: 2278: (UIR &= 0xEF);
 24612  00ED14  9862               	bcf	98,4,c	;volatile
 24613  00ED16                     
 24614                           ; BSR set to: 15
 24615                           ;usb_device.c: 2281: UCONbits.SUSPND = 1;
 24616  00ED16  8265               	bsf	101,1,c	;volatile
 24617  00ED18                     
 24618                           ; BSR set to: 15
 24619                           ;usb_device.c: 2284: USBBusIsSuspended = 1;
 24620  00ED18  0E01               	movlw	1
 24621  00ED1A  0101               	movlb	1	; () banked
 24622  00ED1C  6F72               	movwf	_USBBusIsSuspended& (0+255),b
 24623  00ED1E                     
 24624                           ; BSR set to: 1
 24625                           ;usb_device.c: 2285: USBTicksSinceSuspendEnd = 0;
 24626  00ED1E  0E00               	movlw	0
 24627  00ED20  6F6A               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 24628  00ED22                     
 24629                           ; BSR set to: 1
 24630                           ;usb_device.c: 2292: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_SUSPEND,0,0);
 24631  00ED22  0E00               	movlw	0
 24632  00ED24  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 24633  00ED26  0E75               	movlw	117
 24634  00ED28  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 24635  00ED2A  0E00               	movlw	0
 24636  00ED2C  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 24637  00ED2E  0E00               	movlw	0
 24638  00ED30  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 24639  00ED32  0E00               	movlw	0
 24640  00ED34  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 24641  00ED36  0E00               	movlw	0
 24642  00ED38  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 24643  00ED3A  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 24644  00ED3E  0012               	return		;funcret
 24645  00ED40                     __end_of_USBSuspend:
 24646                           	callstack 0
 24647                           
 24648 ;; *************** function _USBStallHandler *****************
 24649 ;; Defined at:
 24650 ;;		line 2209 in file "usb/usb_device.c"
 24651 ;; Parameters:    Size  Location     Type
 24652 ;;		None
 24653 ;; Auto vars:     Size  Location     Type
 24654 ;;		None
 24655 ;; Return value:  Size  Location     Type
 24656 ;;                  1    wreg      void 
 24657 ;; Registers used:
 24658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24659 ;; Tracked objects:
 24660 ;;		On entry : 0/0
 24661 ;;		On exit  : 0/0
 24662 ;;		Unchanged: 0/0
 24663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24666 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24667 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24668 ;;Total ram usage:        1 bytes
 24669 ;; Hardware stack levels used: 1
 24670 ;; Hardware stack levels required when called: 3
 24671 ;; This function calls:
 24672 ;;		Nothing
 24673 ;; This function is called by:
 24674 ;;		_USBDeviceTasks
 24675 ;; This function uses a non-reentrant model
 24676 ;;
 24677                           
 24678                           	psect	text107
 24679  00E1B6                     __ptext107:
 24680                           	callstack 0
 24681  00E1B6                     _USBStallHandler:
 24682                           	callstack 26
 24683  00E1B6                     
 24684                           ;usb_device.c: 2221: if(UEP0bits.EPSTALL == 1)
 24685  00E1B6  010F               	movlb	15	; () banked
 24686  00E1B8  A126               	btfss	38,0,b	;volatile
 24687  00E1BA  EFE1  F070         	goto	u15301
 24688  00E1BE  EFE3  F070         	goto	u15300
 24689  00E1C2                     u15301:
 24690  00E1C2  EF0A  F071         	goto	l2011
 24691  00E1C6                     u15300:
 24692  00E1C6                     
 24693                           ; BSR set to: 15
 24694                           ;usb_device.c: 2222: {;usb_device.c: 2224: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 24695  00E1C6  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24696  00E1CA  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24697  00E1CE  0E80               	movlw	128
 24698  00E1D0  18DE               	xorwf	postinc2,w,c
 24699  00E1D2  A4D8               	btfss	status,2,c
 24700  00E1D4  EFEE  F070         	goto	u15311
 24701  00E1D8  EFF0  F070         	goto	u15310
 24702  00E1DC                     u15311:
 24703  00E1DC  EF09  F071         	goto	l14864
 24704  00E1E0                     u15310:
 24705  00E1E0                     
 24706                           ; BSR set to: 15
 24707  00E1E0  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 24708  00E1E4  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 24709  00E1E8  0E84               	movlw	132
 24710  00E1EA  18DE               	xorwf	postinc2,w,c
 24711  00E1EC  A4D8               	btfss	status,2,c
 24712  00E1EE  EFFB  F070         	goto	u15321
 24713  00E1F2  EFFD  F070         	goto	u15320
 24714  00E1F6                     u15321:
 24715  00E1F6  EF09  F071         	goto	l14864
 24716  00E1FA                     u15320:
 24717  00E1FA                     
 24718                           ; BSR set to: 15
 24719                           ;usb_device.c: 2225: {;usb_device.c: 2227: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 24720  00E1FA  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24721  00E1FE  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24722  00E202  0E0C               	movlw	12
 24723  00E204  6EDF               	movwf	indf2,c
 24724  00E206                     
 24725                           ; BSR set to: 15
 24726                           ;usb_device.c: 2228: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 24727  00E206  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 24728  00E20A  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 24729  00E20E  0E00               	movlw	0
 24730  00E210  8EDB               	bsf	plusw2,7,c
 24731  00E212                     l14864:
 24732                           
 24733                           ; BSR set to: 15
 24734                           ;usb_device.c: 2229: };usb_device.c: 2230: UEP0bits.EPSTALL = 0;
 24735  00E212  9126               	bcf	38,0,b	;volatile
 24736  00E214                     l2011:
 24737                           
 24738                           ; BSR set to: 15
 24739                           ;usb_device.c: 2231: };usb_device.c: 2233: (UIR &= 0xDF);
 24740  00E214  9A62               	bcf	98,5,c	;volatile
 24741  00E216                     
 24742                           ; BSR set to: 15
 24743  00E216  0012               	return		;funcret
 24744  00E218                     __end_of_USBStallHandler:
 24745                           	callstack 0
 24746                           
 24747 ;; *************** function _USBIncrement1msInternalTimers *****************
 24748 ;; Defined at:
 24749 ;;		line 2998 in file "usb/usb_device.c"
 24750 ;; Parameters:    Size  Location     Type
 24751 ;;		None
 24752 ;; Auto vars:     Size  Location     Type
 24753 ;;		None
 24754 ;; Return value:  Size  Location     Type
 24755 ;;                  1    wreg      void 
 24756 ;; Registers used:
 24757 ;;		wreg, status,2, status,0
 24758 ;; Tracked objects:
 24759 ;;		On entry : 0/0
 24760 ;;		On exit  : 0/0
 24761 ;;		Unchanged: 0/0
 24762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24767 ;;Total ram usage:        0 bytes
 24768 ;; Hardware stack levels used: 1
 24769 ;; Hardware stack levels required when called: 3
 24770 ;; This function calls:
 24771 ;;		Nothing
 24772 ;; This function is called by:
 24773 ;;		_USBDeviceTasks
 24774 ;; This function uses a non-reentrant model
 24775 ;;
 24776                           
 24777                           	psect	text108
 24778  00EC46                     __ptext108:
 24779                           	callstack 0
 24780  00EC46                     _USBIncrement1msInternalTimers:
 24781                           	callstack 26
 24782  00EC46                     
 24783                           ;usb_device.c: 3006: USB1msTickCount++;
 24784  00EC46  0E01               	movlw	1
 24785  00EC48  0101               	movlb	1	; () banked
 24786  00EC4A  272E               	addwf	_USB1msTickCount& (0+255),f,b
 24787  00EC4C  0E00               	movlw	0
 24788  00EC4E  232F               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 24789  00EC50  2330               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 24790  00EC52  2331               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 24791  00EC54                     
 24792                           ; BSR set to: 1
 24793                           ;usb_device.c: 3007: if(USBBusIsSuspended == 0)
 24794  00EC54  5172               	movf	_USBBusIsSuspended& (0+255),w,b
 24795  00EC56  A4D8               	btfss	status,2,c
 24796  00EC58  EF30  F076         	goto	u15281
 24797  00EC5C  EF32  F076         	goto	u15280
 24798  00EC60                     u15281:
 24799  00EC60  EF3C  F076         	goto	l2103
 24800  00EC64                     u15280:
 24801  00EC64                     
 24802                           ; BSR set to: 1
 24803                           ;usb_device.c: 3008: {;usb_device.c: 3009: USBTicksSinceSuspendEnd++;
 24804  00EC64  2B6A               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 24805  00EC66                     
 24806                           ; BSR set to: 1
 24807                           ;usb_device.c: 3011: if(USBTicksSinceSuspendEnd == 0)
 24808  00EC66  516A               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 24809  00EC68  A4D8               	btfss	status,2,c
 24810  00EC6A  EF39  F076         	goto	u15291
 24811  00EC6E  EF3B  F076         	goto	u15290
 24812  00EC72                     u15291:
 24813  00EC72  EF3C  F076         	goto	l2103
 24814  00EC76                     u15290:
 24815  00EC76                     
 24816                           ; BSR set to: 1
 24817                           ;usb_device.c: 3012: {;usb_device.c: 3013: USBTicksSinceSuspendEnd = 255;
 24818  00EC76  696A               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 24819  00EC78                     l2103:
 24820                           
 24821                           ; BSR set to: 1
 24822  00EC78  0012               	return		;funcret
 24823  00EC7A                     __end_of_USBIncrement1msInternalTimers:
 24824                           	callstack 0
 24825                           
 24826 ;; *************** function _USBDeviceInit *****************
 24827 ;; Defined at:
 24828 ;;		line 281 in file "usb/usb_device.c"
 24829 ;; Parameters:    Size  Location     Type
 24830 ;;		None
 24831 ;; Auto vars:     Size  Location     Type
 24832 ;;  i               1   22[COMRAM] unsigned char 
 24833 ;; Return value:  Size  Location     Type
 24834 ;;                  1    wreg      void 
 24835 ;; Registers used:
 24836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24837 ;; Tracked objects:
 24838 ;;		On entry : 0/0
 24839 ;;		On exit  : 0/0
 24840 ;;		Unchanged: 0/0
 24841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24846 ;;Total ram usage:        1 bytes
 24847 ;; Hardware stack levels used: 1
 24848 ;; Hardware stack levels required when called: 4
 24849 ;; This function calls:
 24850 ;;		_memset
 24851 ;; This function is called by:
 24852 ;;		_main
 24853 ;;		_USBDeviceTasks
 24854 ;; This function uses a non-reentrant model
 24855 ;;
 24856                           
 24857                           	psect	text109
 24858  00A19E                     __ptext109:
 24859                           	callstack 0
 24860  00A19E                     _USBDeviceInit:
 24861                           	callstack 25
 24862  00A19E                     
 24863                           ;usb_device.c: 283: uint8_t i;;usb_device.c: 285: {PIE2bits.USBIE = 0;};
 24864  00A19E  98A0               	bcf	160,4,c	;volatile
 24865  00A1A0                     
 24866                           ;usb_device.c: 289: ;;usb_device.c: 292: {UEIR = 0;};
 24867  00A1A0  0E00               	movlw	0
 24868  00A1A2  6E63               	movwf	99,c	;volatile
 24869                           
 24870                           ;usb_device.c: 295: {UIR = 0;};
 24871  00A1A4  0E00               	movlw	0
 24872  00A1A6  6E62               	movwf	98,c	;volatile
 24873                           
 24874                           ;usb_device.c: 298: UEP0 = 0;
 24875  00A1A8  0E00               	movlw	0
 24876  00A1AA  010F               	movlb	15	; () banked
 24877  00A1AC  6F26               	movwf	38,b	;volatile
 24878  00A1AE                     
 24879                           ; BSR set to: 15
 24880                           ;usb_device.c: 300: memset((void*)&UEP1,0x00,(2));;
 24881  00A1AE  0E27               	movlw	39
 24882  00A1B0  6E0F               	movwf	memset@p1^0,c
 24883  00A1B2  0E0F               	movlw	15
 24884  00A1B4  6E10               	movwf	(memset@p1+1)^0,c
 24885  00A1B6  0E00               	movlw	0
 24886  00A1B8  6E12               	movwf	(memset@c+1)^0,c
 24887  00A1BA  0E00               	movlw	0
 24888  00A1BC  6E11               	movwf	memset@c^0,c
 24889  00A1BE  0E00               	movlw	0
 24890  00A1C0  6E14               	movwf	(memset@n+1)^0,c
 24891  00A1C2  0E02               	movlw	2
 24892  00A1C4  6E13               	movwf	memset@n^0,c
 24893  00A1C6  EC9A  F075         	call	_memset	;wreg free
 24894  00A1CA                     
 24895                           ;usb_device.c: 302: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 24896  00A1CA  0E16               	movlw	22
 24897  00A1CC  010F               	movlb	15	; () banked
 24898  00A1CE  6F39               	movwf	57,b	;volatile
 24899  00A1D0                     
 24900                           ; BSR set to: 15
 24901  00A1D0  0E9F               	movlw	159
 24902  00A1D2  6F37               	movwf	55,b	;volatile
 24903  00A1D4                     
 24904                           ; BSR set to: 15
 24905  00A1D4  0E7B               	movlw	123
 24906  00A1D6  6F36               	movwf	54,b	;volatile
 24907  00A1D8                     
 24908                           ; BSR set to: 15
 24909                           ;usb_device.c: 305: ;;usb_device.c: 308: ;;usb_device.c: 311: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 24910  00A1D8  0E00               	movlw	0
 24911  00A1DA  6E17               	movwf	USBDeviceInit@i^0,c
 24912  00A1DC                     l13670:
 24913                           
 24914                           ;usb_device.c: 312: {;usb_device.c: 313: BDT[i].Val = 0x00;
 24915  00A1DC  5017               	movf	USBDeviceInit@i^0,w,c
 24916  00A1DE  0D04               	mullw	4
 24917  00A1E0  0E00               	movlw	0
 24918  00A1E2  24F3               	addwf	243,w,c
 24919  00A1E4  6ED9               	movwf	fsr2l,c
 24920  00A1E6  0E04               	movlw	4
 24921  00A1E8  20F4               	addwfc	prodh,w,c
 24922  00A1EA  6EDA               	movwf	fsr2h,c
 24923  00A1EC  6ADE               	clrf	postinc2,c
 24924  00A1EE  6ADE               	clrf	postinc2,c
 24925  00A1F0  6ADE               	clrf	postinc2,c
 24926  00A1F2  6ADD               	clrf	postdec2,c
 24927  00A1F4  2A17               	incf	USBDeviceInit@i^0,f,c
 24928  00A1F6  0E0B               	movlw	11
 24929  00A1F8  6417               	cpfsgt	USBDeviceInit@i^0,c
 24930  00A1FA  EF01  F051         	goto	u13651
 24931  00A1FE  EF03  F051         	goto	u13650
 24932  00A202                     u13651:
 24933  00A202  EFEE  F050         	goto	l13670
 24934  00A206                     u13650:
 24935  00A206                     
 24936                           ;usb_device.c: 314: };usb_device.c: 317: UCONbits.PPBRST = 1;
 24937  00A206  8C65               	bsf	101,6,c	;volatile
 24938  00A208                     
 24939                           ;usb_device.c: 320: UADDR = 0x00;
 24940  00A208  0E00               	movlw	0
 24941  00A20A  010F               	movlb	15	; () banked
 24942  00A20C  6F38               	movwf	56,b	;volatile
 24943  00A20E                     
 24944                           ; BSR set to: 15
 24945                           ;usb_device.c: 323: UCONbits.PKTDIS = 0;
 24946  00A20E  9865               	bcf	101,4,c	;volatile
 24947  00A210                     
 24948                           ; BSR set to: 15
 24949                           ;usb_device.c: 326: UCONbits.PPBRST = 0;
 24950  00A210  9C65               	bcf	101,6,c	;volatile
 24951  00A212                     l13682:
 24952                           
 24953                           ;usb_device.c: 330: {;usb_device.c: 331: (UIR &= 0xF7);
 24954  00A212  9662               	bcf	98,3,c	;volatile
 24955  00A214                     
 24956                           ;usb_device.c: 333: inPipes[0].info.Val = 0;
 24957  00A214  0E00               	movlw	0
 24958  00A216  6E44               	movwf	(_inPipes+3)^0,c
 24959  00A218                     
 24960                           ;usb_device.c: 334: outPipes[0].info.Val = 0;
 24961  00A218  0E00               	movlw	0
 24962  00A21A  0101               	movlb	1	; () banked
 24963  00A21C  6F1E               	movwf	(_outPipes+3)& (0+255),b
 24964  00A21E                     
 24965                           ; BSR set to: 1
 24966                           ;usb_device.c: 335: outPipes[0].wCount.Val = 0;
 24967  00A21E  0E00               	movlw	0
 24968  00A220  6F20               	movwf	(_outPipes+5)& (0+255),b
 24969  00A222  0E00               	movlw	0
 24970  00A224  6F1F               	movwf	(_outPipes+4)& (0+255),b
 24971  00A226                     
 24972                           ; BSR set to: 1
 24973                           ;usb_device.c: 336: }while(UIRbits.TRNIF == 1);
 24974  00A226  B662               	btfsc	98,3,c	;volatile
 24975  00A228  EF18  F051         	goto	u13661
 24976  00A22C  EF1A  F051         	goto	u13660
 24977  00A230                     u13661:
 24978  00A230  EF09  F051         	goto	l13682
 24979  00A234                     u13660:
 24980  00A234                     
 24981                           ; BSR set to: 1
 24982                           ;usb_device.c: 340: USBStatusStageEnabledFlag1 = 1;
 24983  00A234  0E01               	movlw	1
 24984  00A236  6F6E               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 24985                           
 24986                           ;usb_device.c: 341: USBStatusStageEnabledFlag2 = 1;
 24987  00A238  0E01               	movlw	1
 24988  00A23A  6F6D               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 24989                           
 24990                           ;usb_device.c: 343: USBDeferINDataStagePackets = 0;
 24991  00A23C  0E00               	movlw	0
 24992  00A23E  6F6C               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 24993                           
 24994                           ;usb_device.c: 344: USBDeferOUTDataStagePackets = 0;
 24995  00A240  0E00               	movlw	0
 24996  00A242  6F6B               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 24997                           
 24998                           ;usb_device.c: 345: USBBusIsSuspended = 0;
 24999  00A244  0E00               	movlw	0
 25000  00A246  6F72               	movwf	_USBBusIsSuspended& (0+255),b
 25001                           
 25002                           ;usb_device.c: 349: for(i = 0; i < (uint8_t)(2+1u); i++)
 25003  00A248  0E00               	movlw	0
 25004  00A24A  6E17               	movwf	USBDeviceInit@i^0,c
 25005  00A24C                     l13698:
 25006                           
 25007                           ;usb_device.c: 350: {;usb_device.c: 351: pBDTEntryIn[i] = 0u;
 25008  00A24C  5017               	movf	USBDeviceInit@i^0,w,c
 25009  00A24E  0D02               	mullw	2
 25010  00A250  0EF8               	movlw	low _pBDTEntryIn
 25011  00A252  24F3               	addwf	243,w,c
 25012  00A254  6ED9               	movwf	fsr2l,c
 25013  00A256  0E00               	movlw	high _pBDTEntryIn
 25014  00A258  20F4               	addwfc	prodh,w,c
 25015  00A25A  6EDA               	movwf	fsr2h,c
 25016  00A25C  0E00               	movlw	0
 25017  00A25E  6EDE               	movwf	postinc2,c
 25018  00A260  0E00               	movlw	0
 25019  00A262  6EDD               	movwf	postdec2,c
 25020                           
 25021                           ;usb_device.c: 352: pBDTEntryOut[i] = 0u;
 25022  00A264  5017               	movf	USBDeviceInit@i^0,w,c
 25023  00A266  0D02               	mullw	2
 25024  00A268  0E23               	movlw	low _pBDTEntryOut
 25025  00A26A  24F3               	addwf	243,w,c
 25026  00A26C  6ED9               	movwf	fsr2l,c
 25027  00A26E  0E01               	movlw	high _pBDTEntryOut
 25028  00A270  20F4               	addwfc	prodh,w,c
 25029  00A272  6EDA               	movwf	fsr2h,c
 25030  00A274  0E00               	movlw	0
 25031  00A276  6EDE               	movwf	postinc2,c
 25032  00A278  0E00               	movlw	0
 25033  00A27A  6EDD               	movwf	postdec2,c
 25034  00A27C                     
 25035                           ;usb_device.c: 353: ep_data_in[i].Val = 0u;
 25036  00A27C  0E57               	movlw	low _ep_data_in
 25037  00A27E  2417               	addwf	USBDeviceInit@i^0,w,c
 25038  00A280  6ED9               	movwf	fsr2l,c
 25039  00A282  6ADA               	clrf	fsr2h,c
 25040  00A284  0E01               	movlw	high _ep_data_in
 25041  00A286  22DA               	addwfc	fsr2h,f,c
 25042  00A288  0E00               	movlw	0
 25043  00A28A  6EDF               	movwf	indf2,c
 25044  00A28C                     
 25045                           ;usb_device.c: 354: ep_data_out[i].Val = 0u;
 25046  00A28C  0E54               	movlw	low _ep_data_out
 25047  00A28E  2417               	addwf	USBDeviceInit@i^0,w,c
 25048  00A290  6ED9               	movwf	fsr2l,c
 25049  00A292  6ADA               	clrf	fsr2h,c
 25050  00A294  0E01               	movlw	high _ep_data_out
 25051  00A296  22DA               	addwfc	fsr2h,f,c
 25052  00A298  0E00               	movlw	0
 25053  00A29A  6EDF               	movwf	indf2,c
 25054  00A29C  2A17               	incf	USBDeviceInit@i^0,f,c
 25055  00A29E  0E02               	movlw	2
 25056  00A2A0  6417               	cpfsgt	USBDeviceInit@i^0,c
 25057  00A2A2  EF55  F051         	goto	u13671
 25058  00A2A6  EF57  F051         	goto	u13670
 25059  00A2AA                     u13671:
 25060  00A2AA  EF26  F051         	goto	l13698
 25061  00A2AE                     u13670:
 25062  00A2AE                     
 25063                           ;usb_device.c: 355: };usb_device.c: 358: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 25064  00A2AE  0E08               	movlw	8
 25065  00A2B0  0100               	movlb	0	; () banked
 25066  00A2B2  6FF8               	movwf	_pBDTEntryIn& (0+255),b
 25067  00A2B4  0E04               	movlw	4
 25068  00A2B6  6FF9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25069  00A2B8                     
 25070                           ; BSR set to: 0
 25071                           ;usb_device.c: 360: UEP0 = 0x06|0x10;
 25072  00A2B8  0E16               	movlw	22
 25073  00A2BA  010F               	movlb	15	; () banked
 25074  00A2BC  6F26               	movwf	38,b	;volatile
 25075  00A2BE                     
 25076                           ; BSR set to: 15
 25077                           ;usb_device.c: 362: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 25078  00A2BE  0E04               	movlw	4
 25079  00A2C0  0104               	movlb	4	; () banked
 25080  00A2C2  6F03               	movwf	3,b	;volatile
 25081  00A2C4  0E30               	movlw	48
 25082  00A2C6  6F02               	movwf	2,b	;volatile
 25083  00A2C8                     
 25084                           ; BSR set to: 4
 25085                           ;usb_device.c: 363: BDT[0].CNT = 8;
 25086  00A2C8  0E08               	movlw	8
 25087  00A2CA  6F01               	movwf	1,b	;volatile
 25088  00A2CC                     
 25089                           ; BSR set to: 4
 25090                           ;usb_device.c: 364: BDT[0].STAT.Val = 0x00|0x04;
 25091  00A2CC  0E04               	movlw	4
 25092  00A2CE  6F00               	movwf	0,b	;volatile
 25093  00A2D0                     
 25094                           ; BSR set to: 4
 25095                           ;usb_device.c: 365: BDT[0].STAT.Val |= 0x80;
 25096  00A2D0  8F00               	bsf	0,7,b	;volatile
 25097  00A2D2                     
 25098                           ; BSR set to: 4
 25099                           ;usb_device.c: 368: USBActiveConfiguration = 0;
 25100  00A2D2  0E00               	movlw	0
 25101  00A2D4  0101               	movlb	1	; () banked
 25102  00A2D6  6FF7               	movwf	_USBActiveConfiguration& (0+255),b
 25103  00A2D8                     
 25104                           ; BSR set to: 1
 25105                           ;usb_device.c: 370: USB1msTickCount = 0;
 25106  00A2D8  0E00               	movlw	0
 25107  00A2DA  6F2E               	movwf	_USB1msTickCount& (0+255),b
 25108  00A2DC  0E00               	movlw	0
 25109  00A2DE  6F2F               	movwf	(_USB1msTickCount+1)& (0+255),b
 25110  00A2E0  0E00               	movlw	0
 25111  00A2E2  6F30               	movwf	(_USB1msTickCount+2)& (0+255),b
 25112  00A2E4  0E00               	movlw	0
 25113  00A2E6  6F31               	movwf	(_USB1msTickCount+3)& (0+255),b
 25114  00A2E8                     
 25115                           ; BSR set to: 1
 25116                           ;usb_device.c: 371: USBTicksSinceSuspendEnd = 0;
 25117  00A2E8  0E00               	movlw	0
 25118  00A2EA  6F6A               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 25119  00A2EC                     
 25120                           ; BSR set to: 1
 25121                           ;usb_device.c: 374: USBDeviceState = DETACHED_STATE;
 25122  00A2EC  0E00               	movlw	0
 25123  00A2EE  6E4F               	movwf	_USBDeviceState^0,c
 25124  00A2F0                     
 25125                           ; BSR set to: 1
 25126  00A2F0  0012               	return		;funcret
 25127  00A2F2                     __end_of_USBDeviceInit:
 25128                           	callstack 0
 25129                           
 25130 ;; *************** function _USBCtrlEPService *****************
 25131 ;; Defined at:
 25132 ;;		line 2379 in file "usb/usb_device.c"
 25133 ;; Parameters:    Size  Location     Type
 25134 ;;		None
 25135 ;; Auto vars:     Size  Location     Type
 25136 ;;		None
 25137 ;; Return value:  Size  Location     Type
 25138 ;;                  1    wreg      void 
 25139 ;; Registers used:
 25140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25141 ;; Tracked objects:
 25142 ;;		On entry : 0/0
 25143 ;;		On exit  : 0/0
 25144 ;;		Unchanged: 0/0
 25145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25150 ;;Total ram usage:        1 bytes
 25151 ;; Hardware stack levels used: 1
 25152 ;; Hardware stack levels required when called: 10
 25153 ;; This function calls:
 25154 ;;		_USBCtrlTrfInHandler
 25155 ;;		_USBCtrlTrfOutHandler
 25156 ;;		_USBCtrlTrfSetupHandler
 25157 ;;		_memcpy
 25158 ;; This function is called by:
 25159 ;;		_USBDeviceTasks
 25160 ;; This function uses a non-reentrant model
 25161 ;;
 25162                           
 25163                           	psect	text110
 25164  00C82A                     __ptext110:
 25165                           	callstack 0
 25166  00C82A                     _USBCtrlEPService:
 25167                           	callstack 19
 25168  00C82A                     
 25169                           ;usb_device.c: 2385: USBStatusStageTimeoutCounter = (uint8_t)45;
 25170  00C82A  0E2D               	movlw	45
 25171  00C82C  0101               	movlb	1	; () banked
 25172  00C82E  6F6F               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 25173  00C830                     
 25174                           ; BSR set to: 1
 25175                           ;usb_device.c: 2389: if((USTATcopy.Val & ~0x02) == 0x00)
 25176  00C830  C050  F02A         	movff	_USTATcopy,??_USBCtrlEPService
 25177  00C834  0EFD               	movlw	253
 25178  00C836  162A               	andwf	??_USBCtrlEPService^0,f,c
 25179  00C838  A4D8               	btfss	status,2,c
 25180  00C83A  EF21  F064         	goto	u15331
 25181  00C83E  EF23  F064         	goto	u15330
 25182  00C842                     u15331:
 25183  00C842  EF65  F064         	goto	l14884
 25184  00C846                     u15330:
 25185  00C846                     
 25186                           ; BSR set to: 1
 25187                           ;usb_device.c: 2390: {;usb_device.c: 2393: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 25188  00C846  C050  F02A         	movff	_USTATcopy,??_USBCtrlEPService
 25189  00C84A  90D8               	bcf	status,0,c
 25190  00C84C  322A               	rrcf	??_USBCtrlEPService^0,f,c
 25191  00C84E  0E3F               	movlw	63
 25192  00C850  162A               	andwf	??_USBCtrlEPService^0,f,c
 25193  00C852  502A               	movf	??_USBCtrlEPService^0,w,c
 25194  00C854  0D04               	mullw	4
 25195  00C856  0E00               	movlw	0
 25196  00C858  24F3               	addwf	243,w,c
 25197  00C85A  6E49               	movwf	_pBDTEntryEP0OutCurrent^0,c
 25198  00C85C  0E04               	movlw	4
 25199  00C85E  20F4               	addwfc	prodh,w,c
 25200  00C860  6E4A               	movwf	(_pBDTEntryEP0OutCurrent+1)^0,c
 25201  00C862                     
 25202                           ; BSR set to: 1
 25203                           ;usb_device.c: 2401: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 25204  00C862  C049  F047         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 25205  00C866  C04A  F048         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 25206  00C86A                     
 25207                           ; BSR set to: 1
 25208                           ;usb_device.c: 2403: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 25209  00C86A  0E04               	movlw	4
 25210  00C86C  1847               	xorwf	_pBDTEntryEP0OutNext^0,w,c
 25211  00C86E  6E47               	movwf	_pBDTEntryEP0OutNext^0,c
 25212  00C870  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25213  00C872  6E48               	movwf	(_pBDTEntryEP0OutNext+1)^0,c
 25214  00C874                     
 25215                           ; BSR set to: 1
 25216                           ;usb_device.c: 2406: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 25217  00C874  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 25218  00C878  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 25219  00C87C  30DF               	rrcf	indf2,w,c
 25220  00C87E  32E8               	rrcf	wreg,f,c
 25221  00C880  0B0F               	andlw	15
 25222  00C882  0A0D               	xorlw	13
 25223  00C884  A4D8               	btfss	status,2,c
 25224  00C886  EF47  F064         	goto	u15341
 25225  00C88A  EF49  F064         	goto	u15340
 25226  00C88E                     u15341:
 25227  00C88E  EF61  F064         	goto	l14882
 25228  00C892                     u15340:
 25229  00C892                     
 25230                           ; BSR set to: 1
 25231                           ;usb_device.c: 2407: {;usb_device.c: 2412: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 25232  00C892  0E30               	movlw	48
 25233  00C894  6E0F               	movwf	memcpy@d1^0,c
 25234  00C896  0E04               	movlw	4
 25235  00C898  6E10               	movwf	(memcpy@d1+1)^0,c
 25236  00C89A  EE20 F002          	lfsr	2,2
 25237  00C89E  5049               	movf	_pBDTEntryEP0OutCurrent^0,w,c
 25238  00C8A0  26D9               	addwf	fsr2l,f,c
 25239  00C8A2  504A               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
 25240  00C8A4  22DA               	addwfc	fsr2h,f,c
 25241  00C8A6  CFDE F011          	movff	postinc2,memcpy@s1
 25242  00C8AA  CFDD F012          	movff	postdec2,memcpy@s1+1
 25243  00C8AE  0E00               	movlw	0
 25244  00C8B0  6E14               	movwf	(memcpy@n+1)^0,c
 25245  00C8B2  0E08               	movlw	8
 25246  00C8B4  6E13               	movwf	memcpy@n^0,c
 25247  00C8B6  EC47  F073         	call	_memcpy	;wreg free
 25248  00C8BA                     
 25249                           ;usb_device.c: 2415: USBCtrlTrfSetupHandler();
 25250  00C8BA  EC75  F069         	call	_USBCtrlTrfSetupHandler	;wreg free
 25251                           
 25252                           ;usb_device.c: 2416: }
 25253  00C8BE  EF71  F064         	goto	l2030
 25254  00C8C2                     l14882:
 25255                           
 25256                           ; BSR set to: 1
 25257                           ;usb_device.c: 2417: else;usb_device.c: 2418: {;usb_device.c: 2420: USBCtrlTrfOutHandler
      +                          ();
 25258  00C8C2  ECE0  F06C         	call	_USBCtrlTrfOutHandler	;wreg free
 25259  00C8C6  EF71  F064         	goto	l2030
 25260  00C8CA                     l14884:
 25261                           
 25262                           ; BSR set to: 1
 25263                           ;usb_device.c: 2423: else if((USTATcopy.Val & ~0x02) == 0x04)
 25264  00C8CA  5050               	movf	_USTATcopy^0,w,c
 25265  00C8CC  0BFD               	andlw	253
 25266  00C8CE  0A04               	xorlw	4
 25267  00C8D0  A4D8               	btfss	status,2,c
 25268  00C8D2  EF6D  F064         	goto	u15351
 25269  00C8D6  EF6F  F064         	goto	u15350
 25270  00C8DA                     u15351:
 25271  00C8DA  EF71  F064         	goto	l2030
 25272  00C8DE                     u15350:
 25273  00C8DE                     
 25274                           ; BSR set to: 1
 25275                           ;usb_device.c: 2424: {;usb_device.c: 2427: USBCtrlTrfInHandler();
 25276  00C8DE  ECCB  F058         	call	_USBCtrlTrfInHandler	;wreg free
 25277  00C8E2                     l2030:
 25278  00C8E2  0012               	return		;funcret
 25279  00C8E4                     __end_of_USBCtrlEPService:
 25280                           	callstack 0
 25281                           
 25282 ;; *************** function _memcpy *****************
 25283 ;; Defined at:
 25284 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
 25285 ;; Parameters:    Size  Location     Type
 25286 ;;  d1              2   14[COMRAM] PTR void 
 25287 ;;		 -> SetupPkt(8), g_nvm.flash(108), g_nvm(109), g_flash_temp(108), 
 25288 ;;  s1              2   16[COMRAM] PTR const void 
 25289 ;;		 -> CtrlTrfData(8), RAM(3775), SetupPkt(8), g_nvm.flash(108), 
 25290 ;;		 -> g_nvm(109), g_flash_temp(108), 
 25291 ;;  n               2   18[COMRAM] unsigned int 
 25292 ;; Auto vars:     Size  Location     Type
 25293 ;;  s               2   22[COMRAM] PTR const unsigned char 
 25294 ;;		 -> CtrlTrfData(8), RAM(3775), SetupPkt(8), g_nvm.flash(108), 
 25295 ;;		 -> g_nvm(109), g_flash_temp(108), 
 25296 ;;  d               2   20[COMRAM] PTR unsigned char 
 25297 ;;		 -> SetupPkt(8), g_nvm.flash(108), g_nvm(109), g_flash_temp(108), 
 25298 ;;  tmp             1   24[COMRAM] unsigned char 
 25299 ;; Return value:  Size  Location     Type
 25300 ;;                  2   14[COMRAM] PTR void 
 25301 ;; Registers used:
 25302 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25303 ;; Tracked objects:
 25304 ;;		On entry : 0/0
 25305 ;;		On exit  : 0/0
 25306 ;;		Unchanged: 0/0
 25307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25308 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25309 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25311 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25312 ;;Total ram usage:       11 bytes
 25313 ;; Hardware stack levels used: 1
 25314 ;; Hardware stack levels required when called: 3
 25315 ;; This function calls:
 25316 ;;		Nothing
 25317 ;; This function is called by:
 25318 ;;		_usedtime_task
 25319 ;;		_USBCtrlEPService
 25320 ;; This function uses a non-reentrant model
 25321 ;;
 25322                           
 25323                           	psect	text111
 25324  00E68E                     __ptext111:
 25325                           	callstack 0
 25326  00E68E                     _memcpy:
 25327                           	callstack 26
 25328  00E68E  C011  F017         	movff	memcpy@s1,memcpy@s
 25329  00E692  C012  F018         	movff	memcpy@s1+1,memcpy@s+1
 25330  00E696  C00F  F015         	movff	memcpy@d1,memcpy@d
 25331  00E69A  C010  F016         	movff	memcpy@d1+1,memcpy@d+1
 25332  00E69E  EF61  F073         	goto	l12908
 25333  00E6A2                     l12900:
 25334  00E6A2  C017  FFD9         	movff	memcpy@s,fsr2l
 25335  00E6A6  C018  FFDA         	movff	memcpy@s+1,fsr2h
 25336  00E6AA  50DF               	movf	indf2,w,c
 25337  00E6AC  6E19               	movwf	memcpy@tmp^0,c
 25338  00E6AE  4A17               	infsnz	memcpy@s^0,f,c
 25339  00E6B0  2A18               	incf	(memcpy@s+1)^0,f,c
 25340  00E6B2  C015  FFD9         	movff	memcpy@d,fsr2l
 25341  00E6B6  C016  FFDA         	movff	memcpy@d+1,fsr2h
 25342  00E6BA  C019  FFDF         	movff	memcpy@tmp,indf2
 25343  00E6BE  4A15               	infsnz	memcpy@d^0,f,c
 25344  00E6C0  2A16               	incf	(memcpy@d+1)^0,f,c
 25345  00E6C2                     l12908:
 25346  00E6C2  0613               	decf	memcpy@n^0,f,c
 25347  00E6C4  A0D8               	btfss	status,0,c
 25348  00E6C6  0614               	decf	(memcpy@n+1)^0,f,c
 25349  00E6C8  2813               	incf	memcpy@n^0,w,c
 25350  00E6CA  E106               	bnz	u12771
 25351  00E6CC  2814               	incf	(memcpy@n+1)^0,w,c
 25352  00E6CE  A4D8               	btfss	status,2,c
 25353  00E6D0  EF6C  F073         	goto	u12771
 25354  00E6D4  EF6E  F073         	goto	u12770
 25355  00E6D8                     u12771:
 25356  00E6D8  EF51  F073         	goto	l12900
 25357  00E6DC                     u12770:
 25358  00E6DC  0012               	return		;funcret
 25359  00E6DE                     __end_of_memcpy:
 25360                           	callstack 0
 25361                           
 25362 ;; *************** function _USBCtrlTrfSetupHandler *****************
 25363 ;; Defined at:
 25364 ;;		line 2472 in file "usb/usb_device.c"
 25365 ;; Parameters:    Size  Location     Type
 25366 ;;		None
 25367 ;; Auto vars:     Size  Location     Type
 25368 ;;		None
 25369 ;; Return value:  Size  Location     Type
 25370 ;;                  1    wreg      void 
 25371 ;; Registers used:
 25372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25373 ;; Tracked objects:
 25374 ;;		On entry : 0/0
 25375 ;;		On exit  : 0/0
 25376 ;;		Unchanged: 0/0
 25377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25382 ;;Total ram usage:        0 bytes
 25383 ;; Hardware stack levels used: 1
 25384 ;; Hardware stack levels required when called: 9
 25385 ;; This function calls:
 25386 ;;		_USBCheckStdRequest
 25387 ;;		_USBCtrlEPServiceComplete
 25388 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25389 ;; This function is called by:
 25390 ;;		_USBCtrlEPService
 25391 ;; This function uses a non-reentrant model
 25392 ;;
 25393                           
 25394                           	psect	text112
 25395  00D2EA                     __ptext112:
 25396                           	callstack 0
 25397  00D2EA                     _USBCtrlTrfSetupHandler:
 25398                           	callstack 19
 25399  00D2EA                     
 25400                           ;usb_device.c: 2477: shortPacketStatus = 0;
 25401  00D2EA  0E00               	movlw	0
 25402  00D2EC  0101               	movlb	1	; () banked
 25403  00D2EE  6F74               	movwf	_shortPacketStatus& (0+255),b
 25404                           
 25405                           ;usb_device.c: 2478: USBDeferStatusStagePacket = 0;
 25406  00D2F0  0E00               	movlw	0
 25407  00D2F2  6E4D               	movwf	_USBDeferStatusStagePacket^0,c	;volatile
 25408                           
 25409                           ;usb_device.c: 2479: USBDeferINDataStagePackets = 0;
 25410  00D2F4  0E00               	movlw	0
 25411  00D2F6  6F6C               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25412                           
 25413                           ;usb_device.c: 2480: USBDeferOUTDataStagePackets = 0;
 25414  00D2F8  0E00               	movlw	0
 25415  00D2FA  6F6B               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25416                           
 25417                           ;usb_device.c: 2481: BothEP0OutUOWNsSet = 0;
 25418  00D2FC  0E00               	movlw	0
 25419  00D2FE  6F70               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 25420                           
 25421                           ;usb_device.c: 2482: controlTransferState = 0;
 25422  00D300  0E00               	movlw	0
 25423  00D302  0100               	movlb	0	; () banked
 25424  00D304  6FFE               	movwf	_controlTransferState& (0+255),b
 25425  00D306                     
 25426                           ; BSR set to: 0
 25427                           ;usb_device.c: 2491: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25428  00D306  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 25429  00D30A  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25430  00D30E  0E7F               	movlw	127
 25431  00D310  16DF               	andwf	indf2,f,c
 25432  00D312                     
 25433                           ; BSR set to: 0
 25434                           ;usb_device.c: 2493: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 25435  00D312  0E04               	movlw	4
 25436  00D314  19F8               	xorwf	_pBDTEntryIn& (0+255),w,b
 25437  00D316  6FF8               	movwf	_pBDTEntryIn& (0+255),b
 25438  00D318  51F9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25439  00D31A  6FF9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25440  00D31C                     
 25441                           ; BSR set to: 0
 25442                           ;usb_device.c: 2494: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 25443  00D31C  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 25444  00D320  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25445  00D324  0E7F               	movlw	127
 25446  00D326  16DF               	andwf	indf2,f,c
 25447  00D328                     
 25448                           ; BSR set to: 0
 25449                           ;usb_device.c: 2495: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 25450  00D328  0E04               	movlw	4
 25451  00D32A  19F8               	xorwf	_pBDTEntryIn& (0+255),w,b
 25452  00D32C  6FF8               	movwf	_pBDTEntryIn& (0+255),b
 25453  00D32E  51F9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25454  00D330  6FF9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 25455  00D332                     
 25456                           ; BSR set to: 0
 25457                           ;usb_device.c: 2496: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 25458  00D332  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25459  00D336  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25460  00D33A  0E7F               	movlw	127
 25461  00D33C  16DF               	andwf	indf2,f,c
 25462  00D33E                     
 25463                           ; BSR set to: 0
 25464                           ;usb_device.c: 2498: inPipes[0].info.Val = 0;
 25465  00D33E  0E00               	movlw	0
 25466  00D340  6E44               	movwf	(_inPipes+3)^0,c
 25467  00D342                     
 25468                           ; BSR set to: 0
 25469                           ;usb_device.c: 2499: inPipes[0].wCount.Val = 0;
 25470  00D342  0E00               	movlw	0
 25471  00D344  6E46               	movwf	(_inPipes+5)^0,c
 25472  00D346  0E00               	movlw	0
 25473  00D348  6E45               	movwf	(_inPipes+4)^0,c
 25474  00D34A                     
 25475                           ; BSR set to: 0
 25476                           ;usb_device.c: 2500: outPipes[0].info.Val = 0;
 25477  00D34A  0E00               	movlw	0
 25478  00D34C  0101               	movlb	1	; () banked
 25479  00D34E  6F1E               	movwf	(_outPipes+3)& (0+255),b
 25480  00D350                     
 25481                           ; BSR set to: 1
 25482                           ;usb_device.c: 2501: outPipes[0].wCount.Val = 0;
 25483  00D350  0E00               	movlw	0
 25484  00D352  6F20               	movwf	(_outPipes+5)& (0+255),b
 25485  00D354  0E00               	movlw	0
 25486  00D356  6F1F               	movwf	(_outPipes+4)& (0+255),b
 25487  00D358                     
 25488                           ; BSR set to: 1
 25489                           ;usb_device.c: 2507: USBCheckStdRequest();
 25490  00D358  ECE9  F05C         	call	_USBCheckStdRequest	;wreg free
 25491  00D35C                     
 25492                           ;usb_device.c: 2508: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_EP0_REQUEST,0,0);
 25493  00D35C  0E00               	movlw	0
 25494  00D35E  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 25495  00D360  0E03               	movlw	3
 25496  00D362  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 25497  00D364  0E00               	movlw	0
 25498  00D366  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 25499  00D368  0E00               	movlw	0
 25500  00D36A  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 25501  00D36C  0E00               	movlw	0
 25502  00D36E  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 25503  00D370  0E00               	movlw	0
 25504  00D372  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 25505  00D374  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 25506  00D378                     
 25507                           ;usb_device.c: 2521: USBCtrlEPServiceComplete();
 25508  00D378  EC79  F051         	call	_USBCtrlEPServiceComplete	;wreg free
 25509  00D37C  0012               	return		;funcret
 25510  00D37E                     __end_of_USBCtrlTrfSetupHandler:
 25511                           	callstack 0
 25512                           
 25513 ;; *************** function _USBCtrlEPServiceComplete *****************
 25514 ;; Defined at:
 25515 ;;		line 1620 in file "usb/usb_device.c"
 25516 ;; Parameters:    Size  Location     Type
 25517 ;;		None
 25518 ;; Auto vars:     Size  Location     Type
 25519 ;;		None
 25520 ;; Return value:  Size  Location     Type
 25521 ;;                  1    wreg      void 
 25522 ;; Registers used:
 25523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25524 ;; Tracked objects:
 25525 ;;		On entry : 0/0
 25526 ;;		On exit  : 0/0
 25527 ;;		Unchanged: 0/0
 25528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25533 ;;Total ram usage:        0 bytes
 25534 ;; Hardware stack levels used: 1
 25535 ;; Hardware stack levels required when called: 5
 25536 ;; This function calls:
 25537 ;;		_USBCtrlEPAllowDataStage
 25538 ;;		_USBCtrlEPAllowStatusStage
 25539 ;; This function is called by:
 25540 ;;		_USBCtrlTrfSetupHandler
 25541 ;; This function uses a non-reentrant model
 25542 ;;
 25543                           
 25544                           	psect	text113
 25545  00A2F2                     __ptext113:
 25546                           	callstack 0
 25547  00A2F2                     _USBCtrlEPServiceComplete:
 25548                           	callstack 22
 25549  00A2F2                     
 25550                           ;usb_device.c: 1626: UCONbits.PKTDIS = 0;
 25551  00A2F2  9865               	bcf	101,4,c	;volatile
 25552                           
 25553                           ;usb_device.c: 1632: if(inPipes[0].info.bits.busy == 0)
 25554  00A2F4  BE44               	btfsc	(_inPipes+3)^0,7,c
 25555  00A2F6  EF7F  F051         	goto	u12481
 25556  00A2FA  EF81  F051         	goto	u12480
 25557  00A2FE                     u12481:
 25558  00A2FE  EFCA  F051         	goto	l1934
 25559  00A302                     u12480:
 25560  00A302                     
 25561                           ;usb_device.c: 1633: {;usb_device.c: 1634: if(outPipes[0].info.bits.busy == 1)
 25562  00A302  0101               	movlb	1	; () banked
 25563  00A304  AF1E               	btfss	(_outPipes+3)& (0+255),7,b
 25564  00A306  EF87  F051         	goto	u12491
 25565  00A30A  EF89  F051         	goto	u12490
 25566  00A30E                     u12491:
 25567  00A30E  EF9E  F051         	goto	l12626
 25568  00A312                     u12490:
 25569  00A312                     
 25570                           ; BSR set to: 1
 25571                           ;usb_device.c: 1635: {;usb_device.c: 1636: controlTransferState = 2;
 25572  00A312  0E02               	movlw	2
 25573  00A314  0100               	movlb	0	; () banked
 25574  00A316  6FFE               	movwf	_controlTransferState& (0+255),b
 25575                           
 25576                           ;usb_device.c: 1647: if(USBDeferOUTDataStagePackets == 0)
 25577  00A318  0101               	movlb	1	; () banked
 25578  00A31A  516B               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 25579  00A31C  A4D8               	btfss	status,2,c
 25580  00A31E  EF93  F051         	goto	u12501
 25581  00A322  EF95  F051         	goto	u12500
 25582  00A326                     u12501:
 25583  00A326  EF97  F051         	goto	l12622
 25584  00A32A                     u12500:
 25585  00A32A                     
 25586                           ; BSR set to: 1
 25587                           ;usb_device.c: 1648: {;usb_device.c: 1649: USBCtrlEPAllowDataStage();
 25588  00A32A  ECE0  F065         	call	_USBCtrlEPAllowDataStage	;wreg free
 25589  00A32E                     l12622:
 25590                           
 25591                           ;usb_device.c: 1650: };usb_device.c: 1654: USBStatusStageEnabledFlag2 = 0;
 25592  00A32E  0E00               	movlw	0
 25593  00A330  0101               	movlb	1	; () banked
 25594  00A332  6F6D               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25595  00A334                     
 25596                           ; BSR set to: 1
 25597                           ;usb_device.c: 1655: USBStatusStageEnabledFlag1 = 0;
 25598  00A334  0E00               	movlw	0
 25599  00A336  6F6E               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25600                           
 25601                           ;usb_device.c: 1656: }
 25602  00A338  EF21  F052         	goto	l1944
 25603  00A33C                     l12626:
 25604                           
 25605                           ; BSR set to: 1
 25606                           ;usb_device.c: 1657: else;usb_device.c: 1658: {;usb_device.c: 1663: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 25607  00A33C  EE20 F001          	lfsr	2,1
 25608  00A340  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 25609  00A342  26D9               	addwf	fsr2l,f,c
 25610  00A344  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25611  00A346  22DA               	addwfc	fsr2h,f,c
 25612  00A348  0E08               	movlw	8
 25613  00A34A  6EDF               	movwf	indf2,c
 25614                           
 25615                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25616  00A34C  EE20 F002          	lfsr	2,2
 25617  00A350  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 25618  00A352  26D9               	addwf	fsr2l,f,c
 25619  00A354  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25620  00A356  22DA               	addwfc	fsr2h,f,c
 25621  00A358  0E30               	movlw	48
 25622  00A35A  6EDE               	movwf	postinc2,c
 25623  00A35C  0E04               	movlw	4
 25624  00A35E  6EDD               	movwf	postdec2,c
 25625  00A360                     
 25626                           ; BSR set to: 1
 25627                           ;usb_device.c: 1665: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 25628  00A360  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25629  00A364  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25630  00A368  0E0C               	movlw	12
 25631  00A36A  6EDF               	movwf	indf2,c
 25632  00A36C                     
 25633                           ; BSR set to: 1
 25634                           ;usb_device.c: 1666: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25635  00A36C  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25636  00A370  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25637  00A374  0E00               	movlw	0
 25638  00A376  8EDB               	bsf	plusw2,7,c
 25639                           
 25640                           ;usb_device.c: 1667: pBDTEntryIn[0]->STAT.Val = 0x04;
 25641  00A378  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 25642  00A37C  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25643  00A380  0E04               	movlw	4
 25644  00A382  6EDF               	movwf	indf2,c
 25645  00A384                     
 25646                           ; BSR set to: 1
 25647                           ;usb_device.c: 1668: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25648  00A384  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 25649  00A388  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25650  00A38C  0E00               	movlw	0
 25651  00A38E  8EDB               	bsf	plusw2,7,c
 25652  00A390  EF21  F052         	goto	l1944
 25653  00A394                     l1934:
 25654                           
 25655                           ;usb_device.c: 1671: else;usb_device.c: 1672: {;usb_device.c: 1673: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 25656  00A394  0104               	movlb	4	; () banked
 25657  00A396  AF30               	btfss	48,7,b	;volatile
 25658  00A398  EFD0  F051         	goto	u12511
 25659  00A39C  EFD2  F051         	goto	u12510
 25660  00A3A0                     u12511:
 25661  00A3A0  EFF1  F051         	goto	l12646
 25662  00A3A4                     u12510:
 25663  00A3A4                     
 25664                           ; BSR set to: 4
 25665                           ;usb_device.c: 1674: {;usb_device.c: 1675: controlTransferState = 1;
 25666  00A3A4  0E01               	movlw	1
 25667  00A3A6  0100               	movlb	0	; () banked
 25668  00A3A8  6FFE               	movwf	_controlTransferState& (0+255),b
 25669                           
 25670                           ;usb_device.c: 1689: if(USBDeferINDataStagePackets == 0)
 25671  00A3AA  0101               	movlb	1	; () banked
 25672  00A3AC  516C               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 25673  00A3AE  A4D8               	btfss	status,2,c
 25674  00A3B0  EFDC  F051         	goto	u12521
 25675  00A3B4  EFDE  F051         	goto	u12520
 25676  00A3B8                     u12521:
 25677  00A3B8  EFE0  F051         	goto	l12638
 25678  00A3BC                     u12520:
 25679  00A3BC                     
 25680                           ; BSR set to: 1
 25681                           ;usb_device.c: 1690: {;usb_device.c: 1691: USBCtrlEPAllowDataStage();
 25682  00A3BC  ECE0  F065         	call	_USBCtrlEPAllowDataStage	;wreg free
 25683  00A3C0                     l12638:
 25684                           
 25685                           ;usb_device.c: 1692: };usb_device.c: 1714: USBStatusStageEnabledFlag2 = 0;
 25686  00A3C0  0E00               	movlw	0
 25687  00A3C2  0101               	movlb	1	; () banked
 25688  00A3C4  6F6D               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25689  00A3C6                     
 25690                           ; BSR set to: 1
 25691                           ;usb_device.c: 1715: USBStatusStageEnabledFlag1 = 0;
 25692  00A3C6  0E00               	movlw	0
 25693  00A3C8  6F6E               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25694  00A3CA                     
 25695                           ; BSR set to: 1
 25696                           ;usb_device.c: 1716: if(USBDeferStatusStagePacket == 0)
 25697  00A3CA  504D               	movf	_USBDeferStatusStagePacket^0,w,c	;volatile
 25698  00A3CC  A4D8               	btfss	status,2,c
 25699  00A3CE  EFEB  F051         	goto	u12531
 25700  00A3D2  EFED  F051         	goto	u12530
 25701  00A3D6                     u12531:
 25702  00A3D6  EF21  F052         	goto	l1944
 25703  00A3DA                     u12530:
 25704  00A3DA                     l12644:
 25705                           
 25706                           ; BSR set to: 1
 25707                           ;usb_device.c: 1717: {;usb_device.c: 1718: USBCtrlEPAllowStatusStage();
 25708  00A3DA  EC69  F05D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 25709  00A3DE  EF21  F052         	goto	l1944
 25710  00A3E2                     l12646:
 25711                           
 25712                           ; BSR set to: 4
 25713                           ;usb_device.c: 1721: else;usb_device.c: 1722: {;usb_device.c: 1733: controlTransferState
      +                           = 2;
 25714  00A3E2  0E02               	movlw	2
 25715  00A3E4  0100               	movlb	0	; () banked
 25716  00A3E6  6FFE               	movwf	_controlTransferState& (0+255),b
 25717  00A3E8                     
 25718                           ; BSR set to: 0
 25719                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->CNT = 8;
 25720  00A3E8  EE20 F001          	lfsr	2,1
 25721  00A3EC  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 25722  00A3EE  26D9               	addwf	fsr2l,f,c
 25723  00A3F0  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25724  00A3F2  22DA               	addwfc	fsr2h,f,c
 25725  00A3F4  0E08               	movlw	8
 25726  00A3F6  6EDF               	movwf	indf2,c
 25727  00A3F8                     
 25728                           ; BSR set to: 0
 25729                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 25730  00A3F8  EE20 F002          	lfsr	2,2
 25731  00A3FC  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 25732  00A3FE  26D9               	addwf	fsr2l,f,c
 25733  00A400  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25734  00A402  22DA               	addwfc	fsr2h,f,c
 25735  00A404  0E30               	movlw	48
 25736  00A406  6EDE               	movwf	postinc2,c
 25737  00A408  0E04               	movlw	4
 25738  00A40A  6EDD               	movwf	postdec2,c
 25739  00A40C                     
 25740                           ; BSR set to: 0
 25741                           ;usb_device.c: 1738: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 25742  00A40C  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25743  00A410  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25744  00A414  0E04               	movlw	4
 25745  00A416  6EDF               	movwf	indf2,c
 25746  00A418                     
 25747                           ; BSR set to: 0
 25748                           ;usb_device.c: 1739: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25749  00A418  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25750  00A41C  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25751  00A420  0E00               	movlw	0
 25752  00A422  8EDB               	bsf	plusw2,7,c
 25753  00A424                     
 25754                           ; BSR set to: 0
 25755                           ;usb_device.c: 1742: USBStatusStageEnabledFlag2 = 0;
 25756  00A424  0E00               	movlw	0
 25757  00A426  0101               	movlb	1	; () banked
 25758  00A428  6F6D               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 25759  00A42A                     
 25760                           ; BSR set to: 1
 25761                           ;usb_device.c: 1743: USBStatusStageEnabledFlag1 = 0;
 25762  00A42A  0E00               	movlw	0
 25763  00A42C  6F6E               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 25764  00A42E                     
 25765                           ; BSR set to: 1
 25766                           ;usb_device.c: 1744: if(USBDeferStatusStagePacket == 0)
 25767  00A42E  504D               	movf	_USBDeferStatusStagePacket^0,w,c	;volatile
 25768  00A430  A4D8               	btfss	status,2,c
 25769  00A432  EF1D  F052         	goto	u12541
 25770  00A436  EF1F  F052         	goto	u12540
 25771  00A43A                     u12541:
 25772  00A43A  EF21  F052         	goto	l1944
 25773  00A43E                     u12540:
 25774  00A43E  EFED  F051         	goto	l12644
 25775  00A442                     l1944:
 25776  00A442  0012               	return		;funcret
 25777  00A444                     __end_of_USBCtrlEPServiceComplete:
 25778                           	callstack 0
 25779                           
 25780 ;; *************** function _USBCtrlEPAllowDataStage *****************
 25781 ;; Defined at:
 25782 ;;		line 1492 in file "usb/usb_device.c"
 25783 ;; Parameters:    Size  Location     Type
 25784 ;;		None
 25785 ;; Auto vars:     Size  Location     Type
 25786 ;;		None
 25787 ;; Return value:  Size  Location     Type
 25788 ;;                  1    wreg      void 
 25789 ;; Registers used:
 25790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25791 ;; Tracked objects:
 25792 ;;		On entry : 0/0
 25793 ;;		On exit  : 0/0
 25794 ;;		Unchanged: 0/0
 25795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25800 ;;Total ram usage:        0 bytes
 25801 ;; Hardware stack levels used: 1
 25802 ;; Hardware stack levels required when called: 4
 25803 ;; This function calls:
 25804 ;;		_USBCtrlTrfTxService
 25805 ;; This function is called by:
 25806 ;;		_USBCtrlEPServiceComplete
 25807 ;; This function uses a non-reentrant model
 25808 ;;
 25809                           
 25810                           	psect	text114
 25811  00CBC0                     __ptext114:
 25812                           	callstack 0
 25813  00CBC0                     _USBCtrlEPAllowDataStage:
 25814                           	callstack 22
 25815  00CBC0                     
 25816                           ;usb_device.c: 1494: USBDeferINDataStagePackets = 0;
 25817  00CBC0  0E00               	movlw	0
 25818  00CBC2  0101               	movlb	1	; () banked
 25819  00CBC4  6F6C               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 25820                           
 25821                           ;usb_device.c: 1495: USBDeferOUTDataStagePackets = 0;
 25822  00CBC6  0E00               	movlw	0
 25823  00CBC8  6F6B               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 25824  00CBCA                     
 25825                           ; BSR set to: 1
 25826                           ;usb_device.c: 1497: if(controlTransferState == 2)
 25827  00CBCA  0E02               	movlw	2
 25828  00CBCC  0100               	movlb	0	; () banked
 25829  00CBCE  19FE               	xorwf	_controlTransferState& (0+255),w,b
 25830  00CBD0  A4D8               	btfss	status,2,c
 25831  00CBD2  EFED  F065         	goto	u10851
 25832  00CBD6  EFEF  F065         	goto	u10850
 25833  00CBDA                     u10851:
 25834  00CBDA  EF0F  F066         	goto	l11402
 25835  00CBDE                     u10850:
 25836  00CBDE                     
 25837                           ; BSR set to: 0
 25838                           ;usb_device.c: 1498: {;usb_device.c: 1500: pBDTEntryEP0OutNext->CNT = 8;
 25839  00CBDE  EE20 F001          	lfsr	2,1
 25840  00CBE2  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 25841  00CBE4  26D9               	addwf	fsr2l,f,c
 25842  00CBE6  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25843  00CBE8  22DA               	addwfc	fsr2h,f,c
 25844  00CBEA  0E08               	movlw	8
 25845  00CBEC  6EDF               	movwf	indf2,c
 25846                           
 25847                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 25848  00CBEE  EE20 F002          	lfsr	2,2
 25849  00CBF2  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 25850  00CBF4  26D9               	addwf	fsr2l,f,c
 25851  00CBF6  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 25852  00CBF8  22DA               	addwfc	fsr2h,f,c
 25853  00CBFA  0E38               	movlw	56
 25854  00CBFC  6EDE               	movwf	postinc2,c
 25855  00CBFE  0E04               	movlw	4
 25856  00CC00  6EDD               	movwf	postdec2,c
 25857  00CC02                     
 25858                           ; BSR set to: 0
 25859                           ;usb_device.c: 1502: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 25860  00CC02  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25861  00CC06  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25862  00CC0A  0E48               	movlw	72
 25863  00CC0C  6EDF               	movwf	indf2,c
 25864  00CC0E                     
 25865                           ; BSR set to: 0
 25866                           ;usb_device.c: 1503: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 25867  00CC0E  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 25868  00CC12  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 25869  00CC16  0E00               	movlw	0
 25870  00CC18  8EDB               	bsf	plusw2,7,c
 25871                           
 25872                           ;usb_device.c: 1504: }
 25873  00CC1A  EF38  F066         	goto	l1926
 25874  00CC1E                     l11402:
 25875                           
 25876                           ; BSR set to: 0
 25877                           ;usb_device.c: 1505: else;usb_device.c: 1506: {;usb_device.c: 1509: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 25878  00CC1E  5045               	movf	(_inPipes+4)^0,w,c
 25879  00CC20  0104               	movlb	4	; () banked
 25880  00CC22  5D36               	subwf	54,w,b	;volatile
 25881  00CC24  5046               	movf	(_inPipes+5)^0,w,c
 25882  00CC26  5937               	subwfb	55,w,b	;volatile
 25883  00CC28  B0D8               	btfsc	status,0,c
 25884  00CC2A  EF19  F066         	goto	u10861
 25885  00CC2E  EF1B  F066         	goto	u10860
 25886  00CC32                     u10861:
 25887  00CC32  EF1F  F066         	goto	l11406
 25888  00CC36                     u10860:
 25889  00CC36                     
 25890                           ; BSR set to: 4
 25891                           ;usb_device.c: 1510: {;usb_device.c: 1511: inPipes[0].wCount.Val = SetupPkt.wLength;
 25892  00CC36  C436 F045          	movff	1078,_inPipes+4	;volatile
 25893  00CC3A  C437 F046          	movff	1079,_inPipes+5	;volatile
 25894  00CC3E                     l11406:
 25895                           
 25896                           ; BSR set to: 4
 25897                           ;usb_device.c: 1512: };usb_device.c: 1513: USBCtrlTrfTxService();
 25898  00CC3E  EC41  F058         	call	_USBCtrlTrfTxService	;wreg free
 25899  00CC42                     
 25900                           ;usb_device.c: 1518: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 25901  00CC42  0100               	movlb	0	; () banked
 25902  00CC44  EE20 F002          	lfsr	2,2
 25903  00CC48  51F8               	movf	_pBDTEntryIn& (0+255),w,b
 25904  00CC4A  26D9               	addwf	fsr2l,f,c
 25905  00CC4C  51F9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 25906  00CC4E  22DA               	addwfc	fsr2h,f,c
 25907  00CC50  0E38               	movlw	56
 25908  00CC52  6EDE               	movwf	postinc2,c
 25909  00CC54  0E04               	movlw	4
 25910  00CC56  6EDD               	movwf	postdec2,c
 25911  00CC58                     
 25912                           ; BSR set to: 0
 25913                           ;usb_device.c: 1519: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 25914  00CC58  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 25915  00CC5C  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25916  00CC60  0E48               	movlw	72
 25917  00CC62  6EDF               	movwf	indf2,c
 25918  00CC64                     
 25919                           ; BSR set to: 0
 25920                           ;usb_device.c: 1520: pBDTEntryIn[0]->STAT.Val |= 0x80;
 25921  00CC64  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 25922  00CC68  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 25923  00CC6C  0E00               	movlw	0
 25924  00CC6E  8EDB               	bsf	plusw2,7,c
 25925  00CC70                     l1926:
 25926                           
 25927                           ; BSR set to: 0
 25928  00CC70  0012               	return		;funcret
 25929  00CC72                     __end_of_USBCtrlEPAllowDataStage:
 25930                           	callstack 0
 25931                           
 25932 ;; *************** function _USBCheckStdRequest *****************
 25933 ;; Defined at:
 25934 ;;		line 2693 in file "usb/usb_device.c"
 25935 ;; Parameters:    Size  Location     Type
 25936 ;;		None
 25937 ;; Auto vars:     Size  Location     Type
 25938 ;;		None
 25939 ;; Return value:  Size  Location     Type
 25940 ;;                  1    wreg      void 
 25941 ;; Registers used:
 25942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25943 ;; Tracked objects:
 25944 ;;		On entry : 0/0
 25945 ;;		On exit  : 0/0
 25946 ;;		Unchanged: 0/0
 25947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25952 ;;Total ram usage:        0 bytes
 25953 ;; Hardware stack levels used: 1
 25954 ;; Hardware stack levels required when called: 8
 25955 ;; This function calls:
 25956 ;;		_USBStdFeatureReqHandler
 25957 ;;		_USBStdGetDscHandler
 25958 ;;		_USBStdGetStatusHandler
 25959 ;;		_USBStdSetCfgHandler
 25960 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25961 ;; This function is called by:
 25962 ;;		_USBCtrlTrfSetupHandler
 25963 ;; This function uses a non-reentrant model
 25964 ;;
 25965                           
 25966                           	psect	text115
 25967  00B9D2                     __ptext115:
 25968                           	callstack 0
 25969  00B9D2                     _USBCheckStdRequest:
 25970                           	callstack 19
 25971  00B9D2                     
 25972                           ;usb_device.c: 2695: if(SetupPkt.RequestType != (0x00>>5)) return;
 25973  00B9D2  0104               	movlb	4	; () banked
 25974  00B9D4  3930               	swapf	48,w,b	;volatile
 25975  00B9D6  32E8               	rrcf	wreg,f,c
 25976  00B9D8  0B03               	andlw	3
 25977  00B9DA  0900               	iorlw	0
 25978  00B9DC  B4D8               	btfsc	status,2,c
 25979  00B9DE  EFF3  F05C         	goto	u12601
 25980  00B9E2  EFF5  F05C         	goto	u12600
 25981  00B9E6                     u12601:
 25982  00B9E6  EF39  F05D         	goto	l12744
 25983  00B9EA                     u12600:
 25984  00B9EA  EF68  F05D         	goto	l2058
 25985  00B9EE                     l2060:
 25986                           
 25987                           ; BSR set to: 4
 25988                           ;usb_device.c: 2700: inPipes[0].info.bits.busy = 1;
 25989  00B9EE  8E44               	bsf	(_inPipes+3)^0,7,c
 25990  00B9F0                     
 25991                           ; BSR set to: 4
 25992                           ;usb_device.c: 2701: USBDeviceState = ADR_PENDING_STATE;
 25993  00B9F0  0E08               	movlw	8
 25994  00B9F2  6E4F               	movwf	_USBDeviceState^0,c
 25995                           
 25996                           ;usb_device.c: 2703: break;
 25997  00B9F4  EF68  F05D         	goto	l2058
 25998  00B9F8                     l12714:
 25999                           
 26000                           ; BSR set to: 4
 26001                           ;usb_device.c: 2705: USBStdGetDscHandler();
 26002  00B9F8  ECEE  F055         	call	_USBStdGetDscHandler	;wreg free
 26003                           
 26004                           ;usb_device.c: 2706: break;
 26005  00B9FC  EF68  F05D         	goto	l2058
 26006  00BA00                     l12716:
 26007                           
 26008                           ; BSR set to: 4
 26009                           ;usb_device.c: 2708: USBStdSetCfgHandler();
 26010  00BA00  EC46  F05F         	call	_USBStdSetCfgHandler	;wreg free
 26011                           
 26012                           ;usb_device.c: 2709: break;
 26013  00BA04  EF68  F05D         	goto	l2058
 26014  00BA08                     l12718:
 26015                           
 26016                           ; BSR set to: 4
 26017                           ;usb_device.c: 2711: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 26018  00BA08  0EF7               	movlw	low _USBActiveConfiguration
 26019  00BA0A  6E41               	movwf	_inPipes^0,c
 26020  00BA0C  0E01               	movlw	high _USBActiveConfiguration
 26021  00BA0E  6E42               	movwf	(_inPipes+1)^0,c
 26022  00BA10                     l12720:
 26023                           
 26024                           ; BSR set to: 4
 26025                           ;usb_device.c: 2712: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26026  00BA10  8044               	bsf	(_inPipes+3)^0,0,c
 26027  00BA12                     
 26028                           ; BSR set to: 4
 26029                           ;usb_device.c: 2713: inPipes[0].wCount.v[0] = 1;
 26030  00BA12  0E01               	movlw	1
 26031  00BA14  6E45               	movwf	(_inPipes+4)^0,c
 26032  00BA16                     
 26033                           ; BSR set to: 4
 26034                           ;usb_device.c: 2714: inPipes[0].info.bits.busy = 1;
 26035  00BA16  8E44               	bsf	(_inPipes+3)^0,7,c
 26036                           
 26037                           ;usb_device.c: 2715: break;
 26038  00BA18  EF68  F05D         	goto	l2058
 26039  00BA1C                     l12726:
 26040                           
 26041                           ; BSR set to: 4
 26042                           ;usb_device.c: 2717: USBStdGetStatusHandler();
 26043  00BA1C  EC5F  F05A         	call	_USBStdGetStatusHandler	;wreg free
 26044                           
 26045                           ;usb_device.c: 2718: break;
 26046  00BA20  EF68  F05D         	goto	l2058
 26047  00BA24                     l12728:
 26048                           
 26049                           ; BSR set to: 4
 26050                           ;usb_device.c: 2720: case 3:;usb_device.c: 2721: USBStdFeatureReqHandler();
 26051  00BA24  EC99  F035         	call	_USBStdFeatureReqHandler	;wreg free
 26052                           
 26053                           ;usb_device.c: 2722: break;
 26054  00BA28  EF68  F05D         	goto	l2058
 26055  00BA2C                     l12730:
 26056                           
 26057                           ; BSR set to: 4
 26058                           ;usb_device.c: 2724: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 26059  00BA2C  0EF5               	movlw	low _USBAlternateInterface
 26060  00BA2E  2534               	addwf	52,w,b	;volatile
 26061  00BA30  6E41               	movwf	_inPipes^0,c
 26062  00BA32  6A42               	clrf	(_inPipes+1)^0,c
 26063  00BA34  0E01               	movlw	high _USBAlternateInterface
 26064  00BA36  2242               	addwfc	(_inPipes+1)^0,f,c
 26065  00BA38  EF08  F05D         	goto	l12720
 26066  00BA3C                     l2069:
 26067                           
 26068                           ; BSR set to: 4
 26069                           ;usb_device.c: 2730: inPipes[0].info.bits.busy = 1;
 26070  00BA3C  8E44               	bsf	(_inPipes+3)^0,7,c
 26071  00BA3E                     
 26072                           ; BSR set to: 4
 26073                           ;usb_device.c: 2731: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 26074  00BA3E  0EF5               	movlw	low _USBAlternateInterface
 26075  00BA40  2534               	addwf	52,w,b	;volatile
 26076  00BA42  6ED9               	movwf	fsr2l,c
 26077  00BA44  6ADA               	clrf	fsr2h,c
 26078  00BA46  0E01               	movlw	high _USBAlternateInterface
 26079  00BA48  22DA               	addwfc	fsr2h,f,c
 26080  00BA4A  C432 FFDF          	movff	1074,indf2	;volatile
 26081                           
 26082                           ;usb_device.c: 2732: break;
 26083  00BA4E  EF68  F05D         	goto	l2058
 26084  00BA52                     l12740:
 26085                           
 26086                           ; BSR set to: 4
 26087                           ;usb_device.c: 2734: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_SET_DESCRIPTOR,0,0
      +                          );
 26088  00BA52  0E00               	movlw	0
 26089  00BA54  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 26090  00BA56  0E02               	movlw	2
 26091  00BA58  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 26092  00BA5A  0E00               	movlw	0
 26093  00BA5C  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 26094  00BA5E  0E00               	movlw	0
 26095  00BA60  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 26096  00BA62  0E00               	movlw	0
 26097  00BA64  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 26098  00BA66  0E00               	movlw	0
 26099  00BA68  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 26100  00BA6A  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26101                           
 26102                           ;usb_device.c: 2735: break;
 26103  00BA6E  EF68  F05D         	goto	l2058
 26104  00BA72                     l12744:
 26105                           
 26106                           ; BSR set to: 4
 26107  00BA72  5131               	movf	49,w,b	;volatile
 26108                           
 26109                           ; Switch size 1, requested type "simple"
 26110                           ; Number of cases is 11, Range of values is 0 to 12
 26111                           ; switch strategies available:
 26112                           ; Name         Instructions Cycles
 26113                           ; simple_byte           34    18 (average)
 26114                           ;	Chosen strategy is simple_byte
 26115  00BA74  0A00               	xorlw	0	; case 0
 26116  00BA76  B4D8               	btfsc	status,2,c
 26117  00BA78  EF0E  F05D         	goto	l12726
 26118  00BA7C  0A01               	xorlw	1	; case 1
 26119  00BA7E  B4D8               	btfsc	status,2,c
 26120  00BA80  EF12  F05D         	goto	l12728
 26121  00BA84  0A02               	xorlw	2	; case 3
 26122  00BA86  B4D8               	btfsc	status,2,c
 26123  00BA88  EF12  F05D         	goto	l12728
 26124  00BA8C  0A06               	xorlw	6	; case 5
 26125  00BA8E  B4D8               	btfsc	status,2,c
 26126  00BA90  EFF7  F05C         	goto	l2060
 26127  00BA94  0A03               	xorlw	3	; case 6
 26128  00BA96  B4D8               	btfsc	status,2,c
 26129  00BA98  EFFC  F05C         	goto	l12714
 26130  00BA9C  0A01               	xorlw	1	; case 7
 26131  00BA9E  B4D8               	btfsc	status,2,c
 26132  00BAA0  EF29  F05D         	goto	l12740
 26133  00BAA4  0A0F               	xorlw	15	; case 8
 26134  00BAA6  B4D8               	btfsc	status,2,c
 26135  00BAA8  EF04  F05D         	goto	l12718
 26136  00BAAC  0A01               	xorlw	1	; case 9
 26137  00BAAE  B4D8               	btfsc	status,2,c
 26138  00BAB0  EF00  F05D         	goto	l12716
 26139  00BAB4  0A03               	xorlw	3	; case 10
 26140  00BAB6  B4D8               	btfsc	status,2,c
 26141  00BAB8  EF16  F05D         	goto	l12730
 26142  00BABC  0A01               	xorlw	1	; case 11
 26143  00BABE  B4D8               	btfsc	status,2,c
 26144  00BAC0  EF1E  F05D         	goto	l2069
 26145  00BAC4  0A07               	xorlw	7	; case 12
 26146  00BAC6  B4D8               	btfsc	status,2,c
 26147  00BAC8  EF68  F05D         	goto	l2058
 26148  00BACC  EF68  F05D         	goto	l2058
 26149  00BAD0                     l2058:
 26150  00BAD0  0012               	return		;funcret
 26151  00BAD2                     __end_of_USBCheckStdRequest:
 26152                           	callstack 0
 26153                           
 26154 ;; *************** function _USBStdSetCfgHandler *****************
 26155 ;; Defined at:
 26156 ;;		line 1972 in file "usb/usb_device.c"
 26157 ;; Parameters:    Size  Location     Type
 26158 ;;		None
 26159 ;; Auto vars:     Size  Location     Type
 26160 ;;  i               1   34[COMRAM] unsigned char 
 26161 ;; Return value:  Size  Location     Type
 26162 ;;                  1    wreg      void 
 26163 ;; Registers used:
 26164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26165 ;; Tracked objects:
 26166 ;;		On entry : 0/0
 26167 ;;		On exit  : 0/0
 26168 ;;		Unchanged: 0/0
 26169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26173 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26174 ;;Total ram usage:        1 bytes
 26175 ;; Hardware stack levels used: 1
 26176 ;; Hardware stack levels required when called: 7
 26177 ;; This function calls:
 26178 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26179 ;;		_memset
 26180 ;; This function is called by:
 26181 ;;		_USBCheckStdRequest
 26182 ;; This function uses a non-reentrant model
 26183 ;;
 26184                           
 26185                           	psect	text116
 26186  00BE8C                     __ptext116:
 26187                           	callstack 0
 26188  00BE8C                     _USBStdSetCfgHandler:
 26189                           	callstack 19
 26190  00BE8C                     
 26191                           ;usb_device.c: 1974: uint8_t i;;usb_device.c: 1977: inPipes[0].info.bits.busy = 1;
 26192  00BE8C  8E44               	bsf	(_inPipes+3)^0,7,c
 26193  00BE8E                     
 26194                           ;usb_device.c: 1980: memset((void*)&UEP1,0x00,(2));;
 26195  00BE8E  0E27               	movlw	39
 26196  00BE90  6E0F               	movwf	memset@p1^0,c
 26197  00BE92  0E0F               	movlw	15
 26198  00BE94  6E10               	movwf	(memset@p1+1)^0,c
 26199  00BE96  0E00               	movlw	0
 26200  00BE98  6E12               	movwf	(memset@c+1)^0,c
 26201  00BE9A  0E00               	movlw	0
 26202  00BE9C  6E11               	movwf	memset@c^0,c
 26203  00BE9E  0E00               	movlw	0
 26204  00BEA0  6E14               	movwf	(memset@n+1)^0,c
 26205  00BEA2  0E02               	movlw	2
 26206  00BEA4  6E13               	movwf	memset@n^0,c
 26207  00BEA6  EC9A  F075         	call	_memset	;wreg free
 26208                           
 26209                           ;usb_device.c: 1983: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 26210  00BEAA  0E00               	movlw	0
 26211  00BEAC  6E0F               	movwf	memset@p1^0,c
 26212  00BEAE  0E04               	movlw	4
 26213  00BEB0  6E10               	movwf	(memset@p1+1)^0,c
 26214  00BEB2  0E00               	movlw	0
 26215  00BEB4  6E12               	movwf	(memset@c+1)^0,c
 26216  00BEB6  0E00               	movlw	0
 26217  00BEB8  6E11               	movwf	memset@c^0,c
 26218  00BEBA  0E00               	movlw	0
 26219  00BEBC  6E14               	movwf	(memset@n+1)^0,c
 26220  00BEBE  0E30               	movlw	48
 26221  00BEC0  6E13               	movwf	memset@n^0,c
 26222  00BEC2  EC9A  F075         	call	_memset	;wreg free
 26223  00BEC6                     
 26224                           ;usb_device.c: 1986: UCONbits.PPBRST = 1;
 26225  00BEC6  8C65               	bsf	101,6,c	;volatile
 26226  00BEC8                     
 26227                           ;usb_device.c: 1991: for(i = 0; i < (uint8_t)(2+1u); i++)
 26228  00BEC8  0E00               	movlw	0
 26229  00BECA  6E23               	movwf	USBStdSetCfgHandler@i^0,c
 26230  00BECC                     l11426:
 26231                           
 26232                           ;usb_device.c: 1992: {;usb_device.c: 1993: ep_data_in[i].Val = 0u;
 26233  00BECC  0E57               	movlw	low _ep_data_in
 26234  00BECE  2423               	addwf	USBStdSetCfgHandler@i^0,w,c
 26235  00BED0  6ED9               	movwf	fsr2l,c
 26236  00BED2  6ADA               	clrf	fsr2h,c
 26237  00BED4  0E01               	movlw	high _ep_data_in
 26238  00BED6  22DA               	addwfc	fsr2h,f,c
 26239  00BED8  0E00               	movlw	0
 26240  00BEDA  6EDF               	movwf	indf2,c
 26241                           
 26242                           ;usb_device.c: 1994: ep_data_out[i].Val = 0u;
 26243  00BEDC  0E54               	movlw	low _ep_data_out
 26244  00BEDE  2423               	addwf	USBStdSetCfgHandler@i^0,w,c
 26245  00BEE0  6ED9               	movwf	fsr2l,c
 26246  00BEE2  6ADA               	clrf	fsr2h,c
 26247  00BEE4  0E01               	movlw	high _ep_data_out
 26248  00BEE6  22DA               	addwfc	fsr2h,f,c
 26249  00BEE8  0E00               	movlw	0
 26250  00BEEA  6EDF               	movwf	indf2,c
 26251  00BEEC  2A23               	incf	USBStdSetCfgHandler@i^0,f,c
 26252  00BEEE  0E02               	movlw	2
 26253  00BEF0  6423               	cpfsgt	USBStdSetCfgHandler@i^0,c
 26254  00BEF2  EF7D  F05F         	goto	u10871
 26255  00BEF6  EF7F  F05F         	goto	u10870
 26256  00BEFA                     u10871:
 26257  00BEFA  EF66  F05F         	goto	l11426
 26258  00BEFE                     u10870:
 26259  00BEFE                     
 26260                           ;usb_device.c: 1995: };usb_device.c: 1998: memset((void*)&USBAlternateInterface,0x00,2);
 26261  00BEFE  0EF5               	movlw	low _USBAlternateInterface
 26262  00BF00  6E0F               	movwf	memset@p1^0,c
 26263  00BF02  0E01               	movlw	high _USBAlternateInterface
 26264  00BF04  6E10               	movwf	(memset@p1+1)^0,c
 26265  00BF06  0E00               	movlw	0
 26266  00BF08  6E12               	movwf	(memset@c+1)^0,c
 26267  00BF0A  0E00               	movlw	0
 26268  00BF0C  6E11               	movwf	memset@c^0,c
 26269  00BF0E  0E00               	movlw	0
 26270  00BF10  6E14               	movwf	(memset@n+1)^0,c
 26271  00BF12  0E02               	movlw	2
 26272  00BF14  6E13               	movwf	memset@n^0,c
 26273  00BF16  EC9A  F075         	call	_memset	;wreg free
 26274  00BF1A                     
 26275                           ;usb_device.c: 2001: UCONbits.PPBRST = 0;
 26276  00BF1A  9C65               	bcf	101,6,c	;volatile
 26277  00BF1C                     
 26278                           ;usb_device.c: 2003: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26279  00BF1C  0E08               	movlw	8
 26280  00BF1E  0100               	movlb	0	; () banked
 26281  00BF20  6FF8               	movwf	_pBDTEntryIn& (0+255),b
 26282  00BF22  0E04               	movlw	4
 26283  00BF24  6FF9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 26284  00BF26                     
 26285                           ; BSR set to: 0
 26286                           ;usb_device.c: 2006: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 26287  00BF26  0E00               	movlw	0
 26288  00BF28  6E49               	movwf	_pBDTEntryEP0OutCurrent^0,c
 26289  00BF2A  0E04               	movlw	4
 26290  00BF2C  6E4A               	movwf	(_pBDTEntryEP0OutCurrent+1)^0,c
 26291  00BF2E                     
 26292                           ; BSR set to: 0
 26293                           ;usb_device.c: 2007: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 26294  00BF2E  C049  F047         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 26295  00BF32  C04A  F048         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 26296  00BF36                     
 26297                           ; BSR set to: 0
 26298                           ;usb_device.c: 2010: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 26299  00BF36  C432 F1F7          	movff	1074,_USBActiveConfiguration	;volatile
 26300  00BF3A                     
 26301                           ; BSR set to: 0
 26302                           ;usb_device.c: 2013: if(USBActiveConfiguration == 0)
 26303  00BF3A  0101               	movlb	1	; () banked
 26304  00BF3C  51F7               	movf	_USBActiveConfiguration& (0+255),w,b
 26305  00BF3E  A4D8               	btfss	status,2,c
 26306  00BF40  EFA4  F05F         	goto	u10881
 26307  00BF44  EFA6  F05F         	goto	u10880
 26308  00BF48                     u10881:
 26309  00BF48  EFAA  F05F         	goto	l11448
 26310  00BF4C                     u10880:
 26311  00BF4C                     
 26312                           ; BSR set to: 1
 26313                           ;usb_device.c: 2014: {;usb_device.c: 2016: USBDeviceState = ADDRESS_STATE;
 26314  00BF4C  0E10               	movlw	16
 26315  00BF4E  6E4F               	movwf	_USBDeviceState^0,c
 26316                           
 26317                           ;usb_device.c: 2017: }
 26318  00BF50  EFBA  F05F         	goto	l1979
 26319  00BF54                     l11448:
 26320                           
 26321                           ; BSR set to: 1
 26322                           ;usb_device.c: 2018: else;usb_device.c: 2019: {;usb_device.c: 2021: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER((USB_EVENT)EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 26323  00BF54  0E00               	movlw	0
 26324  00BF56  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 26325  00BF58  0E01               	movlw	1
 26326  00BF5A  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 26327  00BF5C  0EF7               	movlw	low _USBActiveConfiguration
 26328  00BF5E  6E1D               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata^0,c
 26329  00BF60  0E01               	movlw	high _USBActiveConfiguration
 26330  00BF62  6E1E               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)^0,c
 26331  00BF64  0E00               	movlw	0
 26332  00BF66  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 26333  00BF68  0E01               	movlw	1
 26334  00BF6A  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 26335  00BF6C  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26336  00BF70                     
 26337                           ;usb_device.c: 2026: USBDeviceState = CONFIGURED_STATE;
 26338  00BF70  0E20               	movlw	32
 26339  00BF72  6E4F               	movwf	_USBDeviceState^0,c
 26340  00BF74                     l1979:
 26341  00BF74  0012               	return		;funcret
 26342  00BF76                     __end_of_USBStdSetCfgHandler:
 26343                           	callstack 0
 26344                           
 26345 ;; *************** function _memset *****************
 26346 ;; Defined at:
 26347 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memset.c"
 26348 ;; Parameters:    Size  Location     Type
 26349 ;;  p1              2   14[COMRAM] PTR void 
 26350 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26351 ;;  c               2   16[COMRAM] int 
 26352 ;;  n               2   18[COMRAM] unsigned int 
 26353 ;; Auto vars:     Size  Location     Type
 26354 ;;  p               2   20[COMRAM] PTR unsigned char 
 26355 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 26356 ;; Return value:  Size  Location     Type
 26357 ;;                  2   14[COMRAM] PTR void 
 26358 ;; Registers used:
 26359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26360 ;; Tracked objects:
 26361 ;;		On entry : 0/0
 26362 ;;		On exit  : 0/0
 26363 ;;		Unchanged: 0/0
 26364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26365 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26369 ;;Total ram usage:        8 bytes
 26370 ;; Hardware stack levels used: 1
 26371 ;; Hardware stack levels required when called: 3
 26372 ;; This function calls:
 26373 ;;		Nothing
 26374 ;; This function is called by:
 26375 ;;		_USBDeviceInit
 26376 ;;		_USBStdSetCfgHandler
 26377 ;; This function uses a non-reentrant model
 26378 ;;
 26379                           
 26380                           	psect	text117
 26381  00EB34                     __ptext117:
 26382                           	callstack 0
 26383  00EB34                     _memset:
 26384                           	callstack 25
 26385  00EB34  C00F  F015         	movff	memset@p1,memset@p
 26386  00EB38  C010  F016         	movff	memset@p1+1,memset@p+1
 26387  00EB3C  EFA8  F075         	goto	l10930
 26388  00EB40                     l10926:
 26389  00EB40  C015  FFD9         	movff	memset@p,fsr2l
 26390  00EB44  C016  FFDA         	movff	memset@p+1,fsr2h
 26391  00EB48  C011  FFDF         	movff	memset@c,indf2
 26392  00EB4C  4A15               	infsnz	memset@p^0,f,c
 26393  00EB4E  2A16               	incf	(memset@p+1)^0,f,c
 26394  00EB50                     l10930:
 26395  00EB50  0613               	decf	memset@n^0,f,c
 26396  00EB52  A0D8               	btfss	status,0,c
 26397  00EB54  0614               	decf	(memset@n+1)^0,f,c
 26398  00EB56  2813               	incf	memset@n^0,w,c
 26399  00EB58  E106               	bnz	u10171
 26400  00EB5A  2814               	incf	(memset@n+1)^0,w,c
 26401  00EB5C  A4D8               	btfss	status,2,c
 26402  00EB5E  EFB3  F075         	goto	u10171
 26403  00EB62  EFB5  F075         	goto	u10170
 26404  00EB66                     u10171:
 26405  00EB66  EFA0  F075         	goto	l10926
 26406  00EB6A                     u10170:
 26407  00EB6A  0012               	return		;funcret
 26408  00EB6C                     __end_of_memset:
 26409                           	callstack 0
 26410                           
 26411 ;; *************** function _USBStdGetStatusHandler *****************
 26412 ;; Defined at:
 26413 ;;		line 2133 in file "usb/usb_device.c"
 26414 ;; Parameters:    Size  Location     Type
 26415 ;;		None
 26416 ;; Auto vars:     Size  Location     Type
 26417 ;;  p               2   15[COMRAM] PTR struct __BDT
 26418 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 26419 ;; Return value:  Size  Location     Type
 26420 ;;                  1    wreg      void 
 26421 ;; Registers used:
 26422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26423 ;; Tracked objects:
 26424 ;;		On entry : 0/0
 26425 ;;		On exit  : 0/0
 26426 ;;		Unchanged: 0/0
 26427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26431 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26432 ;;Total ram usage:        3 bytes
 26433 ;; Hardware stack levels used: 1
 26434 ;; Hardware stack levels required when called: 3
 26435 ;; This function calls:
 26436 ;;		Nothing
 26437 ;; This function is called by:
 26438 ;;		_USBCheckStdRequest
 26439 ;; This function uses a non-reentrant model
 26440 ;;
 26441                           
 26442                           	psect	text118
 26443  00B4BE                     __ptext118:
 26444                           	callstack 0
 26445  00B4BE                     _USBStdGetStatusHandler:
 26446                           	callstack 23
 26447  00B4BE                     
 26448                           ;usb_device.c: 2135: CtrlTrfData[0] = 0;
 26449  00B4BE  0E00               	movlw	0
 26450  00B4C0  0104               	movlb	4	; () banked
 26451  00B4C2  6F38               	movwf	56,b	;volatile
 26452                           
 26453                           ;usb_device.c: 2136: CtrlTrfData[1] = 0;
 26454  00B4C4  0E00               	movlw	0
 26455  00B4C6  6F39               	movwf	57,b	;volatile
 26456                           
 26457                           ;usb_device.c: 2138: switch(SetupPkt.Recipient)
 26458  00B4C8  EFC3  F05A         	goto	l11508
 26459  00B4CC                     l1997:
 26460                           
 26461                           ; BSR set to: 4
 26462                           ;usb_device.c: 2141: inPipes[0].info.bits.busy = 1;
 26463  00B4CC  8E44               	bsf	(_inPipes+3)^0,7,c
 26464  00B4CE                     
 26465                           ; BSR set to: 4
 26466                           ;usb_device.c: 2149: };usb_device.c: 2151: if(RemoteWakeup == 1)
 26467  00B4CE  0101               	movlb	1	; () banked
 26468  00B4D0  0573               	decf	_RemoteWakeup& (0+255),w,b
 26469  00B4D2  A4D8               	btfss	status,2,c
 26470  00B4D4  EF6E  F05A         	goto	u10951
 26471  00B4D8  EF70  F05A         	goto	u10950
 26472  00B4DC                     u10951:
 26473  00B4DC  EFD3  F05A         	goto	l2000
 26474  00B4E0                     u10950:
 26475  00B4E0                     
 26476                           ; BSR set to: 1
 26477                           ;usb_device.c: 2152: {;usb_device.c: 2153: CtrlTrfData[0]|=0x02;
 26478  00B4E0  0104               	movlb	4	; () banked
 26479  00B4E2  8338               	bsf	56,1,b	;volatile
 26480  00B4E4  EFD3  F05A         	goto	l2000
 26481  00B4E8                     l2001:
 26482                           
 26483                           ; BSR set to: 4
 26484                           ;usb_device.c: 2157: inPipes[0].info.bits.busy = 1;
 26485  00B4E8  8E44               	bsf	(_inPipes+3)^0,7,c
 26486                           
 26487                           ;usb_device.c: 2158: break;
 26488  00B4EA  EFD3  F05A         	goto	l2000
 26489  00B4EE                     l2002:
 26490                           
 26491                           ; BSR set to: 4
 26492                           ;usb_device.c: 2160: inPipes[0].info.bits.busy = 1;
 26493  00B4EE  8E44               	bsf	(_inPipes+3)^0,7,c
 26494  00B4F0                     
 26495                           ; BSR set to: 4
 26496                           ;usb_device.c: 2164: if(SetupPkt.EPNum != 0)
 26497  00B4F0  5134               	movf	52,w,b	;volatile
 26498  00B4F2  0B0F               	andlw	15
 26499  00B4F4  0900               	iorlw	0
 26500  00B4F6  B4D8               	btfsc	status,2,c
 26501  00B4F8  EF80  F05A         	goto	u10961
 26502  00B4FC  EF82  F05A         	goto	u10960
 26503  00B500                     u10961:
 26504  00B500  EFD3  F05A         	goto	l2000
 26505  00B504                     u10960:
 26506  00B504                     
 26507                           ; BSR set to: 4
 26508                           ;usb_device.c: 2165: {;usb_device.c: 2166: BDT_ENTRY *p;;usb_device.c: 2168: if(SetupPkt
      +                          .EPDir == 0)
 26509  00B504  BF34               	btfsc	52,7,b	;volatile
 26510  00B506  EF87  F05A         	goto	u10971
 26511  00B50A  EF89  F05A         	goto	u10970
 26512  00B50E                     u10971:
 26513  00B50E  EF9A  F05A         	goto	l11498
 26514  00B512                     u10970:
 26515  00B512                     
 26516                           ; BSR set to: 4
 26517                           ;usb_device.c: 2169: {;usb_device.c: 2170: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 26518  00B512  5134               	movf	52,w,b	;volatile
 26519  00B514  0B0F               	andlw	15
 26520  00B516  6E0F               	movwf	??_USBStdGetStatusHandler^0,c
 26521  00B518  500F               	movf	??_USBStdGetStatusHandler^0,w,c
 26522  00B51A  0D02               	mullw	2
 26523  00B51C  0E23               	movlw	low _pBDTEntryOut
 26524  00B51E  24F3               	addwf	243,w,c
 26525  00B520  6ED9               	movwf	fsr2l,c
 26526  00B522  0E01               	movlw	high _pBDTEntryOut
 26527  00B524  20F4               	addwfc	prodh,w,c
 26528  00B526  6EDA               	movwf	fsr2h,c
 26529  00B528  CFDE F010          	movff	postinc2,USBStdGetStatusHandler@p
 26530  00B52C  CFDD F011          	movff	postdec2,USBStdGetStatusHandler@p+1
 26531                           
 26532                           ;usb_device.c: 2171: }
 26533  00B530  EFA9  F05A         	goto	l11500
 26534  00B534                     l11498:
 26535                           
 26536                           ; BSR set to: 4
 26537                           ;usb_device.c: 2172: else;usb_device.c: 2173: {;usb_device.c: 2174: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 26538  00B534  5134               	movf	52,w,b	;volatile
 26539  00B536  0B0F               	andlw	15
 26540  00B538  6E0F               	movwf	??_USBStdGetStatusHandler^0,c
 26541  00B53A  500F               	movf	??_USBStdGetStatusHandler^0,w,c
 26542  00B53C  0D02               	mullw	2
 26543  00B53E  0EF8               	movlw	low _pBDTEntryIn
 26544  00B540  24F3               	addwf	243,w,c
 26545  00B542  6ED9               	movwf	fsr2l,c
 26546  00B544  0E00               	movlw	high _pBDTEntryIn
 26547  00B546  20F4               	addwfc	prodh,w,c
 26548  00B548  6EDA               	movwf	fsr2h,c
 26549  00B54A  CFDE F010          	movff	postinc2,USBStdGetStatusHandler@p
 26550  00B54E  CFDD F011          	movff	postdec2,USBStdGetStatusHandler@p+1
 26551  00B552                     l11500:
 26552                           
 26553                           ; BSR set to: 4
 26554                           ;usb_device.c: 2175: };usb_device.c: 2177: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 26555  00B552  C010  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26556  00B556  C011  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26557  00B55A  AEDF               	btfss	indf2,7,c
 26558  00B55C  EFB2  F05A         	goto	u10981
 26559  00B560  EFB4  F05A         	goto	u10980
 26560  00B564                     u10981:
 26561  00B564  EFD3  F05A         	goto	l2000
 26562  00B568                     u10980:
 26563  00B568                     
 26564                           ; BSR set to: 4
 26565  00B568  C010  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 26566  00B56C  C011  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 26567  00B570  A4DF               	btfss	indf2,2,c
 26568  00B572  EFBD  F05A         	goto	u10991
 26569  00B576  EFBF  F05A         	goto	u10990
 26570  00B57A                     u10991:
 26571  00B57A  EFD3  F05A         	goto	l2000
 26572  00B57E                     u10990:
 26573  00B57E                     
 26574                           ; BSR set to: 4
 26575                           ;usb_device.c: 2178: {;usb_device.c: 2179: CtrlTrfData[0]=0x01;
 26576  00B57E  0E01               	movlw	1
 26577  00B580  6F38               	movwf	56,b	;volatile
 26578  00B582  EFD3  F05A         	goto	l2000
 26579  00B586                     l11508:
 26580                           
 26581                           ; BSR set to: 4
 26582  00B586  5130               	movf	48,w,b	;volatile
 26583  00B588  0B1F               	andlw	31
 26584                           
 26585                           ; Switch size 1, requested type "simple"
 26586                           ; Number of cases is 3, Range of values is 0 to 2
 26587                           ; switch strategies available:
 26588                           ; Name         Instructions Cycles
 26589                           ; simple_byte           10     6 (average)
 26590                           ;	Chosen strategy is simple_byte
 26591  00B58A  0A00               	xorlw	0	; case 0
 26592  00B58C  B4D8               	btfsc	status,2,c
 26593  00B58E  EF66  F05A         	goto	l1997
 26594  00B592  0A01               	xorlw	1	; case 1
 26595  00B594  B4D8               	btfsc	status,2,c
 26596  00B596  EF74  F05A         	goto	l2001
 26597  00B59A  0A03               	xorlw	3	; case 2
 26598  00B59C  B4D8               	btfsc	status,2,c
 26599  00B59E  EF77  F05A         	goto	l2002
 26600  00B5A2  EFD3  F05A         	goto	l2000
 26601  00B5A6                     l2000:
 26602                           
 26603                           ;usb_device.c: 2185: if(inPipes[0].info.bits.busy == 1)
 26604  00B5A6  AE44               	btfss	(_inPipes+3)^0,7,c
 26605  00B5A8  EFD8  F05A         	goto	u11001
 26606  00B5AC  EFDA  F05A         	goto	u11000
 26607  00B5B0                     u11001:
 26608  00B5B0  EFE1  F05A         	goto	l2008
 26609  00B5B4                     u11000:
 26610  00B5B4                     
 26611                           ;usb_device.c: 2186: {;usb_device.c: 2187: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 26612  00B5B4  0E38               	movlw	56
 26613  00B5B6  6E41               	movwf	_inPipes^0,c
 26614  00B5B8  0E04               	movlw	4
 26615  00B5BA  6E42               	movwf	(_inPipes+1)^0,c
 26616  00B5BC                     
 26617                           ;usb_device.c: 2188: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 26618  00B5BC  8044               	bsf	(_inPipes+3)^0,0,c
 26619  00B5BE                     
 26620                           ;usb_device.c: 2189: inPipes[0].wCount.v[0] = 2;
 26621  00B5BE  0E02               	movlw	2
 26622  00B5C0  6E45               	movwf	(_inPipes+4)^0,c
 26623  00B5C2                     l2008:
 26624  00B5C2  0012               	return		;funcret
 26625  00B5C4                     __end_of_USBStdGetStatusHandler:
 26626                           	callstack 0
 26627                           
 26628 ;; *************** function _USBStdGetDscHandler *****************
 26629 ;; Defined at:
 26630 ;;		line 2047 in file "usb/usb_device.c"
 26631 ;; Parameters:    Size  Location     Type
 26632 ;;		None
 26633 ;; Auto vars:     Size  Location     Type
 26634 ;;		None
 26635 ;; Return value:  Size  Location     Type
 26636 ;;                  1    wreg      void 
 26637 ;; Registers used:
 26638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 26639 ;; Tracked objects:
 26640 ;;		On entry : 0/0
 26641 ;;		On exit  : 0/0
 26642 ;;		Unchanged: 0/0
 26643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26646 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26648 ;;Total ram usage:        2 bytes
 26649 ;; Hardware stack levels used: 1
 26650 ;; Hardware stack levels required when called: 3
 26651 ;; This function calls:
 26652 ;;		Nothing
 26653 ;; This function is called by:
 26654 ;;		_USBCheckStdRequest
 26655 ;; This function uses a non-reentrant model
 26656 ;;
 26657                           
 26658                           	psect	text119
 26659  00ABDC                     __ptext119:
 26660                           	callstack 0
 26661  00ABDC                     _USBStdGetDscHandler:
 26662                           	callstack 23
 26663  00ABDC                     
 26664                           ;usb_device.c: 2049: if(SetupPkt.bmRequestType == 0x80)
 26665  00ABDC  0E80               	movlw	128
 26666  00ABDE  0104               	movlb	4	; () banked
 26667  00ABE0  1930               	xorwf	48,w,b	;volatile
 26668  00ABE2  A4D8               	btfss	status,2,c
 26669  00ABE4  EFF6  F055         	goto	u10891
 26670  00ABE8  EFF8  F055         	goto	u10890
 26671  00ABEC                     u10891:
 26672  00ABEC  EF8B  F056         	goto	l1993
 26673  00ABF0                     u10890:
 26674  00ABF0                     
 26675                           ; BSR set to: 4
 26676                           ;usb_device.c: 2050: {;usb_device.c: 2051: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 26677  00ABF0  0EC0               	movlw	192
 26678  00ABF2  6E44               	movwf	(_inPipes+3)^0,c
 26679                           
 26680                           ;usb_device.c: 2053: switch(SetupPkt.bDescriptorType)
 26681  00ABF4  EF7C  F056         	goto	l11482
 26682  00ABF8                     l11456:
 26683                           
 26684                           ; BSR set to: 4
 26685                           ;usb_device.c: 2059: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 26686  00ABF8  0E32               	movlw	low _device_dsc
 26687  00ABFA  6E41               	movwf	_inPipes^0,c
 26688  00ABFC  0E23               	movlw	high _device_dsc
 26689  00ABFE  6E42               	movwf	(_inPipes+1)^0,c
 26690  00AC00                     
 26691                           ; BSR set to: 4
 26692                           ;usb_device.c: 2061: inPipes[0].wCount.Val = sizeof(device_dsc);
 26693  00AC00  0E00               	movlw	0
 26694  00AC02  6E46               	movwf	(_inPipes+5)^0,c
 26695  00AC04  0E12               	movlw	18
 26696  00AC06  6E45               	movwf	(_inPipes+4)^0,c
 26697                           
 26698                           ;usb_device.c: 2062: break;
 26699  00AC08  EF8B  F056         	goto	l1993
 26700  00AC0C                     l11460:
 26701                           
 26702                           ; BSR set to: 4
 26703                           ;usb_device.c: 2067: if(SetupPkt.bDscIndex < 1)
 26704  00AC0C  5132               	movf	50,w,b	;volatile
 26705  00AC0E  A4D8               	btfss	status,2,c
 26706  00AC10  EF0C  F056         	goto	u10901
 26707  00AC14  EF0E  F056         	goto	u10900
 26708  00AC18                     u10901:
 26709  00AC18  EF4C  F056         	goto	l11468
 26710  00AC1C                     u10900:
 26711  00AC1C                     
 26712                           ; BSR set to: 4
 26713                           ;usb_device.c: 2068: {;usb_device.c: 2072: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 26714  00AC1C  5132               	movf	50,w,b	;volatile
 26715  00AC1E  0D02               	mullw	2
 26716  00AC20  0EF3               	movlw	low _USB_CD_Ptr
 26717  00AC22  24F3               	addwf	243,w,c
 26718  00AC24  6EF6               	movwf	tblptrl,c
 26719  00AC26  0E20               	movlw	high _USB_CD_Ptr
 26720  00AC28  20F4               	addwfc	244,w,c
 26721  00AC2A  6EF7               	movwf	tblptrh,c
 26722  00AC2C                     	if	0	;There are less than 3 active tblptr bytes
 26723  00AC2C                     	endif
 26724  00AC2C  0009               	tblrd		*+
 26725  00AC2E  CFF5 F041          	movff	tablat,_inPipes
 26726  00AC32  000A               	tblrd		*-
 26727  00AC34  CFF5 F042          	movff	tablat,_inPipes+1
 26728  00AC38                     
 26729                           ; BSR set to: 4
 26730                           ;usb_device.c: 2078: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 26731  00AC38  0E02               	movlw	2
 26732  00AC3A  2441               	addwf	_inPipes^0,w,c
 26733  00AC3C  6E0F               	movwf	??_USBStdGetDscHandler^0,c
 26734  00AC3E  0E00               	movlw	0
 26735  00AC40  2042               	addwfc	(_inPipes+1)^0,w,c
 26736  00AC42  6E10               	movwf	(??_USBStdGetDscHandler+1)^0,c
 26737  00AC44  C00F  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26738  00AC48  C010  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26739  00AC4C  6AF8               	clrf	tblptru,c
 26740  00AC4E  0E0E               	movlw	(high __ramtop+-1)
 26741  00AC50  64F7               	cpfsgt	tblptrh,c
 26742  00AC52  D003               	bra	u10917
 26743  00AC54  0008               	tblrd		*
 26744  00AC56  50F5               	movf	tablat,w,c
 26745  00AC58  D005               	bra	u10910
 26746  00AC5A                     u10917:
 26747  00AC5A  CFF6 FFE1          	movff	tblptrl,fsr1l
 26748  00AC5E  CFF7 FFE2          	movff	tblptrh,fsr1h
 26749  00AC62  50E7               	movf	indf1,w,c
 26750  00AC64                     u10910:
 26751  00AC64  6E45               	movwf	(_inPipes+4)^0,c
 26752  00AC66                     
 26753                           ;usb_device.c: 2079: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 26754  00AC66  0E03               	movlw	3
 26755  00AC68  2441               	addwf	_inPipes^0,w,c
 26756  00AC6A  6E0F               	movwf	??_USBStdGetDscHandler^0,c
 26757  00AC6C  0E00               	movlw	0
 26758  00AC6E  2042               	addwfc	(_inPipes+1)^0,w,c
 26759  00AC70  6E10               	movwf	(??_USBStdGetDscHandler+1)^0,c
 26760  00AC72  C00F  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 26761  00AC76  C010  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 26762  00AC7A  6AF8               	clrf	tblptru,c
 26763  00AC7C  0E0E               	movlw	(high __ramtop+-1)
 26764  00AC7E  64F7               	cpfsgt	tblptrh,c
 26765  00AC80  D003               	bra	u10927
 26766  00AC82  0008               	tblrd		*
 26767  00AC84  50F5               	movf	tablat,w,c
 26768  00AC86  D005               	bra	u10920
 26769  00AC88                     u10927:
 26770  00AC88  CFF6 FFE1          	movff	tblptrl,fsr1l
 26771  00AC8C  CFF7 FFE2          	movff	tblptrh,fsr1h
 26772  00AC90  50E7               	movf	indf1,w,c
 26773  00AC92                     u10920:
 26774  00AC92  6E46               	movwf	(_inPipes+5)^0,c
 26775                           
 26776                           ;usb_device.c: 2080: }
 26777  00AC94  EF8B  F056         	goto	l1993
 26778  00AC98                     l11468:
 26779                           
 26780                           ; BSR set to: 4
 26781                           ;usb_device.c: 2081: else;usb_device.c: 2082: {;usb_device.c: 2083: inPipes[0].info.Val 
      +                          = 0;
 26782  00AC98  0E00               	movlw	0
 26783  00AC9A  6E44               	movwf	(_inPipes+3)^0,c
 26784  00AC9C  EF8B  F056         	goto	l1993
 26785  00ACA0                     l11470:
 26786                           
 26787                           ; BSR set to: 4
 26788                           ;usb_device.c: 2090: if(SetupPkt.bDscIndex<3)
 26789  00ACA0  0E03               	movlw	3
 26790  00ACA2  6132               	cpfslt	50,b	;volatile
 26791  00ACA4  EF56  F056         	goto	u10931
 26792  00ACA8  EF58  F056         	goto	u10930
 26793  00ACAC                     u10931:
 26794  00ACAC  EF4C  F056         	goto	l11468
 26795  00ACB0                     u10930:
 26796  00ACB0                     
 26797                           ; BSR set to: 4
 26798                           ;usb_device.c: 2091: {;usb_device.c: 2093: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 26799  00ACB0  5132               	movf	50,w,b	;volatile
 26800  00ACB2  0D02               	mullw	2
 26801  00ACB4  0EED               	movlw	low _USB_SD_Ptr
 26802  00ACB6  24F3               	addwf	243,w,c
 26803  00ACB8  6EF6               	movwf	tblptrl,c
 26804  00ACBA  0E20               	movlw	high _USB_SD_Ptr
 26805  00ACBC  20F4               	addwfc	244,w,c
 26806  00ACBE  6EF7               	movwf	tblptrh,c
 26807  00ACC0                     	if	0	;There are less than 3 active tblptr bytes
 26808  00ACC0                     	endif
 26809  00ACC0  0009               	tblrd		*+
 26810  00ACC2  CFF5 F041          	movff	tablat,_inPipes
 26811  00ACC6  000A               	tblrd		*-
 26812  00ACC8  CFF5 F042          	movff	tablat,_inPipes+1
 26813  00ACCC                     
 26814                           ; BSR set to: 4
 26815                           ;usb_device.c: 2095: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 26816  00ACCC  C041  FFF6         	movff	_inPipes,tblptrl
 26817  00ACD0  C042  FFF7         	movff	_inPipes+1,tblptrh
 26818  00ACD4  6AF8               	clrf	tblptru,c
 26819  00ACD6  0E0E               	movlw	(high __ramtop+-1)
 26820  00ACD8  64F7               	cpfsgt	tblptrh,c
 26821  00ACDA  D003               	bra	u10947
 26822  00ACDC  0008               	tblrd		*
 26823  00ACDE  50F5               	movf	tablat,w,c
 26824  00ACE0  D005               	bra	u10940
 26825  00ACE2                     u10947:
 26826  00ACE2  CFF6 FFE1          	movff	tblptrl,fsr1l
 26827  00ACE6  CFF7 FFE2          	movff	tblptrh,fsr1h
 26828  00ACEA  50E7               	movf	indf1,w,c
 26829  00ACEC                     u10940:
 26830  00ACEC  6E0F               	movwf	??_USBStdGetDscHandler^0,c
 26831  00ACEE  500F               	movf	??_USBStdGetDscHandler^0,w,c
 26832  00ACF0  6E45               	movwf	(_inPipes+4)^0,c
 26833  00ACF2  6A46               	clrf	(_inPipes+5)^0,c
 26834                           
 26835                           ;usb_device.c: 2096: }
 26836  00ACF4  EF8B  F056         	goto	l1993
 26837  00ACF8                     l11482:
 26838                           
 26839                           ; BSR set to: 4
 26840  00ACF8  5133               	movf	51,w,b	;volatile
 26841                           
 26842                           ; Switch size 1, requested type "simple"
 26843                           ; Number of cases is 3, Range of values is 1 to 3
 26844                           ; switch strategies available:
 26845                           ; Name         Instructions Cycles
 26846                           ; simple_byte           10     6 (average)
 26847                           ;	Chosen strategy is simple_byte
 26848  00ACFA  0A01               	xorlw	1	; case 1
 26849  00ACFC  B4D8               	btfsc	status,2,c
 26850  00ACFE  EFFC  F055         	goto	l11456
 26851  00AD02  0A03               	xorlw	3	; case 2
 26852  00AD04  B4D8               	btfsc	status,2,c
 26853  00AD06  EF06  F056         	goto	l11460
 26854  00AD0A  0A01               	xorlw	1	; case 3
 26855  00AD0C  B4D8               	btfsc	status,2,c
 26856  00AD0E  EF50  F056         	goto	l11470
 26857  00AD12  EF4C  F056         	goto	l11468
 26858  00AD16                     l1993:
 26859  00AD16  0012               	return		;funcret
 26860  00AD18                     __end_of_USBStdGetDscHandler:
 26861                           	callstack 0
 26862                           
 26863 ;; *************** function _USBStdFeatureReqHandler *****************
 26864 ;; Defined at:
 26865 ;;		line 2761 in file "usb/usb_device.c"
 26866 ;; Parameters:    Size  Location     Type
 26867 ;;		None
 26868 ;; Auto vars:     Size  Location     Type
 26869 ;;  p               2   39[COMRAM] PTR struct __BDT
 26870 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 26871 ;;  pUEP            2   36[COMRAM] PTR unsigned char 
 26872 ;;		 -> UEP0(1), 
 26873 ;;  current_ep_d    1   38[COMRAM] struct .
 26874 ;; Return value:  Size  Location     Type
 26875 ;;                  1    wreg      void 
 26876 ;; Registers used:
 26877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26878 ;; Tracked objects:
 26879 ;;		On entry : 0/0
 26880 ;;		On exit  : 0/0
 26881 ;;		Unchanged: 0/0
 26882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26884 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26885 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26886 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26887 ;;Total ram usage:        7 bytes
 26888 ;; Hardware stack levels used: 1
 26889 ;; Hardware stack levels required when called: 7
 26890 ;; This function calls:
 26891 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26892 ;; This function is called by:
 26893 ;;		_USBCheckStdRequest
 26894 ;; This function uses a non-reentrant model
 26895 ;;
 26896                           
 26897                           	psect	text120
 26898  006B32                     __ptext120:
 26899                           	callstack 0
 26900  006B32                     _USBStdFeatureReqHandler:
 26901                           	callstack 19
 26902  006B32                     
 26903                           ;usb_device.c: 2763: BDT_ENTRY *p;;usb_device.c: 2764: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2768: unsigned char* pUEP;;usb_device.c: 2772: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2773: (SetupPkt.Recipient == (0x00)))
 26904  006B32  0104               	movlb	4	; () banked
 26905  006B34  0532               	decf	50,w,b	;volatile
 26906  006B36  A4D8               	btfss	status,2,c
 26907  006B38  EFA0  F035         	goto	u11011
 26908  006B3C  EFA2  F035         	goto	u11010
 26909  006B40                     u11011:
 26910  006B40  EFBE  F035         	goto	l2075
 26911  006B44                     u11010:
 26912  006B44                     
 26913                           ; BSR set to: 4
 26914  006B44  5130               	movf	48,w,b	;volatile
 26915  006B46  0B1F               	andlw	31
 26916  006B48  0900               	iorlw	0
 26917  006B4A  A4D8               	btfss	status,2,c
 26918  006B4C  EFAA  F035         	goto	u11021
 26919  006B50  EFAC  F035         	goto	u11020
 26920  006B54                     u11021:
 26921  006B54  EFBE  F035         	goto	l2075
 26922  006B58                     u11020:
 26923  006B58                     
 26924                           ; BSR set to: 4
 26925                           ;usb_device.c: 2774: {;usb_device.c: 2775: inPipes[0].info.bits.busy = 1;
 26926  006B58  8E44               	bsf	(_inPipes+3)^0,7,c
 26927  006B5A                     
 26928                           ; BSR set to: 4
 26929                           ;usb_device.c: 2776: if(SetupPkt.bRequest == 3)
 26930  006B5A  0E03               	movlw	3
 26931  006B5C  1931               	xorwf	49,w,b	;volatile
 26932  006B5E  A4D8               	btfss	status,2,c
 26933  006B60  EFB4  F035         	goto	u11031
 26934  006B64  EFB6  F035         	goto	u11030
 26935  006B68                     u11031:
 26936  006B68  EFBB  F035         	goto	l11526
 26937  006B6C                     u11030:
 26938  006B6C                     
 26939                           ; BSR set to: 4
 26940                           ;usb_device.c: 2777: RemoteWakeup = 1;
 26941  006B6C  0E01               	movlw	1
 26942  006B6E  0101               	movlb	1	; () banked
 26943  006B70  6F73               	movwf	_RemoteWakeup& (0+255),b
 26944  006B72  EFBE  F035         	goto	l2075
 26945  006B76                     l11526:
 26946                           
 26947                           ; BSR set to: 4
 26948                           ;usb_device.c: 2778: else;usb_device.c: 2779: RemoteWakeup = 0;
 26949  006B76  0E00               	movlw	0
 26950  006B78  0101               	movlb	1	; () banked
 26951  006B7A  6F73               	movwf	_RemoteWakeup& (0+255),b
 26952  006B7C                     l2075:
 26953                           
 26954                           ;usb_device.c: 2780: };usb_device.c: 2783: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          784: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2785: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2786: (USBDeviceState == CONFIGURED_STATE))
 26955  006B7C  0104               	movlb	4	; () banked
 26956  006B7E  5132               	movf	50,w,b	;volatile
 26957  006B80  A4D8               	btfss	status,2,c
 26958  006B82  EFC5  F035         	goto	u11041
 26959  006B86  EFC7  F035         	goto	u11040
 26960  006B8A                     u11041:
 26961  006B8A  EF45  F037         	goto	l2098
 26962  006B8E                     u11040:
 26963  006B8E                     
 26964                           ; BSR set to: 4
 26965  006B8E  5130               	movf	48,w,b	;volatile
 26966  006B90  0B1F               	andlw	31
 26967  006B92  0A02               	xorlw	2
 26968  006B94  A4D8               	btfss	status,2,c
 26969  006B96  EFCF  F035         	goto	u11051
 26970  006B9A  EFD1  F035         	goto	u11050
 26971  006B9E                     u11051:
 26972  006B9E  EF45  F037         	goto	l2098
 26973  006BA2                     u11050:
 26974  006BA2                     
 26975                           ; BSR set to: 4
 26976  006BA2  5134               	movf	52,w,b	;volatile
 26977  006BA4  0B0F               	andlw	15
 26978  006BA6  0900               	iorlw	0
 26979  006BA8  B4D8               	btfsc	status,2,c
 26980  006BAA  EFD9  F035         	goto	u11061
 26981  006BAE  EFDB  F035         	goto	u11060
 26982  006BB2                     u11061:
 26983  006BB2  EF45  F037         	goto	l2098
 26984  006BB6                     u11060:
 26985  006BB6                     
 26986                           ; BSR set to: 4
 26987  006BB6  5134               	movf	52,w,b	;volatile
 26988  006BB8  0B0F               	andlw	15
 26989  006BBA  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 26990  006BBC  0E03               	movlw	3
 26991  006BBE  6023               	cpfslt	??_USBStdFeatureReqHandler^0,c
 26992  006BC0  EFE4  F035         	goto	u11071
 26993  006BC4  EFE6  F035         	goto	u11070
 26994  006BC8                     u11071:
 26995  006BC8  EF45  F037         	goto	l2098
 26996  006BCC                     u11070:
 26997  006BCC                     
 26998                           ; BSR set to: 4
 26999  006BCC  0E20               	movlw	32
 27000  006BCE  184F               	xorwf	_USBDeviceState^0,w,c
 27001  006BD0  A4D8               	btfss	status,2,c
 27002  006BD2  EFED  F035         	goto	u11081
 27003  006BD6  EFEF  F035         	goto	u11080
 27004  006BDA                     u11081:
 27005  006BDA  EF45  F037         	goto	l2098
 27006  006BDE                     u11080:
 27007  006BDE                     
 27008                           ; BSR set to: 4
 27009                           ;usb_device.c: 2787: {;usb_device.c: 2790: inPipes[0].info.bits.busy = 1;
 27010  006BDE  8E44               	bsf	(_inPipes+3)^0,7,c
 27011                           
 27012                           ;usb_device.c: 2793: if(SetupPkt.EPDir == 0)
 27013  006BE0  BF34               	btfsc	52,7,b	;volatile
 27014  006BE2  EFF5  F035         	goto	u11091
 27015  006BE6  EFF7  F035         	goto	u11090
 27016  006BEA                     u11091:
 27017  006BEA  EF14  F036         	goto	l11542
 27018  006BEE                     u11090:
 27019  006BEE                     
 27020                           ; BSR set to: 4
 27021                           ;usb_device.c: 2794: {;usb_device.c: 2795: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 27022  006BEE  5134               	movf	52,w,b	;volatile
 27023  006BF0  0B0F               	andlw	15
 27024  006BF2  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27025  006BF4  5023               	movf	??_USBStdFeatureReqHandler^0,w,c
 27026  006BF6  0D02               	mullw	2
 27027  006BF8  0E23               	movlw	low _pBDTEntryOut
 27028  006BFA  24F3               	addwf	243,w,c
 27029  006BFC  6ED9               	movwf	fsr2l,c
 27030  006BFE  0E01               	movlw	high _pBDTEntryOut
 27031  006C00  20F4               	addwfc	prodh,w,c
 27032  006C02  6EDA               	movwf	fsr2h,c
 27033  006C04  CFDE F028          	movff	postinc2,USBStdFeatureReqHandler@p
 27034  006C08  CFDD F029          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27035  006C0C                     
 27036                           ; BSR set to: 4
 27037                           ;usb_device.c: 2796: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 27038  006C0C  5134               	movf	52,w,b	;volatile
 27039  006C0E  0B0F               	andlw	15
 27040  006C10  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27041  006C12  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27042  006C14  0E54               	movlw	low _ep_data_out
 27043  006C16  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27044  006C18  6ED9               	movwf	fsr2l,c
 27045  006C1A  0E01               	movlw	high _ep_data_out
 27046  006C1C  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27047  006C1E  6EDA               	movwf	fsr2h,c
 27048  006C20  50DF               	movf	indf2,w,c
 27049  006C22  6E27               	movwf	USBStdFeatureReqHandler@current_ep_data^0,c
 27050                           
 27051                           ;usb_device.c: 2797: }
 27052  006C24  EF2F  F036         	goto	l11546
 27053  006C28                     l11542:
 27054                           
 27055                           ; BSR set to: 4
 27056                           ;usb_device.c: 2798: else;usb_device.c: 2799: {;usb_device.c: 2800: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 27057  006C28  5134               	movf	52,w,b	;volatile
 27058  006C2A  0B0F               	andlw	15
 27059  006C2C  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27060  006C2E  5023               	movf	??_USBStdFeatureReqHandler^0,w,c
 27061  006C30  0D02               	mullw	2
 27062  006C32  0EF8               	movlw	low _pBDTEntryIn
 27063  006C34  24F3               	addwf	243,w,c
 27064  006C36  6ED9               	movwf	fsr2l,c
 27065  006C38  0E00               	movlw	high _pBDTEntryIn
 27066  006C3A  20F4               	addwfc	prodh,w,c
 27067  006C3C  6EDA               	movwf	fsr2h,c
 27068  006C3E  CFDE F028          	movff	postinc2,USBStdFeatureReqHandler@p
 27069  006C42  CFDD F029          	movff	postdec2,USBStdFeatureReqHandler@p+1
 27070  006C46                     
 27071                           ; BSR set to: 4
 27072                           ;usb_device.c: 2801: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 27073  006C46  5134               	movf	52,w,b	;volatile
 27074  006C48  0B0F               	andlw	15
 27075  006C4A  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27076  006C4C  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27077  006C4E  0E57               	movlw	low _ep_data_in
 27078  006C50  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27079  006C52  6ED9               	movwf	fsr2l,c
 27080  006C54  0E01               	movlw	high _ep_data_in
 27081  006C56  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27082  006C58  6EDA               	movwf	fsr2h,c
 27083  006C5A  50DF               	movf	indf2,w,c
 27084  006C5C  6E27               	movwf	USBStdFeatureReqHandler@current_ep_data^0,c
 27085  006C5E                     l11546:
 27086                           
 27087                           ; BSR set to: 4
 27088                           ;usb_device.c: 2802: };usb_device.c: 2808: if(current_ep_data.bits.ping_pong_state == 0)
 27089  006C5E  B027               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,0,c
 27090  006C60  EF34  F036         	goto	u11101
 27091  006C64  EF36  F036         	goto	u11100
 27092  006C68                     u11101:
 27093  006C68  EF3E  F036         	goto	l11550
 27094  006C6C                     u11100:
 27095  006C6C                     
 27096                           ; BSR set to: 4
 27097                           ;usb_device.c: 2809: {;usb_device.c: 2810: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 27098  006C6C  0EFB               	movlw	251
 27099  006C6E  1428               	andwf	USBStdFeatureReqHandler@p^0,w,c
 27100  006C70  6E28               	movwf	USBStdFeatureReqHandler@p^0,c
 27101  006C72  0EFF               	movlw	255
 27102  006C74  1429               	andwf	(USBStdFeatureReqHandler@p+1)^0,w,c
 27103  006C76  6E29               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 27104                           
 27105                           ;usb_device.c: 2811: }
 27106  006C78  EF43  F036         	goto	l11552
 27107  006C7C                     l11550:
 27108                           
 27109                           ; BSR set to: 4
 27110                           ;usb_device.c: 2812: else;usb_device.c: 2813: {;usb_device.c: 2814: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 27111  006C7C  0E04               	movlw	4
 27112  006C7E  1028               	iorwf	USBStdFeatureReqHandler@p^0,w,c
 27113  006C80  6E28               	movwf	USBStdFeatureReqHandler@p^0,c
 27114  006C82  5029               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 27115  006C84  6E29               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 27116  006C86                     l11552:
 27117                           
 27118                           ; BSR set to: 4
 27119                           ;usb_device.c: 2815: };usb_device.c: 2820: if(SetupPkt.EPDir == 0)
 27120  006C86  BF34               	btfsc	52,7,b	;volatile
 27121  006C88  EF48  F036         	goto	u11111
 27122  006C8C  EF4A  F036         	goto	u11110
 27123  006C90                     u11111:
 27124  006C90  EF5B  F036         	goto	l11556
 27125  006C94                     u11110:
 27126  006C94                     
 27127                           ; BSR set to: 4
 27128                           ;usb_device.c: 2821: {;usb_device.c: 2822: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 27129  006C94  5134               	movf	52,w,b	;volatile
 27130  006C96  0B0F               	andlw	15
 27131  006C98  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27132  006C9A  5023               	movf	??_USBStdFeatureReqHandler^0,w,c
 27133  006C9C  0D02               	mullw	2
 27134  006C9E  0E23               	movlw	low _pBDTEntryOut
 27135  006CA0  24F3               	addwf	243,w,c
 27136  006CA2  6ED9               	movwf	fsr2l,c
 27137  006CA4  0E01               	movlw	high _pBDTEntryOut
 27138  006CA6  20F4               	addwfc	prodh,w,c
 27139  006CA8  6EDA               	movwf	fsr2h,c
 27140  006CAA  C028  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27141  006CAE  C029  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27142                           
 27143                           ;usb_device.c: 2823: }
 27144  006CB2  EF6A  F036         	goto	l11558
 27145  006CB6                     l11556:
 27146                           
 27147                           ; BSR set to: 4
 27148                           ;usb_device.c: 2824: else;usb_device.c: 2825: {;usb_device.c: 2826: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 27149  006CB6  5134               	movf	52,w,b	;volatile
 27150  006CB8  0B0F               	andlw	15
 27151  006CBA  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27152  006CBC  5023               	movf	??_USBStdFeatureReqHandler^0,w,c
 27153  006CBE  0D02               	mullw	2
 27154  006CC0  0EF8               	movlw	low _pBDTEntryIn
 27155  006CC2  24F3               	addwf	243,w,c
 27156  006CC4  6ED9               	movwf	fsr2l,c
 27157  006CC6  0E00               	movlw	high _pBDTEntryIn
 27158  006CC8  20F4               	addwfc	prodh,w,c
 27159  006CCA  6EDA               	movwf	fsr2h,c
 27160  006CCC  C028  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 27161  006CD0  C029  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 27162  006CD4                     l11558:
 27163                           
 27164                           ; BSR set to: 4
 27165                           ;usb_device.c: 2827: };usb_device.c: 2830: if(SetupPkt.bRequest == 3)
 27166  006CD4  0E03               	movlw	3
 27167  006CD6  1931               	xorwf	49,w,b	;volatile
 27168  006CD8  A4D8               	btfss	status,2,c
 27169  006CDA  EF71  F036         	goto	u11121
 27170  006CDE  EF73  F036         	goto	u11120
 27171  006CE2                     u11121:
 27172  006CE2  EFAD  F036         	goto	l11568
 27173  006CE6                     u11120:
 27174  006CE6                     
 27175                           ; BSR set to: 4
 27176                           ;usb_device.c: 2831: {;usb_device.c: 2832: if(p->STAT.UOWN == 1)
 27177  006CE6  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27178  006CEA  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27179  006CEE  AEDF               	btfss	indf2,7,c
 27180  006CF0  EF7C  F036         	goto	u11131
 27181  006CF4  EF7E  F036         	goto	u11130
 27182  006CF8                     u11131:
 27183  006CF8  EF9F  F036         	goto	l2086
 27184  006CFC                     u11130:
 27185  006CFC                     
 27186                           ; BSR set to: 4
 27187                           ;usb_device.c: 2833: {;usb_device.c: 2836: if(SetupPkt.EPDir == 0)
 27188  006CFC  BF34               	btfsc	52,7,b	;volatile
 27189  006CFE  EF83  F036         	goto	u11141
 27190  006D02  EF85  F036         	goto	u11140
 27191  006D06                     u11141:
 27192  006D06  EF93  F036         	goto	l11566
 27193  006D0A                     u11140:
 27194  006D0A                     
 27195                           ; BSR set to: 4
 27196                           ;usb_device.c: 2837: {;usb_device.c: 2838: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 27197  006D0A  5134               	movf	52,w,b	;volatile
 27198  006D0C  0B0F               	andlw	15
 27199  006D0E  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27200  006D10  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27201  006D12  0E54               	movlw	low _ep_data_out
 27202  006D14  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27203  006D16  6ED9               	movwf	fsr2l,c
 27204  006D18  0E01               	movlw	high _ep_data_out
 27205  006D1A  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27206  006D1C  6EDA               	movwf	fsr2h,c
 27207  006D1E  0101               	movlb	1	; () banked
 27208  006D20  82DF               	bsf	indf2,1,c
 27209                           
 27210                           ;usb_device.c: 2839: }
 27211  006D22  EF9F  F036         	goto	l2086
 27212  006D26                     l11566:
 27213                           
 27214                           ; BSR set to: 4
 27215                           ;usb_device.c: 2840: else;usb_device.c: 2841: {;usb_device.c: 2842: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 27216  006D26  5134               	movf	52,w,b	;volatile
 27217  006D28  0B0F               	andlw	15
 27218  006D2A  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27219  006D2C  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27220  006D2E  0E57               	movlw	low _ep_data_in
 27221  006D30  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27222  006D32  6ED9               	movwf	fsr2l,c
 27223  006D34  0E01               	movlw	high _ep_data_in
 27224  006D36  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27225  006D38  6EDA               	movwf	fsr2h,c
 27226  006D3A  0101               	movlb	1	; () banked
 27227  006D3C  82DF               	bsf	indf2,1,c
 27228  006D3E                     l2086:
 27229                           
 27230                           ;usb_device.c: 2843: };usb_device.c: 2844: };usb_device.c: 2847: p->STAT.Val |= 0x04;
 27231  006D3E  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27232  006D42  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27233  006D46  0E00               	movlw	0
 27234  006D48  84DB               	bsf	plusw2,2,c
 27235                           
 27236                           ;usb_device.c: 2848: p->STAT.Val |= 0x80;
 27237  006D4A  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27238  006D4E  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27239  006D52  0E00               	movlw	0
 27240  006D54  8EDB               	bsf	plusw2,7,c
 27241                           
 27242                           ;usb_device.c: 2849: }
 27243  006D56  EF45  F037         	goto	l2098
 27244  006D5A                     l11568:
 27245                           
 27246                           ; BSR set to: 4
 27247                           ;usb_device.c: 2850: else;usb_device.c: 2851: {;usb_device.c: 2855: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 27248  006D5A  0E04               	movlw	4
 27249  006D5C  1828               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 27250  006D5E  6E28               	movwf	USBStdFeatureReqHandler@p^0,c
 27251  006D60  5029               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 27252  006D62  6E29               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 27253  006D64                     
 27254                           ; BSR set to: 4
 27255                           ;usb_device.c: 2857: if(p->STAT.UOWN == 1)
 27256  006D64  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27257  006D68  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27258  006D6C  AEDF               	btfss	indf2,7,c
 27259  006D6E  EFBB  F036         	goto	u11151
 27260  006D72  EFBD  F036         	goto	u11150
 27261  006D76                     u11151:
 27262  006D76  EFD9  F036         	goto	l11578
 27263  006D7A                     u11150:
 27264  006D7A                     
 27265                           ; BSR set to: 4
 27266                           ;usb_device.c: 2858: {;usb_device.c: 2861: p->STAT.Val &= (~0x80);
 27267  006D7A  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27268  006D7E  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27269  006D82  0E7F               	movlw	127
 27270  006D84  16DF               	andwf	indf2,f,c
 27271  006D86                     
 27272                           ; BSR set to: 4
 27273                           ;usb_device.c: 2862: p->STAT.Val |= 0x40;
 27274  006D86  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27275  006D8A  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27276  006D8E  0E00               	movlw	0
 27277  006D90  8CDB               	bsf	plusw2,6,c
 27278  006D92                     
 27279                           ; BSR set to: 4
 27280                           ;usb_device.c: 2863: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATE
      +                          D,p,sizeof(p));
 27281  006D92  0E00               	movlw	0
 27282  006D94  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 27283  006D96  0E05               	movlw	5
 27284  006D98  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 27285  006D9A  C028  F01D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27286  006D9E  C029  F01E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27287  006DA2  0E00               	movlw	0
 27288  006DA4  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 27289  006DA6  0E02               	movlw	2
 27290  006DA8  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 27291  006DAA  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27292                           
 27293                           ;usb_device.c: 2864: }
 27294  006DAE  EFDF  F036         	goto	l11580
 27295  006DB2                     l11578:
 27296                           
 27297                           ; BSR set to: 4
 27298                           ;usb_device.c: 2865: else;usb_device.c: 2866: {;usb_device.c: 2868: p->STAT.Val |= 0x40;
 27299  006DB2  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27300  006DB6  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27301  006DBA  0E00               	movlw	0
 27302  006DBC  8CDB               	bsf	plusw2,6,c
 27303  006DBE                     l11580:
 27304                           
 27305                           ;usb_device.c: 2869: };usb_device.c: 2873: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 27306  006DBE  0E04               	movlw	4
 27307  006DC0  1828               	xorwf	USBStdFeatureReqHandler@p^0,w,c
 27308  006DC2  6E28               	movwf	USBStdFeatureReqHandler@p^0,c
 27309  006DC4  5029               	movf	(USBStdFeatureReqHandler@p+1)^0,w,c
 27310  006DC6  6E29               	movwf	(USBStdFeatureReqHandler@p+1)^0,c
 27311  006DC8                     
 27312                           ;usb_device.c: 2879: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 27313  006DC8  B227               	btfsc	USBStdFeatureReqHandler@current_ep_data^0,1,c
 27314  006DCA  EFE9  F036         	goto	u11161
 27315  006DCE  EFEB  F036         	goto	u11160
 27316  006DD2                     u11161:
 27317  006DD2  EFF6  F036         	goto	l2094
 27318  006DD6                     u11160:
 27319  006DD6  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27320  006DDA  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27321  006DDE  AEDF               	btfss	indf2,7,c
 27322  006DE0  EFF4  F036         	goto	u11171
 27323  006DE4  EFF6  F036         	goto	u11170
 27324  006DE8                     u11171:
 27325  006DE8  EF2E  F037         	goto	l11594
 27326  006DEC                     u11170:
 27327  006DEC                     l2094:
 27328                           
 27329                           ;usb_device.c: 2880: {;usb_device.c: 2881: if(SetupPkt.EPDir == 0)
 27330  006DEC  0104               	movlb	4	; () banked
 27331  006DEE  BF34               	btfsc	52,7,b	;volatile
 27332  006DF0  EFFC  F036         	goto	u11181
 27333  006DF4  EFFE  F036         	goto	u11180
 27334  006DF8                     u11181:
 27335  006DF8  EF0C  F037         	goto	l11588
 27336  006DFC                     u11180:
 27337  006DFC                     
 27338                           ; BSR set to: 4
 27339                           ;usb_device.c: 2882: {;usb_device.c: 2883: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 27340  006DFC  5134               	movf	52,w,b	;volatile
 27341  006DFE  0B0F               	andlw	15
 27342  006E00  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27343  006E02  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27344  006E04  0E54               	movlw	low _ep_data_out
 27345  006E06  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27346  006E08  6ED9               	movwf	fsr2l,c
 27347  006E0A  0E01               	movlw	high _ep_data_out
 27348  006E0C  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27349  006E0E  6EDA               	movwf	fsr2h,c
 27350  006E10  0101               	movlb	1	; () banked
 27351  006E12  92DF               	bcf	indf2,1,c
 27352                           
 27353                           ;usb_device.c: 2884: }
 27354  006E14  EF18  F037         	goto	l11590
 27355  006E18                     l11588:
 27356                           
 27357                           ; BSR set to: 4
 27358                           ;usb_device.c: 2885: else;usb_device.c: 2886: {;usb_device.c: 2887: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 27359  006E18  5134               	movf	52,w,b	;volatile
 27360  006E1A  0B0F               	andlw	15
 27361  006E1C  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27362  006E1E  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27363  006E20  0E57               	movlw	low _ep_data_in
 27364  006E22  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27365  006E24  6ED9               	movwf	fsr2l,c
 27366  006E26  0E01               	movlw	high _ep_data_in
 27367  006E28  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27368  006E2A  6EDA               	movwf	fsr2h,c
 27369  006E2C  0101               	movlb	1	; () banked
 27370  006E2E  92DF               	bcf	indf2,1,c
 27371  006E30                     l11590:
 27372                           
 27373                           ; BSR set to: 1
 27374                           ;usb_device.c: 2888: };usb_device.c: 2890: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 27375  006E30  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27376  006E34  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27377  006E38  0E3B               	movlw	59
 27378  006E3A  16DF               	andwf	indf2,f,c
 27379  006E3C                     
 27380                           ; BSR set to: 1
 27381                           ;usb_device.c: 2893: USER_USB_CALLBACK_EVENT_HANDLER((USB_EVENT)EVENT_TRANSFER_TERMINATE
      +                          D,p,sizeof(p));
 27382  006E3C  0E00               	movlw	0
 27383  006E3E  6E1C               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)^0,c
 27384  006E40  0E05               	movlw	5
 27385  006E42  6E1B               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event^0,c
 27386  006E44  C028  F01D         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 27387  006E48  C029  F01E         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 27388  006E4C  0E00               	movlw	0
 27389  006E4E  6E20               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)^0,c
 27390  006E50  0E02               	movlw	2
 27391  006E52  6E1F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size^0,c
 27392  006E54  EC8E  F068         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27393                           
 27394                           ;usb_device.c: 2894: }
 27395  006E58  EF34  F037         	goto	l11596
 27396  006E5C                     l11594:
 27397                           
 27398                           ;usb_device.c: 2895: else;usb_device.c: 2896: {;usb_device.c: 2898: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 27399  006E5C  C028  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 27400  006E60  C029  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 27401  006E64  0E3B               	movlw	59
 27402  006E66  16DF               	andwf	indf2,f,c
 27403  006E68                     l11596:
 27404                           
 27405                           ;usb_device.c: 2899: };usb_device.c: 2946: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 27406  006E68  0104               	movlb	4	; () banked
 27407  006E6A  5134               	movf	52,w,b	;volatile
 27408  006E6C  0B0F               	andlw	15
 27409  006E6E  6E23               	movwf	??_USBStdFeatureReqHandler^0,c
 27410  006E70  6A24               	clrf	(??_USBStdFeatureReqHandler+1)^0,c
 27411  006E72  0E26               	movlw	38
 27412  006E74  2423               	addwf	??_USBStdFeatureReqHandler^0,w,c
 27413  006E76  6E25               	movwf	USBStdFeatureReqHandler@pUEP^0,c
 27414  006E78  0E0F               	movlw	15
 27415  006E7A  2024               	addwfc	(??_USBStdFeatureReqHandler+1)^0,w,c
 27416  006E7C  6E26               	movwf	(USBStdFeatureReqHandler@pUEP+1)^0,c
 27417  006E7E                     
 27418                           ; BSR set to: 4
 27419                           ;usb_device.c: 2950: *pUEP &= ~0x0001;
 27420  006E7E  C025  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 27421  006E82  C026  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 27422  006E86  0EFE               	movlw	254
 27423  006E88  16DF               	andwf	indf2,f,c
 27424  006E8A                     l2098:
 27425  006E8A  0012               	return		;funcret
 27426  006E8C                     __end_of_USBStdFeatureReqHandler:
 27427                           	callstack 0
 27428                           
 27429 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 27430 ;; Defined at:
 27431 ;;		line 50 in file "usb_events.c"
 27432 ;; Parameters:    Size  Location     Type
 27433 ;;  event           2   26[COMRAM] enum E5237
 27434 ;;  pdata           2   28[COMRAM] PTR void 
 27435 ;;		 -> RAM(3775), USTATcopy(1), USBActiveConfiguration(1), BDT(48), 
 27436 ;;		 -> NULL(0), 
 27437 ;;  size            2   30[COMRAM] unsigned int 
 27438 ;; Auto vars:     Size  Location     Type
 27439 ;;		None
 27440 ;; Return value:  Size  Location     Type
 27441 ;;                  1    wreg      unsigned char 
 27442 ;; Registers used:
 27443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27444 ;; Tracked objects:
 27445 ;;		On entry : 0/0
 27446 ;;		On exit  : 0/0
 27447 ;;		Unchanged: 0/0
 27448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27449 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27452 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27453 ;;Total ram usage:        8 bytes
 27454 ;; Hardware stack levels used: 1
 27455 ;; Hardware stack levels required when called: 6
 27456 ;; This function calls:
 27457 ;;		_CDCInitEP
 27458 ;;		_SYSTEM_Initialize
 27459 ;;		_USBCheckCDCRequest
 27460 ;;		_app_usb_init
 27461 ;; This function is called by:
 27462 ;;		_USBDeviceTasks
 27463 ;;		_USBStdSetCfgHandler
 27464 ;;		_USBSuspend
 27465 ;;		_USBWakeFromSuspend
 27466 ;;		_USBCtrlTrfSetupHandler
 27467 ;;		_USBCheckStdRequest
 27468 ;;		_USBStdFeatureReqHandler
 27469 ;; This function uses a non-reentrant model
 27470 ;;
 27471                           
 27472                           	psect	text121
 27473  00D11C                     __ptext121:
 27474                           	callstack 0
 27475  00D11C                     _USER_USB_CALLBACK_EVENT_HANDLER:
 27476                           	callstack 23
 27477  00D11C                     
 27478                           ;usb_events.c: 52: switch( (int) event )
 27479  00D11C  EFA4  F068         	goto	l10914
 27480  00D120                     l10902:
 27481                           
 27482                           ;usb_events.c: 71: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 27483  00D120  0E01               	movlw	1
 27484  00D122  ECA4  F06C         	call	_SYSTEM_Initialize
 27485                           
 27486                           ;usb_events.c: 72: break;
 27487  00D126  EFDD  F068         	goto	l1595
 27488  00D12A                     l10904:
 27489                           
 27490                           ;usb_events.c: 81: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 27491  00D12A  0E02               	movlw	2
 27492  00D12C  ECA4  F06C         	call	_SYSTEM_Initialize
 27493                           
 27494                           ;usb_events.c: 82: break;
 27495  00D130  EFDD  F068         	goto	l1595
 27496  00D134                     l10906:
 27497                           
 27498                           ;usb_events.c: 87: CDCInitEP();
 27499  00D134  EC15  F070         	call	_CDCInitEP	;wreg free
 27500  00D138                     
 27501                           ;usb_events.c: 88: app_usb_init();
 27502  00D138  EC0E  F078         	call	_app_usb_init	;wreg free
 27503                           
 27504                           ;usb_events.c: 89: break;
 27505  00D13C  EFDD  F068         	goto	l1595
 27506  00D140                     l10910:
 27507                           
 27508                           ;usb_events.c: 97: USBCheckCDCRequest();
 27509  00D140  ECE4  F05D         	call	_USBCheckCDCRequest	;wreg free
 27510                           
 27511                           ;usb_events.c: 98: break;
 27512  00D144  EFDD  F068         	goto	l1595
 27513  00D148                     l10914:
 27514  00D148  C01B  F021         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 27515  00D14C  C01C  F022         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 27516                           
 27517                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 27518                           ; Switch size 1, requested type "simple"
 27519                           ; Number of cases is 2, Range of values is 0 to 127
 27520                           ; switch strategies available:
 27521                           ; Name         Instructions Cycles
 27522                           ; simple_byte            7     4 (average)
 27523                           ;	Chosen strategy is simple_byte
 27524  00D150  5022               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)^0,w,c
 27525  00D152  0A00               	xorlw	0	; case 0
 27526  00D154  B4D8               	btfsc	status,2,c
 27527  00D156  EFB3  F068         	goto	l20196
 27528  00D15A  0A7F               	xorlw	127	; case 127
 27529  00D15C  B4D8               	btfsc	status,2,c
 27530  00D15E  EFD6  F068         	goto	l20198
 27531  00D162  EFDD  F068         	goto	l1595
 27532  00D166                     l20196:
 27533                           
 27534                           ; Switch size 1, requested type "simple"
 27535                           ; Number of cases is 8, Range of values is 1 to 117
 27536                           ; switch strategies available:
 27537                           ; Name         Instructions Cycles
 27538                           ; simple_byte           25    13 (average)
 27539                           ;	Chosen strategy is simple_byte
 27540  00D166  5021               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 27541  00D168  0A01               	xorlw	1	; case 1
 27542  00D16A  B4D8               	btfsc	status,2,c
 27543  00D16C  EF9A  F068         	goto	l10906
 27544  00D170  0A03               	xorlw	3	; case 2
 27545  00D172  B4D8               	btfsc	status,2,c
 27546  00D174  EFDD  F068         	goto	l1595
 27547  00D178  0A01               	xorlw	1	; case 3
 27548  00D17A  B4D8               	btfsc	status,2,c
 27549  00D17C  EFA0  F068         	goto	l10910
 27550  00D180  0A06               	xorlw	6	; case 5
 27551  00D182  B4D8               	btfsc	status,2,c
 27552  00D184  EFDD  F068         	goto	l1595
 27553  00D188  0A77               	xorlw	119	; case 114
 27554  00D18A  B4D8               	btfsc	status,2,c
 27555  00D18C  EFDD  F068         	goto	l1595
 27556  00D190  0A01               	xorlw	1	; case 115
 27557  00D192  B4D8               	btfsc	status,2,c
 27558  00D194  EFDD  F068         	goto	l1595
 27559  00D198  0A07               	xorlw	7	; case 116
 27560  00D19A  B4D8               	btfsc	status,2,c
 27561  00D19C  EF95  F068         	goto	l10904
 27562  00D1A0  0A01               	xorlw	1	; case 117
 27563  00D1A2  B4D8               	btfsc	status,2,c
 27564  00D1A4  EF90  F068         	goto	l10902
 27565  00D1A8  EFDD  F068         	goto	l1595
 27566  00D1AC                     l20198:
 27567                           
 27568                           ; Switch size 1, requested type "simple"
 27569                           ; Number of cases is 1, Range of values is 255 to 255
 27570                           ; switch strategies available:
 27571                           ; Name         Instructions Cycles
 27572                           ; simple_byte            4     3 (average)
 27573                           ;	Chosen strategy is simple_byte
 27574  00D1AC  5021               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER^0,w,c
 27575  00D1AE  0AFF               	xorlw	255	; case 255
 27576  00D1B0  B4D8               	btfsc	status,2,c
 27577  00D1B2  EFDD  F068         	goto	l1595
 27578  00D1B6  EFDD  F068         	goto	l1595
 27579  00D1BA                     l1595:
 27580  00D1BA  0012               	return		;funcret
 27581  00D1BC                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 27582                           	callstack 0
 27583                           
 27584 ;; *************** function _app_usb_init *****************
 27585 ;; Defined at:
 27586 ;;		line 50 in file "app_usb_cdc.c"
 27587 ;; Parameters:    Size  Location     Type
 27588 ;;		None
 27589 ;; Auto vars:     Size  Location     Type
 27590 ;;		None
 27591 ;; Return value:  Size  Location     Type
 27592 ;;                  1    wreg      void 
 27593 ;; Registers used:
 27594 ;;		wreg, status,2
 27595 ;; Tracked objects:
 27596 ;;		On entry : 0/0
 27597 ;;		On exit  : 0/0
 27598 ;;		Unchanged: 0/0
 27599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27604 ;;Total ram usage:        0 bytes
 27605 ;; Hardware stack levels used: 1
 27606 ;; Hardware stack levels required when called: 3
 27607 ;; This function calls:
 27608 ;;		Nothing
 27609 ;; This function is called by:
 27610 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27611 ;; This function uses a non-reentrant model
 27612 ;;
 27613                           
 27614                           	psect	text122
 27615  00F01C                     __ptext122:
 27616                           	callstack 0
 27617  00F01C                     _app_usb_init:
 27618                           	callstack 25
 27619  00F01C                     
 27620                           ;app_usb_cdc.c: 52: line_coding.bCharFormat = 0;
 27621  00F01C  0E00               	movlw	0
 27622  00F01E  0101               	movlb	1	; () banked
 27623  00F020  6FF2               	movwf	(_line_coding+4)& (0+255),b
 27624                           
 27625                           ;app_usb_cdc.c: 53: line_coding.bDataBits = 8;
 27626  00F022  0E08               	movlw	8
 27627  00F024  6FF4               	movwf	(_line_coding+6)& (0+255),b
 27628                           
 27629                           ;app_usb_cdc.c: 54: line_coding.bParityType = 0;
 27630  00F026  0E00               	movlw	0
 27631  00F028  6FF3               	movwf	(_line_coding+5)& (0+255),b
 27632                           
 27633                           ;app_usb_cdc.c: 55: line_coding.dwDTERate = 19200;
 27634  00F02A  0E00               	movlw	0
 27635  00F02C  6FEE               	movwf	_line_coding& (0+255),b
 27636  00F02E  0E4B               	movlw	75
 27637  00F030  6FEF               	movwf	(_line_coding+1)& (0+255),b
 27638  00F032  0E00               	movlw	0
 27639  00F034  6FF0               	movwf	(_line_coding+2)& (0+255),b
 27640  00F036  0E00               	movlw	0
 27641  00F038  6FF1               	movwf	(_line_coding+3)& (0+255),b
 27642  00F03A                     
 27643                           ; BSR set to: 1
 27644  00F03A  0012               	return		;funcret
 27645  00F03C                     __end_of_app_usb_init:
 27646                           	callstack 0
 27647                           
 27648 ;; *************** function _USBCheckCDCRequest *****************
 27649 ;; Defined at:
 27650 ;;		line 148 in file "usb/usb_device_cdc.c"
 27651 ;; Parameters:    Size  Location     Type
 27652 ;;		None
 27653 ;; Auto vars:     Size  Location     Type
 27654 ;;		None
 27655 ;; Return value:  Size  Location     Type
 27656 ;;                  1    wreg      void 
 27657 ;; Registers used:
 27658 ;;		wreg, status,2, status,0
 27659 ;; Tracked objects:
 27660 ;;		On entry : 0/0
 27661 ;;		On exit  : 0/0
 27662 ;;		Unchanged: 0/0
 27663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27668 ;;Total ram usage:        0 bytes
 27669 ;; Hardware stack levels used: 1
 27670 ;; Hardware stack levels required when called: 3
 27671 ;; This function calls:
 27672 ;;		Nothing
 27673 ;; This function is called by:
 27674 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27675 ;; This function uses a non-reentrant model
 27676 ;;
 27677                           
 27678                           	psect	text123
 27679  00BBC8                     __ptext123:
 27680                           	callstack 0
 27681  00BBC8                     _USBCheckCDCRequest:
 27682                           	callstack 25
 27683  00BBC8                     
 27684                           ;usb_device_cdc.c: 153: if(SetupPkt.Recipient != (0x01)) return;
 27685  00BBC8  0104               	movlb	4	; () banked
 27686  00BBCA  5130               	movf	48,w,b	;volatile
 27687  00BBCC  0B1F               	andlw	31
 27688  00BBCE  06E8               	decf	wreg,f,c
 27689  00BBD0  B4D8               	btfsc	status,2,c
 27690  00BBD2  EFED  F05D         	goto	u8871
 27691  00BBD6  EFEF  F05D         	goto	u8870
 27692  00BBDA                     u8871:
 27693  00BBDA  EFF1  F05D         	goto	l10140
 27694  00BBDE                     u8870:
 27695  00BBDE  EF5A  F05E         	goto	l2150
 27696  00BBE2                     l10140:
 27697                           
 27698                           ; BSR set to: 4
 27699                           ;usb_device_cdc.c: 158: if(SetupPkt.RequestType != (0x20>>5)) return;
 27700  00BBE2  3930               	swapf	48,w,b	;volatile
 27701  00BBE4  32E8               	rrcf	wreg,f,c
 27702  00BBE6  0B03               	andlw	3
 27703  00BBE8  06E8               	decf	wreg,f,c
 27704  00BBEA  B4D8               	btfsc	status,2,c
 27705  00BBEC  EFFA  F05D         	goto	u8881
 27706  00BBF0  EFFC  F05D         	goto	u8880
 27707  00BBF4                     u8881:
 27708  00BBF4  EFFE  F05D         	goto	l10144
 27709  00BBF8                     u8880:
 27710  00BBF8  EF5A  F05E         	goto	l2150
 27711  00BBFC                     l10144:
 27712                           
 27713                           ; BSR set to: 4
 27714                           ;usb_device_cdc.c: 164: if((SetupPkt.bIntfID != 0x0)&&;usb_device_cdc.c: 165: (SetupPkt.
      +                          bIntfID != 0x01)) return;
 27715  00BBFC  5134               	movf	52,w,b	;volatile
 27716  00BBFE  B4D8               	btfsc	status,2,c
 27717  00BC00  EF04  F05E         	goto	u8891
 27718  00BC04  EF06  F05E         	goto	u8890
 27719  00BC08                     u8891:
 27720  00BC08  EF43  F05E         	goto	l10174
 27721  00BC0C                     u8890:
 27722  00BC0C                     
 27723                           ; BSR set to: 4
 27724  00BC0C  0534               	decf	52,w,b	;volatile
 27725  00BC0E  B4D8               	btfsc	status,2,c
 27726  00BC10  EF0C  F05E         	goto	u8901
 27727  00BC14  EF0E  F05E         	goto	u8900
 27728  00BC18                     u8901:
 27729  00BC18  EF43  F05E         	goto	l10174
 27730  00BC1C                     u8900:
 27731  00BC1C  EF5A  F05E         	goto	l2150
 27732  00BC20                     l10150:
 27733                           
 27734                           ; BSR set to: 4
 27735                           ;usb_device_cdc.c: 172: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27736  00BC20  0EF0               	movlw	low _dummy_encapsulated_cmd_response
 27737  00BC22  6E41               	movwf	_inPipes^0,c
 27738  00BC24  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27739  00BC26  6E42               	movwf	(_inPipes+1)^0,c
 27740  00BC28                     
 27741                           ; BSR set to: 4
 27742                           ;usb_device_cdc.c: 173: inPipes[0].wCount.Val = 0x08;
 27743  00BC28  0E00               	movlw	0
 27744  00BC2A  6E46               	movwf	(_inPipes+5)^0,c
 27745  00BC2C  0E08               	movlw	8
 27746  00BC2E  6E45               	movwf	(_inPipes+4)^0,c
 27747  00BC30                     
 27748                           ; BSR set to: 4
 27749                           ;usb_device_cdc.c: 174: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27750  00BC30  8044               	bsf	(_inPipes+3)^0,0,c
 27751  00BC32                     l10156:
 27752                           
 27753                           ; BSR set to: 4
 27754                           ;usb_device_cdc.c: 175: inPipes[0].info.bits.busy = 1;
 27755  00BC32  8E44               	bsf	(_inPipes+3)^0,7,c
 27756                           
 27757                           ;usb_device_cdc.c: 176: break;
 27758  00BC34  EF5A  F05E         	goto	l2150
 27759  00BC38                     l10158:
 27760                           
 27761                           ; BSR set to: 4
 27762                           ;usb_device_cdc.c: 179: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 27763  00BC38  0EF0               	movlw	low _dummy_encapsulated_cmd_response
 27764  00BC3A  6E41               	movwf	_inPipes^0,c
 27765  00BC3C  0E02               	movlw	high _dummy_encapsulated_cmd_response
 27766  00BC3E  6E42               	movwf	(_inPipes+1)^0,c
 27767  00BC40  EF19  F05E         	goto	l10156
 27768  00BC44                     l2157:
 27769                           
 27770                           ; BSR set to: 4
 27771                           ;usb_device_cdc.c: 186: outPipes[0].wCount.Val = SetupPkt.wLength;
 27772  00BC44  C436 F11F          	movff	1078,_outPipes+4	;volatile
 27773  00BC48  C437 F120          	movff	1079,_outPipes+5	;volatile
 27774  00BC4C                     
 27775                           ; BSR set to: 4
 27776                           ;usb_device_cdc.c: 187: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 27777  00BC4C  0EEE               	movlw	low _line_coding
 27778  00BC4E  0101               	movlb	1	; () banked
 27779  00BC50  6F1B               	movwf	_outPipes& (0+255),b
 27780  00BC52  0E01               	movlw	high _line_coding
 27781  00BC54  6F1C               	movwf	(_outPipes+1)& (0+255),b
 27782                           
 27783                           ;usb_device_cdc.c: 188: outPipes[0].pFunc = (0);
 27784  00BC56  0E00               	movlw	0
 27785  00BC58  6F21               	movwf	(_outPipes+6)& (0+255),b
 27786  00BC5A  0E00               	movlw	0
 27787  00BC5C  6F22               	movwf	(_outPipes+7)& (0+255),b
 27788  00BC5E                     
 27789                           ; BSR set to: 1
 27790                           ;usb_device_cdc.c: 189: outPipes[0].info.bits.busy = 1;
 27791  00BC5E  8F1E               	bsf	(_outPipes+3)& (0+255),7,b
 27792                           
 27793                           ;usb_device_cdc.c: 190: break;
 27794  00BC60  EF5A  F05E         	goto	l2150
 27795  00BC64                     l10166:
 27796                           
 27797                           ; BSR set to: 4
 27798                           ;usb_device_cdc.c: 193: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 27799  00BC64  0EEE               	movlw	low _line_coding
 27800  00BC66  6E41               	movwf	_inPipes^0,c
 27801  00BC68  0E01               	movlw	high _line_coding
 27802  00BC6A  6E42               	movwf	(_inPipes+1)^0,c
 27803  00BC6C                     
 27804                           ; BSR set to: 4
 27805  00BC6C  0E00               	movlw	0
 27806  00BC6E  6E46               	movwf	(_inPipes+5)^0,c
 27807  00BC70  0E07               	movlw	7
 27808  00BC72  6E45               	movwf	(_inPipes+4)^0,c
 27809  00BC74                     
 27810                           ; BSR set to: 4
 27811  00BC74  0EC1               	movlw	193
 27812  00BC76  6E44               	movwf	(_inPipes+3)^0,c
 27813                           
 27814                           ;usb_device_cdc.c: 197: break;
 27815  00BC78  EF5A  F05E         	goto	l2150
 27816  00BC7C                     l2159:
 27817                           
 27818                           ; BSR set to: 4
 27819                           ;usb_device_cdc.c: 200: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 27820  00BC7C  C432 F166          	movff	1074,_control_signal_bitmap	;volatile
 27821                           
 27822                           ;usb_device_cdc.c: 232: inPipes[0].info.bits.busy = 1;
 27823  00BC80  8E44               	bsf	(_inPipes+3)^0,7,c
 27824                           
 27825                           ;usb_device_cdc.c: 233: break;
 27826  00BC82  EF5A  F05E         	goto	l2150
 27827  00BC86                     l10174:
 27828                           
 27829                           ; BSR set to: 4
 27830  00BC86  5131               	movf	49,w,b	;volatile
 27831                           
 27832                           ; Switch size 1, requested type "simple"
 27833                           ; Number of cases is 5, Range of values is 0 to 34
 27834                           ; switch strategies available:
 27835                           ; Name         Instructions Cycles
 27836                           ; simple_byte           16     9 (average)
 27837                           ;	Chosen strategy is simple_byte
 27838  00BC88  0A00               	xorlw	0	; case 0
 27839  00BC8A  B4D8               	btfsc	status,2,c
 27840  00BC8C  EF10  F05E         	goto	l10150
 27841  00BC90  0A01               	xorlw	1	; case 1
 27842  00BC92  B4D8               	btfsc	status,2,c
 27843  00BC94  EF1C  F05E         	goto	l10158
 27844  00BC98  0A21               	xorlw	33	; case 32
 27845  00BC9A  B4D8               	btfsc	status,2,c
 27846  00BC9C  EF22  F05E         	goto	l2157
 27847  00BCA0  0A01               	xorlw	1	; case 33
 27848  00BCA2  B4D8               	btfsc	status,2,c
 27849  00BCA4  EF32  F05E         	goto	l10166
 27850  00BCA8  0A03               	xorlw	3	; case 34
 27851  00BCAA  B4D8               	btfsc	status,2,c
 27852  00BCAC  EF3E  F05E         	goto	l2159
 27853  00BCB0  EF5A  F05E         	goto	l2150
 27854  00BCB4                     l2150:
 27855  00BCB4  0012               	return		;funcret
 27856  00BCB6                     __end_of_USBCheckCDCRequest:
 27857                           	callstack 0
 27858                           
 27859 ;; *************** function _SYSTEM_Initialize *****************
 27860 ;; Defined at:
 27861 ;;		line 87 in file "system.c"
 27862 ;; Parameters:    Size  Location     Type
 27863 ;;  state           1    wreg     enum E5256
 27864 ;; Auto vars:     Size  Location     Type
 27865 ;;  state           1   18[COMRAM] enum E5256
 27866 ;;  pll_startup_    2   16[COMRAM] unsigned int 
 27867 ;;  pll_startup_    2   14[COMRAM] unsigned int 
 27868 ;; Return value:  Size  Location     Type
 27869 ;;                  1    wreg      void 
 27870 ;; Registers used:
 27871 ;;		wreg, status,2, status,0
 27872 ;; Tracked objects:
 27873 ;;		On entry : 0/0
 27874 ;;		On exit  : 0/0
 27875 ;;		Unchanged: 0/0
 27876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27878 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27880 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27881 ;;Total ram usage:        5 bytes
 27882 ;; Hardware stack levels used: 1
 27883 ;; Hardware stack levels required when called: 3
 27884 ;; This function calls:
 27885 ;;		Nothing
 27886 ;; This function is called by:
 27887 ;;		_main
 27888 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27889 ;; This function uses a non-reentrant model
 27890 ;;
 27891                           
 27892                           	psect	text124
 27893  00D948                     __ptext124:
 27894                           	callstack 0
 27895  00D948                     _SYSTEM_Initialize:
 27896                           	callstack 25
 27897                           
 27898                           ;incstack = 0
 27899                           ;SYSTEM_Initialize@state stored from wreg
 27900  00D948  6E13               	movwf	SYSTEM_Initialize@state^0,c
 27901  00D94A                     
 27902                           ;system.c: 89: switch(state)
 27903  00D94A  EFD0  F06C         	goto	l10120
 27904  00D94E                     l10108:
 27905                           
 27906                           ;system.c: 98: {;system.c: 99: unsigned int pll_startup_counter = 600;
 27907  00D94E  0E02               	movlw	2
 27908  00D950  6E10               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)^0,c
 27909  00D952  0E58               	movlw	88
 27910  00D954  6E0F               	movwf	SYSTEM_Initialize@pll_startup_counter^0,c
 27911  00D956                     
 27912                           ;system.c: 100: OSCTUNEbits.PLLEN = 1;
 27913  00D956  8C9B               	bsf	155,6,c	;volatile
 27914  00D958                     l10112:
 27915  00D958  060F               	decf	SYSTEM_Initialize@pll_startup_counter^0,f,c
 27916  00D95A  A0D8               	btfss	status,0,c
 27917  00D95C  0610               	decf	(SYSTEM_Initialize@pll_startup_counter+1)^0,f,c
 27918  00D95E  280F               	incf	SYSTEM_Initialize@pll_startup_counter^0,w,c
 27919  00D960  E106               	bnz	u8851
 27920  00D962  2810               	incf	(SYSTEM_Initialize@pll_startup_counter+1)^0,w,c
 27921  00D964  A4D8               	btfss	status,2,c
 27922  00D966  EFB7  F06C         	goto	u8851
 27923  00D96A  EFB9  F06C         	goto	u8850
 27924  00D96E                     u8851:
 27925  00D96E  EFAC  F06C         	goto	l10112
 27926  00D972                     u8850:
 27927  00D972  EFDF  F06C         	goto	l1525
 27928  00D976                     l10114:
 27929                           
 27930                           ;system.c: 123: OSCCON = 0x70;
 27931  00D976  0E70               	movlw	112
 27932  00D978  6ED3               	movwf	211,c	;volatile
 27933                           
 27934                           ;system.c: 129: {;system.c: 130: unsigned int pll_startup_counter = 800;
 27935  00D97A  0E03               	movlw	3
 27936  00D97C  6E12               	movwf	(SYSTEM_Initialize@pll_startup_counter_3440+1)^0,c
 27937  00D97E  0E20               	movlw	32
 27938  00D980  6E11               	movwf	SYSTEM_Initialize@pll_startup_counter_3440^0,c
 27939  00D982                     l10116:
 27940  00D982  0611               	decf	SYSTEM_Initialize@pll_startup_counter_3440^0,f,c
 27941  00D984  A0D8               	btfss	status,0,c
 27942  00D986  0612               	decf	(SYSTEM_Initialize@pll_startup_counter_3440+1)^0,f,c
 27943  00D988  2811               	incf	SYSTEM_Initialize@pll_startup_counter_3440^0,w,c
 27944  00D98A  E106               	bnz	u8861
 27945  00D98C  2812               	incf	(SYSTEM_Initialize@pll_startup_counter_3440+1)^0,w,c
 27946  00D98E  A4D8               	btfss	status,2,c
 27947  00D990  EFCC  F06C         	goto	u8861
 27948  00D994  EFCE  F06C         	goto	u8860
 27949  00D998                     u8861:
 27950  00D998  EFC1  F06C         	goto	l10116
 27951  00D99C                     u8860:
 27952  00D99C  EFDF  F06C         	goto	l1525
 27953  00D9A0                     l10120:
 27954  00D9A0  5013               	movf	SYSTEM_Initialize@state^0,w,c
 27955                           
 27956                           ; Switch size 1, requested type "simple"
 27957                           ; Number of cases is 3, Range of values is 0 to 2
 27958                           ; switch strategies available:
 27959                           ; Name         Instructions Cycles
 27960                           ; simple_byte           10     6 (average)
 27961                           ;	Chosen strategy is simple_byte
 27962  00D9A2  0A00               	xorlw	0	; case 0
 27963  00D9A4  B4D8               	btfsc	status,2,c
 27964  00D9A6  EFA7  F06C         	goto	l10108
 27965  00D9AA  0A01               	xorlw	1	; case 1
 27966  00D9AC  B4D8               	btfsc	status,2,c
 27967  00D9AE  EFDF  F06C         	goto	l1525
 27968  00D9B2  0A03               	xorlw	3	; case 2
 27969  00D9B4  B4D8               	btfsc	status,2,c
 27970  00D9B6  EFBB  F06C         	goto	l10114
 27971  00D9BA  EFDF  F06C         	goto	l1525
 27972  00D9BE                     l1525:
 27973  00D9BE  0012               	return		;funcret
 27974  00D9C0                     __end_of_SYSTEM_Initialize:
 27975                           	callstack 0
 27976                           
 27977 ;; *************** function _CDCInitEP *****************
 27978 ;; Defined at:
 27979 ;;		line 295 in file "usb/usb_device_cdc.c"
 27980 ;; Parameters:    Size  Location     Type
 27981 ;;		None
 27982 ;; Auto vars:     Size  Location     Type
 27983 ;;		None
 27984 ;; Return value:  Size  Location     Type
 27985 ;;                  1    wreg      void 
 27986 ;; Registers used:
 27987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27988 ;; Tracked objects:
 27989 ;;		On entry : 0/0
 27990 ;;		On exit  : 0/0
 27991 ;;		Unchanged: 0/0
 27992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27997 ;;Total ram usage:        0 bytes
 27998 ;; Hardware stack levels used: 1
 27999 ;; Hardware stack levels required when called: 5
 28000 ;; This function calls:
 28001 ;;		_USBEnableEndpoint
 28002 ;;		_USBTransferOnePacket
 28003 ;; This function is called by:
 28004 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28005 ;; This function uses a non-reentrant model
 28006 ;;
 28007                           
 28008                           	psect	text125
 28009  00E02A                     __ptext125:
 28010                           	callstack 0
 28011  00E02A                     _CDCInitEP:
 28012                           	callstack 23
 28013  00E02A                     
 28014                           ;usb_device_cdc.c: 298: line_coding.dwDTERate = 19200;
 28015  00E02A  0E00               	movlw	0
 28016  00E02C  0101               	movlb	1	; () banked
 28017  00E02E  6FEE               	movwf	_line_coding& (0+255),b
 28018  00E030  0E4B               	movlw	75
 28019  00E032  6FEF               	movwf	(_line_coding+1)& (0+255),b
 28020  00E034  0E00               	movlw	0
 28021  00E036  6FF0               	movwf	(_line_coding+2)& (0+255),b
 28022  00E038  0E00               	movlw	0
 28023  00E03A  6FF1               	movwf	(_line_coding+3)& (0+255),b
 28024                           
 28025                           ;usb_device_cdc.c: 299: line_coding.bCharFormat = 0x00;
 28026  00E03C  0E00               	movlw	0
 28027  00E03E  6FF2               	movwf	(_line_coding+4)& (0+255),b
 28028                           
 28029                           ;usb_device_cdc.c: 300: line_coding.bParityType = 0x00;
 28030  00E040  0E00               	movlw	0
 28031  00E042  6FF3               	movwf	(_line_coding+5)& (0+255),b
 28032                           
 28033                           ;usb_device_cdc.c: 301: line_coding.bDataBits = 0x08;
 28034  00E044  0E08               	movlw	8
 28035  00E046  6FF4               	movwf	(_line_coding+6)& (0+255),b
 28036                           
 28037                           ;usb_device_cdc.c: 303: cdc_rx_len = 0;
 28038  00E048  0E00               	movlw	0
 28039  00E04A  6F69               	movwf	_cdc_rx_len& (0+255),b
 28040  00E04C                     
 28041                           ; BSR set to: 1
 28042                           ;usb_device_cdc.c: 316: USBEnableEndpoint(1,0x02|0x10|0x08);
 28043  00E04C  0E1A               	movlw	26
 28044  00E04E  6E17               	movwf	USBEnableEndpoint@options^0,c
 28045  00E050  0E01               	movlw	1
 28046  00E052  ECE4  F073         	call	_USBEnableEndpoint
 28047  00E056                     
 28048                           ;usb_device_cdc.c: 317: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 28049  00E056  0E1E               	movlw	30
 28050  00E058  6E17               	movwf	USBEnableEndpoint@options^0,c
 28051  00E05A  0E02               	movlw	2
 28052  00E05C  ECE4  F073         	call	_USBEnableEndpoint
 28053  00E060                     
 28054                           ;usb_device_cdc.c: 319: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 28055  00E060  0E00               	movlw	0
 28056  00E062  6E0F               	movwf	USBTransferOnePacket@dir^0,c
 28057  00E064  0EBA               	movlw	low _cdc_data_rx
 28058  00E066  6E10               	movwf	USBTransferOnePacket@data^0,c
 28059  00E068  0E03               	movlw	high _cdc_data_rx
 28060  00E06A  6E11               	movwf	(USBTransferOnePacket@data+1)^0,c
 28061  00E06C  0E40               	movlw	64
 28062  00E06E  6E12               	movwf	USBTransferOnePacket@len^0,c
 28063  00E070  0E02               	movlw	2
 28064  00E072  EC4F  F055         	call	_USBTransferOnePacket
 28065  00E076  C00F  F15E         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 28066  00E07A  C010  F15F         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 28067  00E07E                     
 28068                           ;usb_device_cdc.c: 320: CDCDataInHandle = (0);
 28069  00E07E  0E00               	movlw	0
 28070  00E080  0101               	movlb	1	; () banked
 28071  00E082  6F5C               	movwf	_CDCDataInHandle& (0+255),b
 28072  00E084  0E00               	movlw	0
 28073  00E086  6F5D               	movwf	(_CDCDataInHandle+1)& (0+255),b
 28074  00E088                     
 28075                           ; BSR set to: 1
 28076                           ;usb_device_cdc.c: 347: cdc_trf_state = 0;
 28077  00E088  0E00               	movlw	0
 28078  00E08A  6E4E               	movwf	_cdc_trf_state^0,c
 28079  00E08C                     
 28080                           ; BSR set to: 1
 28081  00E08C  0012               	return		;funcret
 28082  00E08E                     __end_of_CDCInitEP:
 28083                           	callstack 0
 28084                           
 28085 ;; *************** function _USBTransferOnePacket *****************
 28086 ;; Defined at:
 28087 ;;		line 999 in file "usb/usb_device.c"
 28088 ;; Parameters:    Size  Location     Type
 28089 ;;  ep              1    wreg     unsigned char 
 28090 ;;  dir             1   14[COMRAM] unsigned char 
 28091 ;;  data            2   15[COMRAM] PTR unsigned char 
 28092 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 28093 ;;  len             1   17[COMRAM] unsigned char 
 28094 ;; Auto vars:     Size  Location     Type
 28095 ;;  ep              1   22[COMRAM] unsigned char 
 28096 ;;  handle          2   23[COMRAM] PTR volatile struct __BD
 28097 ;;		 -> RAM(3775), BDT(48), NULL(0), 
 28098 ;; Return value:  Size  Location     Type
 28099 ;;                  2   14[COMRAM] PTR void 
 28100 ;; Registers used:
 28101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28102 ;; Tracked objects:
 28103 ;;		On entry : 0/0
 28104 ;;		On exit  : 0/0
 28105 ;;		Unchanged: 0/0
 28106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28108 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28110 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28111 ;;Total ram usage:       11 bytes
 28112 ;; Hardware stack levels used: 1
 28113 ;; Hardware stack levels required when called: 3
 28114 ;; This function calls:
 28115 ;;		Nothing
 28116 ;; This function is called by:
 28117 ;;		_CDCInitEP
 28118 ;;		_getsUSBUSART
 28119 ;;		_CDCTxService
 28120 ;;		_USBCDCEventHandler
 28121 ;; This function uses a non-reentrant model
 28122 ;;
 28123                           
 28124                           	psect	text126
 28125  00AA9E                     __ptext126:
 28126                           	callstack 0
 28127  00AA9E                     _USBTransferOnePacket:
 28128                           	callstack 25
 28129                           
 28130                           ; BSR set to: 1
 28131                           ;incstack = 0
 28132                           ;USBTransferOnePacket@ep stored from wreg
 28133  00AA9E  6E17               	movwf	USBTransferOnePacket@ep^0,c
 28134  00AAA0                     
 28135                           ;usb_device.c: 1001: volatile BDT_ENTRY* handle;;usb_device.c: 1004: if(dir != 0)
 28136  00AAA0  500F               	movf	USBTransferOnePacket@dir^0,w,c
 28137  00AAA2  B4D8               	btfsc	status,2,c
 28138  00AAA4  EF56  F055         	goto	u8671
 28139  00AAA8  EF58  F055         	goto	u8670
 28140  00AAAC                     u8671:
 28141  00AAAC  EF66  F055         	goto	l9964
 28142  00AAB0                     u8670:
 28143  00AAB0                     
 28144                           ;usb_device.c: 1005: {;usb_device.c: 1007: handle = pBDTEntryIn[ep];
 28145  00AAB0  5017               	movf	USBTransferOnePacket@ep^0,w,c
 28146  00AAB2  0D02               	mullw	2
 28147  00AAB4  0EF8               	movlw	low _pBDTEntryIn
 28148  00AAB6  24F3               	addwf	243,w,c
 28149  00AAB8  6ED9               	movwf	fsr2l,c
 28150  00AABA  0E00               	movlw	high _pBDTEntryIn
 28151  00AABC  20F4               	addwfc	prodh,w,c
 28152  00AABE  6EDA               	movwf	fsr2h,c
 28153  00AAC0  CFDE F018          	movff	postinc2,USBTransferOnePacket@handle
 28154  00AAC4  CFDD F019          	movff	postdec2,USBTransferOnePacket@handle+1
 28155                           
 28156                           ;usb_device.c: 1008: }
 28157  00AAC8  EF72  F055         	goto	l9966
 28158  00AACC                     l9964:
 28159                           
 28160                           ;usb_device.c: 1009: else;usb_device.c: 1010: {;usb_device.c: 1012: handle = pBDTEntryOu
      +                          t[ep];
 28161  00AACC  5017               	movf	USBTransferOnePacket@ep^0,w,c
 28162  00AACE  0D02               	mullw	2
 28163  00AAD0  0E23               	movlw	low _pBDTEntryOut
 28164  00AAD2  24F3               	addwf	243,w,c
 28165  00AAD4  6ED9               	movwf	fsr2l,c
 28166  00AAD6  0E01               	movlw	high _pBDTEntryOut
 28167  00AAD8  20F4               	addwfc	prodh,w,c
 28168  00AADA  6EDA               	movwf	fsr2h,c
 28169  00AADC  CFDE F018          	movff	postinc2,USBTransferOnePacket@handle
 28170  00AAE0  CFDD F019          	movff	postdec2,USBTransferOnePacket@handle+1
 28171  00AAE4                     l9966:
 28172                           
 28173                           ;usb_device.c: 1013: };usb_device.c: 1017: if(handle == 0)
 28174  00AAE4  5018               	movf	USBTransferOnePacket@handle^0,w,c
 28175  00AAE6  1019               	iorwf	(USBTransferOnePacket@handle+1)^0,w,c
 28176  00AAE8  A4D8               	btfss	status,2,c
 28177  00AAEA  EF79  F055         	goto	u8681
 28178  00AAEE  EF7B  F055         	goto	u8680
 28179  00AAF2                     u8681:
 28180  00AAF2  EF81  F055         	goto	l9972
 28181  00AAF6                     u8680:
 28182  00AAF6                     
 28183                           ;usb_device.c: 1018: {;usb_device.c: 1019: return 0;
 28184  00AAF6  0E00               	movlw	0
 28185  00AAF8  6E0F               	movwf	?_USBTransferOnePacket^0,c
 28186  00AAFA  0E00               	movlw	0
 28187  00AAFC  6E10               	movwf	(?_USBTransferOnePacket+1)^0,c
 28188  00AAFE  EFED  F055         	goto	l1901
 28189  00AB02                     l9972:
 28190                           
 28191                           ;usb_device.c: 1020: };usb_device.c: 1033: handle->ADR = ((uint16_t)(data));
 28192  00AB02  EE20 F002          	lfsr	2,2
 28193  00AB06  5018               	movf	USBTransferOnePacket@handle^0,w,c
 28194  00AB08  26D9               	addwf	fsr2l,f,c
 28195  00AB0A  5019               	movf	(USBTransferOnePacket@handle+1)^0,w,c
 28196  00AB0C  22DA               	addwfc	fsr2h,f,c
 28197  00AB0E  C010  FFDE         	movff	USBTransferOnePacket@data,postinc2
 28198  00AB12  C011  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 28199                           
 28200                           ;usb_device.c: 1034: handle->CNT = len;
 28201  00AB16  EE20 F001          	lfsr	2,1
 28202  00AB1A  5018               	movf	USBTransferOnePacket@handle^0,w,c
 28203  00AB1C  26D9               	addwf	fsr2l,f,c
 28204  00AB1E  5019               	movf	(USBTransferOnePacket@handle+1)^0,w,c
 28205  00AB20  22DA               	addwfc	fsr2h,f,c
 28206  00AB22  C012  FFDF         	movff	USBTransferOnePacket@len,indf2
 28207  00AB26                     
 28208                           ;usb_device.c: 1035: handle->STAT.Val &= 0x40;
 28209  00AB26  C018  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 28210  00AB2A  C019  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 28211  00AB2E  0E40               	movlw	64
 28212  00AB30  16DF               	andwf	indf2,f,c
 28213  00AB32                     
 28214                           ;usb_device.c: 1036: handle->STAT.Val |= (0x08 & 0x08);
 28215  00AB32  C018  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 28216  00AB36  C019  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 28217  00AB3A  0E00               	movlw	0
 28218  00AB3C  86DB               	bsf	plusw2,3,c
 28219  00AB3E                     
 28220                           ;usb_device.c: 1037: handle->STAT.Val |= 0x80;
 28221  00AB3E  C018  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 28222  00AB42  C019  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 28223  00AB46  0E00               	movlw	0
 28224  00AB48  8EDB               	bsf	plusw2,7,c
 28225  00AB4A                     
 28226                           ;usb_device.c: 1040: if(dir != 0)
 28227  00AB4A  500F               	movf	USBTransferOnePacket@dir^0,w,c
 28228  00AB4C  B4D8               	btfsc	status,2,c
 28229  00AB4E  EFAB  F055         	goto	u8691
 28230  00AB52  EFAD  F055         	goto	u8690
 28231  00AB56                     u8691:
 28232  00AB56  EFCC  F055         	goto	l9984
 28233  00AB5A                     u8690:
 28234  00AB5A                     
 28235                           ;usb_device.c: 1041: {;usb_device.c: 1043: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 28236  00AB5A  5017               	movf	USBTransferOnePacket@ep^0,w,c
 28237  00AB5C  0D02               	mullw	2
 28238  00AB5E  0EF8               	movlw	low _pBDTEntryIn
 28239  00AB60  24F3               	addwf	243,w,c
 28240  00AB62  6ED9               	movwf	fsr2l,c
 28241  00AB64  0E00               	movlw	high _pBDTEntryIn
 28242  00AB66  20F4               	addwfc	prodh,w,c
 28243  00AB68  6EDA               	movwf	fsr2h,c
 28244  00AB6A  CFDE F013          	movff	postinc2,??_USBTransferOnePacket
 28245  00AB6E  CFDD F014          	movff	postdec2,??_USBTransferOnePacket+1
 28246  00AB72  0E04               	movlw	4
 28247  00AB74  1813               	xorwf	??_USBTransferOnePacket^0,w,c
 28248  00AB76  6E15               	movwf	(??_USBTransferOnePacket+2)^0,c
 28249  00AB78  5014               	movf	(??_USBTransferOnePacket+1)^0,w,c
 28250  00AB7A  6E16               	movwf	(??_USBTransferOnePacket+3)^0,c
 28251  00AB7C  5017               	movf	USBTransferOnePacket@ep^0,w,c
 28252  00AB7E  0D02               	mullw	2
 28253  00AB80  0EF8               	movlw	low _pBDTEntryIn
 28254  00AB82  24F3               	addwf	243,w,c
 28255  00AB84  6ED9               	movwf	fsr2l,c
 28256  00AB86  0E00               	movlw	high _pBDTEntryIn
 28257  00AB88  20F4               	addwfc	prodh,w,c
 28258  00AB8A  6EDA               	movwf	fsr2h,c
 28259  00AB8C  C015  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 28260  00AB90  C016  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 28261                           
 28262                           ;usb_device.c: 1044: }
 28263  00AB94  EFE9  F055         	goto	l9986
 28264  00AB98                     l9984:
 28265                           
 28266                           ;usb_device.c: 1045: else;usb_device.c: 1046: {;usb_device.c: 1048: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 28267  00AB98  5017               	movf	USBTransferOnePacket@ep^0,w,c
 28268  00AB9A  0D02               	mullw	2
 28269  00AB9C  0E23               	movlw	low _pBDTEntryOut
 28270  00AB9E  24F3               	addwf	243,w,c
 28271  00ABA0  6ED9               	movwf	fsr2l,c
 28272  00ABA2  0E01               	movlw	high _pBDTEntryOut
 28273  00ABA4  20F4               	addwfc	prodh,w,c
 28274  00ABA6  6EDA               	movwf	fsr2h,c
 28275  00ABA8  CFDE F013          	movff	postinc2,??_USBTransferOnePacket
 28276  00ABAC  CFDD F014          	movff	postdec2,??_USBTransferOnePacket+1
 28277  00ABB0  0E04               	movlw	4
 28278  00ABB2  1813               	xorwf	??_USBTransferOnePacket^0,w,c
 28279  00ABB4  6E15               	movwf	(??_USBTransferOnePacket+2)^0,c
 28280  00ABB6  5014               	movf	(??_USBTransferOnePacket+1)^0,w,c
 28281  00ABB8  6E16               	movwf	(??_USBTransferOnePacket+3)^0,c
 28282  00ABBA  5017               	movf	USBTransferOnePacket@ep^0,w,c
 28283  00ABBC  0D02               	mullw	2
 28284  00ABBE  0E23               	movlw	low _pBDTEntryOut
 28285  00ABC0  24F3               	addwf	243,w,c
 28286  00ABC2  6ED9               	movwf	fsr2l,c
 28287  00ABC4  0E01               	movlw	high _pBDTEntryOut
 28288  00ABC6  20F4               	addwfc	prodh,w,c
 28289  00ABC8  6EDA               	movwf	fsr2h,c
 28290  00ABCA  C015  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 28291  00ABCE  C016  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 28292  00ABD2                     l9986:
 28293                           
 28294                           ;usb_device.c: 1049: };usb_device.c: 1050: return (void*)handle;
 28295  00ABD2  C018  F00F         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 28296  00ABD6  C019  F010         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 28297  00ABDA                     l1901:
 28298  00ABDA  0012               	return		;funcret
 28299  00ABDC                     __end_of_USBTransferOnePacket:
 28300                           	callstack 0
 28301                           
 28302 ;; *************** function _USBEnableEndpoint *****************
 28303 ;; Defined at:
 28304 ;;		line 882 in file "usb/usb_device.c"
 28305 ;; Parameters:    Size  Location     Type
 28306 ;;  ep              1    wreg     unsigned char 
 28307 ;;  options         1   22[COMRAM] unsigned char 
 28308 ;; Auto vars:     Size  Location     Type
 28309 ;;  ep              1   25[COMRAM] unsigned char 
 28310 ;;  p               2   23[COMRAM] PTR unsigned char 
 28311 ;;		 -> UEP0(1), 
 28312 ;; Return value:  Size  Location     Type
 28313 ;;                  1    wreg      void 
 28314 ;; Registers used:
 28315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28316 ;; Tracked objects:
 28317 ;;		On entry : 0/0
 28318 ;;		On exit  : 0/0
 28319 ;;		Unchanged: 0/0
 28320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28321 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28322 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28324 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28325 ;;Total ram usage:        4 bytes
 28326 ;; Hardware stack levels used: 1
 28327 ;; Hardware stack levels required when called: 4
 28328 ;; This function calls:
 28329 ;;		_USBConfigureEndpoint
 28330 ;; This function is called by:
 28331 ;;		_CDCInitEP
 28332 ;; This function uses a non-reentrant model
 28333 ;;
 28334                           
 28335                           	psect	text127
 28336  00E7C8                     __ptext127:
 28337                           	callstack 0
 28338  00E7C8                     _USBEnableEndpoint:
 28339                           	callstack 23
 28340                           
 28341                           ;incstack = 0
 28342                           ;USBEnableEndpoint@ep stored from wreg
 28343  00E7C8  6E1A               	movwf	USBEnableEndpoint@ep^0,c
 28344  00E7CA                     
 28345                           ;usb_device.c: 884: unsigned char* p;;usb_device.c: 888: if(options & 0x04)
 28346  00E7CA  A417               	btfss	USBEnableEndpoint@options^0,2,c
 28347  00E7CC  EFEA  F073         	goto	u8651
 28348  00E7D0  EFEC  F073         	goto	u8650
 28349  00E7D4                     u8651:
 28350  00E7D4  EFF1  F073         	goto	l9952
 28351  00E7D8                     u8650:
 28352  00E7D8                     
 28353                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 0);
 28354  00E7D8  0E00               	movlw	0
 28355  00E7DA  6E0F               	movwf	USBConfigureEndpoint@direction^0,c
 28356  00E7DC  501A               	movf	USBEnableEndpoint@ep^0,w,c
 28357  00E7DE  EC3E  F067         	call	_USBConfigureEndpoint
 28358  00E7E2                     l9952:
 28359                           
 28360                           ;usb_device.c: 891: };usb_device.c: 892: if(options & 0x02)
 28361  00E7E2  A217               	btfss	USBEnableEndpoint@options^0,1,c
 28362  00E7E4  EFF6  F073         	goto	u8661
 28363  00E7E8  EFF8  F073         	goto	u8660
 28364  00E7EC                     u8661:
 28365  00E7EC  EFFD  F073         	goto	l9956
 28366  00E7F0                     u8660:
 28367  00E7F0                     
 28368                           ;usb_device.c: 893: {;usb_device.c: 894: USBConfigureEndpoint(ep, 1);
 28369  00E7F0  0E01               	movlw	1
 28370  00E7F2  6E0F               	movwf	USBConfigureEndpoint@direction^0,c
 28371  00E7F4  501A               	movf	USBEnableEndpoint@ep^0,w,c
 28372  00E7F6  EC3E  F067         	call	_USBConfigureEndpoint
 28373  00E7FA                     l9956:
 28374                           
 28375                           ;usb_device.c: 895: };usb_device.c: 903: p = (unsigned char*)(&UEP0+ep);
 28376  00E7FA  0E26               	movlw	38
 28377  00E7FC  241A               	addwf	USBEnableEndpoint@ep^0,w,c
 28378  00E7FE  6E18               	movwf	USBEnableEndpoint@p^0,c
 28379  00E800  6A19               	clrf	(USBEnableEndpoint@p+1)^0,c
 28380  00E802  0E0F               	movlw	15
 28381  00E804  2219               	addwfc	(USBEnableEndpoint@p+1)^0,f,c
 28382  00E806                     
 28383                           ;usb_device.c: 905: *p = options;
 28384  00E806  C018  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 28385  00E80A  C019  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 28386  00E80E  C017  FFDF         	movff	USBEnableEndpoint@options,indf2
 28387  00E812  0012               	return		;funcret
 28388  00E814                     __end_of_USBEnableEndpoint:
 28389                           	callstack 0
 28390                           
 28391 ;; *************** function _USBConfigureEndpoint *****************
 28392 ;; Defined at:
 28393 ;;		line 1547 in file "usb/usb_device.c"
 28394 ;; Parameters:    Size  Location     Type
 28395 ;;  EPNum           1    wreg     unsigned char 
 28396 ;;  direction       1   14[COMRAM] unsigned char 
 28397 ;; Auto vars:     Size  Location     Type
 28398 ;;  EPNum           1   19[COMRAM] unsigned char 
 28399 ;;  handle          2   20[COMRAM] PTR volatile struct __BD
 28400 ;;		 -> BDT(48), 
 28401 ;; Return value:  Size  Location     Type
 28402 ;;                  1    wreg      void 
 28403 ;; Registers used:
 28404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28405 ;; Tracked objects:
 28406 ;;		On entry : 0/0
 28407 ;;		On exit  : 0/0
 28408 ;;		Unchanged: 0/0
 28409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28410 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28412 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28413 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28414 ;;Total ram usage:        8 bytes
 28415 ;; Hardware stack levels used: 1
 28416 ;; Hardware stack levels required when called: 3
 28417 ;; This function calls:
 28418 ;;		Nothing
 28419 ;; This function is called by:
 28420 ;;		_USBEnableEndpoint
 28421 ;; This function uses a non-reentrant model
 28422 ;;
 28423                           
 28424                           	psect	text128
 28425  00CE7C                     __ptext128:
 28426                           	callstack 0
 28427  00CE7C                     _USBConfigureEndpoint:
 28428                           	callstack 23
 28429                           
 28430                           ;incstack = 0
 28431                           ;USBConfigureEndpoint@EPNum stored from wreg
 28432  00CE7C  6E14               	movwf	USBConfigureEndpoint@EPNum^0,c
 28433  00CE7E                     
 28434                           ;usb_device.c: 1549: volatile BDT_ENTRY* handle;;usb_device.c: 1553: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 28435  00CE7E  0E00               	movlw	0
 28436  00CE80  6E15               	movwf	USBConfigureEndpoint@handle^0,c
 28437  00CE82  0E04               	movlw	4
 28438  00CE84  6E16               	movwf	(USBConfigureEndpoint@handle+1)^0,c
 28439  00CE86                     
 28440                           ;usb_device.c: 1554: handle += (4*EPNum+2*direction+0u);
 28441  00CE86  500F               	movf	USBConfigureEndpoint@direction^0,w,c
 28442  00CE88  6E10               	movwf	??_USBConfigureEndpoint^0,c
 28443  00CE8A  6A11               	clrf	(??_USBConfigureEndpoint+1)^0,c
 28444  00CE8C  90D8               	bcf	status,0,c
 28445  00CE8E  3610               	rlcf	??_USBConfigureEndpoint^0,f,c
 28446  00CE90  3611               	rlcf	(??_USBConfigureEndpoint+1)^0,f,c
 28447  00CE92  5014               	movf	USBConfigureEndpoint@EPNum^0,w,c
 28448  00CE94  6E12               	movwf	(??_USBConfigureEndpoint+2)^0,c
 28449  00CE96  6A13               	clrf	(??_USBConfigureEndpoint+3)^0,c
 28450  00CE98  90D8               	bcf	status,0,c
 28451  00CE9A  3612               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 28452  00CE9C  3613               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 28453  00CE9E  90D8               	bcf	status,0,c
 28454  00CEA0  3612               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 28455  00CEA2  3613               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 28456  00CEA4  5010               	movf	??_USBConfigureEndpoint^0,w,c
 28457  00CEA6  2612               	addwf	(??_USBConfigureEndpoint+2)^0,f,c
 28458  00CEA8  5011               	movf	(??_USBConfigureEndpoint+1)^0,w,c
 28459  00CEAA  2213               	addwfc	(??_USBConfigureEndpoint+3)^0,f,c
 28460  00CEAC  90D8               	bcf	status,0,c
 28461  00CEAE  3612               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 28462  00CEB0  3613               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 28463  00CEB2  90D8               	bcf	status,0,c
 28464  00CEB4  3612               	rlcf	(??_USBConfigureEndpoint+2)^0,f,c
 28465  00CEB6  3613               	rlcf	(??_USBConfigureEndpoint+3)^0,f,c
 28466  00CEB8  5012               	movf	(??_USBConfigureEndpoint+2)^0,w,c
 28467  00CEBA  2615               	addwf	USBConfigureEndpoint@handle^0,f,c
 28468  00CEBC  5013               	movf	(??_USBConfigureEndpoint+3)^0,w,c
 28469  00CEBE  2216               	addwfc	(USBConfigureEndpoint@handle+1)^0,f,c
 28470  00CEC0                     
 28471                           ;usb_device.c: 1556: handle->STAT.UOWN = 0;
 28472  00CEC0  C015  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28473  00CEC4  C016  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28474  00CEC8  9EDF               	bcf	indf2,7,c
 28475  00CECA                     
 28476                           ;usb_device.c: 1561: if(direction == 0)
 28477  00CECA  500F               	movf	USBConfigureEndpoint@direction^0,w,c
 28478  00CECC  A4D8               	btfss	status,2,c
 28479  00CECE  EF6B  F067         	goto	u8471
 28480  00CED2  EF6D  F067         	goto	u8470
 28481  00CED6                     u8471:
 28482  00CED6  EF7B  F067         	goto	l9876
 28483  00CEDA                     u8470:
 28484  00CEDA                     
 28485                           ;usb_device.c: 1562: {;usb_device.c: 1563: pBDTEntryOut[EPNum] = handle;
 28486  00CEDA  5014               	movf	USBConfigureEndpoint@EPNum^0,w,c
 28487  00CEDC  0D02               	mullw	2
 28488  00CEDE  0E23               	movlw	low _pBDTEntryOut
 28489  00CEE0  24F3               	addwf	243,w,c
 28490  00CEE2  6ED9               	movwf	fsr2l,c
 28491  00CEE4  0E01               	movlw	high _pBDTEntryOut
 28492  00CEE6  20F4               	addwfc	prodh,w,c
 28493  00CEE8  6EDA               	movwf	fsr2h,c
 28494  00CEEA  C015  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28495  00CEEE  C016  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28496                           
 28497                           ;usb_device.c: 1564: }
 28498  00CEF2  EF87  F067         	goto	l9878
 28499  00CEF6                     l9876:
 28500                           
 28501                           ;usb_device.c: 1565: else;usb_device.c: 1566: {;usb_device.c: 1567: pBDTEntryIn[EPNum] =
      +                           handle;
 28502  00CEF6  5014               	movf	USBConfigureEndpoint@EPNum^0,w,c
 28503  00CEF8  0D02               	mullw	2
 28504  00CEFA  0EF8               	movlw	low _pBDTEntryIn
 28505  00CEFC  24F3               	addwf	243,w,c
 28506  00CEFE  6ED9               	movwf	fsr2l,c
 28507  00CF00  0E00               	movlw	high _pBDTEntryIn
 28508  00CF02  20F4               	addwfc	prodh,w,c
 28509  00CF04  6EDA               	movwf	fsr2h,c
 28510  00CF06  C015  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 28511  00CF0A  C016  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 28512  00CF0E                     l9878:
 28513                           
 28514                           ;usb_device.c: 1568: };usb_device.c: 1571: handle->STAT.DTS = 0;
 28515  00CF0E  C015  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 28516  00CF12  C016  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 28517  00CF16  9CDF               	bcf	indf2,6,c
 28518  00CF18                     
 28519                           ;usb_device.c: 1572: (handle+1)->STAT.DTS = 1;
 28520  00CF18  EE20 F004          	lfsr	2,4
 28521  00CF1C  5015               	movf	USBConfigureEndpoint@handle^0,w,c
 28522  00CF1E  26D9               	addwf	fsr2l,f,c
 28523  00CF20  5016               	movf	(USBConfigureEndpoint@handle+1)^0,w,c
 28524  00CF22  22DA               	addwfc	fsr2h,f,c
 28525  00CF24  8CDF               	bsf	indf2,6,c
 28526  00CF26  0012               	return		;funcret
 28527  00CF28                     __end_of_USBConfigureEndpoint:
 28528                           	callstack 0
 28529                           
 28530 ;; *************** function _USBCtrlTrfOutHandler *****************
 28531 ;; Defined at:
 28532 ;;		line 2545 in file "usb/usb_device.c"
 28533 ;; Parameters:    Size  Location     Type
 28534 ;;		None
 28535 ;; Auto vars:     Size  Location     Type
 28536 ;;		None
 28537 ;; Return value:  Size  Location     Type
 28538 ;;                  1    wreg      void 
 28539 ;; Registers used:
 28540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28541 ;; Tracked objects:
 28542 ;;		On entry : 0/0
 28543 ;;		On exit  : 0/0
 28544 ;;		Unchanged: 0/0
 28545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28550 ;;Total ram usage:        0 bytes
 28551 ;; Hardware stack levels used: 1
 28552 ;; Hardware stack levels required when called: 5
 28553 ;; This function calls:
 28554 ;;		_USBCtrlTrfRxService
 28555 ;; This function is called by:
 28556 ;;		_USBCtrlEPService
 28557 ;; This function uses a non-reentrant model
 28558 ;;
 28559                           
 28560                           	psect	text129
 28561  00D9C0                     __ptext129:
 28562                           	callstack 0
 28563  00D9C0                     _USBCtrlTrfOutHandler:
 28564                           	callstack 23
 28565  00D9C0                     
 28566                           ;usb_device.c: 2547: if(controlTransferState == 2)
 28567  00D9C0  0E02               	movlw	2
 28568  00D9C2  0100               	movlb	0	; () banked
 28569  00D9C4  19FE               	xorwf	_controlTransferState& (0+255),w,b
 28570  00D9C6  A4D8               	btfss	status,2,c
 28571  00D9C8  EFE8  F06C         	goto	u13551
 28572  00D9CC  EFEA  F06C         	goto	u13550
 28573  00D9D0                     u13551:
 28574  00D9D0  EFEE  F06C         	goto	l13560
 28575  00D9D4                     u13550:
 28576  00D9D4                     
 28577                           ; BSR set to: 0
 28578                           ;usb_device.c: 2548: {;usb_device.c: 2549: USBCtrlTrfRxService();
 28579  00D9D4  EC0D  F054         	call	_USBCtrlTrfRxService	;wreg free
 28580                           
 28581                           ;usb_device.c: 2550: }
 28582  00D9D8  EF1B  F06D         	goto	l2040
 28583  00D9DC                     l13560:
 28584                           
 28585                           ; BSR set to: 0
 28586                           ;usb_device.c: 2551: else;usb_device.c: 2552: {;usb_device.c: 2555: controlTransferState
      +                           = 0;
 28587  00D9DC  0E00               	movlw	0
 28588  00D9DE  6FFE               	movwf	_controlTransferState& (0+255),b
 28589                           
 28590                           ;usb_device.c: 2562: if(BothEP0OutUOWNsSet == 0)
 28591  00D9E0  0101               	movlb	1	; () banked
 28592  00D9E2  5170               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 28593  00D9E4  A4D8               	btfss	status,2,c
 28594  00D9E6  EFF7  F06C         	goto	u13561
 28595  00D9EA  EFF9  F06C         	goto	u13560
 28596  00D9EE                     u13561:
 28597  00D9EE  EF19  F06D         	goto	l13568
 28598  00D9F2                     u13560:
 28599  00D9F2                     
 28600                           ; BSR set to: 1
 28601                           ;usb_device.c: 2563: {;usb_device.c: 2564: pBDTEntryEP0OutNext->CNT = 8;
 28602  00D9F2  EE20 F001          	lfsr	2,1
 28603  00D9F6  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 28604  00D9F8  26D9               	addwf	fsr2l,f,c
 28605  00D9FA  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 28606  00D9FC  22DA               	addwfc	fsr2h,f,c
 28607  00D9FE  0E08               	movlw	8
 28608  00DA00  6EDF               	movwf	indf2,c
 28609                           
 28610                           ;usb_device.c: 2565: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28611  00DA02  EE20 F002          	lfsr	2,2
 28612  00DA06  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 28613  00DA08  26D9               	addwf	fsr2l,f,c
 28614  00DA0A  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 28615  00DA0C  22DA               	addwfc	fsr2h,f,c
 28616  00DA0E  0E30               	movlw	48
 28617  00DA10  6EDE               	movwf	postinc2,c
 28618  00DA12  0E04               	movlw	4
 28619  00DA14  6EDD               	movwf	postdec2,c
 28620  00DA16                     
 28621                           ; BSR set to: 1
 28622                           ;usb_device.c: 2566: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 28623  00DA16  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28624  00DA1A  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28625  00DA1E  0E0C               	movlw	12
 28626  00DA20  6EDF               	movwf	indf2,c
 28627  00DA22                     
 28628                           ; BSR set to: 1
 28629                           ;usb_device.c: 2567: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28630  00DA22  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28631  00DA26  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28632  00DA2A  0E00               	movlw	0
 28633  00DA2C  8EDB               	bsf	plusw2,7,c
 28634                           
 28635                           ;usb_device.c: 2568: }
 28636  00DA2E  EF1B  F06D         	goto	l2040
 28637  00DA32                     l13568:
 28638                           
 28639                           ; BSR set to: 1
 28640                           ;usb_device.c: 2569: else;usb_device.c: 2570: {;usb_device.c: 2571: BothEP0OutUOWNsSet =
      +                           0;
 28641  00DA32  0E00               	movlw	0
 28642  00DA34  6F70               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 28643  00DA36                     l2040:
 28644  00DA36  0012               	return		;funcret
 28645  00DA38                     __end_of_USBCtrlTrfOutHandler:
 28646                           	callstack 0
 28647                           
 28648 ;; *************** function _USBCtrlTrfRxService *****************
 28649 ;; Defined at:
 28650 ;;		line 1856 in file "usb/usb_device.c"
 28651 ;; Parameters:    Size  Location     Type
 28652 ;;		None
 28653 ;; Auto vars:     Size  Location     Type
 28654 ;;  byteToRead      1   15[COMRAM] unsigned char 
 28655 ;;  i               1   14[COMRAM] unsigned char 
 28656 ;; Return value:  Size  Location     Type
 28657 ;;                  1    wreg      void 
 28658 ;; Registers used:
 28659 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28660 ;; Tracked objects:
 28661 ;;		On entry : 0/0
 28662 ;;		On exit  : 0/0
 28663 ;;		Unchanged: 0/0
 28664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28669 ;;Total ram usage:        2 bytes
 28670 ;; Hardware stack levels used: 1
 28671 ;; Hardware stack levels required when called: 4
 28672 ;; This function calls:
 28673 ;;		_USBCtrlEPAllowStatusStage
 28674 ;; This function is called by:
 28675 ;;		_USBCtrlTrfOutHandler
 28676 ;; This function uses a non-reentrant model
 28677 ;;
 28678                           
 28679                           	psect	text130
 28680  00A81A                     __ptext130:
 28681                           	callstack 0
 28682  00A81A                     _USBCtrlTrfRxService:
 28683                           	callstack 23
 28684  00A81A                     
 28685                           ;usb_device.c: 1858: uint8_t byteToRead;;usb_device.c: 1859: uint8_t i;;usb_device.c: 18
      +                          63: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 28686  00A81A  EE20 F001          	lfsr	2,1
 28687  00A81E  5049               	movf	_pBDTEntryEP0OutCurrent^0,w,c
 28688  00A820  26D9               	addwf	fsr2l,f,c
 28689  00A822  504A               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
 28690  00A824  22DA               	addwfc	fsr2h,f,c
 28691  00A826  50DF               	movf	indf2,w,c
 28692  00A828  6E10               	movwf	USBCtrlTrfRxService@byteToRead^0,c
 28693  00A82A                     
 28694                           ;usb_device.c: 1869: if(byteToRead > outPipes[0].wCount.Val)
 28695  00A82A  5010               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 28696  00A82C  0101               	movlb	1	; () banked
 28697  00A82E  5D1F               	subwf	(_outPipes+4)& (0+255),w,b
 28698  00A830  0E00               	movlw	0
 28699  00A832  5920               	subwfb	(_outPipes+5)& (0+255),w,b
 28700  00A834  B0D8               	btfsc	status,0,c
 28701  00A836  EF1F  F054         	goto	u12551
 28702  00A83A  EF21  F054         	goto	u12550
 28703  00A83E                     u12551:
 28704  00A83E  EF23  F054         	goto	l12670
 28705  00A842                     u12550:
 28706  00A842                     
 28707                           ; BSR set to: 1
 28708                           ;usb_device.c: 1870: {;usb_device.c: 1871: byteToRead = outPipes[0].wCount.Val;
 28709  00A842  C11F  F010         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 28710  00A846                     l12670:
 28711                           
 28712                           ; BSR set to: 1
 28713                           ;usb_device.c: 1872: };usb_device.c: 1874: outPipes[0].wCount.Val -= byteToRead;
 28714  00A846  5010               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 28715  00A848  5F1F               	subwf	(_outPipes+4)& (0+255),f,b
 28716  00A84A  0E00               	movlw	0
 28717  00A84C  5B20               	subwfb	(_outPipes+5)& (0+255),f,b
 28718  00A84E                     
 28719                           ; BSR set to: 1
 28720                           ;usb_device.c: 1878: for(i=0;i<byteToRead;i++)
 28721  00A84E  0E00               	movlw	0
 28722  00A850  6E0F               	movwf	USBCtrlTrfRxService@i^0,c
 28723  00A852  EF3A  F054         	goto	l12680
 28724  00A856                     l12674:
 28725                           
 28726                           ; BSR set to: 1
 28727                           ;usb_device.c: 1879: {;usb_device.c: 1880: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 28728  00A856  0E38               	movlw	56
 28729  00A858  240F               	addwf	USBCtrlTrfRxService@i^0,w,c
 28730  00A85A  6ED9               	movwf	fsr2l,c
 28731  00A85C  6ADA               	clrf	fsr2h,c
 28732  00A85E  0E04               	movlw	4
 28733  00A860  22DA               	addwfc	fsr2h,f,c
 28734  00A862  C11B  FFE1         	movff	_outPipes,fsr1l
 28735  00A866  C11C  FFE2         	movff	_outPipes+1,fsr1h
 28736  00A86A  CFDF FFE7          	movff	indf2,indf1
 28737  00A86E                     
 28738                           ; BSR set to: 1
 28739  00A86E  4B1B               	infsnz	_outPipes& (0+255),f,b
 28740  00A870  2B1C               	incf	(_outPipes+1)& (0+255),f,b
 28741  00A872                     
 28742                           ; BSR set to: 1
 28743  00A872  2A0F               	incf	USBCtrlTrfRxService@i^0,f,c
 28744  00A874                     l12680:
 28745                           
 28746                           ; BSR set to: 1
 28747  00A874  5010               	movf	USBCtrlTrfRxService@byteToRead^0,w,c
 28748  00A876  5C0F               	subwf	USBCtrlTrfRxService@i^0,w,c
 28749  00A878  A0D8               	btfss	status,0,c
 28750  00A87A  EF41  F054         	goto	u12561
 28751  00A87E  EF43  F054         	goto	u12560
 28752  00A882                     u12561:
 28753  00A882  EF2B  F054         	goto	l12674
 28754  00A886                     u12560:
 28755  00A886                     
 28756                           ; BSR set to: 1
 28757                           ;usb_device.c: 1881: };usb_device.c: 1885: if(outPipes[0].wCount.Val > 0)
 28758  00A886  511F               	movf	(_outPipes+4)& (0+255),w,b
 28759  00A888  1120               	iorwf	(_outPipes+5)& (0+255),w,b
 28760  00A88A  B4D8               	btfsc	status,2,c
 28761  00A88C  EF4A  F054         	goto	u12571
 28762  00A890  EF4C  F054         	goto	u12570
 28763  00A894                     u12571:
 28764  00A894  EF85  F054         	goto	l12696
 28765  00A898                     u12570:
 28766  00A898                     
 28767                           ; BSR set to: 1
 28768                           ;usb_device.c: 1886: {;usb_device.c: 1887: pBDTEntryEP0OutNext->CNT = 8;
 28769  00A898  EE20 F001          	lfsr	2,1
 28770  00A89C  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 28771  00A89E  26D9               	addwf	fsr2l,f,c
 28772  00A8A0  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 28773  00A8A2  22DA               	addwfc	fsr2h,f,c
 28774  00A8A4  0E08               	movlw	8
 28775  00A8A6  6EDF               	movwf	indf2,c
 28776                           
 28777                           ;usb_device.c: 1888: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 28778  00A8A8  EE20 F002          	lfsr	2,2
 28779  00A8AC  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 28780  00A8AE  26D9               	addwf	fsr2l,f,c
 28781  00A8B0  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 28782  00A8B2  22DA               	addwfc	fsr2h,f,c
 28783  00A8B4  0E38               	movlw	56
 28784  00A8B6  6EDE               	movwf	postinc2,c
 28785  00A8B8  0E04               	movlw	4
 28786  00A8BA  6EDD               	movwf	postdec2,c
 28787  00A8BC                     
 28788                           ; BSR set to: 1
 28789                           ;usb_device.c: 1889: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 28790  00A8BC  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 28791  00A8C0  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 28792  00A8C4  BCDF               	btfsc	indf2,6,c
 28793  00A8C6  EF67  F054         	goto	u12581
 28794  00A8CA  EF69  F054         	goto	u12580
 28795  00A8CE                     u12581:
 28796  00A8CE  EF77  F054         	goto	l12692
 28797  00A8D2                     u12580:
 28798  00A8D2                     
 28799                           ; BSR set to: 1
 28800                           ;usb_device.c: 1890: {;usb_device.c: 1891: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 28801  00A8D2  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28802  00A8D6  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28803  00A8DA  0E48               	movlw	72
 28804  00A8DC  6EDF               	movwf	indf2,c
 28805  00A8DE                     
 28806                           ; BSR set to: 1
 28807                           ;usb_device.c: 1892: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28808  00A8DE  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28809  00A8E2  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28810  00A8E6  0E00               	movlw	0
 28811  00A8E8  8EDB               	bsf	plusw2,7,c
 28812                           
 28813                           ;usb_device.c: 1893: }
 28814  00A8EA  EFAE  F054         	goto	l1972
 28815  00A8EE                     l12692:
 28816                           
 28817                           ; BSR set to: 1
 28818                           ;usb_device.c: 1894: else;usb_device.c: 1895: {;usb_device.c: 1896: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 28819  00A8EE  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28820  00A8F2  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28821  00A8F6  0E08               	movlw	8
 28822  00A8F8  6EDF               	movwf	indf2,c
 28823  00A8FA                     
 28824                           ; BSR set to: 1
 28825                           ;usb_device.c: 1897: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28826  00A8FA  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28827  00A8FE  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28828  00A902  0E00               	movlw	0
 28829  00A904  8EDB               	bsf	plusw2,7,c
 28830  00A906  EFAE  F054         	goto	l1972
 28831  00A90A                     l12696:
 28832                           
 28833                           ; BSR set to: 1
 28834                           ;usb_device.c: 1900: else;usb_device.c: 1901: {;usb_device.c: 1905: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 28835  00A90A  EE20 F001          	lfsr	2,1
 28836  00A90E  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 28837  00A910  26D9               	addwf	fsr2l,f,c
 28838  00A912  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 28839  00A914  22DA               	addwfc	fsr2h,f,c
 28840  00A916  0E08               	movlw	8
 28841  00A918  6EDF               	movwf	indf2,c
 28842                           
 28843                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 28844  00A91A  EE20 F002          	lfsr	2,2
 28845  00A91E  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 28846  00A920  26D9               	addwf	fsr2l,f,c
 28847  00A922  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 28848  00A924  22DA               	addwfc	fsr2h,f,c
 28849  00A926  0E30               	movlw	48
 28850  00A928  6EDE               	movwf	postinc2,c
 28851  00A92A  0E04               	movlw	4
 28852  00A92C  6EDD               	movwf	postdec2,c
 28853  00A92E                     
 28854                           ; BSR set to: 1
 28855                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 28856  00A92E  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28857  00A932  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28858  00A936  0E04               	movlw	4
 28859  00A938  6EDF               	movwf	indf2,c
 28860  00A93A                     
 28861                           ; BSR set to: 1
 28862                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 28863  00A93A  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 28864  00A93E  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 28865  00A942  0E00               	movlw	0
 28866  00A944  8EDB               	bsf	plusw2,7,c
 28867  00A946                     
 28868                           ; BSR set to: 1
 28869                           ;usb_device.c: 1930: };usb_device.c: 1931: outPipes[0].info.bits.busy = 0;
 28870  00A946  9F1E               	bcf	(_outPipes+3)& (0+255),7,b
 28871  00A948                     
 28872                           ; BSR set to: 1
 28873                           ;usb_device.c: 1945: if(USBDeferStatusStagePacket == 0)
 28874  00A948  504D               	movf	_USBDeferStatusStagePacket^0,w,c	;volatile
 28875  00A94A  A4D8               	btfss	status,2,c
 28876  00A94C  EFAA  F054         	goto	u12591
 28877  00A950  EFAC  F054         	goto	u12590
 28878  00A954                     u12591:
 28879  00A954  EFAE  F054         	goto	l1972
 28880  00A958                     u12590:
 28881  00A958                     
 28882                           ; BSR set to: 1
 28883                           ;usb_device.c: 1946: {;usb_device.c: 1947: USBCtrlEPAllowStatusStage();
 28884  00A958  EC69  F05D         	call	_USBCtrlEPAllowStatusStage	;wreg free
 28885  00A95C                     l1972:
 28886  00A95C  0012               	return		;funcret
 28887  00A95E                     __end_of_USBCtrlTrfRxService:
 28888                           	callstack 0
 28889                           
 28890 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 28891 ;; Defined at:
 28892 ;;		line 1420 in file "usb/usb_device.c"
 28893 ;; Parameters:    Size  Location     Type
 28894 ;;		None
 28895 ;; Auto vars:     Size  Location     Type
 28896 ;;		None
 28897 ;; Return value:  Size  Location     Type
 28898 ;;                  1    wreg      void 
 28899 ;; Registers used:
 28900 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28901 ;; Tracked objects:
 28902 ;;		On entry : 0/0
 28903 ;;		On exit  : 0/0
 28904 ;;		Unchanged: 0/0
 28905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28910 ;;Total ram usage:        0 bytes
 28911 ;; Hardware stack levels used: 1
 28912 ;; Hardware stack levels required when called: 3
 28913 ;; This function calls:
 28914 ;;		Nothing
 28915 ;; This function is called by:
 28916 ;;		_USBDeviceTasks
 28917 ;;		_USBCtrlEPServiceComplete
 28918 ;;		_USBCtrlTrfRxService
 28919 ;; This function uses a non-reentrant model
 28920 ;;
 28921                           
 28922                           	psect	text131
 28923  00BAD2                     __ptext131:
 28924                           	callstack 0
 28925  00BAD2                     _USBCtrlEPAllowStatusStage:
 28926                           	callstack 23
 28927  00BAD2                     
 28928                           ;usb_device.c: 1427: if(USBStatusStageEnabledFlag1 == 0)
 28929  00BAD2  0101               	movlb	1	; () banked
 28930  00BAD4  516E               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 28931  00BAD6  A4D8               	btfss	status,2,c
 28932  00BAD8  EF70  F05D         	goto	u10811
 28933  00BADC  EF72  F05D         	goto	u10810
 28934  00BAE0                     u10811:
 28935  00BAE0  EFE3  F05D         	goto	l1920
 28936  00BAE4                     u10810:
 28937  00BAE4                     
 28938                           ; BSR set to: 1
 28939                           ;usb_device.c: 1428: {;usb_device.c: 1429: USBStatusStageEnabledFlag1 = 1;
 28940  00BAE4  0E01               	movlw	1
 28941  00BAE6  6F6E               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 28942                           
 28943                           ;usb_device.c: 1430: if(USBStatusStageEnabledFlag2 == 0)
 28944  00BAE8  516D               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 28945  00BAEA  A4D8               	btfss	status,2,c
 28946  00BAEC  EF7A  F05D         	goto	u10821
 28947  00BAF0  EF7C  F05D         	goto	u10820
 28948  00BAF4                     u10821:
 28949  00BAF4  EFE3  F05D         	goto	l1920
 28950  00BAF8                     u10820:
 28951  00BAF8                     
 28952                           ; BSR set to: 1
 28953                           ;usb_device.c: 1431: {;usb_device.c: 1432: USBStatusStageEnabledFlag2 = 1;
 28954  00BAF8  0E01               	movlw	1
 28955  00BAFA  6F6D               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 28956  00BAFC                     
 28957                           ; BSR set to: 1
 28958                           ;usb_device.c: 1436: if(controlTransferState == 2)
 28959  00BAFC  0E02               	movlw	2
 28960  00BAFE  0100               	movlb	0	; () banked
 28961  00BB00  19FE               	xorwf	_controlTransferState& (0+255),w,b
 28962  00BB02  A4D8               	btfss	status,2,c
 28963  00BB04  EF86  F05D         	goto	u10831
 28964  00BB08  EF88  F05D         	goto	u10830
 28965  00BB0C                     u10831:
 28966  00BB0C  EF9E  F05D         	goto	l11372
 28967  00BB10                     u10830:
 28968  00BB10                     
 28969                           ; BSR set to: 0
 28970                           ;usb_device.c: 1437: {;usb_device.c: 1438: pBDTEntryIn[0]->CNT = 0;
 28971  00BB10  EE20 F001          	lfsr	2,1
 28972  00BB14  51F8               	movf	_pBDTEntryIn& (0+255),w,b
 28973  00BB16  26D9               	addwf	fsr2l,f,c
 28974  00BB18  51F9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 28975  00BB1A  22DA               	addwfc	fsr2h,f,c
 28976  00BB1C  0E00               	movlw	0
 28977  00BB1E  6EDF               	movwf	indf2,c
 28978  00BB20                     
 28979                           ; BSR set to: 0
 28980                           ;usb_device.c: 1439: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 28981  00BB20  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 28982  00BB24  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28983  00BB28  0E48               	movlw	72
 28984  00BB2A  6EDF               	movwf	indf2,c
 28985  00BB2C                     
 28986                           ; BSR set to: 0
 28987                           ;usb_device.c: 1440: pBDTEntryIn[0]->STAT.Val |= 0x80;
 28988  00BB2C  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 28989  00BB30  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 28990  00BB34  0E00               	movlw	0
 28991  00BB36  8EDB               	bsf	plusw2,7,c
 28992                           
 28993                           ;usb_device.c: 1441: }
 28994  00BB38  EFE3  F05D         	goto	l1920
 28995  00BB3C                     l11372:
 28996                           
 28997                           ; BSR set to: 0
 28998                           ;usb_device.c: 1442: else if(controlTransferState == 1)
 28999  00BB3C  05FE               	decf	_controlTransferState& (0+255),w,b
 29000  00BB3E  A4D8               	btfss	status,2,c
 29001  00BB40  EFA4  F05D         	goto	u10841
 29002  00BB44  EFA6  F05D         	goto	u10840
 29003  00BB48                     u10841:
 29004  00BB48  EFE3  F05D         	goto	l1916
 29005  00BB4C                     u10840:
 29006  00BB4C                     
 29007                           ; BSR set to: 0
 29008                           ;usb_device.c: 1443: {;usb_device.c: 1444: BothEP0OutUOWNsSet = 0;
 29009  00BB4C  0E00               	movlw	0
 29010  00BB4E  0101               	movlb	1	; () banked
 29011  00BB50  6F70               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 29012  00BB52                     
 29013                           ; BSR set to: 1
 29014                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->CNT = 8;
 29015  00BB52  EE20 F001          	lfsr	2,1
 29016  00BB56  5049               	movf	_pBDTEntryEP0OutCurrent^0,w,c
 29017  00BB58  26D9               	addwf	fsr2l,f,c
 29018  00BB5A  504A               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
 29019  00BB5C  22DA               	addwfc	fsr2h,f,c
 29020  00BB5E  0E08               	movlw	8
 29021  00BB60  6EDF               	movwf	indf2,c
 29022  00BB62                     
 29023                           ; BSR set to: 1
 29024                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 29025  00BB62  EE20 F002          	lfsr	2,2
 29026  00BB66  5049               	movf	_pBDTEntryEP0OutCurrent^0,w,c
 29027  00BB68  26D9               	addwf	fsr2l,f,c
 29028  00BB6A  504A               	movf	(_pBDTEntryEP0OutCurrent+1)^0,w,c
 29029  00BB6C  22DA               	addwfc	fsr2h,f,c
 29030  00BB6E  0E30               	movlw	48
 29031  00BB70  6EDE               	movwf	postinc2,c
 29032  00BB72  0E04               	movlw	4
 29033  00BB74  6EDD               	movwf	postdec2,c
 29034  00BB76                     
 29035                           ; BSR set to: 1
 29036                           ;usb_device.c: 1451: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 29037  00BB76  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29038  00BB7A  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29039  00BB7E  0E04               	movlw	4
 29040  00BB80  6EDF               	movwf	indf2,c
 29041  00BB82                     
 29042                           ; BSR set to: 1
 29043                           ;usb_device.c: 1452: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 29044  00BB82  C049  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 29045  00BB86  C04A  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 29046  00BB8A  0E00               	movlw	0
 29047  00BB8C  8EDB               	bsf	plusw2,7,c
 29048  00BB8E                     
 29049                           ; BSR set to: 1
 29050                           ;usb_device.c: 1453: BothEP0OutUOWNsSet = 1;
 29051  00BB8E  0E01               	movlw	1
 29052  00BB90  6F70               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 29053  00BB92                     
 29054                           ; BSR set to: 1
 29055                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->CNT = 8;
 29056  00BB92  EE20 F001          	lfsr	2,1
 29057  00BB96  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 29058  00BB98  26D9               	addwf	fsr2l,f,c
 29059  00BB9A  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 29060  00BB9C  22DA               	addwfc	fsr2h,f,c
 29061  00BB9E  0E08               	movlw	8
 29062  00BBA0  6EDF               	movwf	indf2,c
 29063  00BBA2                     
 29064                           ; BSR set to: 1
 29065                           ;usb_device.c: 1458: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 29066  00BBA2  EE20 F002          	lfsr	2,2
 29067  00BBA6  5047               	movf	_pBDTEntryEP0OutNext^0,w,c
 29068  00BBA8  26D9               	addwf	fsr2l,f,c
 29069  00BBAA  5048               	movf	(_pBDTEntryEP0OutNext+1)^0,w,c
 29070  00BBAC  22DA               	addwfc	fsr2h,f,c
 29071  00BBAE  0E30               	movlw	48
 29072  00BBB0  6EDE               	movwf	postinc2,c
 29073  00BBB2  0E04               	movlw	4
 29074  00BBB4  6EDD               	movwf	postdec2,c
 29075  00BBB6                     
 29076                           ; BSR set to: 1
 29077                           ;usb_device.c: 1459: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 29078  00BBB6  C047  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 29079  00BBBA  C048  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 29080  00BBBE  0E80               	movlw	128
 29081  00BBC0  6EDF               	movwf	indf2,c
 29082  00BBC2  EFE3  F05D         	goto	l1920
 29083  00BBC6                     l1916:
 29084  00BBC6                     l1920:
 29085  00BBC6  0012               	return		;funcret
 29086  00BBC8                     __end_of_USBCtrlEPAllowStatusStage:
 29087                           	callstack 0
 29088                           
 29089 ;; *************** function _USBCtrlTrfInHandler *****************
 29090 ;; Defined at:
 29091 ;;		line 2599 in file "usb/usb_device.c"
 29092 ;; Parameters:    Size  Location     Type
 29093 ;;		None
 29094 ;; Auto vars:     Size  Location     Type
 29095 ;;  lastDTS         1   15[COMRAM] unsigned char 
 29096 ;; Return value:  Size  Location     Type
 29097 ;;                  1    wreg      void 
 29098 ;; Registers used:
 29099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29100 ;; Tracked objects:
 29101 ;;		On entry : 0/0
 29102 ;;		On exit  : 0/0
 29103 ;;		Unchanged: 0/0
 29104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29109 ;;Total ram usage:        1 bytes
 29110 ;; Hardware stack levels used: 1
 29111 ;; Hardware stack levels required when called: 4
 29112 ;; This function calls:
 29113 ;;		_USBCtrlTrfTxService
 29114 ;; This function is called by:
 29115 ;;		_USBCtrlEPService
 29116 ;; This function uses a non-reentrant model
 29117 ;;
 29118                           
 29119                           	psect	text132
 29120  00B196                     __ptext132:
 29121                           	callstack 0
 29122  00B196                     _USBCtrlTrfInHandler:
 29123                           	callstack 24
 29124  00B196                     
 29125                           ;usb_device.c: 2601: uint8_t lastDTS;;usb_device.c: 2603: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 29126  00B196  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 29127  00B19A  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29128  00B19E  0100               	movlb	0	; () banked
 29129  00B1A0  0E00               	movlw	0
 29130  00B1A2  BCDF               	btfsc	indf2,6,c
 29131  00B1A4  0E01               	movlw	1
 29132  00B1A6  6E10               	movwf	USBCtrlTrfInHandler@lastDTS^0,c
 29133  00B1A8                     
 29134                           ; BSR set to: 0
 29135                           ;usb_device.c: 2606: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 29136  00B1A8  0E04               	movlw	4
 29137  00B1AA  19F8               	xorwf	_pBDTEntryIn& (0+255),w,b
 29138  00B1AC  6FF8               	movwf	_pBDTEntryIn& (0+255),b
 29139  00B1AE  51F9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29140  00B1B0  6FF9               	movwf	(_pBDTEntryIn+1)& (0+255),b
 29141  00B1B2                     
 29142                           ; BSR set to: 0
 29143                           ;usb_device.c: 2611: if(USBDeviceState == ADR_PENDING_STATE)
 29144  00B1B2  0E08               	movlw	8
 29145  00B1B4  184F               	xorwf	_USBDeviceState^0,w,c
 29146  00B1B6  A4D8               	btfss	status,2,c
 29147  00B1B8  EFE0  F058         	goto	u13571
 29148  00B1BC  EFE2  F058         	goto	u13570
 29149  00B1C0                     u13571:
 29150  00B1C0  EFF5  F058         	goto	l13584
 29151  00B1C4                     u13570:
 29152  00B1C4                     
 29153                           ; BSR set to: 0
 29154                           ;usb_device.c: 2612: {;usb_device.c: 2613: UADDR = (SetupPkt.bDevADR & 0x7F);
 29155  00B1C4  0104               	movlb	4	; () banked
 29156  00B1C6  5132               	movf	50,w,b	;volatile
 29157  00B1C8  0B7F               	andlw	127
 29158  00B1CA  010F               	movlb	15	; () banked
 29159  00B1CC  6F38               	movwf	56,b	;volatile
 29160  00B1CE                     
 29161                           ; BSR set to: 15
 29162                           ;usb_device.c: 2614: if(UADDR != 0u)
 29163  00B1CE  5138               	movf	56,w,b	;volatile
 29164  00B1D0  B4D8               	btfsc	status,2,c
 29165  00B1D2  EFED  F058         	goto	u13581
 29166  00B1D6  EFEF  F058         	goto	u13580
 29167  00B1DA                     u13581:
 29168  00B1DA  EFF3  F058         	goto	l13582
 29169  00B1DE                     u13580:
 29170  00B1DE                     
 29171                           ; BSR set to: 15
 29172                           ;usb_device.c: 2615: {;usb_device.c: 2616: USBDeviceState=ADDRESS_STATE;
 29173  00B1DE  0E10               	movlw	16
 29174  00B1E0  6E4F               	movwf	_USBDeviceState^0,c
 29175                           
 29176                           ;usb_device.c: 2617: }
 29177  00B1E2  EFF5  F058         	goto	l13584
 29178  00B1E6                     l13582:
 29179                           
 29180                           ; BSR set to: 15
 29181                           ;usb_device.c: 2618: else;usb_device.c: 2619: {;usb_device.c: 2620: USBDeviceState=DEFAU
      +                          LT_STATE;
 29182  00B1E6  0E04               	movlw	4
 29183  00B1E8  6E4F               	movwf	_USBDeviceState^0,c
 29184  00B1EA                     l13584:
 29185                           
 29186                           ;usb_device.c: 2621: };usb_device.c: 2622: };usb_device.c: 2625: if(controlTransferState
      +                           == 1)
 29187  00B1EA  0100               	movlb	0	; () banked
 29188  00B1EC  05FE               	decf	_controlTransferState& (0+255),w,b
 29189  00B1EE  A4D8               	btfss	status,2,c
 29190  00B1F0  EFFC  F058         	goto	u13591
 29191  00B1F4  EFFE  F058         	goto	u13590
 29192  00B1F8                     u13591:
 29193  00B1F8  EF46  F059         	goto	l2046
 29194  00B1FC                     u13590:
 29195  00B1FC                     
 29196                           ; BSR set to: 0
 29197                           ;usb_device.c: 2626: {;usb_device.c: 2627: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 29198  00B1FC  EE20 F002          	lfsr	2,2
 29199  00B200  51F8               	movf	_pBDTEntryIn& (0+255),w,b
 29200  00B202  26D9               	addwf	fsr2l,f,c
 29201  00B204  51F9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29202  00B206  22DA               	addwfc	fsr2h,f,c
 29203  00B208  0E38               	movlw	56
 29204  00B20A  6EDE               	movwf	postinc2,c
 29205  00B20C  0E04               	movlw	4
 29206  00B20E  6EDD               	movwf	postdec2,c
 29207  00B210                     
 29208                           ; BSR set to: 0
 29209                           ;usb_device.c: 2628: USBCtrlTrfTxService();
 29210  00B210  EC41  F058         	call	_USBCtrlTrfTxService	;wreg free
 29211  00B214                     
 29212                           ;usb_device.c: 2634: if(shortPacketStatus == 2)
 29213  00B214  0E02               	movlw	2
 29214  00B216  0101               	movlb	1	; () banked
 29215  00B218  1974               	xorwf	_shortPacketStatus& (0+255),w,b
 29216  00B21A  A4D8               	btfss	status,2,c
 29217  00B21C  EF12  F059         	goto	u13601
 29218  00B220  EF14  F059         	goto	u13600
 29219  00B224                     u13601:
 29220  00B224  EF22  F059         	goto	l13596
 29221  00B228                     u13600:
 29222  00B228                     
 29223                           ; BSR set to: 1
 29224                           ;usb_device.c: 2635: {;usb_device.c: 2638: pBDTEntryIn[0]->STAT.Val = 0x04;
 29225  00B228  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 29226  00B22C  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29227  00B230  0E04               	movlw	4
 29228  00B232  6EDF               	movwf	indf2,c
 29229  00B234                     
 29230                           ; BSR set to: 1
 29231                           ;usb_device.c: 2639: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29232  00B234  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 29233  00B238  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29234  00B23C  0E00               	movlw	0
 29235  00B23E  8EDB               	bsf	plusw2,7,c
 29236                           
 29237                           ;usb_device.c: 2640: }
 29238  00B240  EF52  F059         	goto	l2054
 29239  00B244                     l13596:
 29240                           
 29241                           ; BSR set to: 1
 29242                           ;usb_device.c: 2641: else;usb_device.c: 2642: {;usb_device.c: 2643: if(lastDTS == 0)
 29243  00B244  5010               	movf	USBCtrlTrfInHandler@lastDTS^0,w,c
 29244  00B246  A4D8               	btfss	status,2,c
 29245  00B248  EF28  F059         	goto	u13611
 29246  00B24C  EF2A  F059         	goto	u13610
 29247  00B250                     u13611:
 29248  00B250  EF38  F059         	goto	l13602
 29249  00B254                     u13610:
 29250  00B254                     
 29251                           ; BSR set to: 1
 29252                           ;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 29253  00B254  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 29254  00B258  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29255  00B25C  0E48               	movlw	72
 29256  00B25E  6EDF               	movwf	indf2,c
 29257  00B260                     
 29258                           ; BSR set to: 1
 29259                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29260  00B260  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 29261  00B264  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29262  00B268  0E00               	movlw	0
 29263  00B26A  8EDB               	bsf	plusw2,7,c
 29264                           
 29265                           ;usb_device.c: 2647: }
 29266  00B26C  EF52  F059         	goto	l2054
 29267  00B270                     l13602:
 29268                           
 29269                           ; BSR set to: 1
 29270                           ;usb_device.c: 2648: else;usb_device.c: 2649: {;usb_device.c: 2650: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 29271  00B270  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 29272  00B274  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29273  00B278  0E08               	movlw	8
 29274  00B27A  6EDF               	movwf	indf2,c
 29275  00B27C                     
 29276                           ; BSR set to: 1
 29277                           ;usb_device.c: 2651: pBDTEntryIn[0]->STAT.Val |= 0x80;
 29278  00B27C  C0F8  FFD9         	movff	_pBDTEntryIn,fsr2l
 29279  00B280  C0F9  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 29280  00B284  0E00               	movlw	0
 29281  00B286  8EDB               	bsf	plusw2,7,c
 29282  00B288  EF52  F059         	goto	l2054
 29283  00B28C                     l2046:
 29284                           
 29285                           ; BSR set to: 0
 29286                           ;usb_device.c: 2655: else;usb_device.c: 2656: {;usb_device.c: 2660: if(outPipes[0].info.
      +                          bits.busy == 1)
 29287  00B28C  0101               	movlb	1	; () banked
 29288  00B28E  AF1E               	btfss	(_outPipes+3)& (0+255),7,b
 29289  00B290  EF4C  F059         	goto	u13621
 29290  00B294  EF4E  F059         	goto	u13620
 29291  00B298                     u13621:
 29292  00B298  EF4F  F059         	goto	l13608
 29293  00B29C                     u13620:
 29294  00B29C                     
 29295                           ; BSR set to: 1
 29296                           ;usb_device.c: 2665: };usb_device.c: 2666: outPipes[0].info.bits.busy = 0;
 29297  00B29C  9F1E               	bcf	(_outPipes+3)& (0+255),7,b
 29298  00B29E                     l13608:
 29299                           
 29300                           ; BSR set to: 1
 29301                           ;usb_device.c: 2667: };usb_device.c: 2669: controlTransferState = 0;
 29302  00B29E  0E00               	movlw	0
 29303  00B2A0  0100               	movlb	0	; () banked
 29304  00B2A2  6FFE               	movwf	_controlTransferState& (0+255),b
 29305  00B2A4                     l2054:
 29306  00B2A4  0012               	return		;funcret
 29307  00B2A6                     __end_of_USBCtrlTrfInHandler:
 29308                           	callstack 0
 29309                           
 29310 ;; *************** function _USBCtrlTrfTxService *****************
 29311 ;; Defined at:
 29312 ;;		line 1775 in file "usb/usb_device.c"
 29313 ;; Parameters:    Size  Location     Type
 29314 ;;		None
 29315 ;; Auto vars:     Size  Location     Type
 29316 ;;  byteToSend      1   14[COMRAM] unsigned char 
 29317 ;; Return value:  Size  Location     Type
 29318 ;;                  1    wreg      void 
 29319 ;; Registers used:
 29320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 29321 ;; Tracked objects:
 29322 ;;		On entry : 0/0
 29323 ;;		On exit  : 0/0
 29324 ;;		Unchanged: 0/0
 29325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29330 ;;Total ram usage:        1 bytes
 29331 ;; Hardware stack levels used: 1
 29332 ;; Hardware stack levels required when called: 3
 29333 ;; This function calls:
 29334 ;;		Nothing
 29335 ;; This function is called by:
 29336 ;;		_USBCtrlEPAllowDataStage
 29337 ;;		_USBCtrlTrfInHandler
 29338 ;; This function uses a non-reentrant model
 29339 ;;
 29340                           
 29341                           	psect	text133
 29342  00B082                     __ptext133:
 29343                           	callstack 0
 29344  00B082                     _USBCtrlTrfTxService:
 29345                           	callstack 22
 29346  00B082                     
 29347                           ;usb_device.c: 1777: uint8_t byteToSend;;usb_device.c: 1781: byteToSend = 8;
 29348  00B082  0E08               	movlw	8
 29349  00B084  6E0F               	movwf	USBCtrlTrfTxService@byteToSend^0,c
 29350  00B086                     
 29351                           ;usb_device.c: 1782: if(inPipes[0].wCount.Val < (uint8_t)8)
 29352  00B086  5046               	movf	(_inPipes+5)^0,w,c
 29353  00B088  E107               	bnz	u10181
 29354  00B08A  0E08               	movlw	8
 29355  00B08C  5C45               	subwf	(_inPipes+4)^0,w,c
 29356  00B08E  B0D8               	btfsc	status,0,c
 29357  00B090  EF4C  F058         	goto	u10181
 29358  00B094  EF4E  F058         	goto	u10180
 29359  00B098                     u10181:
 29360  00B098  EF67  F058         	goto	l10946
 29361  00B09C                     u10180:
 29362  00B09C                     
 29363                           ;usb_device.c: 1783: {;usb_device.c: 1784: byteToSend = inPipes[0].wCount.Val;
 29364  00B09C  C045  F00F         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 29365  00B0A0                     
 29366                           ;usb_device.c: 1791: if(shortPacketStatus == 0)
 29367  00B0A0  0101               	movlb	1	; () banked
 29368  00B0A2  5174               	movf	_shortPacketStatus& (0+255),w,b
 29369  00B0A4  A4D8               	btfss	status,2,c
 29370  00B0A6  EF57  F058         	goto	u10191
 29371  00B0AA  EF59  F058         	goto	u10190
 29372  00B0AE                     u10191:
 29373  00B0AE  EF5D  F058         	goto	l10942
 29374  00B0B2                     u10190:
 29375  00B0B2                     
 29376                           ; BSR set to: 1
 29377                           ;usb_device.c: 1792: {;usb_device.c: 1793: shortPacketStatus = 1;
 29378  00B0B2  0E01               	movlw	1
 29379  00B0B4  6F74               	movwf	_shortPacketStatus& (0+255),b
 29380                           
 29381                           ;usb_device.c: 1794: }
 29382  00B0B6  EF67  F058         	goto	l10946
 29383  00B0BA                     l10942:
 29384                           
 29385                           ; BSR set to: 1
 29386                           ;usb_device.c: 1795: else if(shortPacketStatus == 1)
 29387  00B0BA  0574               	decf	_shortPacketStatus& (0+255),w,b
 29388  00B0BC  A4D8               	btfss	status,2,c
 29389  00B0BE  EF63  F058         	goto	u10201
 29390  00B0C2  EF65  F058         	goto	u10200
 29391  00B0C6                     u10201:
 29392  00B0C6  EF67  F058         	goto	l10946
 29393  00B0CA                     u10200:
 29394  00B0CA                     
 29395                           ; BSR set to: 1
 29396                           ;usb_device.c: 1796: {;usb_device.c: 1797: shortPacketStatus = 2;
 29397  00B0CA  0E02               	movlw	2
 29398  00B0CC  6F74               	movwf	_shortPacketStatus& (0+255),b
 29399  00B0CE                     l10946:
 29400                           
 29401                           ;usb_device.c: 1798: };usb_device.c: 1799: };usb_device.c: 1803: inPipes[0].wCount.Val -
      +                          = byteToSend;
 29402  00B0CE  500F               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 29403  00B0D0  5E45               	subwf	(_inPipes+4)^0,f,c
 29404  00B0D2  0E00               	movlw	0
 29405  00B0D4  5A46               	subwfb	(_inPipes+5)^0,f,c
 29406  00B0D6                     
 29407                           ;usb_device.c: 1808: pBDTEntryIn[0]->CNT = byteToSend;
 29408  00B0D6  0100               	movlb	0	; () banked
 29409  00B0D8  EE20 F001          	lfsr	2,1
 29410  00B0DC  51F8               	movf	_pBDTEntryIn& (0+255),w,b
 29411  00B0DE  26D9               	addwf	fsr2l,f,c
 29412  00B0E0  51F9               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 29413  00B0E2  22DA               	addwfc	fsr2h,f,c
 29414  00B0E4  C00F  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 29415  00B0E8                     
 29416                           ; BSR set to: 0
 29417                           ;usb_device.c: 1812: pDst = ( uint8_t*)CtrlTrfData;
 29418  00B0E8  0E38               	movlw	56
 29419  00B0EA  0101               	movlb	1	; () banked
 29420  00B0EC  6F60               	movwf	_pDst& (0+255),b
 29421  00B0EE  0E04               	movlw	4
 29422  00B0F0  6F61               	movwf	(_pDst+1)& (0+255),b
 29423  00B0F2                     
 29424                           ; BSR set to: 1
 29425                           ;usb_device.c: 1813: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 29426  00B0F2  B044               	btfsc	(_inPipes+3)^0,0,c
 29427  00B0F4  EF7E  F058         	goto	u10211
 29428  00B0F8  EF80  F058         	goto	u10210
 29429  00B0FC                     u10211:
 29430  00B0FC  EFC2  F058         	goto	l10974
 29431  00B100                     u10210:
 29432  00B100  EF9D  F058         	goto	l10964
 29433  00B104                     l10956:
 29434                           
 29435                           ; BSR set to: 1
 29436                           ;usb_device.c: 1816: {;usb_device.c: 1817: *pDst++ = *inPipes[0].pSrc.bRom++;
 29437  00B104  C041  FFF6         	movff	_inPipes,tblptrl
 29438  00B108  C042  FFF7         	movff	_inPipes+1,tblptrh
 29439  00B10C  6AF8               	clrf	tblptru,c
 29440  00B10E  C160  FFD9         	movff	_pDst,fsr2l
 29441  00B112  C161  FFDA         	movff	_pDst+1,fsr2h
 29442  00B116  0E0E               	movlw	(high __ramtop+-1)
 29443  00B118  64F7               	cpfsgt	tblptrh,c
 29444  00B11A  D003               	bra	u10227
 29445  00B11C  0008               	tblrd		*
 29446  00B11E  50F5               	movf	tablat,w,c
 29447  00B120  D005               	bra	u10220
 29448  00B122                     u10227:
 29449  00B122  CFF6 FFE1          	movff	tblptrl,fsr1l
 29450  00B126  CFF7 FFE2          	movff	tblptrh,fsr1h
 29451  00B12A  50E7               	movf	indf1,w,c
 29452  00B12C                     u10220:
 29453  00B12C  6EDF               	movwf	indf2,c
 29454  00B12E  4A41               	infsnz	_inPipes^0,f,c
 29455  00B130  2A42               	incf	(_inPipes+1)^0,f,c
 29456  00B132  0101               	movlb	1	; () banked
 29457  00B134  4B60               	infsnz	_pDst& (0+255),f,b
 29458  00B136  2B61               	incf	(_pDst+1)& (0+255),f,b
 29459  00B138                     
 29460                           ; BSR set to: 1
 29461                           ;usb_device.c: 1818: byteToSend--;
 29462  00B138  060F               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 29463  00B13A                     l10964:
 29464                           
 29465                           ; BSR set to: 1
 29466  00B13A  500F               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 29467  00B13C  A4D8               	btfss	status,2,c
 29468  00B13E  EFA3  F058         	goto	u10231
 29469  00B142  EFA5  F058         	goto	u10230
 29470  00B146                     u10231:
 29471  00B146  EF82  F058         	goto	l10956
 29472  00B14A                     u10230:
 29473  00B14A  EFCA  F058         	goto	l1959
 29474  00B14E                     l10966:
 29475                           
 29476                           ; BSR set to: 1
 29477                           ;usb_device.c: 1824: {;usb_device.c: 1825: *pDst++ = *inPipes[0].pSrc.bRam++;
 29478  00B14E  C041  FFF6         	movff	_inPipes,tblptrl
 29479  00B152  C042  FFF7         	movff	_inPipes+1,tblptrh
 29480  00B156  6AF8               	clrf	tblptru,c
 29481  00B158  C160  FFD9         	movff	_pDst,fsr2l
 29482  00B15C  C161  FFDA         	movff	_pDst+1,fsr2h
 29483  00B160  0E0E               	movlw	(high __ramtop+-1)
 29484  00B162  64F7               	cpfsgt	tblptrh,c
 29485  00B164  D003               	bra	u10247
 29486  00B166  0008               	tblrd		*
 29487  00B168  50F5               	movf	tablat,w,c
 29488  00B16A  D005               	bra	u10240
 29489  00B16C                     u10247:
 29490  00B16C  CFF6 FFE1          	movff	tblptrl,fsr1l
 29491  00B170  CFF7 FFE2          	movff	tblptrh,fsr1h
 29492  00B174  50E7               	movf	indf1,w,c
 29493  00B176                     u10240:
 29494  00B176  6EDF               	movwf	indf2,c
 29495  00B178  4A41               	infsnz	_inPipes^0,f,c
 29496  00B17A  2A42               	incf	(_inPipes+1)^0,f,c
 29497  00B17C  0101               	movlb	1	; () banked
 29498  00B17E  4B60               	infsnz	_pDst& (0+255),f,b
 29499  00B180  2B61               	incf	(_pDst+1)& (0+255),f,b
 29500  00B182                     
 29501                           ; BSR set to: 1
 29502                           ;usb_device.c: 1826: byteToSend--;
 29503  00B182  060F               	decf	USBCtrlTrfTxService@byteToSend^0,f,c
 29504  00B184                     l10974:
 29505                           
 29506                           ; BSR set to: 1
 29507  00B184  500F               	movf	USBCtrlTrfTxService@byteToSend^0,w,c
 29508  00B186  A4D8               	btfss	status,2,c
 29509  00B188  EFC8  F058         	goto	u10251
 29510  00B18C  EFCA  F058         	goto	u10250
 29511  00B190                     u10251:
 29512  00B190  EFA7  F058         	goto	l10966
 29513  00B194                     u10250:
 29514  00B194                     l1959:
 29515                           
 29516                           ; BSR set to: 1
 29517  00B194  0012               	return		;funcret
 29518  00B196                     __end_of_USBCtrlTrfTxService:
 29519                           	callstack 0
 29520                           
 29521 ;; *************** function _InitTimer *****************
 29522 ;; Defined at:
 29523 ;;		line 145 in file "main.c"
 29524 ;; Parameters:    Size  Location     Type
 29525 ;;		None
 29526 ;; Auto vars:     Size  Location     Type
 29527 ;;		None
 29528 ;; Return value:  Size  Location     Type
 29529 ;;                  1    wreg      void 
 29530 ;; Registers used:
 29531 ;;		wreg, status,2
 29532 ;; Tracked objects:
 29533 ;;		On entry : 0/0
 29534 ;;		On exit  : 0/0
 29535 ;;		Unchanged: 0/0
 29536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29541 ;;Total ram usage:        0 bytes
 29542 ;; Hardware stack levels used: 1
 29543 ;; Hardware stack levels required when called: 3
 29544 ;; This function calls:
 29545 ;;		Nothing
 29546 ;; This function is called by:
 29547 ;;		_main
 29548 ;; This function uses a non-reentrant model
 29549 ;;
 29550                           
 29551                           	psect	text134
 29552  00F03C                     __ptext134:
 29553                           	callstack 0
 29554  00F03C                     _InitTimer:
 29555                           	callstack 27
 29556  00F03C                     
 29557                           ;main.c: 148: T0CONbits.T08BIT = 1;
 29558  00F03C  8CD5               	bsf	213,6,c	;volatile
 29559                           
 29560                           ;main.c: 149: T0CONbits.T0CS = 0;
 29561  00F03E  9AD5               	bcf	213,5,c	;volatile
 29562                           
 29563                           ;main.c: 150: T0CONbits.T0PS0 = 1;
 29564  00F040  80D5               	bsf	213,0,c	;volatile
 29565                           
 29566                           ;main.c: 151: T0CONbits.T0PS1 = 0;
 29567  00F042  92D5               	bcf	213,1,c	;volatile
 29568                           
 29569                           ;main.c: 152: T0CONbits.T0PS2 = 1;
 29570  00F044  84D5               	bsf	213,2,c	;volatile
 29571                           
 29572                           ;main.c: 153: T0CONbits.PSA = 0;
 29573  00F046  96D5               	bcf	213,3,c	;volatile
 29574  00F048                     
 29575                           ;main.c: 155: TMR0L = 0;
 29576  00F048  0E00               	movlw	0
 29577  00F04A  6ED6               	movwf	214,c	;volatile
 29578  00F04C                     
 29579                           ;main.c: 156: T0CONbits.TMR0ON = 1;
 29580  00F04C  8ED5               	bsf	213,7,c	;volatile
 29581  00F04E                     
 29582                           ;main.c: 159: RCONbits.IPEN = 1;
 29583  00F04E  8ED0               	bsf	208,7,c	;volatile
 29584  00F050                     
 29585                           ;main.c: 160: INTCONbits.GIE = 1;
 29586  00F050  8EF2               	bsf	242,7,c	;volatile
 29587  00F052                     
 29588                           ;main.c: 161: INTCONbits.PEIE = 1;
 29589  00F052  8CF2               	bsf	242,6,c	;volatile
 29590  00F054                     
 29591                           ;main.c: 164: INTCONbits.TMR0IE = 1;
 29592  00F054  8AF2               	bsf	242,5,c	;volatile
 29593  00F056                     
 29594                           ;main.c: 165: INTCON2bits.TMR0IP = 1;
 29595  00F056  84F1               	bsf	241,2,c	;volatile
 29596  00F058  0012               	return		;funcret
 29597  00F05A                     __end_of_InitTimer:
 29598                           	callstack 0
 29599                           
 29600 ;; *************** function _Co2_measure_task *****************
 29601 ;; Defined at:
 29602 ;;		line 47 in file "app_tes0902_task.c"
 29603 ;; Parameters:    Size  Location     Type
 29604 ;;		None
 29605 ;; Auto vars:     Size  Location     Type
 29606 ;;  rev_data        1  112[BANK0 ] unsigned char 
 29607 ;; Return value:  Size  Location     Type
 29608 ;;                  1    wreg      void 
 29609 ;; Registers used:
 29610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29611 ;; Tracked objects:
 29612 ;;		On entry : 0/0
 29613 ;;		On exit  : 0/0
 29614 ;;		Unchanged: 0/0
 29615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29617 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29619 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29620 ;;Total ram usage:        1 bytes
 29621 ;; Hardware stack levels used: 1
 29622 ;; Hardware stack levels required when called: 7
 29623 ;; This function calls:
 29624 ;;		_buffer_de_queue_bool
 29625 ;;		_tes0902_data_parsing
 29626 ;;		_tes0902_data_receive
 29627 ;; This function is called by:
 29628 ;;		_main
 29629 ;; This function uses a non-reentrant model
 29630 ;;
 29631                           
 29632                           	psect	text135
 29633  0093A0                     __ptext135:
 29634                           	callstack 0
 29635  0093A0                     _Co2_measure_task:
 29636                           	callstack 23
 29637  0093A0                     
 29638                           ;app_tes0902_task.c: 49: uint8_t rev_data;;app_tes0902_task.c: 50: switch (g_tes0902_mea
      +                          sure.seq)
 29639  0093A0  EF89  F04A         	goto	l19730
 29640  0093A4                     l19678:
 29641                           
 29642                           ; BSR set to: 1
 29643                           ;app_tes0902_task.c: 53: if (buffer_de_queue_bool(&g_usart_queue, &rev_data) == 0)
 29644  0093A4  0E77               	movlw	low _g_usart_queue
 29645  0093A6  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
 29646  0093A8  0E03               	movlw	high _g_usart_queue
 29647  0093AA  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
 29648  0093AC  0ED0               	movlw	low Co2_measure_task@rev_data
 29649  0093AE  6E11               	movwf	buffer_de_queue_bool@ch^0,c
 29650  0093B0  0E00               	movlw	high Co2_measure_task@rev_data
 29651  0093B2  6E12               	movwf	(buffer_de_queue_bool@ch+1)^0,c
 29652  0093B4  EC22  F06B         	call	_buffer_de_queue_bool	;wreg free
 29653  0093B8  0900               	iorlw	0
 29654  0093BA  A4D8               	btfss	status,2,c
 29655  0093BC  EFE2  F049         	goto	u21291
 29656  0093C0  EFE4  F049         	goto	u21290
 29657  0093C4                     u21291:
 29658  0093C4  EFE6  F049         	goto	l19682
 29659  0093C8                     u21290:
 29660  0093C8  EFA5  F04A         	goto	l1644
 29661  0093CC                     l19682:
 29662                           
 29663                           ;app_tes0902_task.c: 55: if (rev_data == 0xBB) {
 29664  0093CC  0EBB               	movlw	187
 29665  0093CE  0100               	movlb	0	; () banked
 29666  0093D0  19D0               	xorwf	Co2_measure_task@rev_data& (0+255),w,b
 29667  0093D2  A4D8               	btfss	status,2,c
 29668  0093D4  EFEE  F049         	goto	u21301
 29669  0093D8  EFF0  F049         	goto	u21300
 29670  0093DC                     u21301:
 29671  0093DC  EFF7  F049         	goto	l19686
 29672  0093E0                     u21300:
 29673  0093E0                     
 29674                           ; BSR set to: 0
 29675                           ;app_tes0902_task.c: 57: g_rDataFormat.sync[0] = 0xBB;
 29676  0093E0  0EBB               	movlw	187
 29677  0093E2  0101               	movlb	1	; () banked
 29678  0093E4  6F00               	movwf	_g_rDataFormat& (0+255),b
 29679                           
 29680                           ;app_tes0902_task.c: 58: g_tes0902_measure.seq = SYNC_LSB_CHECK;
 29681  0093E6  0E01               	movlw	1
 29682  0093E8  6F78               	movwf	_g_tes0902_measure& (0+255),b
 29683                           
 29684                           ;app_tes0902_task.c: 59: } else g_tes0902_measure.seq = SYNC_MSB_CHECK;
 29685  0093EA  EFA5  F04A         	goto	l1644
 29686  0093EE                     l19686:
 29687  0093EE  0E00               	movlw	0
 29688  0093F0  0101               	movlb	1	; () banked
 29689  0093F2  6F78               	movwf	_g_tes0902_measure& (0+255),b
 29690  0093F4  EFA5  F04A         	goto	l1644
 29691  0093F8                     l19688:
 29692                           
 29693                           ; BSR set to: 1
 29694                           ;app_tes0902_task.c: 62: if (buffer_de_queue_bool(&g_usart_queue, &rev_data) == 0)
 29695  0093F8  0E77               	movlw	low _g_usart_queue
 29696  0093FA  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
 29697  0093FC  0E03               	movlw	high _g_usart_queue
 29698  0093FE  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
 29699  009400  0ED0               	movlw	low Co2_measure_task@rev_data
 29700  009402  6E11               	movwf	buffer_de_queue_bool@ch^0,c
 29701  009404  0E00               	movlw	high Co2_measure_task@rev_data
 29702  009406  6E12               	movwf	(buffer_de_queue_bool@ch+1)^0,c
 29703  009408  EC22  F06B         	call	_buffer_de_queue_bool	;wreg free
 29704  00940C  0900               	iorlw	0
 29705  00940E  A4D8               	btfss	status,2,c
 29706  009410  EF0C  F04A         	goto	u21311
 29707  009414  EF0E  F04A         	goto	u21310
 29708  009418                     u21311:
 29709  009418  EF10  F04A         	goto	l19692
 29710  00941C                     u21310:
 29711  00941C  EFA5  F04A         	goto	l1644
 29712  009420                     l19692:
 29713                           
 29714                           ;app_tes0902_task.c: 64: if (rev_data == 0x66) {
 29715  009420  0E66               	movlw	102
 29716  009422  0100               	movlb	0	; () banked
 29717  009424  19D0               	xorwf	Co2_measure_task@rev_data& (0+255),w,b
 29718  009426  A4D8               	btfss	status,2,c
 29719  009428  EF18  F04A         	goto	u21321
 29720  00942C  EF1A  F04A         	goto	u21320
 29721  009430                     u21321:
 29722  009430  EFF7  F049         	goto	l19686
 29723  009434                     u21320:
 29724  009434                     
 29725                           ; BSR set to: 0
 29726                           ;app_tes0902_task.c: 66: g_rDataFormat.sync[1] = 0x66;
 29727  009434  0E66               	movlw	102
 29728  009436  0101               	movlb	1	; () banked
 29729  009438  6F01               	movwf	(_g_rDataFormat+1)& (0+255),b
 29730                           
 29731                           ;app_tes0902_task.c: 67: g_tes0902_measure.seq = CMD_CHECK;
 29732  00943A  0E02               	movlw	2
 29733  00943C  6F78               	movwf	_g_tes0902_measure& (0+255),b
 29734                           
 29735                           ;app_tes0902_task.c: 68: } else g_tes0902_measure.seq = SYNC_MSB_CHECK;
 29736  00943E  EFA5  F04A         	goto	l1644
 29737  009442                     l19698:
 29738                           
 29739                           ; BSR set to: 1
 29740                           ;app_tes0902_task.c: 71: if (buffer_de_queue_bool(&g_usart_queue, &rev_data) == 0)
 29741  009442  0E77               	movlw	low _g_usart_queue
 29742  009444  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
 29743  009446  0E03               	movlw	high _g_usart_queue
 29744  009448  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
 29745  00944A  0ED0               	movlw	low Co2_measure_task@rev_data
 29746  00944C  6E11               	movwf	buffer_de_queue_bool@ch^0,c
 29747  00944E  0E00               	movlw	high Co2_measure_task@rev_data
 29748  009450  6E12               	movwf	(buffer_de_queue_bool@ch+1)^0,c
 29749  009452  EC22  F06B         	call	_buffer_de_queue_bool	;wreg free
 29750  009456  0900               	iorlw	0
 29751  009458  A4D8               	btfss	status,2,c
 29752  00945A  EF31  F04A         	goto	u21331
 29753  00945E  EF33  F04A         	goto	u21330
 29754  009462                     u21331:
 29755  009462  EF35  F04A         	goto	l19702
 29756  009466                     u21330:
 29757  009466  EFA5  F04A         	goto	l1644
 29758  00946A                     l19702:
 29759                           
 29760                           ;app_tes0902_task.c: 73: if (rev_data == 0x15 || rev_data == 0x4D || rev_data == 0x23) {
 29761  00946A  0E15               	movlw	21
 29762  00946C  0100               	movlb	0	; () banked
 29763  00946E  19D0               	xorwf	Co2_measure_task@rev_data& (0+255),w,b
 29764  009470  B4D8               	btfsc	status,2,c
 29765  009472  EF3D  F04A         	goto	u21341
 29766  009476  EF3F  F04A         	goto	u21340
 29767  00947A                     u21341:
 29768  00947A  EF51  F04A         	goto	l1636
 29769  00947E                     u21340:
 29770  00947E                     
 29771                           ; BSR set to: 0
 29772  00947E  0E4D               	movlw	77
 29773  009480  19D0               	xorwf	Co2_measure_task@rev_data& (0+255),w,b
 29774  009482  B4D8               	btfsc	status,2,c
 29775  009484  EF46  F04A         	goto	u21351
 29776  009488  EF48  F04A         	goto	u21350
 29777  00948C                     u21351:
 29778  00948C  EF51  F04A         	goto	l1636
 29779  009490                     u21350:
 29780  009490                     
 29781                           ; BSR set to: 0
 29782  009490  0E23               	movlw	35
 29783  009492  19D0               	xorwf	Co2_measure_task@rev_data& (0+255),w,b
 29784  009494  A4D8               	btfss	status,2,c
 29785  009496  EF4F  F04A         	goto	u21361
 29786  00949A  EF51  F04A         	goto	u21360
 29787  00949E                     u21361:
 29788  00949E  EFF7  F049         	goto	l19686
 29789  0094A2                     u21360:
 29790  0094A2                     l1636:
 29791                           
 29792                           ; BSR set to: 0
 29793                           ;app_tes0902_task.c: 75: g_rDataFormat.cmd = rev_data;
 29794  0094A2  C0D0  F102         	movff	Co2_measure_task@rev_data,_g_rDataFormat+2
 29795  0094A6                     
 29796                           ; BSR set to: 0
 29797                           ;app_tes0902_task.c: 76: g_tes0902_measure.seq = LEN_CHECK;
 29798  0094A6  0E03               	movlw	3
 29799  0094A8  0101               	movlb	1	; () banked
 29800  0094AA  6F78               	movwf	_g_tes0902_measure& (0+255),b
 29801                           
 29802                           ;app_tes0902_task.c: 77: } else g_tes0902_measure.seq = SYNC_MSB_CHECK;
 29803  0094AC  EFA5  F04A         	goto	l1644
 29804  0094B0                     l19712:
 29805                           
 29806                           ; BSR set to: 1
 29807                           ;app_tes0902_task.c: 80: if (buffer_de_queue_bool(&g_usart_queue, &rev_data) == 0)
 29808  0094B0  0E77               	movlw	low _g_usart_queue
 29809  0094B2  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
 29810  0094B4  0E03               	movlw	high _g_usart_queue
 29811  0094B6  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
 29812  0094B8  0ED0               	movlw	low Co2_measure_task@rev_data
 29813  0094BA  6E11               	movwf	buffer_de_queue_bool@ch^0,c
 29814  0094BC  0E00               	movlw	high Co2_measure_task@rev_data
 29815  0094BE  6E12               	movwf	(buffer_de_queue_bool@ch+1)^0,c
 29816  0094C0  EC22  F06B         	call	_buffer_de_queue_bool	;wreg free
 29817  0094C4  0900               	iorlw	0
 29818  0094C6  A4D8               	btfss	status,2,c
 29819  0094C8  EF68  F04A         	goto	u21371
 29820  0094CC  EF6A  F04A         	goto	u21370
 29821  0094D0                     u21371:
 29822  0094D0  EF6C  F04A         	goto	l1639
 29823  0094D4                     u21370:
 29824  0094D4  EFA5  F04A         	goto	l1644
 29825  0094D8                     l1639:
 29826                           
 29827                           ;app_tes0902_task.c: 82: g_rDataFormat.len = rev_data;
 29828  0094D8  C0D0  F103         	movff	Co2_measure_task@rev_data,_g_rDataFormat+3
 29829  0094DC                     
 29830                           ;app_tes0902_task.c: 83: g_tes0902_measure.seq = DATA_RECV;
 29831  0094DC  0E04               	movlw	4
 29832  0094DE  0101               	movlb	1	; () banked
 29833  0094E0  6F78               	movwf	_g_tes0902_measure& (0+255),b
 29834                           
 29835                           ;app_tes0902_task.c: 84: break;
 29836  0094E2  EFA5  F04A         	goto	l1644
 29837  0094E6                     l19718:
 29838                           
 29839                           ; BSR set to: 1
 29840                           ;app_tes0902_task.c: 86: if (tes0902_data_receive())
 29841  0094E6  EC2E  F062         	call	_tes0902_data_receive	;wreg free
 29842  0094EA  0900               	iorlw	0
 29843  0094EC  B4D8               	btfsc	status,2,c
 29844  0094EE  EF7B  F04A         	goto	u21381
 29845  0094F2  EF7D  F04A         	goto	u21380
 29846  0094F6                     u21381:
 29847  0094F6  EFF7  F049         	goto	l19686
 29848  0094FA                     u21380:
 29849  0094FA                     
 29850                           ;app_tes0902_task.c: 87: g_tes0902_measure.seq = DATA_PARSING;
 29851  0094FA  0E05               	movlw	5
 29852  0094FC  0101               	movlb	1	; () banked
 29853  0094FE  6F78               	movwf	_g_tes0902_measure& (0+255),b
 29854  009500  EFA5  F04A         	goto	l1644
 29855  009504                     l19724:
 29856                           
 29857                           ; BSR set to: 1
 29858                           ;app_tes0902_task.c: 91: g_sens_measure.isCO2_Success = tes0902_data_parsing(g_rDataForm
      +                          at.cmd);
 29859  009504  5102               	movf	(_g_rDataFormat+2)& (0+255),w,b
 29860  009506  EC55  F063         	call	_tes0902_data_parsing
 29861  00950A  0101               	movlb	1	; () banked
 29862  00950C  6F19               	movwf	(_g_sens_measure+11)& (0+255),b
 29863  00950E  EFF7  F049         	goto	l19686
 29864  009512                     l19730:
 29865  009512  0101               	movlb	1	; () banked
 29866  009514  5178               	movf	_g_tes0902_measure& (0+255),w,b
 29867                           
 29868                           ; Switch size 1, requested type "simple"
 29869                           ; Number of cases is 6, Range of values is 0 to 5
 29870                           ; switch strategies available:
 29871                           ; Name         Instructions Cycles
 29872                           ; simple_byte           19    10 (average)
 29873                           ;	Chosen strategy is simple_byte
 29874  009516  0A00               	xorlw	0	; case 0
 29875  009518  B4D8               	btfsc	status,2,c
 29876  00951A  EFD2  F049         	goto	l19678
 29877  00951E  0A01               	xorlw	1	; case 1
 29878  009520  B4D8               	btfsc	status,2,c
 29879  009522  EFFC  F049         	goto	l19688
 29880  009526  0A03               	xorlw	3	; case 2
 29881  009528  B4D8               	btfsc	status,2,c
 29882  00952A  EF21  F04A         	goto	l19698
 29883  00952E  0A01               	xorlw	1	; case 3
 29884  009530  B4D8               	btfsc	status,2,c
 29885  009532  EF58  F04A         	goto	l19712
 29886  009536  0A07               	xorlw	7	; case 4
 29887  009538  B4D8               	btfsc	status,2,c
 29888  00953A  EF73  F04A         	goto	l19718
 29889  00953E  0A01               	xorlw	1	; case 5
 29890  009540  B4D8               	btfsc	status,2,c
 29891  009542  EF82  F04A         	goto	l19724
 29892  009546  EFA5  F04A         	goto	l1644
 29893  00954A                     l1644:
 29894  00954A  0012               	return		;funcret
 29895  00954C                     __end_of_Co2_measure_task:
 29896                           	callstack 0
 29897                           
 29898 ;; *************** function _tes0902_data_receive *****************
 29899 ;; Defined at:
 29900 ;;		line 97 in file "app_tes0902_task.c"
 29901 ;; Parameters:    Size  Location     Type
 29902 ;;		None
 29903 ;; Auto vars:     Size  Location     Type
 29904 ;;  rev_data        8   21[COMRAM] unsigned char [8]
 29905 ;;  rev_crc         2   29[COMRAM] unsigned char [2]
 29906 ;;  crc_len         1   32[COMRAM] unsigned char 
 29907 ;;  data_len        1   31[COMRAM] unsigned char 
 29908 ;; Return value:  Size  Location     Type
 29909 ;;                  1    wreg      unsigned char 
 29910 ;; Registers used:
 29911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 29912 ;; Tracked objects:
 29913 ;;		On entry : 0/0
 29914 ;;		On exit  : 0/0
 29915 ;;		Unchanged: 0/0
 29916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29918 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29920 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29921 ;;Total ram usage:       12 bytes
 29922 ;; Hardware stack levels used: 1
 29923 ;; Hardware stack levels required when called: 4
 29924 ;; This function calls:
 29925 ;;		_buffer_de_queue_bool
 29926 ;; This function is called by:
 29927 ;;		_Co2_measure_task
 29928 ;; This function uses a non-reentrant model
 29929 ;;
 29930                           
 29931                           	psect	text136
 29932  00C45C                     __ptext136:
 29933                           	callstack 0
 29934  00C45C                     _tes0902_data_receive:
 29935                           	callstack 25
 29936  00C45C                     
 29937                           ;app_tes0902_task.c: 99: uint8_t data_len = 0;
 29938  00C45C  0E00               	movlw	0
 29939  00C45E  6E20               	movwf	tes0902_data_receive@data_len^0,c
 29940                           
 29941                           ;app_tes0902_task.c: 100: uint8_t crc_len = 0;
 29942  00C460  0E00               	movlw	0
 29943  00C462  6E21               	movwf	tes0902_data_receive@crc_len^0,c
 29944                           
 29945                           ;app_tes0902_task.c: 101: uint8_t rev_data[8];;app_tes0902_task.c: 102: uint8_t rev_crc[
      +                          2];;app_tes0902_task.c: 104: while (data_len != g_rDataFormat.len)
 29946  00C464  EF57  F062         	goto	l14770
 29947  00C468                     l14764:
 29948                           
 29949                           ; BSR set to: 1
 29950                           ;app_tes0902_task.c: 105: {;app_tes0902_task.c: 106: if (buffer_de_queue_bool(&g_usart_q
      +                          ueue, &rev_data[data_len])) {
 29951  00C468  0E77               	movlw	low _g_usart_queue
 29952  00C46A  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
 29953  00C46C  0E03               	movlw	high _g_usart_queue
 29954  00C46E  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
 29955  00C470  0E16               	movlw	low tes0902_data_receive@rev_data
 29956  00C472  2420               	addwf	tes0902_data_receive@data_len^0,w,c
 29957  00C474  6E11               	movwf	buffer_de_queue_bool@ch^0,c
 29958  00C476  6A12               	clrf	(buffer_de_queue_bool@ch+1)^0,c
 29959  00C478  0E00               	movlw	high tes0902_data_receive@rev_data
 29960  00C47A  2212               	addwfc	(buffer_de_queue_bool@ch+1)^0,f,c
 29961  00C47C  EC22  F06B         	call	_buffer_de_queue_bool	;wreg free
 29962  00C480  0900               	iorlw	0
 29963  00C482  B4D8               	btfsc	status,2,c
 29964  00C484  EF46  F062         	goto	u15221
 29965  00C488  EF48  F062         	goto	u15220
 29966  00C48C                     u15221:
 29967  00C48C  EF57  F062         	goto	l14770
 29968  00C490                     u15220:
 29969  00C490                     
 29970                           ;app_tes0902_task.c: 107: g_rDataFormat.data[data_len] = rev_data[data_len];
 29971  00C490  0E16               	movlw	low tes0902_data_receive@rev_data
 29972  00C492  2420               	addwf	tes0902_data_receive@data_len^0,w,c
 29973  00C494  6ED9               	movwf	fsr2l,c
 29974  00C496  6ADA               	clrf	fsr2h,c
 29975  00C498  0E00               	movlw	high tes0902_data_receive@rev_data
 29976  00C49A  22DA               	addwfc	fsr2h,f,c
 29977  00C49C  0E04               	movlw	low (_g_rDataFormat+4)
 29978  00C49E  2420               	addwf	tes0902_data_receive@data_len^0,w,c
 29979  00C4A0  6EE1               	movwf	fsr1l,c
 29980  00C4A2  6AE2               	clrf	fsr1h,c
 29981  00C4A4  0E01               	movlw	high (_g_rDataFormat+4)
 29982  00C4A6  22E2               	addwfc	fsr1h,f,c
 29983  00C4A8  CFDF FFE7          	movff	indf2,indf1
 29984  00C4AC                     
 29985                           ;app_tes0902_task.c: 108: data_len++;
 29986  00C4AC  2A20               	incf	tes0902_data_receive@data_len^0,f,c
 29987  00C4AE                     l14770:
 29988  00C4AE  5020               	movf	tes0902_data_receive@data_len^0,w,c
 29989  00C4B0  0101               	movlb	1	; () banked
 29990  00C4B2  1903               	xorwf	(_g_rDataFormat+3)& (0+255),w,b
 29991  00C4B4  A4D8               	btfss	status,2,c
 29992  00C4B6  EF5F  F062         	goto	u15231
 29993  00C4BA  EF61  F062         	goto	u15230
 29994  00C4BE                     u15231:
 29995  00C4BE  EF34  F062         	goto	l14764
 29996  00C4C2                     u15230:
 29997  00C4C2  EF86  F062         	goto	l14778
 29998  00C4C6                     l14772:
 29999                           
 30000                           ;app_tes0902_task.c: 113: {;app_tes0902_task.c: 114: if (buffer_de_queue_bool(&g_usart_q
      +                          ueue, &rev_crc[crc_len])) {
 30001  00C4C6  0E77               	movlw	low _g_usart_queue
 30002  00C4C8  6E0F               	movwf	buffer_de_queue_bool@queue^0,c
 30003  00C4CA  0E03               	movlw	high _g_usart_queue
 30004  00C4CC  6E10               	movwf	(buffer_de_queue_bool@queue+1)^0,c
 30005  00C4CE  0E1E               	movlw	low tes0902_data_receive@rev_crc
 30006  00C4D0  2421               	addwf	tes0902_data_receive@crc_len^0,w,c
 30007  00C4D2  6E11               	movwf	buffer_de_queue_bool@ch^0,c
 30008  00C4D4  6A12               	clrf	(buffer_de_queue_bool@ch+1)^0,c
 30009  00C4D6  0E00               	movlw	high tes0902_data_receive@rev_crc
 30010  00C4D8  2212               	addwfc	(buffer_de_queue_bool@ch+1)^0,f,c
 30011  00C4DA  EC22  F06B         	call	_buffer_de_queue_bool	;wreg free
 30012  00C4DE  0900               	iorlw	0
 30013  00C4E0  B4D8               	btfsc	status,2,c
 30014  00C4E2  EF75  F062         	goto	u15241
 30015  00C4E6  EF77  F062         	goto	u15240
 30016  00C4EA                     u15241:
 30017  00C4EA  EF86  F062         	goto	l14778
 30018  00C4EE                     u15240:
 30019  00C4EE                     
 30020                           ;app_tes0902_task.c: 115: g_rDataFormat.crc[crc_len] = rev_crc[crc_len];
 30021  00C4EE  0E1E               	movlw	low tes0902_data_receive@rev_crc
 30022  00C4F0  2421               	addwf	tes0902_data_receive@crc_len^0,w,c
 30023  00C4F2  6ED9               	movwf	fsr2l,c
 30024  00C4F4  6ADA               	clrf	fsr2h,c
 30025  00C4F6  0E00               	movlw	high tes0902_data_receive@rev_crc
 30026  00C4F8  22DA               	addwfc	fsr2h,f,c
 30027  00C4FA  0E0C               	movlw	low (_g_rDataFormat+12)
 30028  00C4FC  2421               	addwf	tes0902_data_receive@crc_len^0,w,c
 30029  00C4FE  6EE1               	movwf	fsr1l,c
 30030  00C500  6AE2               	clrf	fsr1h,c
 30031  00C502  0E01               	movlw	high (_g_rDataFormat+12)
 30032  00C504  22E2               	addwfc	fsr1h,f,c
 30033  00C506  CFDF FFE7          	movff	indf2,indf1
 30034  00C50A                     
 30035                           ;app_tes0902_task.c: 116: crc_len++;
 30036  00C50A  2A21               	incf	tes0902_data_receive@crc_len^0,f,c
 30037  00C50C                     l14778:
 30038  00C50C  0E02               	movlw	2
 30039  00C50E  1821               	xorwf	tes0902_data_receive@crc_len^0,w,c
 30040  00C510  A4D8               	btfss	status,2,c
 30041  00C512  EF8D  F062         	goto	u15251
 30042  00C516  EF8F  F062         	goto	u15250
 30043  00C51A                     u15251:
 30044  00C51A  EF63  F062         	goto	l14772
 30045  00C51E                     u15250:
 30046  00C51E                     
 30047                           ;app_tes0902_task.c: 117: };app_tes0902_task.c: 118: };app_tes0902_task.c: 119: return 1
      +                          ;
 30048  00C51E  0E01               	movlw	1
 30049  00C520  0012               	return		;funcret
 30050  00C522                     __end_of_tes0902_data_receive:
 30051                           	callstack 0
 30052                           
 30053 ;; *************** function _buffer_de_queue_bool *****************
 30054 ;; Defined at:
 30055 ;;		line 36 in file "util/buffer.c"
 30056 ;; Parameters:    Size  Location     Type
 30057 ;;  queue           2   14[COMRAM] PTR struct buff_queue
 30058 ;;		 -> g_usart_queue(67), 
 30059 ;;  ch              2   16[COMRAM] PTR unsigned char 
 30060 ;;		 -> tes0902_data_receive@rev_crc(2), tes0902_data_receive@rev_data(8), Co2_measure_task@rev_data(1), 
 30061 ;; Auto vars:     Size  Location     Type
 30062 ;;		None
 30063 ;; Return value:  Size  Location     Type
 30064 ;;                  1    wreg      unsigned char 
 30065 ;; Registers used:
 30066 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 30067 ;; Tracked objects:
 30068 ;;		On entry : 0/0
 30069 ;;		On exit  : 0/0
 30070 ;;		Unchanged: 0/0
 30071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30072 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30074 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30075 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30076 ;;Total ram usage:        7 bytes
 30077 ;; Hardware stack levels used: 1
 30078 ;; Hardware stack levels required when called: 3
 30079 ;; This function calls:
 30080 ;;		Nothing
 30081 ;; This function is called by:
 30082 ;;		_Co2_measure_task
 30083 ;;		_tes0902_data_receive
 30084 ;; This function uses a non-reentrant model
 30085 ;;
 30086                           
 30087                           	psect	text137
 30088  00D644                     __ptext137:
 30089                           	callstack 0
 30090  00D644                     _buffer_de_queue_bool:
 30091                           	callstack 25
 30092  00D644                     
 30093                           ;buffer.c: 38: if (queue->read_pos == queue->write_pos)
 30094  00D644  EE20 F002          	lfsr	2,2
 30095  00D648  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 30096  00D64A  26D9               	addwf	fsr2l,f,c
 30097  00D64C  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 30098  00D64E  22DA               	addwfc	fsr2h,f,c
 30099  00D650  EE10 F001          	lfsr	1,1
 30100  00D654  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 30101  00D656  26E1               	addwf	fsr1l,f,c
 30102  00D658  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 30103  00D65A  22E2               	addwfc	fsr1h,f,c
 30104  00D65C  50DE               	movf	postinc2,w,c
 30105  00D65E  18E6               	xorwf	postinc1,w,c
 30106  00D660  A4D8               	btfss	status,2,c
 30107  00D662  EF35  F06B         	goto	u13541
 30108  00D666  EF37  F06B         	goto	u13540
 30109  00D66A                     u13541:
 30110  00D66A  EF3A  F06B         	goto	l13524
 30111  00D66E                     u13540:
 30112  00D66E                     
 30113                           ;buffer.c: 39: return 0;
 30114  00D66E  0E00               	movlw	0
 30115  00D670  EF65  F06B         	goto	l2341
 30116  00D674                     l13524:
 30117                           
 30118                           ;buffer.c: 40: else {;buffer.c: 41: *ch = queue->buffer[queue->read_pos];
 30119  00D674  EE20 F001          	lfsr	2,1
 30120  00D678  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 30121  00D67A  26D9               	addwf	fsr2l,f,c
 30122  00D67C  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 30123  00D67E  22DA               	addwfc	fsr2h,f,c
 30124  00D680  50DF               	movf	indf2,w,c
 30125  00D682  6E13               	movwf	??_buffer_de_queue_bool^0,c
 30126  00D684  5013               	movf	??_buffer_de_queue_bool^0,w,c
 30127  00D686  240F               	addwf	buffer_de_queue_bool@queue^0,w,c
 30128  00D688  6E14               	movwf	(??_buffer_de_queue_bool+1)^0,c
 30129  00D68A  0E00               	movlw	0
 30130  00D68C  2010               	addwfc	(buffer_de_queue_bool@queue+1)^0,w,c
 30131  00D68E  6E15               	movwf	(??_buffer_de_queue_bool+2)^0,c
 30132  00D690  0E03               	movlw	3
 30133  00D692  2414               	addwf	(??_buffer_de_queue_bool+1)^0,w,c
 30134  00D694  6ED9               	movwf	fsr2l,c
 30135  00D696  0E00               	movlw	0
 30136  00D698  2015               	addwfc	(??_buffer_de_queue_bool+2)^0,w,c
 30137  00D69A  6EDA               	movwf	fsr2h,c
 30138  00D69C  C011  FFE1         	movff	buffer_de_queue_bool@ch,fsr1l
 30139  00D6A0  C012  FFE2         	movff	buffer_de_queue_bool@ch+1,fsr1h
 30140  00D6A4  CFDF FFE7          	movff	indf2,indf1
 30141                           
 30142                           ;buffer.c: 42: queue->read_pos = (++queue->read_pos)%64;
 30143  00D6A8  EE20 F001          	lfsr	2,1
 30144  00D6AC  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 30145  00D6AE  26D9               	addwf	fsr2l,f,c
 30146  00D6B0  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 30147  00D6B2  22DA               	addwfc	fsr2h,f,c
 30148  00D6B4  EE10 F001          	lfsr	1,1
 30149  00D6B8  500F               	movf	buffer_de_queue_bool@queue^0,w,c
 30150  00D6BA  26E1               	addwf	fsr1l,f,c
 30151  00D6BC  5010               	movf	(buffer_de_queue_bool@queue+1)^0,w,c
 30152  00D6BE  22E2               	addwfc	fsr1h,f,c
 30153  00D6C0  2AE7               	incf	indf1,f,c
 30154  00D6C2  50E7               	movf	indf1,w,c
 30155  00D6C4  0B3F               	andlw	63
 30156  00D6C6  6EDF               	movwf	indf2,c
 30157  00D6C8                     
 30158                           ;buffer.c: 43: };buffer.c: 44: return 1;
 30159  00D6C8  0E01               	movlw	1
 30160  00D6CA                     l2341:
 30161  00D6CA  0012               	return		;funcret
 30162  00D6CC                     __end_of_buffer_de_queue_bool:
 30163                           	callstack 0
 30164                           
 30165 ;; *************** function _tes0902_data_parsing *****************
 30166 ;; Defined at:
 30167 ;;		line 122 in file "app_tes0902_task.c"
 30168 ;; Parameters:    Size  Location     Type
 30169 ;;  cmd             1    wreg     unsigned char 
 30170 ;; Auto vars:     Size  Location     Type
 30171 ;;  cmd             1  111[BANK0 ] unsigned char 
 30172 ;; Return value:  Size  Location     Type
 30173 ;;                  1    wreg      unsigned char 
 30174 ;; Registers used:
 30175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30176 ;; Tracked objects:
 30177 ;;		On entry : 0/0
 30178 ;;		On exit  : 0/0
 30179 ;;		Unchanged: 0/0
 30180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30183 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30184 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30185 ;;Total ram usage:        3 bytes
 30186 ;; Hardware stack levels used: 1
 30187 ;; Hardware stack levels required when called: 6
 30188 ;; This function calls:
 30189 ;;		_CRC_check
 30190 ;;		_Kalman_updateEstimate
 30191 ;;		___fltol
 30192 ;;		___xxtofl
 30193 ;; This function is called by:
 30194 ;;		_Co2_measure_task
 30195 ;; This function uses a non-reentrant model
 30196 ;;
 30197                           
 30198                           	psect	text138
 30199  00C6AA                     __ptext138:
 30200                           	callstack 0
 30201  00C6AA                     _tes0902_data_parsing:
 30202                           	callstack 23
 30203                           
 30204                           ;incstack = 0
 30205                           ;tes0902_data_parsing@cmd stored from wreg
 30206  00C6AA  0100               	movlb	0	; () banked
 30207  00C6AC  6FCF               	movwf	tes0902_data_parsing@cmd& (0+255),b
 30208  00C6AE                     
 30209                           ;app_tes0902_task.c: 124: if (CRC_check() == 0) return 0;
 30210  00C6AE  ECCE  F064         	call	_CRC_check	;wreg free
 30211  00C6B2  0900               	iorlw	0
 30212  00C6B4  A4D8               	btfss	status,2,c
 30213  00C6B6  EF5F  F063         	goto	u21091
 30214  00C6BA  EF61  F063         	goto	u21090
 30215  00C6BE                     u21091:
 30216  00C6BE  EFA4  F063         	goto	l19350
 30217  00C6C2                     u21090:
 30218  00C6C2  0E00               	movlw	0
 30219  00C6C4  EFB5  F063         	goto	l1659
 30220  00C6C8                     l19342:
 30221                           
 30222                           ; BSR set to: 0
 30223                           ;app_tes0902_task.c: 129: sens_value.co2_gas = g_rDataFormat.data[1] *256 + g_rDataForma
      +                          t.data[0];
 30224  00C6C8  0101               	movlb	1	; () banked
 30225  00C6CA  5105               	movf	(_g_rDataFormat+5)& (0+255),w,b
 30226  00C6CC  0100               	movlb	0	; () banked
 30227  00C6CE  6FCE               	movwf	(??_tes0902_data_parsing+1)& (0+255),b
 30228  00C6D0  6BCD               	clrf	??_tes0902_data_parsing& (0+255),b
 30229  00C6D2  0101               	movlb	1	; () banked
 30230  00C6D4  5104               	movf	(_g_rDataFormat+4)& (0+255),w,b
 30231  00C6D6  0100               	movlb	0	; () banked
 30232  00C6D8  25CD               	addwf	??_tes0902_data_parsing& (0+255),w,b
 30233  00C6DA  0102               	movlb	2	; () banked
 30234  00C6DC  6F18               	movwf	(_sens_value+24)& (0+255),b
 30235  00C6DE  0101               	movlb	1	; () banked
 30236  00C6E0  0E00               	movlw	0
 30237  00C6E2  0100               	movlb	0	; () banked
 30238  00C6E4  21CE               	addwfc	(??_tes0902_data_parsing+1)& (0+255),w,b
 30239  00C6E6  0102               	movlb	2	; () banked
 30240  00C6E8  6F19               	movwf	(_sens_value+25)& (0+255),b
 30241  00C6EA                     
 30242                           ; BSR set to: 2
 30243                           ;app_tes0902_task.c: 136: sens_value.co2_gas = Kalman_updateEstimate(&kalmanFilter[3], s
      +                          ens_value.co2_gas);
 30244  00C6EA  C218  F027         	movff	_sens_value+24,___xxtofl@val
 30245  00C6EE  C219  F028         	movff	_sens_value+25,___xxtofl@val+1
 30246  00C6F2  6A29               	clrf	(___xxtofl@val+2)^0,c
 30247  00C6F4  6A2A               	clrf	(___xxtofl@val+3)^0,c
 30248  00C6F6  0E00               	movlw	0
 30249  00C6F8  ECF6  F048         	call	___xxtofl
 30250  00C6FC  C027  F0C1         	movff	?___xxtofl,Kalman_updateEstimate@mea
 30251  00C700  C028  F0C2         	movff	?___xxtofl+1,Kalman_updateEstimate@mea+1
 30252  00C704  C029  F0C3         	movff	?___xxtofl+2,Kalman_updateEstimate@mea+2
 30253  00C708  C02A  F0C4         	movff	?___xxtofl+3,Kalman_updateEstimate@mea+3
 30254  00C70C  0E98               	movlw	low (_kalmanFilter+72)
 30255  00C70E  0100               	movlb	0	; () banked
 30256  00C710  6FBF               	movwf	Kalman_updateEstimate@pObj& (0+255),b
 30257  00C712  0E02               	movlw	high (_kalmanFilter+72)
 30258  00C714  6FC0               	movwf	(Kalman_updateEstimate@pObj+1)& (0+255),b
 30259  00C716  EC81  F03D         	call	_Kalman_updateEstimate	;wreg free
 30260  00C71A  C0BF  F01D         	movff	?_Kalman_updateEstimate,___fltol@f1
 30261  00C71E  C0C0  F01E         	movff	?_Kalman_updateEstimate+1,___fltol@f1+1
 30262  00C722  C0C1  F01F         	movff	?_Kalman_updateEstimate+2,___fltol@f1+2
 30263  00C726  C0C2  F020         	movff	?_Kalman_updateEstimate+3,___fltol@f1+3
 30264  00C72A  ECE2  F05A         	call	___fltol	;wreg free
 30265  00C72E  C01D  F218         	movff	?___fltol,_sens_value+24
 30266  00C732  C01E  F219         	movff	?___fltol+1,_sens_value+25
 30267  00C736                     
 30268                           ;app_tes0902_task.c: 138: sens_value.co2_gas += g_nvm.flash.co2Offset;
 30269  00C736  EE21  F0BE         	lfsr	2,_g_nvm+69
 30270  00C73A  50DE               	movf	postinc2,w,c
 30271  00C73C  0102               	movlb	2	; () banked
 30272  00C73E  2718               	addwf	(_sens_value+24)& (0+255),f,b
 30273  00C740  50DD               	movf	postdec2,w,c
 30274  00C742  2319               	addwfc	(_sens_value+25)& (0+255),f,b
 30275                           
 30276                           ;app_tes0902_task.c: 139: break;
 30277  00C744  EFB4  F063         	goto	l19352
 30278  00C748                     l19350:
 30279  00C748  0100               	movlb	0	; () banked
 30280  00C74A  51CF               	movf	tes0902_data_parsing@cmd& (0+255),w,b
 30281                           
 30282                           ; Switch size 1, requested type "simple"
 30283                           ; Number of cases is 3, Range of values is 21 to 77
 30284                           ; switch strategies available:
 30285                           ; Name         Instructions Cycles
 30286                           ; simple_byte           10     6 (average)
 30287                           ;	Chosen strategy is simple_byte
 30288  00C74C  0A15               	xorlw	21	; case 21
 30289  00C74E  B4D8               	btfsc	status,2,c
 30290  00C750  EF64  F063         	goto	l19342
 30291  00C754  0A36               	xorlw	54	; case 35
 30292  00C756  B4D8               	btfsc	status,2,c
 30293  00C758  EFB4  F063         	goto	l19352
 30294  00C75C  0A6E               	xorlw	110	; case 77
 30295  00C75E  B4D8               	btfsc	status,2,c
 30296  00C760  EFB4  F063         	goto	l19352
 30297  00C764  EFB4  F063         	goto	l19352
 30298  00C768                     l19352:
 30299                           
 30300                           ;app_tes0902_task.c: 147: return 1;
 30301  00C768  0E01               	movlw	1
 30302  00C76A                     l1659:
 30303  00C76A  0012               	return		;funcret
 30304  00C76C                     __end_of_tes0902_data_parsing:
 30305                           	callstack 0
 30306                           
 30307 ;; *************** function ___xxtofl *****************
 30308 ;; Defined at:
 30309 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
 30310 ;; Parameters:    Size  Location     Type
 30311 ;;  sign            1    wreg     unsigned char 
 30312 ;;  val             4   38[COMRAM] long 
 30313 ;; Auto vars:     Size  Location     Type
 30314 ;;  sign            1   46[COMRAM] unsigned char 
 30315 ;;  arg             4   48[COMRAM] unsigned long 
 30316 ;;  exp             1   47[COMRAM] unsigned char 
 30317 ;; Return value:  Size  Location     Type
 30318 ;;                  4   38[COMRAM] unsigned char 
 30319 ;; Registers used:
 30320 ;;		wreg, status,2, status,0
 30321 ;; Tracked objects:
 30322 ;;		On entry : 0/0
 30323 ;;		On exit  : 0/0
 30324 ;;		Unchanged: 0/0
 30325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30327 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30328 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30329 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30330 ;;Total ram usage:       14 bytes
 30331 ;; Hardware stack levels used: 1
 30332 ;; Hardware stack levels required when called: 3
 30333 ;; This function calls:
 30334 ;;		Nothing
 30335 ;; This function is called by:
 30336 ;;		_sht3x_measure_read
 30337 ;;		_ADCto_uVoltage
 30338 ;;		_tes0902_data_parsing
 30339 ;;		__atof
 30340 ;;		_sprintf
 30341 ;;		_floor
 30342 ;;		_pow
 30343 ;;		_exp
 30344 ;;		_log
 30345 ;;		_window_moving_average_recursion
 30346 ;;		_Average_filter
 30347 ;; This function uses a non-reentrant model
 30348 ;;
 30349                           
 30350                           	psect	text139
 30351  0091EC                     __ptext139:
 30352                           	callstack 0
 30353  0091EC                     ___xxtofl:
 30354                           	callstack 22
 30355                           
 30356                           ;incstack = 0
 30357                           ;___xxtofl@sign stored from wreg
 30358  0091EC  6E2F               	movwf	___xxtofl@sign^0,c
 30359  0091EE  502F               	movf	___xxtofl@sign^0,w,c
 30360  0091F0  B4D8               	btfsc	status,2,c
 30361  0091F2  EFFD  F048         	goto	u17671
 30362  0091F6  EFFF  F048         	goto	u17670
 30363  0091FA                     u17671:
 30364  0091FA  EF21  F049         	goto	l3212
 30365  0091FE                     u17670:
 30366  0091FE  BE2A               	btfsc	(___xxtofl@val+3)^0,7,c
 30367  009200  EF06  F049         	goto	u17680
 30368  009204  EF04  F049         	goto	u17681
 30369  009208                     u17681:
 30370  009208  EF21  F049         	goto	l3212
 30371  00920C                     u17680:
 30372  00920C  C027  F02B         	movff	___xxtofl@val,??___xxtofl
 30373  009210  C028  F02C         	movff	___xxtofl@val+1,??___xxtofl+1
 30374  009214  C029  F02D         	movff	___xxtofl@val+2,??___xxtofl+2
 30375  009218  C02A  F02E         	movff	___xxtofl@val+3,??___xxtofl+3
 30376  00921C  1E2B               	comf	??___xxtofl^0,f,c
 30377  00921E  1E2C               	comf	(??___xxtofl+1)^0,f,c
 30378  009220  1E2D               	comf	(??___xxtofl+2)^0,f,c
 30379  009222  1E2E               	comf	(??___xxtofl+3)^0,f,c
 30380  009224  2A2B               	incf	??___xxtofl^0,f,c
 30381  009226  0E00               	movlw	0
 30382  009228  222C               	addwfc	(??___xxtofl+1)^0,f,c
 30383  00922A  222D               	addwfc	(??___xxtofl+2)^0,f,c
 30384  00922C  222E               	addwfc	(??___xxtofl+3)^0,f,c
 30385  00922E  C02B  F031         	movff	??___xxtofl,___xxtofl@arg
 30386  009232  C02C  F032         	movff	??___xxtofl+1,___xxtofl@arg+1
 30387  009236  C02D  F033         	movff	??___xxtofl+2,___xxtofl@arg+2
 30388  00923A  C02E  F034         	movff	??___xxtofl+3,___xxtofl@arg+3
 30389  00923E  EF29  F049         	goto	l16624
 30390  009242                     l3212:
 30391  009242  C027  F031         	movff	___xxtofl@val,___xxtofl@arg
 30392  009246  C028  F032         	movff	___xxtofl@val+1,___xxtofl@arg+1
 30393  00924A  C029  F033         	movff	___xxtofl@val+2,___xxtofl@arg+2
 30394  00924E  C02A  F034         	movff	___xxtofl@val+3,___xxtofl@arg+3
 30395  009252                     l16624:
 30396  009252  5027               	movf	___xxtofl@val^0,w,c
 30397  009254  1028               	iorwf	(___xxtofl@val+1)^0,w,c
 30398  009256  1029               	iorwf	(___xxtofl@val+2)^0,w,c
 30399  009258  102A               	iorwf	(___xxtofl@val+3)^0,w,c
 30400  00925A  A4D8               	btfss	status,2,c
 30401  00925C  EF32  F049         	goto	u17691
 30402  009260  EF34  F049         	goto	u17690
 30403  009264                     u17691:
 30404  009264  EF3E  F049         	goto	l16630
 30405  009268                     u17690:
 30406  009268  0E00               	movlw	0
 30407  00926A  6E27               	movwf	?___xxtofl^0,c
 30408  00926C  0E00               	movlw	0
 30409  00926E  6E28               	movwf	(?___xxtofl+1)^0,c
 30410  009270  0E00               	movlw	0
 30411  009272  6E29               	movwf	(?___xxtofl+2)^0,c
 30412  009274  0E00               	movlw	0
 30413  009276  6E2A               	movwf	(?___xxtofl+3)^0,c
 30414  009278  EFCF  F049         	goto	l3215
 30415  00927C                     l16630:
 30416  00927C  0E96               	movlw	150
 30417  00927E  6E30               	movwf	___xxtofl@exp^0,c
 30418  009280  EF48  F049         	goto	l16634
 30419  009284                     l16632:
 30420  009284  2A30               	incf	___xxtofl@exp^0,f,c
 30421  009286  90D8               	bcf	status,0,c
 30422  009288  3234               	rrcf	(___xxtofl@arg+3)^0,f,c
 30423  00928A  3233               	rrcf	(___xxtofl@arg+2)^0,f,c
 30424  00928C  3232               	rrcf	(___xxtofl@arg+1)^0,f,c
 30425  00928E  3231               	rrcf	___xxtofl@arg^0,f,c
 30426  009290                     l16634:
 30427  009290  0E00               	movlw	0
 30428  009292  1431               	andwf	___xxtofl@arg^0,w,c
 30429  009294  6E2B               	movwf	??___xxtofl^0,c
 30430  009296  0E00               	movlw	0
 30431  009298  1432               	andwf	(___xxtofl@arg+1)^0,w,c
 30432  00929A  6E2C               	movwf	(??___xxtofl+1)^0,c
 30433  00929C  0E00               	movlw	0
 30434  00929E  1433               	andwf	(___xxtofl@arg+2)^0,w,c
 30435  0092A0  6E2D               	movwf	(??___xxtofl+2)^0,c
 30436  0092A2  0EFE               	movlw	254
 30437  0092A4  1434               	andwf	(___xxtofl@arg+3)^0,w,c
 30438  0092A6  6E2E               	movwf	(??___xxtofl+3)^0,c
 30439  0092A8  502B               	movf	??___xxtofl^0,w,c
 30440  0092AA  102C               	iorwf	(??___xxtofl+1)^0,w,c
 30441  0092AC  102D               	iorwf	(??___xxtofl+2)^0,w,c
 30442  0092AE  102E               	iorwf	(??___xxtofl+3)^0,w,c
 30443  0092B0  A4D8               	btfss	status,2,c
 30444  0092B2  EF5D  F049         	goto	u17701
 30445  0092B6  EF5F  F049         	goto	u17700
 30446  0092BA                     u17701:
 30447  0092BA  EF42  F049         	goto	l16632
 30448  0092BE                     u17700:
 30449  0092BE  EF6D  F049         	goto	l3219
 30450  0092C2                     l16636:
 30451  0092C2  2A30               	incf	___xxtofl@exp^0,f,c
 30452  0092C4  0E01               	movlw	1
 30453  0092C6  2631               	addwf	___xxtofl@arg^0,f,c
 30454  0092C8  0E00               	movlw	0
 30455  0092CA  2232               	addwfc	(___xxtofl@arg+1)^0,f,c
 30456  0092CC  2233               	addwfc	(___xxtofl@arg+2)^0,f,c
 30457  0092CE  2234               	addwfc	(___xxtofl@arg+3)^0,f,c
 30458  0092D0  90D8               	bcf	status,0,c
 30459  0092D2  3234               	rrcf	(___xxtofl@arg+3)^0,f,c
 30460  0092D4  3233               	rrcf	(___xxtofl@arg+2)^0,f,c
 30461  0092D6  3232               	rrcf	(___xxtofl@arg+1)^0,f,c
 30462  0092D8  3231               	rrcf	___xxtofl@arg^0,f,c
 30463  0092DA                     l3219:
 30464  0092DA  0E00               	movlw	0
 30465  0092DC  1431               	andwf	___xxtofl@arg^0,w,c
 30466  0092DE  6E2B               	movwf	??___xxtofl^0,c
 30467  0092E0  0E00               	movlw	0
 30468  0092E2  1432               	andwf	(___xxtofl@arg+1)^0,w,c
 30469  0092E4  6E2C               	movwf	(??___xxtofl+1)^0,c
 30470  0092E6  0E00               	movlw	0
 30471  0092E8  1433               	andwf	(___xxtofl@arg+2)^0,w,c
 30472  0092EA  6E2D               	movwf	(??___xxtofl+2)^0,c
 30473  0092EC  0EFF               	movlw	255
 30474  0092EE  1434               	andwf	(___xxtofl@arg+3)^0,w,c
 30475  0092F0  6E2E               	movwf	(??___xxtofl+3)^0,c
 30476  0092F2  502B               	movf	??___xxtofl^0,w,c
 30477  0092F4  102C               	iorwf	(??___xxtofl+1)^0,w,c
 30478  0092F6  102D               	iorwf	(??___xxtofl+2)^0,w,c
 30479  0092F8  102E               	iorwf	(??___xxtofl+3)^0,w,c
 30480  0092FA  A4D8               	btfss	status,2,c
 30481  0092FC  EF82  F049         	goto	u17711
 30482  009300  EF84  F049         	goto	u17710
 30483  009304                     u17711:
 30484  009304  EF61  F049         	goto	l16636
 30485  009308                     u17710:
 30486  009308  EF8C  F049         	goto	l16644
 30487  00930C                     l16642:
 30488  00930C  0630               	decf	___xxtofl@exp^0,f,c
 30489  00930E  90D8               	bcf	status,0,c
 30490  009310  3631               	rlcf	___xxtofl@arg^0,f,c
 30491  009312  3632               	rlcf	(___xxtofl@arg+1)^0,f,c
 30492  009314  3633               	rlcf	(___xxtofl@arg+2)^0,f,c
 30493  009316  3634               	rlcf	(___xxtofl@arg+3)^0,f,c
 30494  009318                     l16644:
 30495  009318  BE33               	btfsc	(___xxtofl@arg+2)^0,7,c
 30496  00931A  EF91  F049         	goto	u17721
 30497  00931E  EF93  F049         	goto	u17720
 30498  009322                     u17721:
 30499  009322  EF9B  F049         	goto	l3226
 30500  009326                     u17720:
 30501  009326  0E02               	movlw	2
 30502  009328  6030               	cpfslt	___xxtofl@exp^0,c
 30503  00932A  EF99  F049         	goto	u17731
 30504  00932E  EF9B  F049         	goto	u17730
 30505  009332                     u17731:
 30506  009332  EF86  F049         	goto	l16642
 30507  009336                     u17730:
 30508  009336                     l3226:
 30509  009336  B030               	btfsc	___xxtofl@exp^0,0,c
 30510  009338  EFA0  F049         	goto	u17741
 30511  00933C  EFA2  F049         	goto	u17740
 30512  009340                     u17741:
 30513  009340  EFA3  F049         	goto	l16650
 30514  009344                     u17740:
 30515  009344  9E33               	bcf	(___xxtofl@arg+2)^0,7,c
 30516  009346                     l16650:
 30517  009346  90D8               	bcf	status,0,c
 30518  009348  3230               	rrcf	___xxtofl@exp^0,f,c
 30519  00934A  C030  F02B         	movff	___xxtofl@exp,??___xxtofl
 30520  00934E  6A2C               	clrf	(??___xxtofl+1)^0,c
 30521  009350  6A2D               	clrf	(??___xxtofl+2)^0,c
 30522  009352  6A2E               	clrf	(??___xxtofl+3)^0,c
 30523  009354  C02B  F02E         	movff	??___xxtofl,??___xxtofl+3
 30524  009358  6A2D               	clrf	(??___xxtofl+2)^0,c
 30525  00935A  6A2C               	clrf	(??___xxtofl+1)^0,c
 30526  00935C  6A2B               	clrf	??___xxtofl^0,c
 30527  00935E  502B               	movf	??___xxtofl^0,w,c
 30528  009360  1231               	iorwf	___xxtofl@arg^0,f,c
 30529  009362  502C               	movf	(??___xxtofl+1)^0,w,c
 30530  009364  1232               	iorwf	(___xxtofl@arg+1)^0,f,c
 30531  009366  502D               	movf	(??___xxtofl+2)^0,w,c
 30532  009368  1233               	iorwf	(___xxtofl@arg+2)^0,f,c
 30533  00936A  502E               	movf	(??___xxtofl+3)^0,w,c
 30534  00936C  1234               	iorwf	(___xxtofl@arg+3)^0,f,c
 30535  00936E  502F               	movf	___xxtofl@sign^0,w,c
 30536  009370  B4D8               	btfsc	status,2,c
 30537  009372  EFBD  F049         	goto	u17751
 30538  009376  EFBF  F049         	goto	u17750
 30539  00937A                     u17751:
 30540  00937A  EFC7  F049         	goto	l16660
 30541  00937E                     u17750:
 30542  00937E  BE2A               	btfsc	(___xxtofl@val+3)^0,7,c
 30543  009380  EFC6  F049         	goto	u17760
 30544  009384  EFC4  F049         	goto	u17761
 30545  009388                     u17761:
 30546  009388  EFC7  F049         	goto	l16660
 30547  00938C                     u17760:
 30548  00938C  8E34               	bsf	(___xxtofl@arg+3)^0,7,c
 30549  00938E                     l16660:
 30550  00938E  C031  F027         	movff	___xxtofl@arg,?___xxtofl
 30551  009392  C032  F028         	movff	___xxtofl@arg+1,?___xxtofl+1
 30552  009396  C033  F029         	movff	___xxtofl@arg+2,?___xxtofl+2
 30553  00939A  C034  F02A         	movff	___xxtofl@arg+3,?___xxtofl+3
 30554  00939E                     l3215:
 30555  00939E  0012               	return		;funcret
 30556  0093A0                     __end_of___xxtofl:
 30557                           	callstack 0
 30558                           
 30559 ;; *************** function ___fltol *****************
 30560 ;; Defined at:
 30561 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
 30562 ;; Parameters:    Size  Location     Type
 30563 ;;  f1              4   28[COMRAM] unsigned char 
 30564 ;; Auto vars:     Size  Location     Type
 30565 ;;  exp1            1   37[COMRAM] unsigned char 
 30566 ;;  sign1           1   36[COMRAM] unsigned char 
 30567 ;; Return value:  Size  Location     Type
 30568 ;;                  4   28[COMRAM] long 
 30569 ;; Registers used:
 30570 ;;		wreg, status,2, status,0
 30571 ;; Tracked objects:
 30572 ;;		On entry : 0/0
 30573 ;;		On exit  : 0/0
 30574 ;;		Unchanged: 0/0
 30575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30576 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30579 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30580 ;;Total ram usage:       10 bytes
 30581 ;; Hardware stack levels used: 1
 30582 ;; Hardware stack levels required when called: 3
 30583 ;; This function calls:
 30584 ;;		Nothing
 30585 ;; This function is called by:
 30586 ;;		_build_response
 30587 ;;		_tes0902_data_parsing
 30588 ;;		_sprintf
 30589 ;;		_floor
 30590 ;;		_pow
 30591 ;;		_exp
 30592 ;;		_calc_raw_temperature
 30593 ;;		_calc_raw_humidity
 30594 ;; This function uses a non-reentrant model
 30595 ;;
 30596                           
 30597                           	psect	text140
 30598  00B5C4                     __ptext140:
 30599                           	callstack 0
 30600  00B5C4                     ___fltol:
 30601                           	callstack 21
 30602  00B5C4  341F               	rlcf	(___fltol@f1+2)^0,w,c
 30603  00B5C6  3420               	rlcf	(___fltol@f1+3)^0,w,c
 30604  00B5C8  6E26               	movwf	___fltol@exp1^0,c
 30605  00B5CA  5026               	movf	___fltol@exp1^0,w,c
 30606  00B5CC  A4D8               	btfss	status,2,c
 30607  00B5CE  EFEB  F05A         	goto	u17601
 30608  00B5D2  EFED  F05A         	goto	u17600
 30609  00B5D6                     u17601:
 30610  00B5D6  EFF7  F05A         	goto	l16580
 30611  00B5DA                     u17600:
 30612  00B5DA                     l16576:
 30613  00B5DA  0E00               	movlw	0
 30614  00B5DC  6E1D               	movwf	?___fltol^0,c
 30615  00B5DE  0E00               	movlw	0
 30616  00B5E0  6E1E               	movwf	(?___fltol+1)^0,c
 30617  00B5E2  0E00               	movlw	0
 30618  00B5E4  6E1F               	movwf	(?___fltol+2)^0,c
 30619  00B5E6  0E00               	movlw	0
 30620  00B5E8  6E20               	movwf	(?___fltol+3)^0,c
 30621  00B5EA  EF64  F05B         	goto	l2841
 30622  00B5EE                     l16580:
 30623  00B5EE  C01D  F021         	movff	___fltol@f1,??___fltol
 30624  00B5F2  C01E  F022         	movff	___fltol@f1+1,??___fltol+1
 30625  00B5F6  C01F  F023         	movff	___fltol@f1+2,??___fltol+2
 30626  00B5FA  C020  F024         	movff	___fltol@f1+3,??___fltol+3
 30627  00B5FE  0E20               	movlw	32
 30628  00B600  EF07  F05B         	goto	u17610
 30629  00B604                     u17615:
 30630  00B604  90D8               	bcf	status,0,c
 30631  00B606  3224               	rrcf	(??___fltol+3)^0,f,c
 30632  00B608  3223               	rrcf	(??___fltol+2)^0,f,c
 30633  00B60A  3222               	rrcf	(??___fltol+1)^0,f,c
 30634  00B60C  3221               	rrcf	??___fltol^0,f,c
 30635  00B60E                     u17610:
 30636  00B60E  2EE8               	decfsz	wreg,f,c
 30637  00B610  EF02  F05B         	goto	u17615
 30638  00B614  5021               	movf	??___fltol^0,w,c
 30639  00B616  6E25               	movwf	___fltol@sign1^0,c
 30640  00B618  8E1F               	bsf	(___fltol@f1+2)^0,7,c
 30641  00B61A  0EFF               	movlw	255
 30642  00B61C  161D               	andwf	___fltol@f1^0,f,c
 30643  00B61E  0EFF               	movlw	255
 30644  00B620  161E               	andwf	(___fltol@f1+1)^0,f,c
 30645  00B622  0EFF               	movlw	255
 30646  00B624  161F               	andwf	(___fltol@f1+2)^0,f,c
 30647  00B626  0E00               	movlw	0
 30648  00B628  1620               	andwf	(___fltol@f1+3)^0,f,c
 30649  00B62A  0E96               	movlw	150
 30650  00B62C  5E26               	subwf	___fltol@exp1^0,f,c
 30651  00B62E  BE26               	btfsc	___fltol@exp1^0,7,c
 30652  00B630  EF1E  F05B         	goto	u17620
 30653  00B634  EF1C  F05B         	goto	u17621
 30654  00B638                     u17621:
 30655  00B638  EF34  F05B         	goto	l16600
 30656  00B63C                     u17620:
 30657  00B63C  5026               	movf	___fltol@exp1^0,w,c
 30658  00B63E  0A80               	xorlw	128
 30659  00B640  0F97               	addlw	151
 30660  00B642  B0D8               	btfsc	status,0,c
 30661  00B644  EF26  F05B         	goto	u17631
 30662  00B648  EF28  F05B         	goto	u17630
 30663  00B64C                     u17631:
 30664  00B64C  EF2A  F05B         	goto	l16596
 30665  00B650                     u17630:
 30666  00B650  EFED  F05A         	goto	l16576
 30667  00B654                     l16596:
 30668  00B654  90D8               	bcf	status,0,c
 30669  00B656  3220               	rrcf	(___fltol@f1+3)^0,f,c
 30670  00B658  321F               	rrcf	(___fltol@f1+2)^0,f,c
 30671  00B65A  321E               	rrcf	(___fltol@f1+1)^0,f,c
 30672  00B65C  321D               	rrcf	___fltol@f1^0,f,c
 30673  00B65E  3E26               	incfsz	___fltol@exp1^0,f,c
 30674  00B660  EF2A  F05B         	goto	l16596
 30675  00B664  EF4C  F05B         	goto	l16610
 30676  00B668                     l16600:
 30677  00B668  0E1F               	movlw	31
 30678  00B66A  6426               	cpfsgt	___fltol@exp1^0,c
 30679  00B66C  EF3A  F05B         	goto	u17641
 30680  00B670  EF3C  F05B         	goto	u17640
 30681  00B674                     u17641:
 30682  00B674  EF44  F05B         	goto	l16608
 30683  00B678                     u17640:
 30684  00B678  EFED  F05A         	goto	l16576
 30685  00B67C                     l16606:
 30686  00B67C  90D8               	bcf	status,0,c
 30687  00B67E  361D               	rlcf	___fltol@f1^0,f,c
 30688  00B680  361E               	rlcf	(___fltol@f1+1)^0,f,c
 30689  00B682  361F               	rlcf	(___fltol@f1+2)^0,f,c
 30690  00B684  3620               	rlcf	(___fltol@f1+3)^0,f,c
 30691  00B686  0626               	decf	___fltol@exp1^0,f,c
 30692  00B688                     l16608:
 30693  00B688  5026               	movf	___fltol@exp1^0,w,c
 30694  00B68A  A4D8               	btfss	status,2,c
 30695  00B68C  EF4A  F05B         	goto	u17651
 30696  00B690  EF4C  F05B         	goto	u17650
 30697  00B694                     u17651:
 30698  00B694  EF3E  F05B         	goto	l16606
 30699  00B698                     u17650:
 30700  00B698                     l16610:
 30701  00B698  5025               	movf	___fltol@sign1^0,w,c
 30702  00B69A  B4D8               	btfsc	status,2,c
 30703  00B69C  EF52  F05B         	goto	u17661
 30704  00B6A0  EF54  F05B         	goto	u17660
 30705  00B6A4                     u17661:
 30706  00B6A4  EF5C  F05B         	goto	l16614
 30707  00B6A8                     u17660:
 30708  00B6A8  1E20               	comf	(___fltol@f1+3)^0,f,c
 30709  00B6AA  1E1F               	comf	(___fltol@f1+2)^0,f,c
 30710  00B6AC  1E1E               	comf	(___fltol@f1+1)^0,f,c
 30711  00B6AE  6C1D               	negf	___fltol@f1^0,c
 30712  00B6B0  0E00               	movlw	0
 30713  00B6B2  221E               	addwfc	(___fltol@f1+1)^0,f,c
 30714  00B6B4  221F               	addwfc	(___fltol@f1+2)^0,f,c
 30715  00B6B6  2220               	addwfc	(___fltol@f1+3)^0,f,c
 30716  00B6B8                     l16614:
 30717  00B6B8  C01D  F01D         	movff	___fltol@f1,?___fltol
 30718  00B6BC  C01E  F01E         	movff	___fltol@f1+1,?___fltol+1
 30719  00B6C0  C01F  F01F         	movff	___fltol@f1+2,?___fltol+2
 30720  00B6C4  C020  F020         	movff	___fltol@f1+3,?___fltol+3
 30721  00B6C8                     l2841:
 30722  00B6C8  0012               	return		;funcret
 30723  00B6CA                     __end_of___fltol:
 30724                           	callstack 0
 30725                           
 30726 ;; *************** function _Kalman_updateEstimate *****************
 30727 ;; Defined at:
 30728 ;;		line 17 in file "filter.c"
 30729 ;; Parameters:    Size  Location     Type
 30730 ;;  pObj            2   95[BANK0 ] PTR struct .
 30731 ;;		 -> kalmanFilter(96), 
 30732 ;;  mea             4   97[BANK0 ] float 
 30733 ;; Auto vars:     Size  Location     Type
 30734 ;;		None
 30735 ;; Return value:  Size  Location     Type
 30736 ;;                  4   95[BANK0 ] float 
 30737 ;; Registers used:
 30738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30739 ;; Tracked objects:
 30740 ;;		On entry : 0/0
 30741 ;;		On exit  : 0/0
 30742 ;;		Unchanged: 0/0
 30743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 30744 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30745 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30747 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 30748 ;;Total ram usage:       14 bytes
 30749 ;; Hardware stack levels used: 1
 30750 ;; Hardware stack levels required when called: 5
 30751 ;; This function calls:
 30752 ;;		___fladd
 30753 ;;		___fldiv
 30754 ;;		___flmul
 30755 ;;		___flsub
 30756 ;;		_fabs
 30757 ;; This function is called by:
 30758 ;;		_gasSensor_read
 30759 ;;		_tes0902_data_parsing
 30760 ;; This function uses a non-reentrant model
 30761 ;;
 30762                           
 30763                           	psect	text141
 30764  007B02                     __ptext141:
 30765                           	callstack 0
 30766  007B02                     _Kalman_updateEstimate:
 30767                           	callstack 23
 30768  007B02                     
 30769                           ;filter.c: 19: pObj->_kalman_gain = pObj->_err_estimate/(pObj->_err_estimate + pObj->_er
      +                          r_measure);
 30770  007B02  0100               	movlb	0	; () banked
 30771  007B04  EE20 F004          	lfsr	2,4
 30772  007B08  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30773  007B0A  26D9               	addwf	fsr2l,f,c
 30774  007B0C  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30775  007B0E  22DA               	addwfc	fsr2h,f,c
 30776  007B10  CFDE F0A6          	movff	postinc2,___fldiv@b
 30777  007B14  CFDE F0A7          	movff	postinc2,___fldiv@b+1
 30778  007B18  CFDE F0A8          	movff	postinc2,___fldiv@b+2
 30779  007B1C  CFDE F0A9          	movff	postinc2,___fldiv@b+3
 30780  007B20  C0BF  FFD9         	movff	Kalman_updateEstimate@pObj,fsr2l
 30781  007B24  C0C0  FFDA         	movff	Kalman_updateEstimate@pObj+1,fsr2h
 30782  007B28  CFDE F092          	movff	postinc2,___fladd@a
 30783  007B2C  CFDE F093          	movff	postinc2,___fladd@a+1
 30784  007B30  CFDE F094          	movff	postinc2,___fladd@a+2
 30785  007B34  CFDE F095          	movff	postinc2,___fladd@a+3
 30786  007B38  EE20 F004          	lfsr	2,4
 30787  007B3C  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30788  007B3E  26D9               	addwf	fsr2l,f,c
 30789  007B40  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30790  007B42  22DA               	addwfc	fsr2h,f,c
 30791  007B44  CFDE F08E          	movff	postinc2,___fladd@b
 30792  007B48  CFDE F08F          	movff	postinc2,___fladd@b+1
 30793  007B4C  CFDE F090          	movff	postinc2,___fladd@b+2
 30794  007B50  CFDE F091          	movff	postinc2,___fladd@b+3
 30795  007B54  EC46  F02D         	call	___fladd	;wreg free
 30796  007B58  C08E  F0AA         	movff	?___fladd,___fldiv@a
 30797  007B5C  C08F  F0AB         	movff	?___fladd+1,___fldiv@a+1
 30798  007B60  C090  F0AC         	movff	?___fladd+2,___fldiv@a+2
 30799  007B64  C091  F0AD         	movff	?___fladd+3,___fldiv@a+3
 30800  007B68  ECCB  F033         	call	___fldiv	;wreg free
 30801  007B6C  0100               	movlb	0	; () banked
 30802  007B6E  EE20 F014          	lfsr	2,20
 30803  007B72  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30804  007B74  26D9               	addwf	fsr2l,f,c
 30805  007B76  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30806  007B78  22DA               	addwfc	fsr2h,f,c
 30807  007B7A  C0A6  FFDE         	movff	?___fldiv,postinc2
 30808  007B7E  C0A7  FFDE         	movff	?___fldiv+1,postinc2
 30809  007B82  C0A8  FFDE         	movff	?___fldiv+2,postinc2
 30810  007B86  C0A9  FFDE         	movff	?___fldiv+3,postinc2
 30811  007B8A                     
 30812                           ; BSR set to: 0
 30813                           ;filter.c: 21: pObj->_current_estimate = pObj->_last_estimate + pObj->_kalman_gain * (me
      +                          a - pObj->_last_estimate);
 30814  007B8A  EE20 F014          	lfsr	2,20
 30815  007B8E  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30816  007B90  26D9               	addwf	fsr2l,f,c
 30817  007B92  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30818  007B94  22DA               	addwfc	fsr2h,f,c
 30819  007B96  CFDE F06C          	movff	postinc2,___flmul@a
 30820  007B9A  CFDE F06D          	movff	postinc2,___flmul@a+1
 30821  007B9E  CFDE F06E          	movff	postinc2,___flmul@a+2
 30822  007BA2  CFDE F06F          	movff	postinc2,___flmul@a+3
 30823  007BA6  EE20 F010          	lfsr	2,16
 30824  007BAA  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30825  007BAC  26D9               	addwf	fsr2l,f,c
 30826  007BAE  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30827  007BB0  22DA               	addwfc	fsr2h,f,c
 30828  007BB2  CFDE F0A2          	movff	postinc2,___flsub@a
 30829  007BB6  CFDE F0A3          	movff	postinc2,___flsub@a+1
 30830  007BBA  CFDE F0A4          	movff	postinc2,___flsub@a+2
 30831  007BBE  CFDE F0A5          	movff	postinc2,___flsub@a+3
 30832  007BC2  C0C1  F09E         	movff	Kalman_updateEstimate@mea,___flsub@b
 30833  007BC6  C0C2  F09F         	movff	Kalman_updateEstimate@mea+1,___flsub@b+1
 30834  007BCA  C0C3  F0A0         	movff	Kalman_updateEstimate@mea+2,___flsub@b+2
 30835  007BCE  C0C4  F0A1         	movff	Kalman_updateEstimate@mea+3,___flsub@b+3
 30836  007BD2  EC9C  F074         	call	___flsub	;wreg free
 30837  007BD6  C09E  F068         	movff	?___flsub,___flmul@b
 30838  007BDA  C09F  F069         	movff	?___flsub+1,___flmul@b+1
 30839  007BDE  C0A0  F06A         	movff	?___flsub+2,___flmul@b+2
 30840  007BE2  C0A1  F06B         	movff	?___flsub+3,___flmul@b+3
 30841  007BE6  ECA7  F02F         	call	___flmul	;wreg free
 30842  007BEA  C068  F0C9         	movff	?___flmul,_Kalman_updateEstimate$7079
 30843  007BEE  C069  F0CA         	movff	?___flmul+1,_Kalman_updateEstimate$7079+1
 30844  007BF2  C06A  F0CB         	movff	?___flmul+2,_Kalman_updateEstimate$7079+2
 30845  007BF6  C06B  F0CC         	movff	?___flmul+3,_Kalman_updateEstimate$7079+3
 30846  007BFA                     
 30847                           ;filter.c: 21: pObj->_current_estimate = pObj->_last_estimate + pObj->_kalman_gain * (me
      +                          a - pObj->_last_estimate);
 30848  007BFA  C0C9  F08E         	movff	_Kalman_updateEstimate$7079,___fladd@b
 30849  007BFE  C0CA  F08F         	movff	_Kalman_updateEstimate$7079+1,___fladd@b+1
 30850  007C02  C0CB  F090         	movff	_Kalman_updateEstimate$7079+2,___fladd@b+2
 30851  007C06  C0CC  F091         	movff	_Kalman_updateEstimate$7079+3,___fladd@b+3
 30852  007C0A  0100               	movlb	0	; () banked
 30853  007C0C  EE20 F010          	lfsr	2,16
 30854  007C10  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30855  007C12  26D9               	addwf	fsr2l,f,c
 30856  007C14  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30857  007C16  22DA               	addwfc	fsr2h,f,c
 30858  007C18  CFDE F092          	movff	postinc2,___fladd@a
 30859  007C1C  CFDE F093          	movff	postinc2,___fladd@a+1
 30860  007C20  CFDE F094          	movff	postinc2,___fladd@a+2
 30861  007C24  CFDE F095          	movff	postinc2,___fladd@a+3
 30862  007C28  EC46  F02D         	call	___fladd	;wreg free
 30863  007C2C  0100               	movlb	0	; () banked
 30864  007C2E  EE20 F00C          	lfsr	2,12
 30865  007C32  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30866  007C34  26D9               	addwf	fsr2l,f,c
 30867  007C36  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30868  007C38  22DA               	addwfc	fsr2h,f,c
 30869  007C3A  C08E  FFDE         	movff	?___fladd,postinc2
 30870  007C3E  C08F  FFDE         	movff	?___fladd+1,postinc2
 30871  007C42  C090  FFDE         	movff	?___fladd+2,postinc2
 30872  007C46  C091  FFDE         	movff	?___fladd+3,postinc2
 30873                           
 30874                           ;filter.c: 23: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;fi
      +                          lter.c: 24: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
 30875  007C4A  EE20 F004          	lfsr	2,4
 30876  007C4E  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30877  007C50  26D9               	addwf	fsr2l,f,c
 30878  007C52  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30879  007C54  22DA               	addwfc	fsr2h,f,c
 30880  007C56  CFDE F06C          	movff	postinc2,___flmul@a
 30881  007C5A  CFDE F06D          	movff	postinc2,___flmul@a+1
 30882  007C5E  CFDE F06E          	movff	postinc2,___flmul@a+2
 30883  007C62  CFDE F06F          	movff	postinc2,___flmul@a+3
 30884  007C66  EE20 F014          	lfsr	2,20
 30885  007C6A  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30886  007C6C  26D9               	addwf	fsr2l,f,c
 30887  007C6E  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30888  007C70  22DA               	addwfc	fsr2h,f,c
 30889  007C72  CFDE F0A2          	movff	postinc2,___flsub@a
 30890  007C76  CFDE F0A3          	movff	postinc2,___flsub@a+1
 30891  007C7A  CFDE F0A4          	movff	postinc2,___flsub@a+2
 30892  007C7E  CFDE F0A5          	movff	postinc2,___flsub@a+3
 30893  007C82  0E00               	movlw	0
 30894  007C84  6F9E               	movwf	___flsub@b& (0+255),b
 30895  007C86  0E00               	movlw	0
 30896  007C88  6F9F               	movwf	(___flsub@b+1)& (0+255),b
 30897  007C8A  0E80               	movlw	128
 30898  007C8C  6FA0               	movwf	(___flsub@b+2)& (0+255),b
 30899  007C8E  0E3F               	movlw	63
 30900  007C90  6FA1               	movwf	(___flsub@b+3)& (0+255),b
 30901  007C92  EC9C  F074         	call	___flsub	;wreg free
 30902  007C96  C09E  F068         	movff	?___flsub,___flmul@b
 30903  007C9A  C09F  F069         	movff	?___flsub+1,___flmul@b+1
 30904  007C9E  C0A0  F06A         	movff	?___flsub+2,___flmul@b+2
 30905  007CA2  C0A1  F06B         	movff	?___flsub+3,___flmul@b+3
 30906  007CA6  ECA7  F02F         	call	___flmul	;wreg free
 30907  007CAA  C068  F0C9         	movff	?___flmul,_Kalman_updateEstimate$7079
 30908  007CAE  C069  F0CA         	movff	?___flmul+1,_Kalman_updateEstimate$7079+1
 30909  007CB2  C06A  F0CB         	movff	?___flmul+2,_Kalman_updateEstimate$7079+2
 30910  007CB6  C06B  F0CC         	movff	?___flmul+3,_Kalman_updateEstimate$7079+3
 30911                           
 30912                           ;filter.c: 23: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;fi
      +                          lter.c: 24: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
 30913  007CBA  0100               	movlb	0	; () banked
 30914  007CBC  EE20 F008          	lfsr	2,8
 30915  007CC0  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30916  007CC2  26D9               	addwf	fsr2l,f,c
 30917  007CC4  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30918  007CC6  22DA               	addwfc	fsr2h,f,c
 30919  007CC8  CFDE F06C          	movff	postinc2,___flmul@a
 30920  007CCC  CFDE F06D          	movff	postinc2,___flmul@a+1
 30921  007CD0  CFDE F06E          	movff	postinc2,___flmul@a+2
 30922  007CD4  CFDE F06F          	movff	postinc2,___flmul@a+3
 30923  007CD8  EE20 F00C          	lfsr	2,12
 30924  007CDC  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30925  007CDE  26D9               	addwf	fsr2l,f,c
 30926  007CE0  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30927  007CE2  22DA               	addwfc	fsr2h,f,c
 30928  007CE4  CFDE F0A2          	movff	postinc2,___flsub@a
 30929  007CE8  CFDE F0A3          	movff	postinc2,___flsub@a+1
 30930  007CEC  CFDE F0A4          	movff	postinc2,___flsub@a+2
 30931  007CF0  CFDE F0A5          	movff	postinc2,___flsub@a+3
 30932  007CF4  EE20 F010          	lfsr	2,16
 30933  007CF8  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30934  007CFA  26D9               	addwf	fsr2l,f,c
 30935  007CFC  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30936  007CFE  22DA               	addwfc	fsr2h,f,c
 30937  007D00  CFDE F09E          	movff	postinc2,___flsub@b
 30938  007D04  CFDE F09F          	movff	postinc2,___flsub@b+1
 30939  007D08  CFDE F0A0          	movff	postinc2,___flsub@b+2
 30940  007D0C  CFDE F0A1          	movff	postinc2,___flsub@b+3
 30941  007D10  EC9C  F074         	call	___flsub	;wreg free
 30942  007D14  C09E  F013         	movff	?___flsub,fabs@d
 30943  007D18  C09F  F014         	movff	?___flsub+1,fabs@d+1
 30944  007D1C  C0A0  F015         	movff	?___flsub+2,fabs@d+2
 30945  007D20  C0A1  F016         	movff	?___flsub+3,fabs@d+3
 30946  007D24  EC78  F074         	call	_fabs	;wreg free
 30947  007D28  C013  F068         	movff	?_fabs,___flmul@b
 30948  007D2C  C014  F069         	movff	?_fabs+1,___flmul@b+1
 30949  007D30  C015  F06A         	movff	?_fabs+2,___flmul@b+2
 30950  007D34  C016  F06B         	movff	?_fabs+3,___flmul@b+3
 30951  007D38  ECA7  F02F         	call	___flmul	;wreg free
 30952  007D3C  C068  F0C5         	movff	?___flmul,_Kalman_updateEstimate$7080
 30953  007D40  C069  F0C6         	movff	?___flmul+1,_Kalman_updateEstimate$7080+1
 30954  007D44  C06A  F0C7         	movff	?___flmul+2,_Kalman_updateEstimate$7080+2
 30955  007D48  C06B  F0C8         	movff	?___flmul+3,_Kalman_updateEstimate$7080+3
 30956  007D4C                     
 30957                           ;filter.c: 23: pObj->_err_estimate = (1.0 - pObj->_kalman_gain)*pObj->_err_estimate +;fi
      +                          lter.c: 24: fabs(pObj->_last_estimate-pObj->_current_estimate)*pObj->_q_process;
 30958  007D4C  C0C9  F08E         	movff	_Kalman_updateEstimate$7079,___fladd@b
 30959  007D50  C0CA  F08F         	movff	_Kalman_updateEstimate$7079+1,___fladd@b+1
 30960  007D54  C0CB  F090         	movff	_Kalman_updateEstimate$7079+2,___fladd@b+2
 30961  007D58  C0CC  F091         	movff	_Kalman_updateEstimate$7079+3,___fladd@b+3
 30962  007D5C  C0C5  F092         	movff	_Kalman_updateEstimate$7080,___fladd@a
 30963  007D60  C0C6  F093         	movff	_Kalman_updateEstimate$7080+1,___fladd@a+1
 30964  007D64  C0C7  F094         	movff	_Kalman_updateEstimate$7080+2,___fladd@a+2
 30965  007D68  C0C8  F095         	movff	_Kalman_updateEstimate$7080+3,___fladd@a+3
 30966  007D6C  EC46  F02D         	call	___fladd	;wreg free
 30967  007D70  0100               	movlb	0	; () banked
 30968  007D72  EE20 F004          	lfsr	2,4
 30969  007D76  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30970  007D78  26D9               	addwf	fsr2l,f,c
 30971  007D7A  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30972  007D7C  22DA               	addwfc	fsr2h,f,c
 30973  007D7E  C08E  FFDE         	movff	?___fladd,postinc2
 30974  007D82  C08F  FFDE         	movff	?___fladd+1,postinc2
 30975  007D86  C090  FFDE         	movff	?___fladd+2,postinc2
 30976  007D8A  C091  FFDE         	movff	?___fladd+3,postinc2
 30977  007D8E                     
 30978                           ; BSR set to: 0
 30979                           ;filter.c: 26: pObj->_last_estimate=pObj->_current_estimate;
 30980  007D8E  EE20 F00C          	lfsr	2,12
 30981  007D92  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30982  007D94  26D9               	addwf	fsr2l,f,c
 30983  007D96  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30984  007D98  22DA               	addwfc	fsr2h,f,c
 30985  007D9A  EE10 F010          	lfsr	1,16
 30986  007D9E  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30987  007DA0  26E1               	addwf	fsr1l,f,c
 30988  007DA2  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 30989  007DA4  22E2               	addwfc	fsr1h,f,c
 30990  007DA6  CFDE FFE6          	movff	postinc2,postinc1
 30991  007DAA  CFDE FFE6          	movff	postinc2,postinc1
 30992  007DAE  CFDE FFE6          	movff	postinc2,postinc1
 30993  007DB2  CFDE FFE6          	movff	postinc2,postinc1
 30994  007DB6                     
 30995                           ; BSR set to: 0
 30996                           ;filter.c: 28: return pObj->_current_estimate;
 30997  007DB6  EE20 F00C          	lfsr	2,12
 30998  007DBA  51BF               	movf	Kalman_updateEstimate@pObj& (0+255),w,b
 30999  007DBC  26D9               	addwf	fsr2l,f,c
 31000  007DBE  51C0               	movf	(Kalman_updateEstimate@pObj+1)& (0+255),w,b
 31001  007DC0  22DA               	addwfc	fsr2h,f,c
 31002  007DC2  CFDE F0BF          	movff	postinc2,?_Kalman_updateEstimate
 31003  007DC6  CFDE F0C0          	movff	postinc2,?_Kalman_updateEstimate+1
 31004  007DCA  CFDE F0C1          	movff	postinc2,?_Kalman_updateEstimate+2
 31005  007DCE  CFDE F0C2          	movff	postinc2,?_Kalman_updateEstimate+3
 31006  007DD2                     
 31007                           ; BSR set to: 0
 31008  007DD2  0012               	return		;funcret
 31009  007DD4                     __end_of_Kalman_updateEstimate:
 31010                           	callstack 0
 31011                           
 31012 ;; *************** function _fabs *****************
 31013 ;; Defined at:
 31014 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fabs.c"
 31015 ;; Parameters:    Size  Location     Type
 31016 ;;  d               4   18[COMRAM] float 
 31017 ;; Auto vars:     Size  Location     Type
 31018 ;;		None
 31019 ;; Return value:  Size  Location     Type
 31020 ;;                  4   18[COMRAM] float 
 31021 ;; Registers used:
 31022 ;;		wreg, status,2, status,0, cstack
 31023 ;; Tracked objects:
 31024 ;;		On entry : 0/0
 31025 ;;		On exit  : 0/0
 31026 ;;		Unchanged: 0/0
 31027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31028 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31032 ;;Total ram usage:        4 bytes
 31033 ;; Hardware stack levels used: 1
 31034 ;; Hardware stack levels required when called: 4
 31035 ;; This function calls:
 31036 ;;		___flneg
 31037 ;; This function is called by:
 31038 ;;		_Kalman_updateEstimate
 31039 ;; This function uses a non-reentrant model
 31040 ;;
 31041                           
 31042                           	psect	text142
 31043  00E8F0                     __ptext142:
 31044                           	callstack 0
 31045  00E8F0                     _fabs:
 31046                           	callstack 23
 31047  00E8F0  BE16               	btfsc	(fabs@d+3)^0,7,c
 31048  00E8F2  EF7F  F074         	goto	u19420
 31049  00E8F6  EF7D  F074         	goto	u19421
 31050  00E8FA                     u19421:
 31051  00E8FA  EF93  F074         	goto	l3231
 31052  00E8FE                     u19420:
 31053  00E8FE  C013  F00F         	movff	fabs@d,___flneg@f1
 31054  00E902  C014  F010         	movff	fabs@d+1,___flneg@f1+1
 31055  00E906  C015  F011         	movff	fabs@d+2,___flneg@f1+2
 31056  00E90A  C016  F012         	movff	fabs@d+3,___flneg@f1+3
 31057  00E90E  ECB6  F075         	call	___flneg	;wreg free
 31058  00E912  C00F  F013         	movff	?___flneg,?_fabs
 31059  00E916  C010  F014         	movff	?___flneg+1,?_fabs+1
 31060  00E91A  C011  F015         	movff	?___flneg+2,?_fabs+2
 31061  00E91E  C012  F016         	movff	?___flneg+3,?_fabs+3
 31062  00E922  EF9B  F074         	goto	l3232
 31063  00E926                     l3231:
 31064  00E926  C013  F013         	movff	fabs@d,?_fabs
 31065  00E92A  C014  F014         	movff	fabs@d+1,?_fabs+1
 31066  00E92E  C015  F015         	movff	fabs@d+2,?_fabs+2
 31067  00E932  C016  F016         	movff	fabs@d+3,?_fabs+3
 31068  00E936                     l3232:
 31069  00E936  0012               	return		;funcret
 31070  00E938                     __end_of_fabs:
 31071                           	callstack 0
 31072                           
 31073 ;; *************** function ___flneg *****************
 31074 ;; Defined at:
 31075 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
 31076 ;; Parameters:    Size  Location     Type
 31077 ;;  f1              4   14[COMRAM] float 
 31078 ;; Auto vars:     Size  Location     Type
 31079 ;;		None
 31080 ;; Return value:  Size  Location     Type
 31081 ;;                  4   14[COMRAM] float 
 31082 ;; Registers used:
 31083 ;;		wreg, status,2, status,0
 31084 ;; Tracked objects:
 31085 ;;		On entry : 0/0
 31086 ;;		On exit  : 0/0
 31087 ;;		Unchanged: 0/0
 31088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31089 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31092 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31093 ;;Total ram usage:        4 bytes
 31094 ;; Hardware stack levels used: 1
 31095 ;; Hardware stack levels required when called: 3
 31096 ;; This function calls:
 31097 ;;		Nothing
 31098 ;; This function is called by:
 31099 ;;		_gasSensor_read
 31100 ;;		_sprintf
 31101 ;;		_fabs
 31102 ;;		_pow
 31103 ;;		_exp
 31104 ;; This function uses a non-reentrant model
 31105 ;;
 31106                           
 31107                           	psect	text143
 31108  00EB6C                     __ptext143:
 31109                           	callstack 0
 31110  00EB6C                     ___flneg:
 31111                           	callstack 22
 31112  00EB6C  500F               	movf	___flneg@f1^0,w,c
 31113  00EB6E  1010               	iorwf	(___flneg@f1+1)^0,w,c
 31114  00EB70  1011               	iorwf	(___flneg@f1+2)^0,w,c
 31115  00EB72  1012               	iorwf	(___flneg@f1+3)^0,w,c
 31116  00EB74  B4D8               	btfsc	status,2,c
 31117  00EB76  EFBF  F075         	goto	u18441
 31118  00EB7A  EFC1  F075         	goto	u18440
 31119  00EB7E                     u18441:
 31120  00EB7E  EFC9  F075         	goto	l17068
 31121  00EB82                     u18440:
 31122  00EB82  0E00               	movlw	0
 31123  00EB84  1A0F               	xorwf	___flneg@f1^0,f,c
 31124  00EB86  0E00               	movlw	0
 31125  00EB88  1A10               	xorwf	(___flneg@f1+1)^0,f,c
 31126  00EB8A  0E00               	movlw	0
 31127  00EB8C  1A11               	xorwf	(___flneg@f1+2)^0,f,c
 31128  00EB8E  0E80               	movlw	128
 31129  00EB90  1A12               	xorwf	(___flneg@f1+3)^0,f,c
 31130  00EB92                     l17068:
 31131  00EB92  C00F  F00F         	movff	___flneg@f1,?___flneg
 31132  00EB96  C010  F010         	movff	___flneg@f1+1,?___flneg+1
 31133  00EB9A  C011  F011         	movff	___flneg@f1+2,?___flneg+2
 31134  00EB9E  C012  F012         	movff	___flneg@f1+3,?___flneg+3
 31135  00EBA2  0012               	return		;funcret
 31136  00EBA4                     __end_of___flneg:
 31137                           	callstack 0
 31138                           
 31139 ;; *************** function ___flsub *****************
 31140 ;; Defined at:
 31141 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
 31142 ;; Parameters:    Size  Location     Type
 31143 ;;  b               4   62[BANK0 ] float 
 31144 ;;  a               4   66[BANK0 ] float 
 31145 ;; Auto vars:     Size  Location     Type
 31146 ;;		None
 31147 ;; Return value:  Size  Location     Type
 31148 ;;                  4   62[BANK0 ] float 
 31149 ;; Registers used:
 31150 ;;		wreg, status,2, status,0, cstack
 31151 ;; Tracked objects:
 31152 ;;		On entry : 0/0
 31153 ;;		On exit  : 0/0
 31154 ;;		Unchanged: 0/0
 31155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31156 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31159 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31160 ;;Total ram usage:        8 bytes
 31161 ;; Hardware stack levels used: 1
 31162 ;; Hardware stack levels required when called: 4
 31163 ;; This function calls:
 31164 ;;		___fladd
 31165 ;; This function is called by:
 31166 ;;		_update_command
 31167 ;;		_Kalman_updateEstimate
 31168 ;;		_gasSensor_calib
 31169 ;;		_gasSensor_temperature_cmp_coefficient
 31170 ;;		_sens_ZeroCalibration
 31171 ;;		_sprintf
 31172 ;;		_exp
 31173 ;;		_window_moving_average_recursion
 31174 ;;		_Average_filter
 31175 ;; This function uses a non-reentrant model
 31176 ;;
 31177                           
 31178                           	psect	text144
 31179  00E938                     __ptext144:
 31180                           	callstack 0
 31181  00E938                     ___flsub:
 31182                           	callstack 24
 31183  00E938  0E00               	movlw	0
 31184  00E93A  0100               	movlb	0	; () banked
 31185  00E93C  1BA2               	xorwf	___flsub@a& (0+255),f,b
 31186  00E93E  0E00               	movlw	0
 31187  00E940  1BA3               	xorwf	(___flsub@a+1)& (0+255),f,b
 31188  00E942  0E00               	movlw	0
 31189  00E944  1BA4               	xorwf	(___flsub@a+2)& (0+255),f,b
 31190  00E946  0E80               	movlw	128
 31191  00E948  1BA5               	xorwf	(___flsub@a+3)& (0+255),f,b
 31192  00E94A                     
 31193                           ; BSR set to: 0
 31194  00E94A  C09E  F08E         	movff	___flsub@b,___fladd@b
 31195  00E94E  C09F  F08F         	movff	___flsub@b+1,___fladd@b+1
 31196  00E952  C0A0  F090         	movff	___flsub@b+2,___fladd@b+2
 31197  00E956  C0A1  F091         	movff	___flsub@b+3,___fladd@b+3
 31198  00E95A  C0A2  F092         	movff	___flsub@a,___fladd@a
 31199  00E95E  C0A3  F093         	movff	___flsub@a+1,___fladd@a+1
 31200  00E962  C0A4  F094         	movff	___flsub@a+2,___fladd@a+2
 31201  00E966  C0A5  F095         	movff	___flsub@a+3,___fladd@a+3
 31202  00E96A  EC46  F02D         	call	___fladd	;wreg free
 31203  00E96E  C08E  F09E         	movff	?___fladd,?___flsub
 31204  00E972  C08F  F09F         	movff	?___fladd+1,?___flsub+1
 31205  00E976  C090  F0A0         	movff	?___fladd+2,?___flsub+2
 31206  00E97A  C091  F0A1         	movff	?___fladd+3,?___flsub+3
 31207  00E97E  0012               	return		;funcret
 31208  00E980                     __end_of___flsub:
 31209                           	callstack 0
 31210                           
 31211 ;; *************** function ___fladd *****************
 31212 ;; Defined at:
 31213 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
 31214 ;; Parameters:    Size  Location     Type
 31215 ;;  b               4   46[BANK0 ] float 
 31216 ;;  a               4   50[BANK0 ] float 
 31217 ;; Auto vars:     Size  Location     Type
 31218 ;;  grs             1   61[BANK0 ] unsigned char 
 31219 ;;  bexp            1   60[BANK0 ] unsigned char 
 31220 ;;  aexp            1   59[BANK0 ] unsigned char 
 31221 ;;  signs           1   58[BANK0 ] unsigned char 
 31222 ;; Return value:  Size  Location     Type
 31223 ;;                  4   46[BANK0 ] unsigned char 
 31224 ;; Registers used:
 31225 ;;		wreg, status,2, status,0
 31226 ;; Tracked objects:
 31227 ;;		On entry : 0/0
 31228 ;;		On exit  : 0/0
 31229 ;;		Unchanged: 0/0
 31230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 31231 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31232 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31233 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31234 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 31235 ;;Total ram usage:       16 bytes
 31236 ;; Hardware stack levels used: 1
 31237 ;; Hardware stack levels required when called: 3
 31238 ;; This function calls:
 31239 ;;		Nothing
 31240 ;; This function is called by:
 31241 ;;		_Kalman_updateEstimate
 31242 ;;		_gasSensor_read
 31243 ;;		_gasSensor_calib
 31244 ;;		_gasSensor_temperature_cmp_coefficient
 31245 ;;		_sensor_temp_fahrenheit
 31246 ;;		_tempSensor_read
 31247 ;;		_CMP_temp_read
 31248 ;;		__atof
 31249 ;;		_sprintf
 31250 ;;		___flsub
 31251 ;;		_floor
 31252 ;;		_eval_poly
 31253 ;;		_log
 31254 ;;		_calc_raw_temperature
 31255 ;;		_window_moving_average_recursion
 31256 ;;		_Average_filter
 31257 ;; This function uses a non-reentrant model
 31258 ;;
 31259                           
 31260                           	psect	text145
 31261  005A8C                     __ptext145:
 31262                           	callstack 0
 31263  005A8C                     ___fladd:
 31264                           	callstack 24
 31265  005A8C  0100               	movlb	0	; () banked
 31266  005A8E  5191               	movf	(___fladd@b+3)& (0+255),w,b
 31267  005A90  0B80               	andlw	128
 31268  005A92  6F9A               	movwf	___fladd@signs& (0+255),b
 31269  005A94  5191               	movf	(___fladd@b+3)& (0+255),w,b
 31270  005A96  2591               	addwf	(___fladd@b+3)& (0+255),w,b
 31271  005A98  6F9C               	movwf	___fladd@bexp& (0+255),b
 31272  005A9A                     
 31273                           ; BSR set to: 0
 31274  005A9A  AF90               	btfss	(___fladd@b+2)& (0+255),7,b
 31275  005A9C  EF52  F02D         	goto	u16971
 31276  005AA0  EF54  F02D         	goto	u16970
 31277  005AA4                     u16971:
 31278  005AA4  EF55  F02D         	goto	l16226
 31279  005AA8                     u16970:
 31280  005AA8                     
 31281                           ; BSR set to: 0
 31282  005AA8  819C               	bsf	___fladd@bexp& (0+255),0,b
 31283  005AAA                     l16226:
 31284                           
 31285                           ; BSR set to: 0
 31286  005AAA  519C               	movf	___fladd@bexp& (0+255),w,b
 31287  005AAC  B4D8               	btfsc	status,2,c
 31288  005AAE  EF5B  F02D         	goto	u16981
 31289  005AB2  EF5D  F02D         	goto	u16980
 31290  005AB6                     u16981:
 31291  005AB6  EF72  F02D         	goto	l16236
 31292  005ABA                     u16980:
 31293  005ABA                     
 31294                           ; BSR set to: 0
 31295  005ABA  299C               	incf	___fladd@bexp& (0+255),w,b
 31296  005ABC  A4D8               	btfss	status,2,c
 31297  005ABE  EF63  F02D         	goto	u16991
 31298  005AC2  EF65  F02D         	goto	u16990
 31299  005AC6                     u16991:
 31300  005AC6  EF6D  F02D         	goto	l16232
 31301  005ACA                     u16990:
 31302  005ACA                     
 31303                           ; BSR set to: 0
 31304  005ACA  0E00               	movlw	0
 31305  005ACC  6F8E               	movwf	___fladd@b& (0+255),b
 31306  005ACE  0E00               	movlw	0
 31307  005AD0  6F8F               	movwf	(___fladd@b+1)& (0+255),b
 31308  005AD2  0E00               	movlw	0
 31309  005AD4  6F90               	movwf	(___fladd@b+2)& (0+255),b
 31310  005AD6  0E00               	movlw	0
 31311  005AD8  6F91               	movwf	(___fladd@b+3)& (0+255),b
 31312  005ADA                     l16232:
 31313                           
 31314                           ; BSR set to: 0
 31315  005ADA  8F90               	bsf	(___fladd@b+2)& (0+255),7,b
 31316  005ADC                     
 31317                           ; BSR set to: 0
 31318  005ADC  0E00               	movlw	0
 31319  005ADE  6F91               	movwf	(___fladd@b+3)& (0+255),b
 31320  005AE0  EF7A  F02D         	goto	l16238
 31321  005AE4                     l16236:
 31322                           
 31323                           ; BSR set to: 0
 31324  005AE4  0E00               	movlw	0
 31325  005AE6  6F8E               	movwf	___fladd@b& (0+255),b
 31326  005AE8  0E00               	movlw	0
 31327  005AEA  6F8F               	movwf	(___fladd@b+1)& (0+255),b
 31328  005AEC  0E00               	movlw	0
 31329  005AEE  6F90               	movwf	(___fladd@b+2)& (0+255),b
 31330  005AF0  0E00               	movlw	0
 31331  005AF2  6F91               	movwf	(___fladd@b+3)& (0+255),b
 31332  005AF4                     l16238:
 31333                           
 31334                           ; BSR set to: 0
 31335  005AF4  5195               	movf	(___fladd@a+3)& (0+255),w,b
 31336  005AF6  0B80               	andlw	128
 31337  005AF8  6F9B               	movwf	___fladd@aexp& (0+255),b
 31338  005AFA                     
 31339                           ; BSR set to: 0
 31340  005AFA  519A               	movf	___fladd@signs& (0+255),w,b
 31341  005AFC  199B               	xorwf	___fladd@aexp& (0+255),w,b
 31342  005AFE  B4D8               	btfsc	status,2,c
 31343  005B00  EF84  F02D         	goto	u17001
 31344  005B04  EF86  F02D         	goto	u17000
 31345  005B08                     u17001:
 31346  005B08  EF87  F02D         	goto	l16244
 31347  005B0C                     u17000:
 31348  005B0C                     
 31349                           ; BSR set to: 0
 31350  005B0C  8D9A               	bsf	___fladd@signs& (0+255),6,b
 31351  005B0E                     l16244:
 31352                           
 31353                           ; BSR set to: 0
 31354  005B0E  5195               	movf	(___fladd@a+3)& (0+255),w,b
 31355  005B10  2595               	addwf	(___fladd@a+3)& (0+255),w,b
 31356  005B12  6F9B               	movwf	___fladd@aexp& (0+255),b
 31357  005B14                     
 31358                           ; BSR set to: 0
 31359  005B14  AF94               	btfss	(___fladd@a+2)& (0+255),7,b
 31360  005B16  EF8F  F02D         	goto	u17011
 31361  005B1A  EF91  F02D         	goto	u17010
 31362  005B1E                     u17011:
 31363  005B1E  EF92  F02D         	goto	l16250
 31364  005B22                     u17010:
 31365  005B22                     
 31366                           ; BSR set to: 0
 31367  005B22  819B               	bsf	___fladd@aexp& (0+255),0,b
 31368  005B24                     l16250:
 31369                           
 31370                           ; BSR set to: 0
 31371  005B24  519B               	movf	___fladd@aexp& (0+255),w,b
 31372  005B26  B4D8               	btfsc	status,2,c
 31373  005B28  EF98  F02D         	goto	u17021
 31374  005B2C  EF9A  F02D         	goto	u17020
 31375  005B30                     u17021:
 31376  005B30  EFAF  F02D         	goto	l16260
 31377  005B34                     u17020:
 31378  005B34                     
 31379                           ; BSR set to: 0
 31380  005B34  299B               	incf	___fladd@aexp& (0+255),w,b
 31381  005B36  A4D8               	btfss	status,2,c
 31382  005B38  EFA0  F02D         	goto	u17031
 31383  005B3C  EFA2  F02D         	goto	u17030
 31384  005B40                     u17031:
 31385  005B40  EFAA  F02D         	goto	l16256
 31386  005B44                     u17030:
 31387  005B44                     
 31388                           ; BSR set to: 0
 31389  005B44  0E00               	movlw	0
 31390  005B46  6F92               	movwf	___fladd@a& (0+255),b
 31391  005B48  0E00               	movlw	0
 31392  005B4A  6F93               	movwf	(___fladd@a+1)& (0+255),b
 31393  005B4C  0E00               	movlw	0
 31394  005B4E  6F94               	movwf	(___fladd@a+2)& (0+255),b
 31395  005B50  0E00               	movlw	0
 31396  005B52  6F95               	movwf	(___fladd@a+3)& (0+255),b
 31397  005B54                     l16256:
 31398                           
 31399                           ; BSR set to: 0
 31400  005B54  8F94               	bsf	(___fladd@a+2)& (0+255),7,b
 31401  005B56                     
 31402                           ; BSR set to: 0
 31403  005B56  0E00               	movlw	0
 31404  005B58  6F95               	movwf	(___fladd@a+3)& (0+255),b
 31405  005B5A  EFB7  F02D         	goto	l16262
 31406  005B5E                     l16260:
 31407                           
 31408                           ; BSR set to: 0
 31409  005B5E  0E00               	movlw	0
 31410  005B60  6F92               	movwf	___fladd@a& (0+255),b
 31411  005B62  0E00               	movlw	0
 31412  005B64  6F93               	movwf	(___fladd@a+1)& (0+255),b
 31413  005B66  0E00               	movlw	0
 31414  005B68  6F94               	movwf	(___fladd@a+2)& (0+255),b
 31415  005B6A  0E00               	movlw	0
 31416  005B6C  6F95               	movwf	(___fladd@a+3)& (0+255),b
 31417  005B6E                     l16262:
 31418                           
 31419                           ; BSR set to: 0
 31420  005B6E  519C               	movf	___fladd@bexp& (0+255),w,b
 31421  005B70  5D9B               	subwf	___fladd@aexp& (0+255),w,b
 31422  005B72  B0D8               	btfsc	status,0,c
 31423  005B74  EFBE  F02D         	goto	u17041
 31424  005B78  EFC0  F02D         	goto	u17040
 31425  005B7C                     u17041:
 31426  005B7C  EFE7  F02D         	goto	l16298
 31427  005B80                     u17040:
 31428  005B80                     
 31429                           ; BSR set to: 0
 31430  005B80  AD9A               	btfss	___fladd@signs& (0+255),6,b
 31431  005B82  EFC5  F02D         	goto	u17051
 31432  005B86  EFC7  F02D         	goto	u17050
 31433  005B8A                     u17051:
 31434  005B8A  EFC9  F02D         	goto	l16268
 31435  005B8E                     u17050:
 31436  005B8E                     
 31437                           ; BSR set to: 0
 31438  005B8E  0E80               	movlw	128
 31439  005B90  1B9A               	xorwf	___fladd@signs& (0+255),f,b
 31440  005B92                     l16268:
 31441                           
 31442                           ; BSR set to: 0
 31443  005B92  C09C  F09D         	movff	___fladd@bexp,___fladd@grs
 31444  005B96                     
 31445                           ; BSR set to: 0
 31446  005B96  C09B  F09C         	movff	___fladd@aexp,___fladd@bexp
 31447  005B9A                     
 31448                           ; BSR set to: 0
 31449  005B9A  C09D  F09B         	movff	___fladd@grs,___fladd@aexp
 31450  005B9E                     
 31451                           ; BSR set to: 0
 31452  005B9E  C08E  F09D         	movff	___fladd@b,___fladd@grs
 31453  005BA2                     
 31454                           ; BSR set to: 0
 31455  005BA2  C092  F08E         	movff	___fladd@a,___fladd@b
 31456  005BA6                     
 31457                           ; BSR set to: 0
 31458  005BA6  C09D  F092         	movff	___fladd@grs,___fladd@a
 31459  005BAA                     
 31460                           ; BSR set to: 0
 31461  005BAA  C08F  F09D         	movff	___fladd@b+1,___fladd@grs
 31462  005BAE                     
 31463                           ; BSR set to: 0
 31464  005BAE  C093  F08F         	movff	___fladd@a+1,___fladd@b+1
 31465  005BB2                     
 31466                           ; BSR set to: 0
 31467  005BB2  C09D  F093         	movff	___fladd@grs,___fladd@a+1
 31468  005BB6                     
 31469                           ; BSR set to: 0
 31470  005BB6  C090  F09D         	movff	___fladd@b+2,___fladd@grs
 31471  005BBA                     
 31472                           ; BSR set to: 0
 31473  005BBA  C094  F090         	movff	___fladd@a+2,___fladd@b+2
 31474  005BBE                     
 31475                           ; BSR set to: 0
 31476  005BBE  C09D  F094         	movff	___fladd@grs,___fladd@a+2
 31477  005BC2                     
 31478                           ; BSR set to: 0
 31479  005BC2  C091  F09D         	movff	___fladd@b+3,___fladd@grs
 31480  005BC6                     
 31481                           ; BSR set to: 0
 31482  005BC6  C095  F091         	movff	___fladd@a+3,___fladd@b+3
 31483  005BCA                     
 31484                           ; BSR set to: 0
 31485  005BCA  C09D  F095         	movff	___fladd@grs,___fladd@a+3
 31486  005BCE                     l16298:
 31487                           
 31488                           ; BSR set to: 0
 31489  005BCE  0E00               	movlw	0
 31490  005BD0  6F9D               	movwf	___fladd@grs& (0+255),b
 31491  005BD2                     
 31492                           ; BSR set to: 0
 31493  005BD2  519C               	movf	___fladd@bexp& (0+255),w,b
 31494  005BD4  C09B  F096         	movff	___fladd@aexp,??___fladd
 31495  005BD8  6B97               	clrf	(??___fladd+1)& (0+255),b
 31496  005BDA  5F96               	subwf	??___fladd& (0+255),f,b
 31497  005BDC  0E00               	movlw	0
 31498  005BDE  5B97               	subwfb	(??___fladd+1)& (0+255),f,b
 31499  005BE0  BF97               	btfsc	(??___fladd+1)& (0+255),7,b
 31500  005BE2  EFFC  F02D         	goto	u17061
 31501  005BE6  5197               	movf	(??___fladd+1)& (0+255),w,b
 31502  005BE8  E109               	bnz	u17060
 31503  005BEA  0E1A               	movlw	26
 31504  005BEC  5D96               	subwf	??___fladd& (0+255),w,b
 31505  005BEE  A0D8               	btfss	status,0,c
 31506  005BF0  EFFC  F02D         	goto	u17061
 31507  005BF4  EFFE  F02D         	goto	u17060
 31508  005BF8                     u17061:
 31509  005BF8  EF35  F02E         	goto	l3086
 31510  005BFC                     u17060:
 31511  005BFC                     
 31512                           ; BSR set to: 0
 31513  005BFC  518E               	movf	___fladd@b& (0+255),w,b
 31514  005BFE  118F               	iorwf	(___fladd@b+1)& (0+255),w,b
 31515  005C00  1190               	iorwf	(___fladd@b+2)& (0+255),w,b
 31516  005C02  1191               	iorwf	(___fladd@b+3)& (0+255),w,b
 31517  005C04  A4D8               	btfss	status,2,c
 31518  005C06  EF07  F02E         	goto	u17071
 31519  005C0A  EF0A  F02E         	goto	u17070
 31520  005C0E                     u17071:
 31521  005C0E  0E01               	movlw	1
 31522  005C10  EF0B  F02E         	goto	u17080
 31523  005C14                     u17070:
 31524  005C14  0E00               	movlw	0
 31525  005C16                     u17080:
 31526  005C16  6F9D               	movwf	___fladd@grs& (0+255),b
 31527  005C18                     
 31528                           ; BSR set to: 0
 31529  005C18  0E00               	movlw	0
 31530  005C1A  6F8E               	movwf	___fladd@b& (0+255),b
 31531  005C1C  0E00               	movlw	0
 31532  005C1E  6F8F               	movwf	(___fladd@b+1)& (0+255),b
 31533  005C20  0E00               	movlw	0
 31534  005C22  6F90               	movwf	(___fladd@b+2)& (0+255),b
 31535  005C24  0E00               	movlw	0
 31536  005C26  6F91               	movwf	(___fladd@b+3)& (0+255),b
 31537  005C28                     
 31538                           ; BSR set to: 0
 31539  005C28  C09B  F09C         	movff	___fladd@aexp,___fladd@bexp
 31540  005C2C  EF3E  F02E         	goto	l3085
 31541  005C30                     l3087:
 31542                           
 31543                           ; BSR set to: 0
 31544  005C30  A19D               	btfss	___fladd@grs& (0+255),0,b
 31545  005C32  EF1D  F02E         	goto	u17091
 31546  005C36  EF1F  F02E         	goto	u17090
 31547  005C3A                     u17091:
 31548  005C3A  EF25  F02E         	goto	l16310
 31549  005C3E                     u17090:
 31550  005C3E                     
 31551                           ; BSR set to: 0
 31552  005C3E  90D8               	bcf	status,0,c
 31553  005C40  319D               	rrcf	___fladd@grs& (0+255),w,b
 31554  005C42  0901               	iorlw	1
 31555  005C44  6F9D               	movwf	___fladd@grs& (0+255),b
 31556  005C46  EF27  F02E         	goto	l16312
 31557  005C4A                     l16310:
 31558                           
 31559                           ; BSR set to: 0
 31560  005C4A  90D8               	bcf	status,0,c
 31561  005C4C  339D               	rrcf	___fladd@grs& (0+255),f,b
 31562  005C4E                     l16312:
 31563                           
 31564                           ; BSR set to: 0
 31565  005C4E  A18E               	btfss	___fladd@b& (0+255),0,b
 31566  005C50  EF2C  F02E         	goto	u17101
 31567  005C54  EF2E  F02E         	goto	u17100
 31568  005C58                     u17101:
 31569  005C58  EF2F  F02E         	goto	l16316
 31570  005C5C                     u17100:
 31571  005C5C                     
 31572                           ; BSR set to: 0
 31573  005C5C  8F9D               	bsf	___fladd@grs& (0+255),7,b
 31574  005C5E                     l16316:
 31575                           
 31576                           ; BSR set to: 0
 31577  005C5E  3591               	rlcf	(___fladd@b+3)& (0+255),w,b
 31578  005C60  3391               	rrcf	(___fladd@b+3)& (0+255),f,b
 31579  005C62  3390               	rrcf	(___fladd@b+2)& (0+255),f,b
 31580  005C64  338F               	rrcf	(___fladd@b+1)& (0+255),f,b
 31581  005C66  338E               	rrcf	___fladd@b& (0+255),f,b
 31582  005C68                     
 31583                           ; BSR set to: 0
 31584  005C68  2B9C               	incf	___fladd@bexp& (0+255),f,b
 31585  005C6A                     l3086:
 31586                           
 31587                           ; BSR set to: 0
 31588  005C6A  519B               	movf	___fladd@aexp& (0+255),w,b
 31589  005C6C  5D9C               	subwf	___fladd@bexp& (0+255),w,b
 31590  005C6E  A0D8               	btfss	status,0,c
 31591  005C70  EF3C  F02E         	goto	u17111
 31592  005C74  EF3E  F02E         	goto	u17110
 31593  005C78                     u17111:
 31594  005C78  EF18  F02E         	goto	l3087
 31595  005C7C                     u17110:
 31596  005C7C                     l3085:
 31597                           
 31598                           ; BSR set to: 0
 31599  005C7C  BD9A               	btfsc	___fladd@signs& (0+255),6,b
 31600  005C7E  EF43  F02E         	goto	u17121
 31601  005C82  EF45  F02E         	goto	u17120
 31602  005C86                     u17121:
 31603  005C86  EF85  F02E         	goto	l16344
 31604  005C8A                     u17120:
 31605  005C8A                     
 31606                           ; BSR set to: 0
 31607  005C8A  519C               	movf	___fladd@bexp& (0+255),w,b
 31608  005C8C  A4D8               	btfss	status,2,c
 31609  005C8E  EF4B  F02E         	goto	u17131
 31610  005C92  EF4D  F02E         	goto	u17130
 31611  005C96                     u17131:
 31612  005C96  EF57  F02E         	goto	l16326
 31613  005C9A                     u17130:
 31614  005C9A                     
 31615                           ; BSR set to: 0
 31616  005C9A  0E00               	movlw	0
 31617  005C9C  6F8E               	movwf	?___fladd& (0+255),b
 31618  005C9E  0E00               	movlw	0
 31619  005CA0  6F8F               	movwf	(?___fladd+1)& (0+255),b
 31620  005CA2  0E00               	movlw	0
 31621  005CA4  6F90               	movwf	(?___fladd+2)& (0+255),b
 31622  005CA6  0E00               	movlw	0
 31623  005CA8  6F91               	movwf	(?___fladd+3)& (0+255),b
 31624  005CAA  EFA6  F02F         	goto	l3094
 31625  005CAE                     l16326:
 31626                           
 31627                           ; BSR set to: 0
 31628  005CAE  5192               	movf	___fladd@a& (0+255),w,b
 31629  005CB0  278E               	addwf	___fladd@b& (0+255),f,b
 31630  005CB2  5193               	movf	(___fladd@a+1)& (0+255),w,b
 31631  005CB4  238F               	addwfc	(___fladd@b+1)& (0+255),f,b
 31632  005CB6  5194               	movf	(___fladd@a+2)& (0+255),w,b
 31633  005CB8  2390               	addwfc	(___fladd@b+2)& (0+255),f,b
 31634  005CBA  5195               	movf	(___fladd@a+3)& (0+255),w,b
 31635  005CBC  2391               	addwfc	(___fladd@b+3)& (0+255),f,b
 31636  005CBE                     
 31637                           ; BSR set to: 0
 31638  005CBE  A191               	btfss	(___fladd@b+3)& (0+255),0,b
 31639  005CC0  EF64  F02E         	goto	u17141
 31640  005CC4  EF66  F02E         	goto	u17140
 31641  005CC8                     u17141:
 31642  005CC8  EF12  F02F         	goto	l16380
 31643  005CCC                     u17140:
 31644  005CCC                     
 31645                           ; BSR set to: 0
 31646  005CCC  A19D               	btfss	___fladd@grs& (0+255),0,b
 31647  005CCE  EF6B  F02E         	goto	u17151
 31648  005CD2  EF6D  F02E         	goto	u17150
 31649  005CD6                     u17151:
 31650  005CD6  EF73  F02E         	goto	l16334
 31651  005CDA                     u17150:
 31652  005CDA                     
 31653                           ; BSR set to: 0
 31654  005CDA  90D8               	bcf	status,0,c
 31655  005CDC  319D               	rrcf	___fladd@grs& (0+255),w,b
 31656  005CDE  0901               	iorlw	1
 31657  005CE0  6F9D               	movwf	___fladd@grs& (0+255),b
 31658  005CE2  EF75  F02E         	goto	l16336
 31659  005CE6                     l16334:
 31660                           
 31661                           ; BSR set to: 0
 31662  005CE6  90D8               	bcf	status,0,c
 31663  005CE8  339D               	rrcf	___fladd@grs& (0+255),f,b
 31664  005CEA                     l16336:
 31665                           
 31666                           ; BSR set to: 0
 31667  005CEA  A18E               	btfss	___fladd@b& (0+255),0,b
 31668  005CEC  EF7A  F02E         	goto	u17161
 31669  005CF0  EF7C  F02E         	goto	u17160
 31670  005CF4                     u17161:
 31671  005CF4  EF7D  F02E         	goto	l16340
 31672  005CF8                     u17160:
 31673  005CF8                     
 31674                           ; BSR set to: 0
 31675  005CF8  8F9D               	bsf	___fladd@grs& (0+255),7,b
 31676  005CFA                     l16340:
 31677                           
 31678                           ; BSR set to: 0
 31679  005CFA  3591               	rlcf	(___fladd@b+3)& (0+255),w,b
 31680  005CFC  3391               	rrcf	(___fladd@b+3)& (0+255),f,b
 31681  005CFE  3390               	rrcf	(___fladd@b+2)& (0+255),f,b
 31682  005D00  338F               	rrcf	(___fladd@b+1)& (0+255),f,b
 31683  005D02  338E               	rrcf	___fladd@b& (0+255),f,b
 31684  005D04                     
 31685                           ; BSR set to: 0
 31686  005D04  2B9C               	incf	___fladd@bexp& (0+255),f,b
 31687  005D06  EF12  F02F         	goto	l16380
 31688  005D0A                     l16344:
 31689                           
 31690                           ; BSR set to: 0
 31691  005D0A  5192               	movf	___fladd@a& (0+255),w,b
 31692  005D0C  5D8E               	subwf	___fladd@b& (0+255),w,b
 31693  005D0E  5193               	movf	(___fladd@a+1)& (0+255),w,b
 31694  005D10  598F               	subwfb	(___fladd@b+1)& (0+255),w,b
 31695  005D12  5194               	movf	(___fladd@a+2)& (0+255),w,b
 31696  005D14  5990               	subwfb	(___fladd@b+2)& (0+255),w,b
 31697  005D16  5191               	movf	(___fladd@b+3)& (0+255),w,b
 31698  005D18  0A80               	xorlw	128
 31699  005D1A  6F96               	movwf	??___fladd& (0+255),b
 31700  005D1C  5195               	movf	(___fladd@a+3)& (0+255),w,b
 31701  005D1E  0A80               	xorlw	128
 31702  005D20  5996               	subwfb	??___fladd& (0+255),w,b
 31703  005D22  B0D8               	btfsc	status,0,c
 31704  005D24  EF96  F02E         	goto	u17171
 31705  005D28  EF98  F02E         	goto	u17170
 31706  005D2C                     u17171:
 31707  005D2C  EFC3  F02E         	goto	l16354
 31708  005D30                     u17170:
 31709  005D30                     
 31710                           ; BSR set to: 0
 31711  005D30  518E               	movf	___fladd@b& (0+255),w,b
 31712  005D32  5D92               	subwf	___fladd@a& (0+255),w,b
 31713  005D34  6F96               	movwf	??___fladd& (0+255),b
 31714  005D36  518F               	movf	(___fladd@b+1)& (0+255),w,b
 31715  005D38  5993               	subwfb	(___fladd@a+1)& (0+255),w,b
 31716  005D3A  6F97               	movwf	(??___fladd+1)& (0+255),b
 31717  005D3C  5190               	movf	(___fladd@b+2)& (0+255),w,b
 31718  005D3E  5994               	subwfb	(___fladd@a+2)& (0+255),w,b
 31719  005D40  6F98               	movwf	(??___fladd+2)& (0+255),b
 31720  005D42  5191               	movf	(___fladd@b+3)& (0+255),w,b
 31721  005D44  5995               	subwfb	(___fladd@a+3)& (0+255),w,b
 31722  005D46  6F99               	movwf	(??___fladd+3)& (0+255),b
 31723  005D48  0EFF               	movlw	255
 31724  005D4A  2596               	addwf	??___fladd& (0+255),w,b
 31725  005D4C  6F8E               	movwf	___fladd@b& (0+255),b
 31726  005D4E  0EFF               	movlw	255
 31727  005D50  2197               	addwfc	(??___fladd+1)& (0+255),w,b
 31728  005D52  6F8F               	movwf	(___fladd@b+1)& (0+255),b
 31729  005D54  0EFF               	movlw	255
 31730  005D56  2198               	addwfc	(??___fladd+2)& (0+255),w,b
 31731  005D58  6F90               	movwf	(___fladd@b+2)& (0+255),b
 31732  005D5A  0EFF               	movlw	255
 31733  005D5C  2199               	addwfc	(??___fladd+3)& (0+255),w,b
 31734  005D5E  6F91               	movwf	(___fladd@b+3)& (0+255),b
 31735  005D60  0E80               	movlw	128
 31736  005D62  1B9A               	xorwf	___fladd@signs& (0+255),f,b
 31737  005D64                     
 31738                           ; BSR set to: 0
 31739  005D64  6D9D               	negf	___fladd@grs& (0+255),b
 31740  005D66                     
 31741                           ; BSR set to: 0
 31742  005D66  519D               	movf	___fladd@grs& (0+255),w,b
 31743  005D68  A4D8               	btfss	status,2,c
 31744  005D6A  EFB9  F02E         	goto	u17181
 31745  005D6E  EFBB  F02E         	goto	u17180
 31746  005D72                     u17181:
 31747  005D72  EFCB  F02E         	goto	l3102
 31748  005D76                     u17180:
 31749  005D76                     
 31750                           ; BSR set to: 0
 31751  005D76  0E01               	movlw	1
 31752  005D78  278E               	addwf	___fladd@b& (0+255),f,b
 31753  005D7A  0E00               	movlw	0
 31754  005D7C  238F               	addwfc	(___fladd@b+1)& (0+255),f,b
 31755  005D7E  2390               	addwfc	(___fladd@b+2)& (0+255),f,b
 31756  005D80  2391               	addwfc	(___fladd@b+3)& (0+255),f,b
 31757  005D82  EFCB  F02E         	goto	l3102
 31758  005D86                     l16354:
 31759                           
 31760                           ; BSR set to: 0
 31761  005D86  5192               	movf	___fladd@a& (0+255),w,b
 31762  005D88  5F8E               	subwf	___fladd@b& (0+255),f,b
 31763  005D8A  5193               	movf	(___fladd@a+1)& (0+255),w,b
 31764  005D8C  5B8F               	subwfb	(___fladd@b+1)& (0+255),f,b
 31765  005D8E  5194               	movf	(___fladd@a+2)& (0+255),w,b
 31766  005D90  5B90               	subwfb	(___fladd@b+2)& (0+255),f,b
 31767  005D92  5195               	movf	(___fladd@a+3)& (0+255),w,b
 31768  005D94  5B91               	subwfb	(___fladd@b+3)& (0+255),f,b
 31769  005D96                     l3102:
 31770                           
 31771                           ; BSR set to: 0
 31772  005D96  518E               	movf	___fladd@b& (0+255),w,b
 31773  005D98  118F               	iorwf	(___fladd@b+1)& (0+255),w,b
 31774  005D9A  1190               	iorwf	(___fladd@b+2)& (0+255),w,b
 31775  005D9C  1191               	iorwf	(___fladd@b+3)& (0+255),w,b
 31776  005D9E  A4D8               	btfss	status,2,c
 31777  005DA0  EFD4  F02E         	goto	u17191
 31778  005DA4  EFD6  F02E         	goto	u17190
 31779  005DA8                     u17191:
 31780  005DA8  EF0B  F02F         	goto	l16378
 31781  005DAC                     u17190:
 31782  005DAC                     
 31783                           ; BSR set to: 0
 31784  005DAC  519D               	movf	___fladd@grs& (0+255),w,b
 31785  005DAE  A4D8               	btfss	status,2,c
 31786  005DB0  EFDC  F02E         	goto	u17201
 31787  005DB4  EFDE  F02E         	goto	u17200
 31788  005DB8                     u17201:
 31789  005DB8  EF0B  F02F         	goto	l16378
 31790  005DBC                     u17200:
 31791  005DBC                     
 31792                           ; BSR set to: 0
 31793  005DBC  0E00               	movlw	0
 31794  005DBE  6F8E               	movwf	?___fladd& (0+255),b
 31795  005DC0  0E00               	movlw	0
 31796  005DC2  6F8F               	movwf	(?___fladd+1)& (0+255),b
 31797  005DC4  0E00               	movlw	0
 31798  005DC6  6F90               	movwf	(?___fladd+2)& (0+255),b
 31799  005DC8  0E00               	movlw	0
 31800  005DCA  6F91               	movwf	(?___fladd+3)& (0+255),b
 31801  005DCC  EFA6  F02F         	goto	l3094
 31802  005DD0                     l16362:
 31803                           
 31804                           ; BSR set to: 0
 31805  005DD0  90D8               	bcf	status,0,c
 31806  005DD2  378E               	rlcf	___fladd@b& (0+255),f,b
 31807  005DD4  378F               	rlcf	(___fladd@b+1)& (0+255),f,b
 31808  005DD6  3790               	rlcf	(___fladd@b+2)& (0+255),f,b
 31809  005DD8  3791               	rlcf	(___fladd@b+3)& (0+255),f,b
 31810  005DDA                     
 31811                           ; BSR set to: 0
 31812  005DDA  AF9D               	btfss	___fladd@grs& (0+255),7,b
 31813  005DDC  EFF2  F02E         	goto	u17211
 31814  005DE0  EFF4  F02E         	goto	u17210
 31815  005DE4                     u17211:
 31816  005DE4  EFF5  F02E         	goto	l16368
 31817  005DE8                     u17210:
 31818  005DE8                     
 31819                           ; BSR set to: 0
 31820  005DE8  818E               	bsf	___fladd@b& (0+255),0,b
 31821  005DEA                     l16368:
 31822                           
 31823                           ; BSR set to: 0
 31824  005DEA  A19D               	btfss	___fladd@grs& (0+255),0,b
 31825  005DEC  EFFA  F02E         	goto	u17221
 31826  005DF0  EFFC  F02E         	goto	u17220
 31827  005DF4                     u17221:
 31828  005DF4  EF00  F02F         	goto	l16372
 31829  005DF8                     u17220:
 31830  005DF8                     
 31831                           ; BSR set to: 0
 31832  005DF8  80D8               	bsf	status,0,c
 31833  005DFA  379D               	rlcf	___fladd@grs& (0+255),f,b
 31834  005DFC  EF02  F02F         	goto	l16374
 31835  005E00                     l16372:
 31836                           
 31837                           ; BSR set to: 0
 31838  005E00  90D8               	bcf	status,0,c
 31839  005E02  379D               	rlcf	___fladd@grs& (0+255),f,b
 31840  005E04                     l16374:
 31841                           
 31842                           ; BSR set to: 0
 31843  005E04  519C               	movf	___fladd@bexp& (0+255),w,b
 31844  005E06  B4D8               	btfsc	status,2,c
 31845  005E08  EF08  F02F         	goto	u17231
 31846  005E0C  EF0A  F02F         	goto	u17230
 31847  005E10                     u17231:
 31848  005E10  EF0B  F02F         	goto	l16378
 31849  005E14                     u17230:
 31850  005E14                     
 31851                           ; BSR set to: 0
 31852  005E14  079C               	decf	___fladd@bexp& (0+255),f,b
 31853  005E16                     l16378:
 31854                           
 31855                           ; BSR set to: 0
 31856  005E16  AF90               	btfss	(___fladd@b+2)& (0+255),7,b
 31857  005E18  EF10  F02F         	goto	u17241
 31858  005E1C  EF12  F02F         	goto	u17240
 31859  005E20                     u17241:
 31860  005E20  EFE8  F02E         	goto	l16362
 31861  005E24                     u17240:
 31862  005E24                     l16380:
 31863                           
 31864                           ; BSR set to: 0
 31865  005E24  0E00               	movlw	0
 31866  005E26  6F9B               	movwf	___fladd@aexp& (0+255),b
 31867  005E28                     
 31868                           ; BSR set to: 0
 31869  005E28  AF9D               	btfss	___fladd@grs& (0+255),7,b
 31870  005E2A  EF19  F02F         	goto	u17251
 31871  005E2E  EF1B  F02F         	goto	u17250
 31872  005E32                     u17251:
 31873  005E32  EF33  F02F         	goto	l3111
 31874  005E36                     u17250:
 31875  005E36                     
 31876                           ; BSR set to: 0
 31877  005E36  C09D  F096         	movff	___fladd@grs,??___fladd
 31878  005E3A  0E7F               	movlw	127
 31879  005E3C  1796               	andwf	??___fladd& (0+255),f,b
 31880  005E3E  B4D8               	btfsc	status,2,c
 31881  005E40  EF24  F02F         	goto	u17261
 31882  005E44  EF26  F02F         	goto	u17260
 31883  005E48                     u17261:
 31884  005E48  EF2A  F02F         	goto	l3112
 31885  005E4C                     u17260:
 31886  005E4C                     l16386:
 31887                           
 31888                           ; BSR set to: 0
 31889  005E4C  0E01               	movlw	1
 31890  005E4E  6F9B               	movwf	___fladd@aexp& (0+255),b
 31891  005E50  EF33  F02F         	goto	l3111
 31892  005E54                     l3112:
 31893                           
 31894                           ; BSR set to: 0
 31895  005E54  A18E               	btfss	___fladd@b& (0+255),0,b
 31896  005E56  EF2F  F02F         	goto	u17271
 31897  005E5A  EF31  F02F         	goto	u17270
 31898  005E5E                     u17271:
 31899  005E5E  EF33  F02F         	goto	l3111
 31900  005E62                     u17270:
 31901  005E62  EF26  F02F         	goto	l16386
 31902  005E66                     l3111:
 31903                           
 31904                           ; BSR set to: 0
 31905  005E66  519B               	movf	___fladd@aexp& (0+255),w,b
 31906  005E68  B4D8               	btfsc	status,2,c
 31907  005E6A  EF39  F02F         	goto	u17281
 31908  005E6E  EF3B  F02F         	goto	u17280
 31909  005E72                     u17281:
 31910  005E72  EF66  F02F         	goto	l16398
 31911  005E76                     u17280:
 31912  005E76                     
 31913                           ; BSR set to: 0
 31914  005E76  0E01               	movlw	1
 31915  005E78  278E               	addwf	___fladd@b& (0+255),f,b
 31916  005E7A  0E00               	movlw	0
 31917  005E7C  238F               	addwfc	(___fladd@b+1)& (0+255),f,b
 31918  005E7E  2390               	addwfc	(___fladd@b+2)& (0+255),f,b
 31919  005E80  2391               	addwfc	(___fladd@b+3)& (0+255),f,b
 31920  005E82                     
 31921                           ; BSR set to: 0
 31922  005E82  A191               	btfss	(___fladd@b+3)& (0+255),0,b
 31923  005E84  EF46  F02F         	goto	u17291
 31924  005E88  EF48  F02F         	goto	u17290
 31925  005E8C                     u17291:
 31926  005E8C  EF66  F02F         	goto	l16398
 31927  005E90                     u17290:
 31928  005E90                     
 31929                           ; BSR set to: 0
 31930  005E90  C08E  F096         	movff	___fladd@b,??___fladd
 31931  005E94  C08F  F097         	movff	___fladd@b+1,??___fladd+1
 31932  005E98  C090  F098         	movff	___fladd@b+2,??___fladd+2
 31933  005E9C  C091  F099         	movff	___fladd@b+3,??___fladd+3
 31934  005EA0  3599               	rlcf	(??___fladd+3)& (0+255),w,b
 31935  005EA2  3399               	rrcf	(??___fladd+3)& (0+255),f,b
 31936  005EA4  3398               	rrcf	(??___fladd+2)& (0+255),f,b
 31937  005EA6  3397               	rrcf	(??___fladd+1)& (0+255),f,b
 31938  005EA8  3396               	rrcf	??___fladd& (0+255),f,b
 31939  005EAA  C096  F08E         	movff	??___fladd,___fladd@b
 31940  005EAE  C097  F08F         	movff	??___fladd+1,___fladd@b+1
 31941  005EB2  C098  F090         	movff	??___fladd+2,___fladd@b+2
 31942  005EB6  C099  F091         	movff	??___fladd+3,___fladd@b+3
 31943  005EBA  299C               	incf	___fladd@bexp& (0+255),w,b
 31944  005EBC  B4D8               	btfsc	status,2,c
 31945  005EBE  EF63  F02F         	goto	u17301
 31946  005EC2  EF65  F02F         	goto	u17300
 31947  005EC6                     u17301:
 31948  005EC6  EF66  F02F         	goto	l16398
 31949  005ECA                     u17300:
 31950  005ECA                     
 31951                           ; BSR set to: 0
 31952  005ECA  2B9C               	incf	___fladd@bexp& (0+255),f,b
 31953  005ECC                     l16398:
 31954                           
 31955                           ; BSR set to: 0
 31956  005ECC  299C               	incf	___fladd@bexp& (0+255),w,b
 31957  005ECE  B4D8               	btfsc	status,2,c
 31958  005ED0  EF6C  F02F         	goto	u17311
 31959  005ED4  EF6E  F02F         	goto	u17310
 31960  005ED8                     u17311:
 31961  005ED8  EF76  F02F         	goto	l16402
 31962  005EDC                     u17310:
 31963  005EDC                     
 31964                           ; BSR set to: 0
 31965  005EDC  519C               	movf	___fladd@bexp& (0+255),w,b
 31966  005EDE  A4D8               	btfss	status,2,c
 31967  005EE0  EF74  F02F         	goto	u17321
 31968  005EE4  EF76  F02F         	goto	u17320
 31969  005EE8                     u17321:
 31970  005EE8  EF88  F02F         	goto	l16406
 31971  005EEC                     u17320:
 31972  005EEC                     l16402:
 31973                           
 31974                           ; BSR set to: 0
 31975  005EEC  0E00               	movlw	0
 31976  005EEE  6F8E               	movwf	___fladd@b& (0+255),b
 31977  005EF0  0E00               	movlw	0
 31978  005EF2  6F8F               	movwf	(___fladd@b+1)& (0+255),b
 31979  005EF4  0E00               	movlw	0
 31980  005EF6  6F90               	movwf	(___fladd@b+2)& (0+255),b
 31981  005EF8  0E00               	movlw	0
 31982  005EFA  6F91               	movwf	(___fladd@b+3)& (0+255),b
 31983  005EFC  519C               	movf	___fladd@bexp& (0+255),w,b
 31984  005EFE  A4D8               	btfss	status,2,c
 31985  005F00  EF84  F02F         	goto	u17331
 31986  005F04  EF86  F02F         	goto	u17330
 31987  005F08                     u17331:
 31988  005F08  EF88  F02F         	goto	l16406
 31989  005F0C                     u17330:
 31990  005F0C                     
 31991                           ; BSR set to: 0
 31992  005F0C  0E00               	movlw	0
 31993  005F0E  6F9A               	movwf	___fladd@signs& (0+255),b
 31994  005F10                     l16406:
 31995                           
 31996                           ; BSR set to: 0
 31997  005F10  A19C               	btfss	___fladd@bexp& (0+255),0,b
 31998  005F12  EF8D  F02F         	goto	u17341
 31999  005F16  EF8F  F02F         	goto	u17340
 32000  005F1A                     u17341:
 32001  005F1A  EF92  F02F         	goto	l16410
 32002  005F1E                     u17340:
 32003  005F1E                     
 32004                           ; BSR set to: 0
 32005  005F1E  8F90               	bsf	(___fladd@b+2)& (0+255),7,b
 32006  005F20  EF93  F02F         	goto	l16412
 32007  005F24                     l16410:
 32008                           
 32009                           ; BSR set to: 0
 32010  005F24  9F90               	bcf	(___fladd@b+2)& (0+255),7,b
 32011  005F26                     l16412:
 32012                           
 32013                           ; BSR set to: 0
 32014  005F26  90D8               	bcf	status,0,c
 32015  005F28  319C               	rrcf	___fladd@bexp& (0+255),w,b
 32016  005F2A  6F91               	movwf	(___fladd@b+3)& (0+255),b
 32017  005F2C                     
 32018                           ; BSR set to: 0
 32019  005F2C  AF9A               	btfss	___fladd@signs& (0+255),7,b
 32020  005F2E  EF9B  F02F         	goto	u17351
 32021  005F32  EF9D  F02F         	goto	u17350
 32022  005F36                     u17351:
 32023  005F36  EF9E  F02F         	goto	l16418
 32024  005F3A                     u17350:
 32025  005F3A                     
 32026                           ; BSR set to: 0
 32027  005F3A  8F91               	bsf	(___fladd@b+3)& (0+255),7,b
 32028  005F3C                     l16418:
 32029                           
 32030                           ; BSR set to: 0
 32031  005F3C  C08E  F08E         	movff	___fladd@b,?___fladd
 32032  005F40  C08F  F08F         	movff	___fladd@b+1,?___fladd+1
 32033  005F44  C090  F090         	movff	___fladd@b+2,?___fladd+2
 32034  005F48  C091  F091         	movff	___fladd@b+3,?___fladd+3
 32035  005F4C                     l3094:
 32036                           
 32037                           ; BSR set to: 0
 32038  005F4C  0012               	return		;funcret
 32039  005F4E                     __end_of___fladd:
 32040                           	callstack 0
 32041                           
 32042 ;; *************** function ___flmul *****************
 32043 ;; Defined at:
 32044 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
 32045 ;; Parameters:    Size  Location     Type
 32046 ;;  b               4    8[BANK0 ] unsigned char 
 32047 ;;  a               4   12[BANK0 ] unsigned char 
 32048 ;; Auto vars:     Size  Location     Type
 32049 ;;  prod            4   27[BANK0 ] struct .
 32050 ;;  grs             4   22[BANK0 ] unsigned long 
 32051 ;;  temp            2   31[BANK0 ] struct .
 32052 ;;  bexp            1   26[BANK0 ] unsigned char 
 32053 ;;  aexp            1   21[BANK0 ] unsigned char 
 32054 ;;  sign            1   20[BANK0 ] unsigned char 
 32055 ;; Return value:  Size  Location     Type
 32056 ;;                  4    8[BANK0 ] unsigned char 
 32057 ;; Registers used:
 32058 ;;		wreg, status,2, status,0, prodl, prodh
 32059 ;; Tracked objects:
 32060 ;;		On entry : 0/0
 32061 ;;		On exit  : 0/0
 32062 ;;		Unchanged: 0/0
 32063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32064 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32065 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32067 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32068 ;;Total ram usage:       25 bytes
 32069 ;; Hardware stack levels used: 1
 32070 ;; Hardware stack levels required when called: 3
 32071 ;; This function calls:
 32072 ;;		Nothing
 32073 ;; This function is called by:
 32074 ;;		_Kalman_updateEstimate
 32075 ;;		_gasSensor_read
 32076 ;;		_gasSensor_calib
 32077 ;;		_gasSensor_temperature_cmp_coefficient
 32078 ;;		_ADCto_uVoltage
 32079 ;;		_sensor_temp_fahrenheit
 32080 ;;		_CMP_temp_read
 32081 ;;		__atof
 32082 ;;		_fround
 32083 ;;		_scale
 32084 ;;		_sprintf
 32085 ;;		_pow
 32086 ;;		_exp
 32087 ;;		_eval_poly
 32088 ;;		_log
 32089 ;;		_calc_raw_temperature
 32090 ;;		_calc_raw_humidity
 32091 ;;		_Average_filter
 32092 ;; This function uses a non-reentrant model
 32093 ;;
 32094                           
 32095                           	psect	text146
 32096  005F4E                     __ptext146:
 32097                           	callstack 0
 32098  005F4E                     ___flmul:
 32099                           	callstack 21
 32100  005F4E  0100               	movlb	0	; () banked
 32101  005F50  516B               	movf	(___flmul@b+3)& (0+255),w,b
 32102  005F52  0B80               	andlw	128
 32103  005F54  6F74               	movwf	___flmul@sign& (0+255),b
 32104  005F56  516B               	movf	(___flmul@b+3)& (0+255),w,b
 32105  005F58  256B               	addwf	(___flmul@b+3)& (0+255),w,b
 32106  005F5A  6F7A               	movwf	___flmul@bexp& (0+255),b
 32107  005F5C                     
 32108                           ; BSR set to: 0
 32109  005F5C  AF6A               	btfss	(___flmul@b+2)& (0+255),7,b
 32110  005F5E  EFB3  F02F         	goto	u17361
 32111  005F62  EFB5  F02F         	goto	u17360
 32112  005F66                     u17361:
 32113  005F66  EFB6  F02F         	goto	l16428
 32114  005F6A                     u17360:
 32115  005F6A                     
 32116                           ; BSR set to: 0
 32117  005F6A  817A               	bsf	___flmul@bexp& (0+255),0,b
 32118  005F6C                     l16428:
 32119                           
 32120                           ; BSR set to: 0
 32121  005F6C  517A               	movf	___flmul@bexp& (0+255),w,b
 32122  005F6E  B4D8               	btfsc	status,2,c
 32123  005F70  EFBC  F02F         	goto	u17371
 32124  005F74  EFBE  F02F         	goto	u17370
 32125  005F78                     u17371:
 32126  005F78  EFD1  F02F         	goto	l16436
 32127  005F7C                     u17370:
 32128  005F7C                     
 32129                           ; BSR set to: 0
 32130  005F7C  297A               	incf	___flmul@bexp& (0+255),w,b
 32131  005F7E  A4D8               	btfss	status,2,c
 32132  005F80  EFC4  F02F         	goto	u17381
 32133  005F84  EFC6  F02F         	goto	u17380
 32134  005F88                     u17381:
 32135  005F88  EFCE  F02F         	goto	l16434
 32136  005F8C                     u17380:
 32137  005F8C                     
 32138                           ; BSR set to: 0
 32139  005F8C  0E00               	movlw	0
 32140  005F8E  6F68               	movwf	___flmul@b& (0+255),b
 32141  005F90  0E00               	movlw	0
 32142  005F92  6F69               	movwf	(___flmul@b+1)& (0+255),b
 32143  005F94  0E00               	movlw	0
 32144  005F96  6F6A               	movwf	(___flmul@b+2)& (0+255),b
 32145  005F98  0E00               	movlw	0
 32146  005F9A  6F6B               	movwf	(___flmul@b+3)& (0+255),b
 32147  005F9C                     l16434:
 32148                           
 32149                           ; BSR set to: 0
 32150  005F9C  8F6A               	bsf	(___flmul@b+2)& (0+255),7,b
 32151  005F9E  EFD9  F02F         	goto	l16438
 32152  005FA2                     l16436:
 32153                           
 32154                           ; BSR set to: 0
 32155  005FA2  0E00               	movlw	0
 32156  005FA4  6F68               	movwf	___flmul@b& (0+255),b
 32157  005FA6  0E00               	movlw	0
 32158  005FA8  6F69               	movwf	(___flmul@b+1)& (0+255),b
 32159  005FAA  0E00               	movlw	0
 32160  005FAC  6F6A               	movwf	(___flmul@b+2)& (0+255),b
 32161  005FAE  0E00               	movlw	0
 32162  005FB0  6F6B               	movwf	(___flmul@b+3)& (0+255),b
 32163  005FB2                     l16438:
 32164                           
 32165                           ; BSR set to: 0
 32166  005FB2  516F               	movf	(___flmul@a+3)& (0+255),w,b
 32167  005FB4  0B80               	andlw	128
 32168  005FB6  1B74               	xorwf	___flmul@sign& (0+255),f,b
 32169  005FB8                     
 32170                           ; BSR set to: 0
 32171  005FB8  516F               	movf	(___flmul@a+3)& (0+255),w,b
 32172  005FBA  256F               	addwf	(___flmul@a+3)& (0+255),w,b
 32173  005FBC  6F75               	movwf	___flmul@aexp& (0+255),b
 32174  005FBE                     
 32175                           ; BSR set to: 0
 32176  005FBE  AF6E               	btfss	(___flmul@a+2)& (0+255),7,b
 32177  005FC0  EFE4  F02F         	goto	u17391
 32178  005FC4  EFE6  F02F         	goto	u17390
 32179  005FC8                     u17391:
 32180  005FC8  EFE7  F02F         	goto	l16446
 32181  005FCC                     u17390:
 32182  005FCC                     
 32183                           ; BSR set to: 0
 32184  005FCC  8175               	bsf	___flmul@aexp& (0+255),0,b
 32185  005FCE                     l16446:
 32186                           
 32187                           ; BSR set to: 0
 32188  005FCE  5175               	movf	___flmul@aexp& (0+255),w,b
 32189  005FD0  B4D8               	btfsc	status,2,c
 32190  005FD2  EFED  F02F         	goto	u17401
 32191  005FD6  EFEF  F02F         	goto	u17400
 32192  005FDA                     u17401:
 32193  005FDA  EF02  F030         	goto	l16454
 32194  005FDE                     u17400:
 32195  005FDE                     
 32196                           ; BSR set to: 0
 32197  005FDE  2975               	incf	___flmul@aexp& (0+255),w,b
 32198  005FE0  A4D8               	btfss	status,2,c
 32199  005FE2  EFF5  F02F         	goto	u17411
 32200  005FE6  EFF7  F02F         	goto	u17410
 32201  005FEA                     u17411:
 32202  005FEA  EFFF  F02F         	goto	l16452
 32203  005FEE                     u17410:
 32204  005FEE                     
 32205                           ; BSR set to: 0
 32206  005FEE  0E00               	movlw	0
 32207  005FF0  6F6C               	movwf	___flmul@a& (0+255),b
 32208  005FF2  0E00               	movlw	0
 32209  005FF4  6F6D               	movwf	(___flmul@a+1)& (0+255),b
 32210  005FF6  0E00               	movlw	0
 32211  005FF8  6F6E               	movwf	(___flmul@a+2)& (0+255),b
 32212  005FFA  0E00               	movlw	0
 32213  005FFC  6F6F               	movwf	(___flmul@a+3)& (0+255),b
 32214  005FFE                     l16452:
 32215                           
 32216                           ; BSR set to: 0
 32217  005FFE  8F6E               	bsf	(___flmul@a+2)& (0+255),7,b
 32218  006000  EF0A  F030         	goto	l3171
 32219  006004                     l16454:
 32220                           
 32221                           ; BSR set to: 0
 32222  006004  0E00               	movlw	0
 32223  006006  6F6C               	movwf	___flmul@a& (0+255),b
 32224  006008  0E00               	movlw	0
 32225  00600A  6F6D               	movwf	(___flmul@a+1)& (0+255),b
 32226  00600C  0E00               	movlw	0
 32227  00600E  6F6E               	movwf	(___flmul@a+2)& (0+255),b
 32228  006010  0E00               	movlw	0
 32229  006012  6F6F               	movwf	(___flmul@a+3)& (0+255),b
 32230  006014                     l3171:
 32231                           
 32232                           ; BSR set to: 0
 32233  006014  5175               	movf	___flmul@aexp& (0+255),w,b
 32234  006016  B4D8               	btfsc	status,2,c
 32235  006018  EF10  F030         	goto	u17421
 32236  00601C  EF12  F030         	goto	u17420
 32237  006020                     u17421:
 32238  006020  EF1A  F030         	goto	l16458
 32239  006024                     u17420:
 32240  006024                     
 32241                           ; BSR set to: 0
 32242  006024  517A               	movf	___flmul@bexp& (0+255),w,b
 32243  006026  A4D8               	btfss	status,2,c
 32244  006028  EF18  F030         	goto	u17431
 32245  00602C  EF1A  F030         	goto	u17430
 32246  006030                     u17431:
 32247  006030  EF24  F030         	goto	l16462
 32248  006034                     u17430:
 32249  006034                     l16458:
 32250                           
 32251                           ; BSR set to: 0
 32252  006034  0E00               	movlw	0
 32253  006036  6F68               	movwf	?___flmul& (0+255),b
 32254  006038  0E00               	movlw	0
 32255  00603A  6F69               	movwf	(?___flmul+1)& (0+255),b
 32256  00603C  0E00               	movlw	0
 32257  00603E  6F6A               	movwf	(?___flmul+2)& (0+255),b
 32258  006040  0E00               	movlw	0
 32259  006042  6F6B               	movwf	(?___flmul+3)& (0+255),b
 32260  006044  EFBC  F031         	goto	l3175
 32261  006048                     l16462:
 32262                           
 32263                           ; BSR set to: 0
 32264  006048  516E               	movf	(___flmul@a+2)& (0+255),w,b
 32265  00604A  0368               	mulwf	___flmul@b& (0+255),b
 32266  00604C  CFF3 F07F          	movff	prodl,___flmul@temp
 32267  006050  CFF4 F080          	movff	prodh,___flmul@temp+1
 32268  006054                     
 32269                           ; BSR set to: 0
 32270  006054  517F               	movf	___flmul@temp& (0+255),w,b
 32271  006056  6F76               	movwf	___flmul@grs& (0+255),b
 32272  006058  6B77               	clrf	(___flmul@grs+1)& (0+255),b
 32273  00605A  6B78               	clrf	(___flmul@grs+2)& (0+255),b
 32274  00605C  6B79               	clrf	(___flmul@grs+3)& (0+255),b
 32275  00605E                     
 32276                           ; BSR set to: 0
 32277  00605E  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32278  006060  6F7B               	movwf	___flmul@prod& (0+255),b
 32279  006062  6B7C               	clrf	(___flmul@prod+1)& (0+255),b
 32280  006064  6B7D               	clrf	(___flmul@prod+2)& (0+255),b
 32281  006066  6B7E               	clrf	(___flmul@prod+3)& (0+255),b
 32282  006068  516D               	movf	(___flmul@a+1)& (0+255),w,b
 32283  00606A  0369               	mulwf	(___flmul@b+1)& (0+255),b
 32284  00606C  CFF3 F07F          	movff	prodl,___flmul@temp
 32285  006070  CFF4 F080          	movff	prodh,___flmul@temp+1
 32286  006074                     
 32287                           ; BSR set to: 0
 32288  006074  517F               	movf	___flmul@temp& (0+255),w,b
 32289  006076  2776               	addwf	___flmul@grs& (0+255),f,b
 32290  006078  0E00               	movlw	0
 32291  00607A  2377               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32292  00607C  2378               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32293  00607E  2379               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32294  006080                     
 32295                           ; BSR set to: 0
 32296  006080  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32297  006082  277B               	addwf	___flmul@prod& (0+255),f,b
 32298  006084  0E00               	movlw	0
 32299  006086  237C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32300  006088  237D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32301  00608A  237E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32302  00608C  516C               	movf	___flmul@a& (0+255),w,b
 32303  00608E  036A               	mulwf	(___flmul@b+2)& (0+255),b
 32304  006090  CFF3 F07F          	movff	prodl,___flmul@temp
 32305  006094  CFF4 F080          	movff	prodh,___flmul@temp+1
 32306  006098                     
 32307                           ; BSR set to: 0
 32308  006098  517F               	movf	___flmul@temp& (0+255),w,b
 32309  00609A  2776               	addwf	___flmul@grs& (0+255),f,b
 32310  00609C  0E00               	movlw	0
 32311  00609E  2377               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32312  0060A0  2378               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32313  0060A2  2379               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32314  0060A4                     
 32315                           ; BSR set to: 0
 32316  0060A4  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32317  0060A6  277B               	addwf	___flmul@prod& (0+255),f,b
 32318  0060A8  0E00               	movlw	0
 32319  0060AA  237C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32320  0060AC  237D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32321  0060AE  237E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32322  0060B0                     
 32323                           ; BSR set to: 0
 32324  0060B0  C078  F079         	movff	___flmul@grs+2,___flmul@grs+3
 32325  0060B4  C077  F078         	movff	___flmul@grs+1,___flmul@grs+2
 32326  0060B8  C076  F077         	movff	___flmul@grs,___flmul@grs+1
 32327  0060BC  6B76               	clrf	___flmul@grs& (0+255),b
 32328  0060BE                     
 32329                           ; BSR set to: 0
 32330  0060BE  516C               	movf	___flmul@a& (0+255),w,b
 32331  0060C0  0369               	mulwf	(___flmul@b+1)& (0+255),b
 32332  0060C2  CFF3 F07F          	movff	prodl,___flmul@temp
 32333  0060C6  CFF4 F080          	movff	prodh,___flmul@temp+1
 32334  0060CA                     
 32335                           ; BSR set to: 0
 32336  0060CA  517F               	movf	___flmul@temp& (0+255),w,b
 32337  0060CC  2776               	addwf	___flmul@grs& (0+255),f,b
 32338  0060CE  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32339  0060D0  2377               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32340  0060D2  0E00               	movlw	0
 32341  0060D4  2378               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32342  0060D6  0E00               	movlw	0
 32343  0060D8  2379               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32344  0060DA                     
 32345                           ; BSR set to: 0
 32346  0060DA  516D               	movf	(___flmul@a+1)& (0+255),w,b
 32347  0060DC  0368               	mulwf	___flmul@b& (0+255),b
 32348  0060DE  CFF3 F07F          	movff	prodl,___flmul@temp
 32349  0060E2  CFF4 F080          	movff	prodh,___flmul@temp+1
 32350  0060E6                     
 32351                           ; BSR set to: 0
 32352  0060E6  517F               	movf	___flmul@temp& (0+255),w,b
 32353  0060E8  2776               	addwf	___flmul@grs& (0+255),f,b
 32354  0060EA  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32355  0060EC  2377               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32356  0060EE  0E00               	movlw	0
 32357  0060F0  2378               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32358  0060F2  0E00               	movlw	0
 32359  0060F4  2379               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32360  0060F6                     
 32361                           ; BSR set to: 0
 32362  0060F6  C078  F079         	movff	___flmul@grs+2,___flmul@grs+3
 32363  0060FA  C077  F078         	movff	___flmul@grs+1,___flmul@grs+2
 32364  0060FE  C076  F077         	movff	___flmul@grs,___flmul@grs+1
 32365  006102  6B76               	clrf	___flmul@grs& (0+255),b
 32366  006104  516C               	movf	___flmul@a& (0+255),w,b
 32367  006106  0368               	mulwf	___flmul@b& (0+255),b
 32368  006108  CFF3 F07F          	movff	prodl,___flmul@temp
 32369  00610C  CFF4 F080          	movff	prodh,___flmul@temp+1
 32370  006110                     
 32371                           ; BSR set to: 0
 32372  006110  517F               	movf	___flmul@temp& (0+255),w,b
 32373  006112  2776               	addwf	___flmul@grs& (0+255),f,b
 32374  006114  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32375  006116  2377               	addwfc	(___flmul@grs+1)& (0+255),f,b
 32376  006118  0E00               	movlw	0
 32377  00611A  2378               	addwfc	(___flmul@grs+2)& (0+255),f,b
 32378  00611C  0E00               	movlw	0
 32379  00611E  2379               	addwfc	(___flmul@grs+3)& (0+255),f,b
 32380  006120                     
 32381                           ; BSR set to: 0
 32382  006120  516E               	movf	(___flmul@a+2)& (0+255),w,b
 32383  006122  0369               	mulwf	(___flmul@b+1)& (0+255),b
 32384  006124  CFF3 F07F          	movff	prodl,___flmul@temp
 32385  006128  CFF4 F080          	movff	prodh,___flmul@temp+1
 32386  00612C  517F               	movf	___flmul@temp& (0+255),w,b
 32387  00612E  277B               	addwf	___flmul@prod& (0+255),f,b
 32388  006130  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32389  006132  237C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32390  006134  0E00               	movlw	0
 32391  006136  237D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32392  006138  0E00               	movlw	0
 32393  00613A  237E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32394  00613C                     
 32395                           ; BSR set to: 0
 32396  00613C  516D               	movf	(___flmul@a+1)& (0+255),w,b
 32397  00613E  036A               	mulwf	(___flmul@b+2)& (0+255),b
 32398  006140  CFF3 F07F          	movff	prodl,___flmul@temp
 32399  006144  CFF4 F080          	movff	prodh,___flmul@temp+1
 32400  006148                     
 32401                           ; BSR set to: 0
 32402  006148  517F               	movf	___flmul@temp& (0+255),w,b
 32403  00614A  277B               	addwf	___flmul@prod& (0+255),f,b
 32404  00614C  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32405  00614E  237C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32406  006150  0E00               	movlw	0
 32407  006152  237D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32408  006154  0E00               	movlw	0
 32409  006156  237E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32410  006158  516E               	movf	(___flmul@a+2)& (0+255),w,b
 32411  00615A  036A               	mulwf	(___flmul@b+2)& (0+255),b
 32412  00615C  CFF3 F07F          	movff	prodl,___flmul@temp
 32413  006160  CFF4 F080          	movff	prodh,___flmul@temp+1
 32414  006164                     
 32415                           ; BSR set to: 0
 32416  006164  517F               	movf	___flmul@temp& (0+255),w,b
 32417  006166  6F70               	movwf	??___flmul& (0+255),b
 32418  006168  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32419  00616A  6F71               	movwf	(??___flmul+1)& (0+255),b
 32420  00616C  6B72               	clrf	(??___flmul+2)& (0+255),b
 32421  00616E  6B73               	clrf	(??___flmul+3)& (0+255),b
 32422  006170  C072  F073         	movff	??___flmul+2,??___flmul+3
 32423  006174  C071  F072         	movff	??___flmul+1,??___flmul+2
 32424  006178  C070  F071         	movff	??___flmul,??___flmul+1
 32425  00617C  6B70               	clrf	??___flmul& (0+255),b
 32426  00617E  5170               	movf	??___flmul& (0+255),w,b
 32427  006180  277B               	addwf	___flmul@prod& (0+255),f,b
 32428  006182  5171               	movf	(??___flmul+1)& (0+255),w,b
 32429  006184  237C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32430  006186  5172               	movf	(??___flmul+2)& (0+255),w,b
 32431  006188  237D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32432  00618A  5173               	movf	(??___flmul+3)& (0+255),w,b
 32433  00618C  237E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32434  00618E                     
 32435                           ; BSR set to: 0
 32436  00618E  C076  F070         	movff	___flmul@grs,??___flmul
 32437  006192  C077  F071         	movff	___flmul@grs+1,??___flmul+1
 32438  006196  C078  F072         	movff	___flmul@grs+2,??___flmul+2
 32439  00619A  C079  F073         	movff	___flmul@grs+3,??___flmul+3
 32440  00619E  0E19               	movlw	25
 32441  0061A0  EFD7  F030         	goto	u17440
 32442  0061A4                     u17445:
 32443  0061A4  90D8               	bcf	status,0,c
 32444  0061A6  3373               	rrcf	(??___flmul+3)& (0+255),f,b
 32445  0061A8  3372               	rrcf	(??___flmul+2)& (0+255),f,b
 32446  0061AA  3371               	rrcf	(??___flmul+1)& (0+255),f,b
 32447  0061AC  3370               	rrcf	??___flmul& (0+255),f,b
 32448  0061AE                     u17440:
 32449  0061AE  2EE8               	decfsz	wreg,f,c
 32450  0061B0  EFD2  F030         	goto	u17445
 32451  0061B4  5170               	movf	??___flmul& (0+255),w,b
 32452  0061B6  277B               	addwf	___flmul@prod& (0+255),f,b
 32453  0061B8  5171               	movf	(??___flmul+1)& (0+255),w,b
 32454  0061BA  237C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32455  0061BC  5172               	movf	(??___flmul+2)& (0+255),w,b
 32456  0061BE  237D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32457  0061C0  5173               	movf	(??___flmul+3)& (0+255),w,b
 32458  0061C2  237E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32459  0061C4                     
 32460                           ; BSR set to: 0
 32461  0061C4  C078  F079         	movff	___flmul@grs+2,___flmul@grs+3
 32462  0061C8  C077  F078         	movff	___flmul@grs+1,___flmul@grs+2
 32463  0061CC  C076  F077         	movff	___flmul@grs,___flmul@grs+1
 32464  0061D0  6B76               	clrf	___flmul@grs& (0+255),b
 32465  0061D2                     
 32466                           ; BSR set to: 0
 32467  0061D2  5175               	movf	___flmul@aexp& (0+255),w,b
 32468  0061D4  C07A  F070         	movff	___flmul@bexp,??___flmul
 32469  0061D8  6B71               	clrf	(??___flmul+1)& (0+255),b
 32470  0061DA  2770               	addwf	??___flmul& (0+255),f,b
 32471  0061DC  0E00               	movlw	0
 32472  0061DE  2371               	addwfc	(??___flmul+1)& (0+255),f,b
 32473  0061E0  0E82               	movlw	130
 32474  0061E2  2570               	addwf	??___flmul& (0+255),w,b
 32475  0061E4  6F7F               	movwf	___flmul@temp& (0+255),b
 32476  0061E6  0EFF               	movlw	255
 32477  0061E8  2171               	addwfc	(??___flmul+1)& (0+255),w,b
 32478  0061EA  6F80               	movwf	(___flmul@temp+1)& (0+255),b
 32479  0061EC  EF0D  F031         	goto	l16510
 32480  0061F0                     l16504:
 32481                           
 32482                           ; BSR set to: 0
 32483  0061F0  90D8               	bcf	status,0,c
 32484  0061F2  377B               	rlcf	___flmul@prod& (0+255),f,b
 32485  0061F4  377C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 32486  0061F6  377D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 32487  0061F8  377E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 32488  0061FA                     
 32489                           ; BSR set to: 0
 32490  0061FA  AF79               	btfss	(___flmul@grs+3)& (0+255),7,b
 32491  0061FC  EF02  F031         	goto	u17451
 32492  006200  EF04  F031         	goto	u17450
 32493  006204                     u17451:
 32494  006204  EF05  F031         	goto	l3178
 32495  006208                     u17450:
 32496  006208                     
 32497                           ; BSR set to: 0
 32498  006208  817B               	bsf	___flmul@prod& (0+255),0,b
 32499  00620A                     l3178:
 32500                           
 32501                           ; BSR set to: 0
 32502  00620A  90D8               	bcf	status,0,c
 32503  00620C  3776               	rlcf	___flmul@grs& (0+255),f,b
 32504  00620E  3777               	rlcf	(___flmul@grs+1)& (0+255),f,b
 32505  006210  3778               	rlcf	(___flmul@grs+2)& (0+255),f,b
 32506  006212  3779               	rlcf	(___flmul@grs+3)& (0+255),f,b
 32507  006214  077F               	decf	___flmul@temp& (0+255),f,b
 32508  006216  A0D8               	btfss	status,0,c
 32509  006218  0780               	decf	(___flmul@temp+1)& (0+255),f,b
 32510  00621A                     l16510:
 32511                           
 32512                           ; BSR set to: 0
 32513  00621A  AF7D               	btfss	(___flmul@prod+2)& (0+255),7,b
 32514  00621C  EF12  F031         	goto	u17461
 32515  006220  EF14  F031         	goto	u17460
 32516  006224                     u17461:
 32517  006224  EFF8  F030         	goto	l16504
 32518  006228                     u17460:
 32519  006228                     
 32520                           ; BSR set to: 0
 32521  006228  0E00               	movlw	0
 32522  00622A  6F75               	movwf	___flmul@aexp& (0+255),b
 32523  00622C                     
 32524                           ; BSR set to: 0
 32525  00622C  AF79               	btfss	(___flmul@grs+3)& (0+255),7,b
 32526  00622E  EF1B  F031         	goto	u17471
 32527  006232  EF1D  F031         	goto	u17470
 32528  006236                     u17471:
 32529  006236  EF41  F031         	goto	l3180
 32530  00623A                     u17470:
 32531  00623A                     
 32532                           ; BSR set to: 0
 32533  00623A  0EFF               	movlw	255
 32534  00623C  1576               	andwf	___flmul@grs& (0+255),w,b
 32535  00623E  6F70               	movwf	??___flmul& (0+255),b
 32536  006240  0EFF               	movlw	255
 32537  006242  1577               	andwf	(___flmul@grs+1)& (0+255),w,b
 32538  006244  6F71               	movwf	(??___flmul+1)& (0+255),b
 32539  006246  0EFF               	movlw	255
 32540  006248  1578               	andwf	(___flmul@grs+2)& (0+255),w,b
 32541  00624A  6F72               	movwf	(??___flmul+2)& (0+255),b
 32542  00624C  0E7F               	movlw	127
 32543  00624E  1579               	andwf	(___flmul@grs+3)& (0+255),w,b
 32544  006250  6F73               	movwf	(??___flmul+3)& (0+255),b
 32545  006252  5170               	movf	??___flmul& (0+255),w,b
 32546  006254  1171               	iorwf	(??___flmul+1)& (0+255),w,b
 32547  006256  1172               	iorwf	(??___flmul+2)& (0+255),w,b
 32548  006258  1173               	iorwf	(??___flmul+3)& (0+255),w,b
 32549  00625A  B4D8               	btfsc	status,2,c
 32550  00625C  EF32  F031         	goto	u17481
 32551  006260  EF34  F031         	goto	u17480
 32552  006264                     u17481:
 32553  006264  EF38  F031         	goto	l3181
 32554  006268                     u17480:
 32555  006268                     l16518:
 32556                           
 32557                           ; BSR set to: 0
 32558  006268  0E01               	movlw	1
 32559  00626A  6F75               	movwf	___flmul@aexp& (0+255),b
 32560  00626C  EF41  F031         	goto	l3180
 32561  006270                     l3181:
 32562                           
 32563                           ; BSR set to: 0
 32564  006270  A17B               	btfss	___flmul@prod& (0+255),0,b
 32565  006272  EF3D  F031         	goto	u17491
 32566  006276  EF3F  F031         	goto	u17490
 32567  00627A                     u17491:
 32568  00627A  EF41  F031         	goto	l3180
 32569  00627E                     u17490:
 32570  00627E  EF34  F031         	goto	l16518
 32571  006282                     l3180:
 32572                           
 32573                           ; BSR set to: 0
 32574  006282  5175               	movf	___flmul@aexp& (0+255),w,b
 32575  006284  B4D8               	btfsc	status,2,c
 32576  006286  EF47  F031         	goto	u17501
 32577  00628A  EF49  F031         	goto	u17500
 32578  00628E                     u17501:
 32579  00628E  EF6D  F031         	goto	l16530
 32580  006292                     u17500:
 32581  006292                     
 32582                           ; BSR set to: 0
 32583  006292  0E01               	movlw	1
 32584  006294  277B               	addwf	___flmul@prod& (0+255),f,b
 32585  006296  0E00               	movlw	0
 32586  006298  237C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32587  00629A  237D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32588  00629C  237E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32589  00629E                     
 32590                           ; BSR set to: 0
 32591  00629E  A17E               	btfss	(___flmul@prod+3)& (0+255),0,b
 32592  0062A0  EF54  F031         	goto	u17511
 32593  0062A4  EF56  F031         	goto	u17510
 32594  0062A8                     u17511:
 32595  0062A8  EF6D  F031         	goto	l16530
 32596  0062AC                     u17510:
 32597  0062AC                     
 32598                           ; BSR set to: 0
 32599  0062AC  C07B  F070         	movff	___flmul@prod,??___flmul
 32600  0062B0  C07C  F071         	movff	___flmul@prod+1,??___flmul+1
 32601  0062B4  C07D  F072         	movff	___flmul@prod+2,??___flmul+2
 32602  0062B8  C07E  F073         	movff	___flmul@prod+3,??___flmul+3
 32603  0062BC  3573               	rlcf	(??___flmul+3)& (0+255),w,b
 32604  0062BE  3373               	rrcf	(??___flmul+3)& (0+255),f,b
 32605  0062C0  3372               	rrcf	(??___flmul+2)& (0+255),f,b
 32606  0062C2  3371               	rrcf	(??___flmul+1)& (0+255),f,b
 32607  0062C4  3370               	rrcf	??___flmul& (0+255),f,b
 32608  0062C6  C070  F07B         	movff	??___flmul,___flmul@prod
 32609  0062CA  C071  F07C         	movff	??___flmul+1,___flmul@prod+1
 32610  0062CE  C072  F07D         	movff	??___flmul+2,___flmul@prod+2
 32611  0062D2  C073  F07E         	movff	??___flmul+3,___flmul@prod+3
 32612  0062D6                     
 32613                           ; BSR set to: 0
 32614  0062D6  4B7F               	infsnz	___flmul@temp& (0+255),f,b
 32615  0062D8  2B80               	incf	(___flmul@temp+1)& (0+255),f,b
 32616  0062DA                     l16530:
 32617                           
 32618                           ; BSR set to: 0
 32619  0062DA  BF80               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32620  0062DC  EF78  F031         	goto	u17521
 32621  0062E0  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32622  0062E2  E108               	bnz	u17520
 32623  0062E4  297F               	incf	___flmul@temp& (0+255),w,b
 32624  0062E6  A0D8               	btfss	status,0,c
 32625  0062E8  EF78  F031         	goto	u17521
 32626  0062EC  EF7A  F031         	goto	u17520
 32627  0062F0                     u17521:
 32628  0062F0  EF84  F031         	goto	l16534
 32629  0062F4                     u17520:
 32630  0062F4                     
 32631                           ; BSR set to: 0
 32632  0062F4  0E00               	movlw	0
 32633  0062F6  6F7B               	movwf	___flmul@prod& (0+255),b
 32634  0062F8  0E00               	movlw	0
 32635  0062FA  6F7C               	movwf	(___flmul@prod+1)& (0+255),b
 32636  0062FC  0E80               	movlw	128
 32637  0062FE  6F7D               	movwf	(___flmul@prod+2)& (0+255),b
 32638  006300  0E7F               	movlw	127
 32639  006302  6F7E               	movwf	(___flmul@prod+3)& (0+255),b
 32640  006304  EFB2  F031         	goto	l16546
 32641  006308                     l16534:
 32642                           
 32643                           ; BSR set to: 0
 32644  006308  BF80               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32645  00630A  EF91  F031         	goto	u17530
 32646  00630E  5180               	movf	(___flmul@temp+1)& (0+255),w,b
 32647  006310  E106               	bnz	u17531
 32648  006312  057F               	decf	___flmul@temp& (0+255),w,b
 32649  006314  B0D8               	btfsc	status,0,c
 32650  006316  EF8F  F031         	goto	u17531
 32651  00631A  EF91  F031         	goto	u17530
 32652  00631E                     u17531:
 32653  00631E  EF9D  F031         	goto	l3188
 32654  006322                     u17530:
 32655  006322                     
 32656                           ; BSR set to: 0
 32657  006322  0E00               	movlw	0
 32658  006324  6F7B               	movwf	___flmul@prod& (0+255),b
 32659  006326  0E00               	movlw	0
 32660  006328  6F7C               	movwf	(___flmul@prod+1)& (0+255),b
 32661  00632A  0E00               	movlw	0
 32662  00632C  6F7D               	movwf	(___flmul@prod+2)& (0+255),b
 32663  00632E  0E00               	movlw	0
 32664  006330  6F7E               	movwf	(___flmul@prod+3)& (0+255),b
 32665  006332  0E00               	movlw	0
 32666  006334  6F74               	movwf	___flmul@sign& (0+255),b
 32667  006336  EFB2  F031         	goto	l16546
 32668  00633A                     l3188:
 32669                           
 32670                           ; BSR set to: 0
 32671  00633A  C07F  F07A         	movff	___flmul@temp,___flmul@bexp
 32672  00633E                     
 32673                           ; BSR set to: 0
 32674  00633E  0EFF               	movlw	255
 32675  006340  177B               	andwf	___flmul@prod& (0+255),f,b
 32676  006342  0EFF               	movlw	255
 32677  006344  177C               	andwf	(___flmul@prod+1)& (0+255),f,b
 32678  006346  0E7F               	movlw	127
 32679  006348  177D               	andwf	(___flmul@prod+2)& (0+255),f,b
 32680  00634A  0E00               	movlw	0
 32681  00634C  177E               	andwf	(___flmul@prod+3)& (0+255),f,b
 32682  00634E                     
 32683                           ; BSR set to: 0
 32684  00634E  A17A               	btfss	___flmul@bexp& (0+255),0,b
 32685  006350  EFAC  F031         	goto	u17541
 32686  006354  EFAE  F031         	goto	u17540
 32687  006358                     u17541:
 32688  006358  EFAF  F031         	goto	l16544
 32689  00635C                     u17540:
 32690  00635C                     
 32691                           ; BSR set to: 0
 32692  00635C  8F7D               	bsf	(___flmul@prod+2)& (0+255),7,b
 32693  00635E                     l16544:
 32694                           
 32695                           ; BSR set to: 0
 32696  00635E  90D8               	bcf	status,0,c
 32697  006360  317A               	rrcf	___flmul@bexp& (0+255),w,b
 32698  006362  6F7E               	movwf	(___flmul@prod+3)& (0+255),b
 32699  006364                     l16546:
 32700                           
 32701                           ; BSR set to: 0
 32702  006364  5174               	movf	___flmul@sign& (0+255),w,b
 32703  006366  137E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 32704  006368                     
 32705                           ; BSR set to: 0
 32706  006368  C07B  F068         	movff	___flmul@prod,?___flmul
 32707  00636C  C07C  F069         	movff	___flmul@prod+1,?___flmul+1
 32708  006370  C07D  F06A         	movff	___flmul@prod+2,?___flmul+2
 32709  006374  C07E  F06B         	movff	___flmul@prod+3,?___flmul+3
 32710  006378                     l3175:
 32711                           
 32712                           ; BSR set to: 0
 32713  006378  0012               	return		;funcret
 32714  00637A                     __end_of___flmul:
 32715                           	callstack 0
 32716                           
 32717 ;; *************** function ___fldiv *****************
 32718 ;; Defined at:
 32719 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
 32720 ;; Parameters:    Size  Location     Type
 32721 ;;  b               4   70[BANK0 ] unsigned char 
 32722 ;;  a               4   74[BANK0 ] unsigned char 
 32723 ;; Auto vars:     Size  Location     Type
 32724 ;;  grs             4   89[BANK0 ] unsigned long 
 32725 ;;  rem             4   82[BANK0 ] unsigned long 
 32726 ;;  new_exp         2   87[BANK0 ] int 
 32727 ;;  aexp            1   94[BANK0 ] unsigned char 
 32728 ;;  bexp            1   93[BANK0 ] unsigned char 
 32729 ;;  sign            1   86[BANK0 ] unsigned char 
 32730 ;; Return value:  Size  Location     Type
 32731 ;;                  4   70[BANK0 ] unsigned char 
 32732 ;; Registers used:
 32733 ;;		wreg, status,2, status,0
 32734 ;; Tracked objects:
 32735 ;;		On entry : 0/0
 32736 ;;		On exit  : 0/0
 32737 ;;		Unchanged: 0/0
 32738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 32739 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32740 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32741 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32742 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 32743 ;;Total ram usage:       25 bytes
 32744 ;; Hardware stack levels used: 1
 32745 ;; Hardware stack levels required when called: 3
 32746 ;; This function calls:
 32747 ;;		Nothing
 32748 ;; This function is called by:
 32749 ;;		_sht3x_measure_read
 32750 ;;		_update_command
 32751 ;;		_Kalman_updateEstimate
 32752 ;;		_gasSensor_calib
 32753 ;;		_gasSensor_temperature_cmp_coefficient
 32754 ;;		_CMP_temp_read
 32755 ;;		_sens_ZeroCalibration
 32756 ;;		__atof
 32757 ;;		_exp
 32758 ;;		_calc_raw_temperature
 32759 ;;		_calc_raw_humidity
 32760 ;;		_window_moving_average_recursion
 32761 ;; This function uses a non-reentrant model
 32762 ;;
 32763                           
 32764                           	psect	text147
 32765  006796                     __ptext147:
 32766                           	callstack 0
 32767  006796                     ___fldiv:
 32768                           	callstack 25
 32769  006796  0100               	movlb	0	; () banked
 32770  006798  51A9               	movf	(___fldiv@b+3)& (0+255),w,b
 32771  00679A  0B80               	andlw	128
 32772  00679C  6FB6               	movwf	___fldiv@sign& (0+255),b
 32773  00679E  51A9               	movf	(___fldiv@b+3)& (0+255),w,b
 32774  0067A0  25A9               	addwf	(___fldiv@b+3)& (0+255),w,b
 32775  0067A2  6FBD               	movwf	___fldiv@bexp& (0+255),b
 32776  0067A4                     
 32777                           ; BSR set to: 0
 32778  0067A4  AFA8               	btfss	(___fldiv@b+2)& (0+255),7,b
 32779  0067A6  EFD7  F033         	goto	u18211
 32780  0067AA  EFD9  F033         	goto	u18210
 32781  0067AE                     u18211:
 32782  0067AE  EFDA  F033         	goto	l16926
 32783  0067B2                     u18210:
 32784  0067B2                     
 32785                           ; BSR set to: 0
 32786  0067B2  81BD               	bsf	___fldiv@bexp& (0+255),0,b
 32787  0067B4                     l16926:
 32788                           
 32789                           ; BSR set to: 0
 32790  0067B4  51BD               	movf	___fldiv@bexp& (0+255),w,b
 32791  0067B6  B4D8               	btfsc	status,2,c
 32792  0067B8  EFE0  F033         	goto	u18221
 32793  0067BC  EFE2  F033         	goto	u18220
 32794  0067C0                     u18221:
 32795  0067C0  EFF7  F033         	goto	l16936
 32796  0067C4                     u18220:
 32797  0067C4                     
 32798                           ; BSR set to: 0
 32799  0067C4  29BD               	incf	___fldiv@bexp& (0+255),w,b
 32800  0067C6  A4D8               	btfss	status,2,c
 32801  0067C8  EFE8  F033         	goto	u18231
 32802  0067CC  EFEA  F033         	goto	u18230
 32803  0067D0                     u18231:
 32804  0067D0  EFF2  F033         	goto	l16932
 32805  0067D4                     u18230:
 32806  0067D4                     
 32807                           ; BSR set to: 0
 32808  0067D4  0E00               	movlw	0
 32809  0067D6  6FA6               	movwf	___fldiv@b& (0+255),b
 32810  0067D8  0E00               	movlw	0
 32811  0067DA  6FA7               	movwf	(___fldiv@b+1)& (0+255),b
 32812  0067DC  0E00               	movlw	0
 32813  0067DE  6FA8               	movwf	(___fldiv@b+2)& (0+255),b
 32814  0067E0  0E00               	movlw	0
 32815  0067E2  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
 32816  0067E4                     l16932:
 32817                           
 32818                           ; BSR set to: 0
 32819  0067E4  8FA8               	bsf	(___fldiv@b+2)& (0+255),7,b
 32820  0067E6                     
 32821                           ; BSR set to: 0
 32822  0067E6  0E00               	movlw	0
 32823  0067E8  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
 32824  0067EA  EFFF  F033         	goto	l16938
 32825  0067EE                     l16936:
 32826                           
 32827                           ; BSR set to: 0
 32828  0067EE  0E00               	movlw	0
 32829  0067F0  6FA6               	movwf	___fldiv@b& (0+255),b
 32830  0067F2  0E00               	movlw	0
 32831  0067F4  6FA7               	movwf	(___fldiv@b+1)& (0+255),b
 32832  0067F6  0E00               	movlw	0
 32833  0067F8  6FA8               	movwf	(___fldiv@b+2)& (0+255),b
 32834  0067FA  0E00               	movlw	0
 32835  0067FC  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
 32836  0067FE                     l16938:
 32837                           
 32838                           ; BSR set to: 0
 32839  0067FE  51AD               	movf	(___fldiv@a+3)& (0+255),w,b
 32840  006800  0B80               	andlw	128
 32841  006802  1BB6               	xorwf	___fldiv@sign& (0+255),f,b
 32842  006804                     
 32843                           ; BSR set to: 0
 32844  006804  51AD               	movf	(___fldiv@a+3)& (0+255),w,b
 32845  006806  25AD               	addwf	(___fldiv@a+3)& (0+255),w,b
 32846  006808  6FBE               	movwf	___fldiv@aexp& (0+255),b
 32847  00680A                     
 32848                           ; BSR set to: 0
 32849  00680A  AFAC               	btfss	(___fldiv@a+2)& (0+255),7,b
 32850  00680C  EF0A  F034         	goto	u18241
 32851  006810  EF0C  F034         	goto	u18240
 32852  006814                     u18241:
 32853  006814  EF0D  F034         	goto	l16946
 32854  006818                     u18240:
 32855  006818                     
 32856                           ; BSR set to: 0
 32857  006818  81BE               	bsf	___fldiv@aexp& (0+255),0,b
 32858  00681A                     l16946:
 32859                           
 32860                           ; BSR set to: 0
 32861  00681A  51BE               	movf	___fldiv@aexp& (0+255),w,b
 32862  00681C  B4D8               	btfsc	status,2,c
 32863  00681E  EF13  F034         	goto	u18251
 32864  006822  EF15  F034         	goto	u18250
 32865  006826                     u18251:
 32866  006826  EF2A  F034         	goto	l16956
 32867  00682A                     u18250:
 32868  00682A                     
 32869                           ; BSR set to: 0
 32870  00682A  29BE               	incf	___fldiv@aexp& (0+255),w,b
 32871  00682C  A4D8               	btfss	status,2,c
 32872  00682E  EF1B  F034         	goto	u18261
 32873  006832  EF1D  F034         	goto	u18260
 32874  006836                     u18261:
 32875  006836  EF25  F034         	goto	l16952
 32876  00683A                     u18260:
 32877  00683A                     
 32878                           ; BSR set to: 0
 32879  00683A  0E00               	movlw	0
 32880  00683C  6FAA               	movwf	___fldiv@a& (0+255),b
 32881  00683E  0E00               	movlw	0
 32882  006840  6FAB               	movwf	(___fldiv@a+1)& (0+255),b
 32883  006842  0E00               	movlw	0
 32884  006844  6FAC               	movwf	(___fldiv@a+2)& (0+255),b
 32885  006846  0E00               	movlw	0
 32886  006848  6FAD               	movwf	(___fldiv@a+3)& (0+255),b
 32887  00684A                     l16952:
 32888                           
 32889                           ; BSR set to: 0
 32890  00684A  8FAC               	bsf	(___fldiv@a+2)& (0+255),7,b
 32891  00684C                     
 32892                           ; BSR set to: 0
 32893  00684C  0E00               	movlw	0
 32894  00684E  6FAD               	movwf	(___fldiv@a+3)& (0+255),b
 32895  006850  EF32  F034         	goto	l16958
 32896  006854                     l16956:
 32897                           
 32898                           ; BSR set to: 0
 32899  006854  0E00               	movlw	0
 32900  006856  6FAA               	movwf	___fldiv@a& (0+255),b
 32901  006858  0E00               	movlw	0
 32902  00685A  6FAB               	movwf	(___fldiv@a+1)& (0+255),b
 32903  00685C  0E00               	movlw	0
 32904  00685E  6FAC               	movwf	(___fldiv@a+2)& (0+255),b
 32905  006860  0E00               	movlw	0
 32906  006862  6FAD               	movwf	(___fldiv@a+3)& (0+255),b
 32907  006864                     l16958:
 32908                           
 32909                           ; BSR set to: 0
 32910  006864  51AA               	movf	___fldiv@a& (0+255),w,b
 32911  006866  11AB               	iorwf	(___fldiv@a+1)& (0+255),w,b
 32912  006868  11AC               	iorwf	(___fldiv@a+2)& (0+255),w,b
 32913  00686A  11AD               	iorwf	(___fldiv@a+3)& (0+255),w,b
 32914  00686C  A4D8               	btfss	status,2,c
 32915  00686E  EF3B  F034         	goto	u18271
 32916  006872  EF3D  F034         	goto	u18270
 32917  006876                     u18271:
 32918  006876  EF55  F034         	goto	l16970
 32919  00687A                     u18270:
 32920  00687A                     
 32921                           ; BSR set to: 0
 32922  00687A  0E00               	movlw	0
 32923  00687C  6FA6               	movwf	___fldiv@b& (0+255),b
 32924  00687E  0E00               	movlw	0
 32925  006880  6FA7               	movwf	(___fldiv@b+1)& (0+255),b
 32926  006882  0E00               	movlw	0
 32927  006884  6FA8               	movwf	(___fldiv@b+2)& (0+255),b
 32928  006886  0E00               	movlw	0
 32929  006888  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
 32930  00688A                     
 32931                           ; BSR set to: 0
 32932  00688A  0E80               	movlw	128
 32933  00688C  13A8               	iorwf	(___fldiv@b+2)& (0+255),f,b
 32934  00688E  0E7F               	movlw	127
 32935  006890  13A9               	iorwf	(___fldiv@b+3)& (0+255),f,b
 32936  006892                     l16964:
 32937                           
 32938                           ; BSR set to: 0
 32939  006892  51B6               	movf	___fldiv@sign& (0+255),w,b
 32940  006894  13A9               	iorwf	(___fldiv@b+3)& (0+255),f,b
 32941  006896                     
 32942                           ; BSR set to: 0
 32943  006896  C0A6  F0A6         	movff	___fldiv@b,?___fldiv
 32944  00689A  C0A7  F0A7         	movff	___fldiv@b+1,?___fldiv+1
 32945  00689E  C0A8  F0A8         	movff	___fldiv@b+2,?___fldiv+2
 32946  0068A2  C0A9  F0A9         	movff	___fldiv@b+3,?___fldiv+3
 32947  0068A6  EF98  F035         	goto	l3139
 32948  0068AA                     l16970:
 32949                           
 32950                           ; BSR set to: 0
 32951  0068AA  51BD               	movf	___fldiv@bexp& (0+255),w,b
 32952  0068AC  A4D8               	btfss	status,2,c
 32953  0068AE  EF5B  F034         	goto	u18281
 32954  0068B2  EF5D  F034         	goto	u18280
 32955  0068B6                     u18281:
 32956  0068B6  EF67  F034         	goto	l16978
 32957  0068BA                     u18280:
 32958  0068BA                     
 32959                           ; BSR set to: 0
 32960  0068BA  0E00               	movlw	0
 32961  0068BC  6FA6               	movwf	?___fldiv& (0+255),b
 32962  0068BE  0E00               	movlw	0
 32963  0068C0  6FA7               	movwf	(?___fldiv+1)& (0+255),b
 32964  0068C2  0E00               	movlw	0
 32965  0068C4  6FA8               	movwf	(?___fldiv+2)& (0+255),b
 32966  0068C6  0E00               	movlw	0
 32967  0068C8  6FA9               	movwf	(?___fldiv+3)& (0+255),b
 32968  0068CA  EF98  F035         	goto	l3139
 32969  0068CE                     l16978:
 32970                           
 32971                           ; BSR set to: 0
 32972  0068CE  51BE               	movf	___fldiv@aexp& (0+255),w,b
 32973  0068D0  C0BD  F0AE         	movff	___fldiv@bexp,??___fldiv
 32974  0068D4  6BAF               	clrf	(??___fldiv+1)& (0+255),b
 32975  0068D6  5FAE               	subwf	??___fldiv& (0+255),f,b
 32976  0068D8  0E00               	movlw	0
 32977  0068DA  5BAF               	subwfb	(??___fldiv+1)& (0+255),f,b
 32978  0068DC  0E7F               	movlw	127
 32979  0068DE  25AE               	addwf	??___fldiv& (0+255),w,b
 32980  0068E0  6FB7               	movwf	___fldiv@new_exp& (0+255),b
 32981  0068E2  0E00               	movlw	0
 32982  0068E4  21AF               	addwfc	(??___fldiv+1)& (0+255),w,b
 32983  0068E6  6FB8               	movwf	(___fldiv@new_exp+1)& (0+255),b
 32984  0068E8                     
 32985                           ; BSR set to: 0
 32986  0068E8  C0A6  F0B2         	movff	___fldiv@b,___fldiv@rem
 32987  0068EC  C0A7  F0B3         	movff	___fldiv@b+1,___fldiv@rem+1
 32988  0068F0  C0A8  F0B4         	movff	___fldiv@b+2,___fldiv@rem+2
 32989  0068F4  C0A9  F0B5         	movff	___fldiv@b+3,___fldiv@rem+3
 32990  0068F8                     
 32991                           ; BSR set to: 0
 32992  0068F8  0E00               	movlw	0
 32993  0068FA  6FA6               	movwf	___fldiv@b& (0+255),b
 32994  0068FC  0E00               	movlw	0
 32995  0068FE  6FA7               	movwf	(___fldiv@b+1)& (0+255),b
 32996  006900  0E00               	movlw	0
 32997  006902  6FA8               	movwf	(___fldiv@b+2)& (0+255),b
 32998  006904  0E00               	movlw	0
 32999  006906  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
 33000  006908                     
 33001                           ; BSR set to: 0
 33002  006908  0E00               	movlw	0
 33003  00690A  6FB9               	movwf	___fldiv@grs& (0+255),b
 33004  00690C  0E00               	movlw	0
 33005  00690E  6FBA               	movwf	(___fldiv@grs+1)& (0+255),b
 33006  006910  0E00               	movlw	0
 33007  006912  6FBB               	movwf	(___fldiv@grs+2)& (0+255),b
 33008  006914  0E00               	movlw	0
 33009  006916  6FBC               	movwf	(___fldiv@grs+3)& (0+255),b
 33010  006918                     
 33011                           ; BSR set to: 0
 33012  006918  0E00               	movlw	0
 33013  00691A  6FBE               	movwf	___fldiv@aexp& (0+255),b
 33014  00691C  EFC8  F034         	goto	l3141
 33015  006920                     l16988:
 33016                           
 33017                           ; BSR set to: 0
 33018  006920  51BE               	movf	___fldiv@aexp& (0+255),w,b
 33019  006922  B4D8               	btfsc	status,2,c
 33020  006924  EF96  F034         	goto	u18291
 33021  006928  EF98  F034         	goto	u18290
 33022  00692C                     u18291:
 33023  00692C  EFAF  F034         	goto	l16996
 33024  006930                     u18290:
 33025  006930                     
 33026                           ; BSR set to: 0
 33027  006930  90D8               	bcf	status,0,c
 33028  006932  37B2               	rlcf	___fldiv@rem& (0+255),f,b
 33029  006934  37B3               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 33030  006936  37B4               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 33031  006938  37B5               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 33032  00693A  90D8               	bcf	status,0,c
 33033  00693C  37A6               	rlcf	___fldiv@b& (0+255),f,b
 33034  00693E  37A7               	rlcf	(___fldiv@b+1)& (0+255),f,b
 33035  006940  37A8               	rlcf	(___fldiv@b+2)& (0+255),f,b
 33036  006942  37A9               	rlcf	(___fldiv@b+3)& (0+255),f,b
 33037  006944                     
 33038                           ; BSR set to: 0
 33039  006944  AFBC               	btfss	(___fldiv@grs+3)& (0+255),7,b
 33040  006946  EFA7  F034         	goto	u18301
 33041  00694A  EFA9  F034         	goto	u18300
 33042  00694E                     u18301:
 33043  00694E  EFAA  F034         	goto	l3144
 33044  006952                     u18300:
 33045  006952                     
 33046                           ; BSR set to: 0
 33047  006952  81A6               	bsf	___fldiv@b& (0+255),0,b
 33048  006954                     l3144:
 33049                           
 33050                           ; BSR set to: 0
 33051  006954  90D8               	bcf	status,0,c
 33052  006956  37B9               	rlcf	___fldiv@grs& (0+255),f,b
 33053  006958  37BA               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 33054  00695A  37BB               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 33055  00695C  37BC               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 33056  00695E                     l16996:
 33057                           
 33058                           ; BSR set to: 0
 33059  00695E  51AA               	movf	___fldiv@a& (0+255),w,b
 33060  006960  5DB2               	subwf	___fldiv@rem& (0+255),w,b
 33061  006962  51AB               	movf	(___fldiv@a+1)& (0+255),w,b
 33062  006964  59B3               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 33063  006966  51AC               	movf	(___fldiv@a+2)& (0+255),w,b
 33064  006968  59B4               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 33065  00696A  51AD               	movf	(___fldiv@a+3)& (0+255),w,b
 33066  00696C  59B5               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 33067  00696E  A0D8               	btfss	status,0,c
 33068  006970  EFBC  F034         	goto	u18311
 33069  006974  EFBE  F034         	goto	u18310
 33070  006978                     u18311:
 33071  006978  EFC7  F034         	goto	l17002
 33072  00697C                     u18310:
 33073  00697C                     
 33074                           ; BSR set to: 0
 33075  00697C  8DBC               	bsf	(___fldiv@grs+3)& (0+255),6,b
 33076  00697E                     
 33077                           ; BSR set to: 0
 33078  00697E  51AA               	movf	___fldiv@a& (0+255),w,b
 33079  006980  5FB2               	subwf	___fldiv@rem& (0+255),f,b
 33080  006982  51AB               	movf	(___fldiv@a+1)& (0+255),w,b
 33081  006984  5BB3               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 33082  006986  51AC               	movf	(___fldiv@a+2)& (0+255),w,b
 33083  006988  5BB4               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 33084  00698A  51AD               	movf	(___fldiv@a+3)& (0+255),w,b
 33085  00698C  5BB5               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 33086  00698E                     l17002:
 33087                           
 33088                           ; BSR set to: 0
 33089  00698E  2BBE               	incf	___fldiv@aexp& (0+255),f,b
 33090  006990                     l3141:
 33091                           
 33092                           ; BSR set to: 0
 33093  006990  0E19               	movlw	25
 33094  006992  65BE               	cpfsgt	___fldiv@aexp& (0+255),b
 33095  006994  EFCE  F034         	goto	u18321
 33096  006998  EFD0  F034         	goto	u18320
 33097  00699C                     u18321:
 33098  00699C  EF90  F034         	goto	l16988
 33099  0069A0                     u18320:
 33100  0069A0                     
 33101                           ; BSR set to: 0
 33102  0069A0  51B2               	movf	___fldiv@rem& (0+255),w,b
 33103  0069A2  11B3               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 33104  0069A4  11B4               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 33105  0069A6  11B5               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 33106  0069A8  B4D8               	btfsc	status,2,c
 33107  0069AA  EFD9  F034         	goto	u18331
 33108  0069AE  EFDB  F034         	goto	u18330
 33109  0069B2                     u18331:
 33110  0069B2  EFF3  F034         	goto	l17014
 33111  0069B6                     u18330:
 33112  0069B6                     
 33113                           ; BSR set to: 0
 33114  0069B6  81B9               	bsf	___fldiv@grs& (0+255),0,b
 33115  0069B8  EFF3  F034         	goto	l17014
 33116  0069BC                     l17008:
 33117                           
 33118                           ; BSR set to: 0
 33119  0069BC  90D8               	bcf	status,0,c
 33120  0069BE  37A6               	rlcf	___fldiv@b& (0+255),f,b
 33121  0069C0  37A7               	rlcf	(___fldiv@b+1)& (0+255),f,b
 33122  0069C2  37A8               	rlcf	(___fldiv@b+2)& (0+255),f,b
 33123  0069C4  37A9               	rlcf	(___fldiv@b+3)& (0+255),f,b
 33124  0069C6                     
 33125                           ; BSR set to: 0
 33126  0069C6  AFBC               	btfss	(___fldiv@grs+3)& (0+255),7,b
 33127  0069C8  EFE8  F034         	goto	u18341
 33128  0069CC  EFEA  F034         	goto	u18340
 33129  0069D0                     u18341:
 33130  0069D0  EFEB  F034         	goto	l3150
 33131  0069D4                     u18340:
 33132  0069D4                     
 33133                           ; BSR set to: 0
 33134  0069D4  81A6               	bsf	___fldiv@b& (0+255),0,b
 33135  0069D6                     l3150:
 33136                           
 33137                           ; BSR set to: 0
 33138  0069D6  90D8               	bcf	status,0,c
 33139  0069D8  37B9               	rlcf	___fldiv@grs& (0+255),f,b
 33140  0069DA  37BA               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 33141  0069DC  37BB               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 33142  0069DE  37BC               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 33143  0069E0  07B7               	decf	___fldiv@new_exp& (0+255),f,b
 33144  0069E2  A0D8               	btfss	status,0,c
 33145  0069E4  07B8               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 33146  0069E6                     l17014:
 33147                           
 33148                           ; BSR set to: 0
 33149  0069E6  AFA8               	btfss	(___fldiv@b+2)& (0+255),7,b
 33150  0069E8  EFF8  F034         	goto	u18351
 33151  0069EC  EFFA  F034         	goto	u18350
 33152  0069F0                     u18351:
 33153  0069F0  EFDE  F034         	goto	l17008
 33154  0069F4                     u18350:
 33155  0069F4                     
 33156                           ; BSR set to: 0
 33157  0069F4  0E00               	movlw	0
 33158  0069F6  6FBE               	movwf	___fldiv@aexp& (0+255),b
 33159  0069F8                     
 33160                           ; BSR set to: 0
 33161  0069F8  AFBC               	btfss	(___fldiv@grs+3)& (0+255),7,b
 33162  0069FA  EF01  F035         	goto	u18361
 33163  0069FE  EF03  F035         	goto	u18360
 33164  006A02                     u18361:
 33165  006A02  EF27  F035         	goto	l3152
 33166  006A06                     u18360:
 33167  006A06                     
 33168                           ; BSR set to: 0
 33169  006A06  0EFF               	movlw	255
 33170  006A08  15B9               	andwf	___fldiv@grs& (0+255),w,b
 33171  006A0A  6FAE               	movwf	??___fldiv& (0+255),b
 33172  006A0C  0EFF               	movlw	255
 33173  006A0E  15BA               	andwf	(___fldiv@grs+1)& (0+255),w,b
 33174  006A10  6FAF               	movwf	(??___fldiv+1)& (0+255),b
 33175  006A12  0EFF               	movlw	255
 33176  006A14  15BB               	andwf	(___fldiv@grs+2)& (0+255),w,b
 33177  006A16  6FB0               	movwf	(??___fldiv+2)& (0+255),b
 33178  006A18  0E7F               	movlw	127
 33179  006A1A  15BC               	andwf	(___fldiv@grs+3)& (0+255),w,b
 33180  006A1C  6FB1               	movwf	(??___fldiv+3)& (0+255),b
 33181  006A1E  51AE               	movf	??___fldiv& (0+255),w,b
 33182  006A20  11AF               	iorwf	(??___fldiv+1)& (0+255),w,b
 33183  006A22  11B0               	iorwf	(??___fldiv+2)& (0+255),w,b
 33184  006A24  11B1               	iorwf	(??___fldiv+3)& (0+255),w,b
 33185  006A26  B4D8               	btfsc	status,2,c
 33186  006A28  EF18  F035         	goto	u18371
 33187  006A2C  EF1A  F035         	goto	u18370
 33188  006A30                     u18371:
 33189  006A30  EF1E  F035         	goto	l3153
 33190  006A34                     u18370:
 33191  006A34                     l17022:
 33192                           
 33193                           ; BSR set to: 0
 33194  006A34  0E01               	movlw	1
 33195  006A36  6FBE               	movwf	___fldiv@aexp& (0+255),b
 33196  006A38  EF27  F035         	goto	l3152
 33197  006A3C                     l3153:
 33198                           
 33199                           ; BSR set to: 0
 33200  006A3C  A1A6               	btfss	___fldiv@b& (0+255),0,b
 33201  006A3E  EF23  F035         	goto	u18381
 33202  006A42  EF25  F035         	goto	u18380
 33203  006A46                     u18381:
 33204  006A46  EF27  F035         	goto	l3152
 33205  006A4A                     u18380:
 33206  006A4A  EF1A  F035         	goto	l17022
 33207  006A4E                     l3152:
 33208                           
 33209                           ; BSR set to: 0
 33210  006A4E  51BE               	movf	___fldiv@aexp& (0+255),w,b
 33211  006A50  B4D8               	btfsc	status,2,c
 33212  006A52  EF2D  F035         	goto	u18391
 33213  006A56  EF2F  F035         	goto	u18390
 33214  006A5A                     u18391:
 33215  006A5A  EF53  F035         	goto	l17034
 33216  006A5E                     u18390:
 33217  006A5E                     
 33218                           ; BSR set to: 0
 33219  006A5E  0E01               	movlw	1
 33220  006A60  27A6               	addwf	___fldiv@b& (0+255),f,b
 33221  006A62  0E00               	movlw	0
 33222  006A64  23A7               	addwfc	(___fldiv@b+1)& (0+255),f,b
 33223  006A66  23A8               	addwfc	(___fldiv@b+2)& (0+255),f,b
 33224  006A68  23A9               	addwfc	(___fldiv@b+3)& (0+255),f,b
 33225  006A6A                     
 33226                           ; BSR set to: 0
 33227  006A6A  A1A9               	btfss	(___fldiv@b+3)& (0+255),0,b
 33228  006A6C  EF3A  F035         	goto	u18401
 33229  006A70  EF3C  F035         	goto	u18400
 33230  006A74                     u18401:
 33231  006A74  EF53  F035         	goto	l17034
 33232  006A78                     u18400:
 33233  006A78                     
 33234                           ; BSR set to: 0
 33235  006A78  C0A6  F0AE         	movff	___fldiv@b,??___fldiv
 33236  006A7C  C0A7  F0AF         	movff	___fldiv@b+1,??___fldiv+1
 33237  006A80  C0A8  F0B0         	movff	___fldiv@b+2,??___fldiv+2
 33238  006A84  C0A9  F0B1         	movff	___fldiv@b+3,??___fldiv+3
 33239  006A88  35B1               	rlcf	(??___fldiv+3)& (0+255),w,b
 33240  006A8A  33B1               	rrcf	(??___fldiv+3)& (0+255),f,b
 33241  006A8C  33B0               	rrcf	(??___fldiv+2)& (0+255),f,b
 33242  006A8E  33AF               	rrcf	(??___fldiv+1)& (0+255),f,b
 33243  006A90  33AE               	rrcf	??___fldiv& (0+255),f,b
 33244  006A92  C0AE  F0A6         	movff	??___fldiv,___fldiv@b
 33245  006A96  C0AF  F0A7         	movff	??___fldiv+1,___fldiv@b+1
 33246  006A9A  C0B0  F0A8         	movff	??___fldiv+2,___fldiv@b+2
 33247  006A9E  C0B1  F0A9         	movff	??___fldiv+3,___fldiv@b+3
 33248  006AA2                     
 33249                           ; BSR set to: 0
 33250  006AA2  4BB7               	infsnz	___fldiv@new_exp& (0+255),f,b
 33251  006AA4  2BB8               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 33252  006AA6                     l17034:
 33253                           
 33254                           ; BSR set to: 0
 33255  006AA6  BFB8               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 33256  006AA8  EF5E  F035         	goto	u18411
 33257  006AAC  51B8               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 33258  006AAE  E108               	bnz	u18410
 33259  006AB0  29B7               	incf	___fldiv@new_exp& (0+255),w,b
 33260  006AB2  A0D8               	btfss	status,0,c
 33261  006AB4  EF5E  F035         	goto	u18411
 33262  006AB8  EF60  F035         	goto	u18410
 33263  006ABC                     u18411:
 33264  006ABC  EF6B  F035         	goto	l17038
 33265  006AC0                     u18410:
 33266  006AC0                     
 33267                           ; BSR set to: 0
 33268  006AC0  0E00               	movlw	0
 33269  006AC2  6FB8               	movwf	(___fldiv@new_exp+1)& (0+255),b
 33270  006AC4  69B7               	setf	___fldiv@new_exp& (0+255),b
 33271  006AC6  0E00               	movlw	0
 33272  006AC8  6FA6               	movwf	___fldiv@b& (0+255),b
 33273  006ACA  0E00               	movlw	0
 33274  006ACC  6FA7               	movwf	(___fldiv@b+1)& (0+255),b
 33275  006ACE  0E00               	movlw	0
 33276  006AD0  6FA8               	movwf	(___fldiv@b+2)& (0+255),b
 33277  006AD2  0E00               	movlw	0
 33278  006AD4  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
 33279  006AD6                     l17038:
 33280                           
 33281                           ; BSR set to: 0
 33282  006AD6  BFB8               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 33283  006AD8  EF78  F035         	goto	u18420
 33284  006ADC  51B8               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 33285  006ADE  E106               	bnz	u18421
 33286  006AE0  05B7               	decf	___fldiv@new_exp& (0+255),w,b
 33287  006AE2  B0D8               	btfsc	status,0,c
 33288  006AE4  EF76  F035         	goto	u18421
 33289  006AE8  EF78  F035         	goto	u18420
 33290  006AEC                     u18421:
 33291  006AEC  EF86  F035         	goto	l17042
 33292  006AF0                     u18420:
 33293  006AF0                     
 33294                           ; BSR set to: 0
 33295  006AF0  0E00               	movlw	0
 33296  006AF2  6FB8               	movwf	(___fldiv@new_exp+1)& (0+255),b
 33297  006AF4  0E00               	movlw	0
 33298  006AF6  6FB7               	movwf	___fldiv@new_exp& (0+255),b
 33299  006AF8  0E00               	movlw	0
 33300  006AFA  6FA6               	movwf	___fldiv@b& (0+255),b
 33301  006AFC  0E00               	movlw	0
 33302  006AFE  6FA7               	movwf	(___fldiv@b+1)& (0+255),b
 33303  006B00  0E00               	movlw	0
 33304  006B02  6FA8               	movwf	(___fldiv@b+2)& (0+255),b
 33305  006B04  0E00               	movlw	0
 33306  006B06  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
 33307  006B08  0E00               	movlw	0
 33308  006B0A  6FB6               	movwf	___fldiv@sign& (0+255),b
 33309  006B0C                     l17042:
 33310                           
 33311                           ; BSR set to: 0
 33312  006B0C  C0B7  F0BD         	movff	___fldiv@new_exp,___fldiv@bexp
 33313  006B10                     
 33314                           ; BSR set to: 0
 33315  006B10  A1BD               	btfss	___fldiv@bexp& (0+255),0,b
 33316  006B12  EF8D  F035         	goto	u18431
 33317  006B16  EF8F  F035         	goto	u18430
 33318  006B1A                     u18431:
 33319  006B1A  EF92  F035         	goto	l17048
 33320  006B1E                     u18430:
 33321  006B1E                     
 33322                           ; BSR set to: 0
 33323  006B1E  8FA8               	bsf	(___fldiv@b+2)& (0+255),7,b
 33324  006B20  EF93  F035         	goto	l17050
 33325  006B24                     l17048:
 33326                           
 33327                           ; BSR set to: 0
 33328  006B24  9FA8               	bcf	(___fldiv@b+2)& (0+255),7,b
 33329  006B26                     l17050:
 33330                           
 33331                           ; BSR set to: 0
 33332  006B26  90D8               	bcf	status,0,c
 33333  006B28  31BD               	rrcf	___fldiv@bexp& (0+255),w,b
 33334  006B2A  6FA9               	movwf	(___fldiv@b+3)& (0+255),b
 33335  006B2C  EF49  F034         	goto	l16964
 33336  006B30                     l3139:
 33337                           
 33338                           ; BSR set to: 0
 33339  006B30  0012               	return		;funcret
 33340  006B32                     __end_of___fldiv:
 33341                           	callstack 0
 33342                           
 33343 ;; *************** function _CRC_check *****************
 33344 ;; Defined at:
 33345 ;;		line 131 in file "bsp/TES0902.c"
 33346 ;; Parameters:    Size  Location     Type
 33347 ;;		None
 33348 ;; Auto vars:     Size  Location     Type
 33349 ;;  i               1   46[COMRAM] unsigned char 
 33350 ;;  crc            12   33[COMRAM] unsigned char [12]
 33351 ;;  crcLen          1   45[COMRAM] unsigned char 
 33352 ;; Return value:  Size  Location     Type
 33353 ;;                  1    wreg      unsigned char 
 33354 ;; Registers used:
 33355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 33356 ;; Tracked objects:
 33357 ;;		On entry : 0/0
 33358 ;;		On exit  : 0/0
 33359 ;;		Unchanged: 0/0
 33360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33362 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33364 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33365 ;;Total ram usage:       16 bytes
 33366 ;; Hardware stack levels used: 1
 33367 ;; Hardware stack levels required when called: 4
 33368 ;; This function calls:
 33369 ;;		_Calculate_CRC16
 33370 ;; This function is called by:
 33371 ;;		_tes0902_data_parsing
 33372 ;; This function uses a non-reentrant model
 33373 ;;
 33374                           
 33375                           	psect	text148
 33376  00C99C                     __ptext148:
 33377                           	callstack 0
 33378  00C99C                     _CRC_check:
 33379                           	callstack 24
 33380  00C99C                     
 33381                           ;TES0902.c: 133: uint8_t crcLen;;TES0902.c: 134: uint8_t crc[8 +4];;TES0902.c: 135: crcL
      +                          en = g_rDataFormat.len +4;
 33382  00C99C  0101               	movlb	1	; () banked
 33383  00C99E  5103               	movf	(_g_rDataFormat+3)& (0+255),w,b
 33384  00C9A0  0F04               	addlw	4
 33385  00C9A2  6E2E               	movwf	CRC_check@crcLen^0,c
 33386  00C9A4                     
 33387                           ; BSR set to: 1
 33388                           ;TES0902.c: 137: crc[0] = g_rDataFormat.sync[0];
 33389  00C9A4  C100  F022         	movff	_g_rDataFormat,CRC_check@crc
 33390  00C9A8                     
 33391                           ; BSR set to: 1
 33392                           ;TES0902.c: 138: crc[1] = g_rDataFormat.sync[1];
 33393  00C9A8  C101  F023         	movff	_g_rDataFormat+1,CRC_check@crc+1
 33394  00C9AC                     
 33395                           ; BSR set to: 1
 33396                           ;TES0902.c: 139: crc[2] = g_rDataFormat.cmd;
 33397  00C9AC  C102  F024         	movff	_g_rDataFormat+2,CRC_check@crc+2
 33398  00C9B0                     
 33399                           ; BSR set to: 1
 33400                           ;TES0902.c: 140: crc[3] = g_rDataFormat.len;
 33401  00C9B0  C103  F025         	movff	_g_rDataFormat+3,CRC_check@crc+3
 33402                           
 33403                           ;TES0902.c: 142: if (crcLen > 4) {
 33404  00C9B4  0E04               	movlw	4
 33405  00C9B6  642E               	cpfsgt	CRC_check@crcLen^0,c
 33406  00C9B8  EFE0  F064         	goto	u19541
 33407  00C9BC  EFE2  F064         	goto	u19540
 33408  00C9C0                     u19541:
 33409  00C9C0  EF05  F065         	goto	l18052
 33410  00C9C4                     u19540:
 33411  00C9C4                     
 33412                           ; BSR set to: 1
 33413                           ;TES0902.c: 143: for (uint8_t i = 0; i < g_rDataFormat.len; i++)
 33414  00C9C4  0E00               	movlw	0
 33415  00C9C6  6E2F               	movwf	CRC_check@i^0,c
 33416  00C9C8  EFFC  F064         	goto	l18050
 33417  00C9CC                     l18046:
 33418                           
 33419                           ; BSR set to: 1
 33420                           ;TES0902.c: 144: crc[4+i] = g_rDataFormat.data[i];
 33421  00C9CC  0E04               	movlw	low (_g_rDataFormat+4)
 33422  00C9CE  242F               	addwf	CRC_check@i^0,w,c
 33423  00C9D0  6ED9               	movwf	fsr2l,c
 33424  00C9D2  6ADA               	clrf	fsr2h,c
 33425  00C9D4  0E01               	movlw	high (_g_rDataFormat+4)
 33426  00C9D6  22DA               	addwfc	fsr2h,f,c
 33427  00C9D8  502F               	movf	CRC_check@i^0,w,c
 33428  00C9DA  6E20               	movwf	??_CRC_check^0,c
 33429  00C9DC  6A21               	clrf	(??_CRC_check+1)^0,c
 33430  00C9DE  0E04               	movlw	4
 33431  00C9E0  2620               	addwf	??_CRC_check^0,f,c
 33432  00C9E2  0E00               	movlw	0
 33433  00C9E4  2221               	addwfc	(??_CRC_check+1)^0,f,c
 33434  00C9E6  0E22               	movlw	low CRC_check@crc
 33435  00C9E8  2420               	addwf	??_CRC_check^0,w,c
 33436  00C9EA  6EE1               	movwf	fsr1l,c
 33437  00C9EC  0E00               	movlw	high CRC_check@crc
 33438  00C9EE  2021               	addwfc	(??_CRC_check+1)^0,w,c
 33439  00C9F0  6EE2               	movwf	fsr1h,c
 33440  00C9F2  CFDF FFE7          	movff	indf2,indf1
 33441  00C9F6                     
 33442                           ; BSR set to: 1
 33443  00C9F6  2A2F               	incf	CRC_check@i^0,f,c
 33444  00C9F8                     l18050:
 33445                           
 33446                           ; BSR set to: 1
 33447  00C9F8  5103               	movf	(_g_rDataFormat+3)& (0+255),w,b
 33448  00C9FA  5C2F               	subwf	CRC_check@i^0,w,c
 33449  00C9FC  A0D8               	btfss	status,0,c
 33450  00C9FE  EF03  F065         	goto	u19551
 33451  00CA02  EF05  F065         	goto	u19550
 33452  00CA06                     u19551:
 33453  00CA06  EFE6  F064         	goto	l18046
 33454  00CA0A                     u19550:
 33455  00CA0A                     l18052:
 33456                           
 33457                           ; BSR set to: 1
 33458                           ;TES0902.c: 145: };TES0902.c: 147: convData.u16_data = Calculate_CRC16(crc, crcLen);
 33459  00CA0A  0E22               	movlw	low CRC_check@crc
 33460  00CA0C  6E0F               	movwf	Calculate_CRC16@crc^0,c
 33461  00CA0E  0E00               	movlw	high CRC_check@crc
 33462  00CA10  6E10               	movwf	(Calculate_CRC16@crc+1)^0,c
 33463  00CA12  C02E  F011         	movff	CRC_check@crcLen,Calculate_CRC16@crc_length
 33464  00CA16  6A12               	clrf	(Calculate_CRC16@crc_length+1)^0,c
 33465  00CA18  ECBB  F05F         	call	_Calculate_CRC16	;wreg free
 33466  00CA1C  C00F  F04B         	movff	?_Calculate_CRC16,_convData
 33467  00CA20  C010  F04C         	movff	?_Calculate_CRC16+1,_convData+1
 33468  00CA24                     
 33469                           ;TES0902.c: 149: if (g_rDataFormat.crc[0] == convData.u8_Data[0] && g_rDataFormat.crc[1]
      +                           == convData.u8_Data[1])
 33470  00CA24  504B               	movf	_convData^0,w,c
 33471  00CA26  0101               	movlb	1	; () banked
 33472  00CA28  190C               	xorwf	(_g_rDataFormat+12)& (0+255),w,b
 33473  00CA2A  A4D8               	btfss	status,2,c
 33474  00CA2C  EF1A  F065         	goto	u19561
 33475  00CA30  EF1C  F065         	goto	u19560
 33476  00CA34                     u19561:
 33477  00CA34  EF28  F065         	goto	l18062
 33478  00CA38                     u19560:
 33479  00CA38                     
 33480                           ; BSR set to: 1
 33481  00CA38  504C               	movf	(_convData+1)^0,w,c
 33482  00CA3A  190D               	xorwf	(_g_rDataFormat+13)& (0+255),w,b
 33483  00CA3C  A4D8               	btfss	status,2,c
 33484  00CA3E  EF23  F065         	goto	u19571
 33485  00CA42  EF25  F065         	goto	u19570
 33486  00CA46                     u19571:
 33487  00CA46  EF28  F065         	goto	l18062
 33488  00CA4A                     u19570:
 33489  00CA4A                     
 33490                           ; BSR set to: 1
 33491                           ;TES0902.c: 150: return 1;
 33492  00CA4A  0E01               	movlw	1
 33493  00CA4C  EF29  F065         	goto	l415
 33494  00CA50                     l18062:
 33495                           
 33496                           ; BSR set to: 1
 33497                           ;TES0902.c: 151: return 0;
 33498  00CA50  0E00               	movlw	0
 33499  00CA52                     l415:
 33500                           
 33501                           ; BSR set to: 1
 33502  00CA52  0012               	return		;funcret
 33503  00CA54                     __end_of_CRC_check:
 33504                           	callstack 0
 33505                           
 33506 ;; *************** function _Board_initialize *****************
 33507 ;; Defined at:
 33508 ;;		line 121 in file "main.c"
 33509 ;; Parameters:    Size  Location     Type
 33510 ;;		None
 33511 ;; Auto vars:     Size  Location     Type
 33512 ;;  chNum           1   63[COMRAM] unsigned char 
 33513 ;; Return value:  Size  Location     Type
 33514 ;;                  1    wreg      void 
 33515 ;; Registers used:
 33516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33517 ;; Tracked objects:
 33518 ;;		On entry : 0/0
 33519 ;;		On exit  : 0/0
 33520 ;;		Unchanged: 0/0
 33521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33526 ;;Total ram usage:        1 bytes
 33527 ;; Hardware stack levels used: 1
 33528 ;; Hardware stack levels required when called: 11
 33529 ;; This function calls:
 33530 ;;		_LED_Enable
 33531 ;;		_atcommand_init
 33532 ;;		_buffer_init
 33533 ;;		_i2c_init
 33534 ;;		_led_init
 33535 ;;		_lmp91000_disable
 33536 ;;		_lmp91000_pin_init
 33537 ;;		_nvm_init
 33538 ;;		_sensMeasure_init
 33539 ;;		_sens_ZeroCalib_init
 33540 ;;		_usart_init
 33541 ;; This function is called by:
 33542 ;;		_main
 33543 ;; This function uses a non-reentrant model
 33544 ;;
 33545                           
 33546                           	psect	text149
 33547  00D752                     __ptext149:
 33548                           	callstack 0
 33549  00D752                     _Board_initialize:
 33550                           	callstack 19
 33551  00D752                     
 33552                           ;main.c: 123: ANCON0 = 0xFE;
 33553  00D752  0EFE               	movlw	254
 33554  00D754  010F               	movlb	15	; () banked
 33555  00D756  6F48               	movwf	72,b	;volatile
 33556  00D758                     
 33557                           ; BSR set to: 15
 33558                           ;main.c: 124: ANCON1 = 0xFF;
 33559  00D758  6949               	setf	73,b	;volatile
 33560  00D75A                     
 33561                           ; BSR set to: 15
 33562                           ;main.c: 126: LED_Enable(LED_RED);
 33563  00D75A  0E01               	movlw	1
 33564  00D75C  EC6F  F076         	call	_LED_Enable
 33565  00D760                     
 33566                           ;main.c: 127: LED_Enable(LED_GREEN);
 33567  00D760  0E02               	movlw	2
 33568  00D762  EC6F  F076         	call	_LED_Enable
 33569  00D766                     
 33570                           ;main.c: 129: lmp91000_pin_init();
 33571  00D766  ECCD  F078         	call	_lmp91000_pin_init	;wreg free
 33572  00D76A                     
 33573                           ;main.c: 130: for (uint8_t chNum =0; chNum < 3; chNum++)
 33574  00D76A  0E00               	movlw	0
 33575  00D76C  6E40               	movwf	Board_initialize@chNum^0,c
 33576  00D76E                     l19456:
 33577                           
 33578                           ;main.c: 131: lmp91000_disable(chNum);
 33579  00D76E  5040               	movf	Board_initialize@chNum^0,w,c
 33580  00D770  ECD2  F075         	call	_lmp91000_disable
 33581  00D774  2A40               	incf	Board_initialize@chNum^0,f,c
 33582  00D776  0E02               	movlw	2
 33583  00D778  6440               	cpfsgt	Board_initialize@chNum^0,c
 33584  00D77A  EFC1  F06B         	goto	u21131
 33585  00D77E  EFC3  F06B         	goto	u21130
 33586  00D782                     u21131:
 33587  00D782  EFB7  F06B         	goto	l19456
 33588  00D786                     u21130:
 33589  00D786                     
 33590                           ;main.c: 133: led_init();
 33591  00D786  ECCC  F072         	call	_led_init	;wreg free
 33592                           
 33593                           ;main.c: 134: usart_init(9600);
 33594  00D78A  0E80               	movlw	128
 33595  00D78C  6E1C               	movwf	usart_init@baudrate^0,c
 33596  00D78E  0E25               	movlw	37
 33597  00D790  6E1D               	movwf	(usart_init@baudrate+1)^0,c
 33598  00D792  0E00               	movlw	0
 33599  00D794  6E1E               	movwf	(usart_init@baudrate+2)^0,c
 33600  00D796  0E00               	movlw	0
 33601  00D798  6E1F               	movwf	(usart_init@baudrate+3)^0,c
 33602  00D79A  EC2A  F06C         	call	_usart_init	;wreg free
 33603  00D79E                     
 33604                           ;main.c: 135: i2c_init(I2C_100kHz);
 33605  00D79E  0E00               	movlw	0
 33606  00D7A0  EC45  F075         	call	_i2c_init
 33607  00D7A4                     
 33608                           ;main.c: 136: buffer_init(&g_usb_queue);
 33609  00D7A4  0E40               	movlw	low _g_usb_queue
 33610  00D7A6  6E0F               	movwf	buffer_init@queue^0,c
 33611  00D7A8  0E04               	movlw	high _g_usb_queue
 33612  00D7AA  6E10               	movwf	(buffer_init@queue+1)^0,c
 33613  00D7AC  ECFC  F076         	call	_buffer_init	;wreg free
 33614  00D7B0                     
 33615                           ;main.c: 137: buffer_init(&g_usart_queue);
 33616  00D7B0  0E77               	movlw	low _g_usart_queue
 33617  00D7B2  6E0F               	movwf	buffer_init@queue^0,c
 33618  00D7B4  0E03               	movlw	high _g_usart_queue
 33619  00D7B6  6E10               	movwf	(buffer_init@queue+1)^0,c
 33620  00D7B8  ECFC  F076         	call	_buffer_init	;wreg free
 33621  00D7BC                     
 33622                           ;main.c: 138: nvm_init();
 33623  00D7BC  ECF3  F062         	call	_nvm_init	;wreg free
 33624  00D7C0                     
 33625                           ;main.c: 139: sens_ZeroCalib_init();
 33626  00D7C0  EC59  F078         	call	_sens_ZeroCalib_init	;wreg free
 33627  00D7C4                     
 33628                           ;main.c: 140: sensMeasure_init();
 33629  00D7C4  EC7B  F04B         	call	_sensMeasure_init	;wreg free
 33630  00D7C8                     
 33631                           ;main.c: 141: atcommand_init();
 33632  00D7C8  ECBD  F078         	call	_atcommand_init	;wreg free
 33633  00D7CC                     
 33634                           ;main.c: 142: g_usb_state = USB_NONE;
 33635  00D7CC  0E00               	movlw	0
 33636  00D7CE  0101               	movlb	1	; () banked
 33637  00D7D0  6F77               	movwf	_g_usb_state& (0+255),b
 33638  00D7D2                     
 33639                           ; BSR set to: 1
 33640  00D7D2  0012               	return		;funcret
 33641  00D7D4                     __end_of_Board_initialize:
 33642                           	callstack 0
 33643                           
 33644 ;; *************** function _usart_init *****************
 33645 ;; Defined at:
 33646 ;;		line 11 in file "bsp/usart.c"
 33647 ;; Parameters:    Size  Location     Type
 33648 ;;  baudrate        4   27[COMRAM] unsigned long 
 33649 ;; Auto vars:     Size  Location     Type
 33650 ;;  b               4   35[COMRAM] unsigned long 
 33651 ;; Return value:  Size  Location     Type
 33652 ;;                  1    wreg      void 
 33653 ;; Registers used:
 33654 ;;		wreg, status,2, status,0, cstack
 33655 ;; Tracked objects:
 33656 ;;		On entry : 0/0
 33657 ;;		On exit  : 0/0
 33658 ;;		Unchanged: 0/0
 33659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33660 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33661 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33662 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33663 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33664 ;;Total ram usage:       12 bytes
 33665 ;; Hardware stack levels used: 1
 33666 ;; Hardware stack levels required when called: 4
 33667 ;; This function calls:
 33668 ;;		___lldiv
 33669 ;; This function is called by:
 33670 ;;		_Board_initialize
 33671 ;; This function uses a non-reentrant model
 33672 ;;
 33673                           
 33674                           	psect	text150
 33675  00D854                     __ptext150:
 33676                           	callstack 0
 33677  00D854                     _usart_init:
 33678                           	callstack 25
 33679  00D854                     
 33680                           ;usart.c: 13: TRISCbits.TRISC6 = 0;
 33681  00D854  9C94               	bcf	148,6,c	;volatile
 33682                           
 33683                           ;usart.c: 14: TRISCbits.TRISC7 = 1;
 33684  00D856  8E94               	bsf	148,7,c	;volatile
 33685  00D858                     
 33686                           ;usart.c: 16: TXSTA1 = 0b10100010;
 33687  00D858  0EA2               	movlw	162
 33688  00D85A  6EAD               	movwf	173,c	;volatile
 33689                           
 33690                           ;usart.c: 17: RCSTA1 = 0b10010000;
 33691  00D85C  0E90               	movlw	144
 33692  00D85E  6EAC               	movwf	172,c	;volatile
 33693                           
 33694                           ;usart.c: 18: BAUDCON1 = 0b00000000;
 33695  00D860  0E00               	movlw	0
 33696  00D862  6E7E               	movwf	126,c	;volatile
 33697  00D864                     
 33698                           ;usart.c: 21: RCONbits.IPEN = 1;
 33699  00D864  8ED0               	bsf	208,7,c	;volatile
 33700  00D866                     
 33701                           ;usart.c: 22: IPR1bits.RC1IP= 0;
 33702  00D866  9A9F               	bcf	159,5,c	;volatile
 33703  00D868                     
 33704                           ;usart.c: 23: PIE1bits.RC1IE= 1;
 33705  00D868  8A9D               	bsf	157,5,c	;volatile
 33706  00D86A                     
 33707                           ;usart.c: 26: uint32_t b = (48000000 / (64 * baudrate)) - 1;
 33708  00D86A  0E00               	movlw	0
 33709  00D86C  6E0F               	movwf	___lldiv@dividend^0,c
 33710  00D86E  0E6C               	movlw	108
 33711  00D870  6E10               	movwf	(___lldiv@dividend+1)^0,c
 33712  00D872  0EDC               	movlw	220
 33713  00D874  6E11               	movwf	(___lldiv@dividend+2)^0,c
 33714  00D876  0E02               	movlw	2
 33715  00D878  6E12               	movwf	(___lldiv@dividend+3)^0,c
 33716  00D87A  C01C  F020         	movff	usart_init@baudrate,??_usart_init
 33717  00D87E  C01D  F021         	movff	usart_init@baudrate+1,??_usart_init+1
 33718  00D882  C01E  F022         	movff	usart_init@baudrate+2,??_usart_init+2
 33719  00D886  C01F  F023         	movff	usart_init@baudrate+3,??_usart_init+3
 33720  00D88A  0E06               	movlw	6
 33721  00D88C                     u20155:
 33722  00D88C  90D8               	bcf	status,0,c
 33723  00D88E  3620               	rlcf	??_usart_init^0,f,c
 33724  00D890  3621               	rlcf	(??_usart_init+1)^0,f,c
 33725  00D892  3622               	rlcf	(??_usart_init+2)^0,f,c
 33726  00D894  3623               	rlcf	(??_usart_init+3)^0,f,c
 33727  00D896  2EE8               	decfsz	wreg,f,c
 33728  00D898  EF46  F06C         	goto	u20155
 33729  00D89C  C020  F013         	movff	??_usart_init,___lldiv@divisor
 33730  00D8A0  C021  F014         	movff	??_usart_init+1,___lldiv@divisor+1
 33731  00D8A4  C022  F015         	movff	??_usart_init+2,___lldiv@divisor+2
 33732  00D8A8  C023  F016         	movff	??_usart_init+3,___lldiv@divisor+3
 33733  00D8AC  EC3C  F068         	call	___lldiv	;wreg free
 33734  00D8B0  0EFF               	movlw	255
 33735  00D8B2  240F               	addwf	?___lldiv^0,w,c
 33736  00D8B4  6E24               	movwf	usart_init@b^0,c
 33737  00D8B6  0EFF               	movlw	255
 33738  00D8B8  2010               	addwfc	(?___lldiv+1)^0,w,c
 33739  00D8BA  6E25               	movwf	(usart_init@b+1)^0,c
 33740  00D8BC  0EFF               	movlw	255
 33741  00D8BE  2011               	addwfc	(?___lldiv+2)^0,w,c
 33742  00D8C0  6E26               	movwf	(usart_init@b+2)^0,c
 33743  00D8C2  0EFF               	movlw	255
 33744  00D8C4  2012               	addwfc	(?___lldiv+3)^0,w,c
 33745  00D8C6  6E27               	movwf	(usart_init@b+3)^0,c
 33746  00D8C8                     
 33747                           ;usart.c: 27: SPBRG1 = b;
 33748  00D8C8  C024  FFB0         	movff	usart_init@b,4016	;volatile
 33749  00D8CC  0012               	return		;funcret
 33750  00D8CE                     __end_of_usart_init:
 33751                           	callstack 0
 33752                           
 33753 ;; *************** function ___lldiv *****************
 33754 ;; Defined at:
 33755 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
 33756 ;; Parameters:    Size  Location     Type
 33757 ;;  dividend        4   14[COMRAM] unsigned long 
 33758 ;;  divisor         4   18[COMRAM] unsigned long 
 33759 ;; Auto vars:     Size  Location     Type
 33760 ;;  quotient        4   22[COMRAM] unsigned long 
 33761 ;;  counter         1   26[COMRAM] unsigned char 
 33762 ;; Return value:  Size  Location     Type
 33763 ;;                  4   14[COMRAM] unsigned long 
 33764 ;; Registers used:
 33765 ;;		wreg, status,2, status,0
 33766 ;; Tracked objects:
 33767 ;;		On entry : 0/0
 33768 ;;		On exit  : 0/0
 33769 ;;		Unchanged: 0/0
 33770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33771 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33772 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33774 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33775 ;;Total ram usage:       13 bytes
 33776 ;; Hardware stack levels used: 1
 33777 ;; Hardware stack levels required when called: 3
 33778 ;; This function calls:
 33779 ;;		Nothing
 33780 ;; This function is called by:
 33781 ;;		_usart_init
 33782 ;;		_sprintf
 33783 ;; This function uses a non-reentrant model
 33784 ;;
 33785                           
 33786                           	psect	text151
 33787  00D078                     __ptext151:
 33788                           	callstack 0
 33789  00D078                     ___lldiv:
 33790                           	callstack 24
 33791  00D078  0E00               	movlw	0
 33792  00D07A  6E17               	movwf	___lldiv@quotient^0,c
 33793  00D07C  0E00               	movlw	0
 33794  00D07E  6E18               	movwf	(___lldiv@quotient+1)^0,c
 33795  00D080  0E00               	movlw	0
 33796  00D082  6E19               	movwf	(___lldiv@quotient+2)^0,c
 33797  00D084  0E00               	movlw	0
 33798  00D086  6E1A               	movwf	(___lldiv@quotient+3)^0,c
 33799  00D088  5013               	movf	___lldiv@divisor^0,w,c
 33800  00D08A  1014               	iorwf	(___lldiv@divisor+1)^0,w,c
 33801  00D08C  1015               	iorwf	(___lldiv@divisor+2)^0,w,c
 33802  00D08E  1016               	iorwf	(___lldiv@divisor+3)^0,w,c
 33803  00D090  B4D8               	btfsc	status,2,c
 33804  00D092  EF4D  F068         	goto	u18701
 33805  00D096  EF4F  F068         	goto	u18700
 33806  00D09A                     u18701:
 33807  00D09A  EF85  F068         	goto	l2562
 33808  00D09E                     u18700:
 33809  00D09E  0E01               	movlw	1
 33810  00D0A0  6E1B               	movwf	___lldiv@counter^0,c
 33811  00D0A2  EF59  F068         	goto	l17280
 33812  00D0A6                     l17278:
 33813  00D0A6  90D8               	bcf	status,0,c
 33814  00D0A8  3613               	rlcf	___lldiv@divisor^0,f,c
 33815  00D0AA  3614               	rlcf	(___lldiv@divisor+1)^0,f,c
 33816  00D0AC  3615               	rlcf	(___lldiv@divisor+2)^0,f,c
 33817  00D0AE  3616               	rlcf	(___lldiv@divisor+3)^0,f,c
 33818  00D0B0  2A1B               	incf	___lldiv@counter^0,f,c
 33819  00D0B2                     l17280:
 33820  00D0B2  AE16               	btfss	(___lldiv@divisor+3)^0,7,c
 33821  00D0B4  EF5E  F068         	goto	u18711
 33822  00D0B8  EF60  F068         	goto	u18710
 33823  00D0BC                     u18711:
 33824  00D0BC  EF53  F068         	goto	l17278
 33825  00D0C0                     u18710:
 33826  00D0C0                     l17282:
 33827  00D0C0  90D8               	bcf	status,0,c
 33828  00D0C2  3617               	rlcf	___lldiv@quotient^0,f,c
 33829  00D0C4  3618               	rlcf	(___lldiv@quotient+1)^0,f,c
 33830  00D0C6  3619               	rlcf	(___lldiv@quotient+2)^0,f,c
 33831  00D0C8  361A               	rlcf	(___lldiv@quotient+3)^0,f,c
 33832  00D0CA  5013               	movf	___lldiv@divisor^0,w,c
 33833  00D0CC  5C0F               	subwf	___lldiv@dividend^0,w,c
 33834  00D0CE  5014               	movf	(___lldiv@divisor+1)^0,w,c
 33835  00D0D0  5810               	subwfb	(___lldiv@dividend+1)^0,w,c
 33836  00D0D2  5015               	movf	(___lldiv@divisor+2)^0,w,c
 33837  00D0D4  5811               	subwfb	(___lldiv@dividend+2)^0,w,c
 33838  00D0D6  5016               	movf	(___lldiv@divisor+3)^0,w,c
 33839  00D0D8  5812               	subwfb	(___lldiv@dividend+3)^0,w,c
 33840  00D0DA  A0D8               	btfss	status,0,c
 33841  00D0DC  EF72  F068         	goto	u18721
 33842  00D0E0  EF74  F068         	goto	u18720
 33843  00D0E4                     u18721:
 33844  00D0E4  EF7D  F068         	goto	l17290
 33845  00D0E8                     u18720:
 33846  00D0E8  5013               	movf	___lldiv@divisor^0,w,c
 33847  00D0EA  5E0F               	subwf	___lldiv@dividend^0,f,c
 33848  00D0EC  5014               	movf	(___lldiv@divisor+1)^0,w,c
 33849  00D0EE  5A10               	subwfb	(___lldiv@dividend+1)^0,f,c
 33850  00D0F0  5015               	movf	(___lldiv@divisor+2)^0,w,c
 33851  00D0F2  5A11               	subwfb	(___lldiv@dividend+2)^0,f,c
 33852  00D0F4  5016               	movf	(___lldiv@divisor+3)^0,w,c
 33853  00D0F6  5A12               	subwfb	(___lldiv@dividend+3)^0,f,c
 33854  00D0F8  8017               	bsf	___lldiv@quotient^0,0,c
 33855  00D0FA                     l17290:
 33856  00D0FA  90D8               	bcf	status,0,c
 33857  00D0FC  3216               	rrcf	(___lldiv@divisor+3)^0,f,c
 33858  00D0FE  3215               	rrcf	(___lldiv@divisor+2)^0,f,c
 33859  00D100  3214               	rrcf	(___lldiv@divisor+1)^0,f,c
 33860  00D102  3213               	rrcf	___lldiv@divisor^0,f,c
 33861  00D104  2E1B               	decfsz	___lldiv@counter^0,f,c
 33862  00D106  EF60  F068         	goto	l17282
 33863  00D10A                     l2562:
 33864  00D10A  C017  F00F         	movff	___lldiv@quotient,?___lldiv
 33865  00D10E  C018  F010         	movff	___lldiv@quotient+1,?___lldiv+1
 33866  00D112  C019  F011         	movff	___lldiv@quotient+2,?___lldiv+2
 33867  00D116  C01A  F012         	movff	___lldiv@quotient+3,?___lldiv+3
 33868  00D11A  0012               	return		;funcret
 33869  00D11C                     __end_of___lldiv:
 33870                           	callstack 0
 33871                           
 33872 ;; *************** function _sens_ZeroCalib_init *****************
 33873 ;; Defined at:
 33874 ;;		line 36 in file "app_sens_calibration.c"
 33875 ;; Parameters:    Size  Location     Type
 33876 ;;		None
 33877 ;; Auto vars:     Size  Location     Type
 33878 ;;		None
 33879 ;; Return value:  Size  Location     Type
 33880 ;;                  1    wreg      void 
 33881 ;; Registers used:
 33882 ;;		wreg, status,2
 33883 ;; Tracked objects:
 33884 ;;		On entry : 0/0
 33885 ;;		On exit  : 0/0
 33886 ;;		Unchanged: 0/0
 33887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33892 ;;Total ram usage:        0 bytes
 33893 ;; Hardware stack levels used: 1
 33894 ;; Hardware stack levels required when called: 3
 33895 ;; This function calls:
 33896 ;;		Nothing
 33897 ;; This function is called by:
 33898 ;;		_Board_initialize
 33899 ;; This function uses a non-reentrant model
 33900 ;;
 33901                           
 33902                           	psect	text152
 33903  00F0B2                     __ptext152:
 33904                           	callstack 0
 33905  00F0B2                     _sens_ZeroCalib_init:
 33906                           	callstack 26
 33907  00F0B2                     
 33908                           ;app_sens_calibration.c: 38: g_sens_calib.seq = CALIB_INIT;
 33909  00F0B2  0E00               	movlw	0
 33910  00F0B4  0101               	movlb	1	; () banked
 33911  00F0B6  6F64               	movwf	_g_sens_calib& (0+255),b
 33912                           
 33913                           ;app_sens_calibration.c: 39: g_sens_calib.zero_cal = 0;
 33914  00F0B8  0E00               	movlw	0
 33915  00F0BA  6F65               	movwf	(_g_sens_calib+1)& (0+255),b
 33916                           
 33917                           ;app_sens_calibration.c: 40: g_calib_count = 0;
 33918  00F0BC  0E00               	movlw	0
 33919  00F0BE  6F3A               	movwf	_g_calib_count& (0+255),b	;volatile
 33920  00F0C0  0E00               	movlw	0
 33921  00F0C2  6F3B               	movwf	(_g_calib_count+1)& (0+255),b	;volatile
 33922  00F0C4  0E00               	movlw	0
 33923  00F0C6  6F3C               	movwf	(_g_calib_count+2)& (0+255),b	;volatile
 33924  00F0C8  0E00               	movlw	0
 33925  00F0CA  6F3D               	movwf	(_g_calib_count+3)& (0+255),b	;volatile
 33926  00F0CC                     
 33927                           ; BSR set to: 1
 33928  00F0CC  0012               	return		;funcret
 33929  00F0CE                     __end_of_sens_ZeroCalib_init:
 33930                           	callstack 0
 33931                           
 33932 ;; *************** function _sensMeasure_init *****************
 33933 ;; Defined at:
 33934 ;;		line 39 in file "app_sens_measure.c"
 33935 ;; Parameters:    Size  Location     Type
 33936 ;;		None
 33937 ;; Auto vars:     Size  Location     Type
 33938 ;;  chNum           1   34[COMRAM] unsigned char 
 33939 ;; Return value:  Size  Location     Type
 33940 ;;                  1    wreg      void 
 33941 ;; Registers used:
 33942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33943 ;; Tracked objects:
 33944 ;;		On entry : 0/0
 33945 ;;		On exit  : 0/0
 33946 ;;		Unchanged: 0/0
 33947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 33948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33949 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33951 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 33952 ;;Total ram usage:        1 bytes
 33953 ;; Hardware stack levels used: 1
 33954 ;; Hardware stack levels required when called: 8
 33955 ;; This function calls:
 33956 ;;		_Kalman_setEstimateError
 33957 ;;		_Kalman_setMeasurementError
 33958 ;;		_Set_KalmanFilter_Sensitivity
 33959 ;;		_tes0902_ABC_OFF
 33960 ;; This function is called by:
 33961 ;;		_Board_initialize
 33962 ;; This function uses a non-reentrant model
 33963 ;;
 33964                           
 33965                           	psect	text153
 33966  0096F6                     __ptext153:
 33967                           	callstack 0
 33968  0096F6                     _sensMeasure_init:
 33969                           	callstack 21
 33970  0096F6                     
 33971                           ;app_sens_measure.c: 41: g_large_counter = 0;
 33972  0096F6  0E00               	movlw	0
 33973  0096F8  0101               	movlb	1	; () banked
 33974  0096FA  6F42               	movwf	_g_large_counter& (0+255),b	;volatile
 33975  0096FC  0E00               	movlw	0
 33976  0096FE  6F43               	movwf	(_g_large_counter+1)& (0+255),b	;volatile
 33977  009700  0E00               	movlw	0
 33978  009702  6F44               	movwf	(_g_large_counter+2)& (0+255),b	;volatile
 33979  009704  0E00               	movlw	0
 33980  009706  6F45               	movwf	(_g_large_counter+3)& (0+255),b	;volatile
 33981                           
 33982                           ;app_sens_measure.c: 42: g_sens_measure.seq = SENS_INIT;
 33983  009708  0E00               	movlw	0
 33984  00970A  6F0E               	movwf	_g_sens_measure& (0+255),b
 33985                           
 33986                           ;app_sens_measure.c: 43: g_tes0902_measure.seq = SYNC_MSB_CHECK;
 33987  00970C  0E00               	movlw	0
 33988  00970E  6F78               	movwf	_g_tes0902_measure& (0+255),b
 33989  009710                     
 33990                           ; BSR set to: 1
 33991                           ;app_sens_measure.c: 45: tes0902_ABC_OFF(g_nvm.flash.CO2_ABC);
 33992  009710  517D               	movf	(_g_nvm+4)& (0+255),w,b
 33993  009712  ECC3  F078         	call	_tes0902_ABC_OFF
 33994  009716                     
 33995                           ;app_sens_measure.c: 46: g_sens_measure.isLMP_InitDone[0] = 0;
 33996  009716  0E00               	movlw	0
 33997  009718  0101               	movlb	1	; () banked
 33998  00971A  6F11               	movwf	(_g_sens_measure+3)& (0+255),b
 33999  00971C                     
 34000                           ; BSR set to: 1
 34001                           ;app_sens_measure.c: 47: g_sens_measure.isLMP_InitDone[1] = 0;
 34002  00971C  0E00               	movlw	0
 34003  00971E  6F12               	movwf	(_g_sens_measure+4)& (0+255),b
 34004  009720                     
 34005                           ; BSR set to: 1
 34006                           ;app_sens_measure.c: 48: g_sens_measure.isADC_InitDone[0] = 0;
 34007  009720  0E00               	movlw	0
 34008  009722  6F13               	movwf	(_g_sens_measure+5)& (0+255),b
 34009  009724                     
 34010                           ; BSR set to: 1
 34011                           ;app_sens_measure.c: 49: g_sens_measure.isADC_InitDone[1] = 0;
 34012  009724  0E00               	movlw	0
 34013  009726  6F14               	movwf	(_g_sens_measure+6)& (0+255),b
 34014  009728                     
 34015                           ; BSR set to: 1
 34016                           ;app_sens_measure.c: 50: g_sens_measure.isTemp_InitDone = 0;
 34017  009728  0E00               	movlw	0
 34018  00972A  6F15               	movwf	(_g_sens_measure+7)& (0+255),b
 34019  00972C                     
 34020                           ; BSR set to: 1
 34021                           ;app_sens_measure.c: 52: g_sens_measure.isGasSensor_Success[0] = 0;
 34022  00972C  0E00               	movlw	0
 34023  00972E  6F16               	movwf	(_g_sens_measure+8)& (0+255),b
 34024  009730                     
 34025                           ; BSR set to: 1
 34026                           ;app_sens_measure.c: 53: g_sens_measure.isGasSensor_Success[1] = 0;
 34027  009730  0E00               	movlw	0
 34028  009732  6F17               	movwf	(_g_sens_measure+9)& (0+255),b
 34029  009734                     
 34030                           ; BSR set to: 1
 34031                           ;app_sens_measure.c: 54: g_sens_measure.isGasSensor_Success[2] = 0;
 34032  009734  0E00               	movlw	0
 34033  009736  6F18               	movwf	(_g_sens_measure+10)& (0+255),b
 34034  009738                     
 34035                           ; BSR set to: 1
 34036                           ;app_sens_measure.c: 55: g_sens_measure.isCO2_Success = 0;
 34037  009738  0E00               	movlw	0
 34038  00973A  6F19               	movwf	(_g_sens_measure+11)& (0+255),b
 34039  00973C                     
 34040                           ; BSR set to: 1
 34041                           ;app_sens_measure.c: 61: for (uint8_t chNum = 0; chNum < 4; chNum++)
 34042  00973C  0E00               	movlw	0
 34043  00973E  6E23               	movwf	sensMeasure_init@chNum^0,c
 34044  009740                     l18644:
 34045                           
 34046                           ;app_sens_measure.c: 62: {;app_sens_measure.c: 63: kalmanFilter[chNum]._current_estimate
      +                           = 0.0f;
 34047  009740  5023               	movf	sensMeasure_init@chNum^0,w,c
 34048  009742  0D18               	mullw	24
 34049  009744  0E5C               	movlw	low (_kalmanFilter+12)
 34050  009746  24F3               	addwf	243,w,c
 34051  009748  6ED9               	movwf	fsr2l,c
 34052  00974A  0E02               	movlw	high (_kalmanFilter+12)
 34053  00974C  20F4               	addwfc	prodh,w,c
 34054  00974E  6EDA               	movwf	fsr2h,c
 34055  009750  0E00               	movlw	0
 34056  009752  6EDE               	movwf	postinc2,c
 34057  009754  0E00               	movlw	0
 34058  009756  6EDE               	movwf	postinc2,c
 34059  009758  0E00               	movlw	0
 34060  00975A  6EDE               	movwf	postinc2,c
 34061  00975C  0E00               	movlw	0
 34062  00975E  6EDD               	movwf	postdec2,c
 34063                           
 34064                           ;app_sens_measure.c: 64: kalmanFilter[chNum]._err_estimate = 0.0f;
 34065  009760  5023               	movf	sensMeasure_init@chNum^0,w,c
 34066  009762  0D18               	mullw	24
 34067  009764  0E54               	movlw	low (_kalmanFilter+4)
 34068  009766  24F3               	addwf	243,w,c
 34069  009768  6ED9               	movwf	fsr2l,c
 34070  00976A  0E02               	movlw	high (_kalmanFilter+4)
 34071  00976C  20F4               	addwfc	prodh,w,c
 34072  00976E  6EDA               	movwf	fsr2h,c
 34073  009770  0E00               	movlw	0
 34074  009772  6EDE               	movwf	postinc2,c
 34075  009774  0E00               	movlw	0
 34076  009776  6EDE               	movwf	postinc2,c
 34077  009778  0E00               	movlw	0
 34078  00977A  6EDE               	movwf	postinc2,c
 34079  00977C  0E00               	movlw	0
 34080  00977E  6EDD               	movwf	postdec2,c
 34081                           
 34082                           ;app_sens_measure.c: 65: kalmanFilter[chNum]._err_measure = 0.0f;
 34083  009780  5023               	movf	sensMeasure_init@chNum^0,w,c
 34084  009782  0D18               	mullw	24
 34085  009784  0E50               	movlw	low _kalmanFilter
 34086  009786  24F3               	addwf	243,w,c
 34087  009788  6ED9               	movwf	fsr2l,c
 34088  00978A  0E02               	movlw	high _kalmanFilter
 34089  00978C  20F4               	addwfc	prodh,w,c
 34090  00978E  6EDA               	movwf	fsr2h,c
 34091  009790  0E00               	movlw	0
 34092  009792  6EDE               	movwf	postinc2,c
 34093  009794  0E00               	movlw	0
 34094  009796  6EDE               	movwf	postinc2,c
 34095  009798  0E00               	movlw	0
 34096  00979A  6EDE               	movwf	postinc2,c
 34097  00979C  0E00               	movlw	0
 34098  00979E  6EDD               	movwf	postdec2,c
 34099                           
 34100                           ;app_sens_measure.c: 66: kalmanFilter[chNum]._kalman_gain = 0.0f;
 34101  0097A0  5023               	movf	sensMeasure_init@chNum^0,w,c
 34102  0097A2  0D18               	mullw	24
 34103  0097A4  0E64               	movlw	low (_kalmanFilter+20)
 34104  0097A6  24F3               	addwf	243,w,c
 34105  0097A8  6ED9               	movwf	fsr2l,c
 34106  0097AA  0E02               	movlw	high (_kalmanFilter+20)
 34107  0097AC  20F4               	addwfc	prodh,w,c
 34108  0097AE  6EDA               	movwf	fsr2h,c
 34109  0097B0  0E00               	movlw	0
 34110  0097B2  6EDE               	movwf	postinc2,c
 34111  0097B4  0E00               	movlw	0
 34112  0097B6  6EDE               	movwf	postinc2,c
 34113  0097B8  0E00               	movlw	0
 34114  0097BA  6EDE               	movwf	postinc2,c
 34115  0097BC  0E00               	movlw	0
 34116  0097BE  6EDD               	movwf	postdec2,c
 34117                           
 34118                           ;app_sens_measure.c: 67: kalmanFilter[chNum]._last_estimate = 0.0f;
 34119  0097C0  5023               	movf	sensMeasure_init@chNum^0,w,c
 34120  0097C2  0D18               	mullw	24
 34121  0097C4  0E60               	movlw	low (_kalmanFilter+16)
 34122  0097C6  24F3               	addwf	243,w,c
 34123  0097C8  6ED9               	movwf	fsr2l,c
 34124  0097CA  0E02               	movlw	high (_kalmanFilter+16)
 34125  0097CC  20F4               	addwfc	prodh,w,c
 34126  0097CE  6EDA               	movwf	fsr2h,c
 34127  0097D0  0E00               	movlw	0
 34128  0097D2  6EDE               	movwf	postinc2,c
 34129  0097D4  0E00               	movlw	0
 34130  0097D6  6EDE               	movwf	postinc2,c
 34131  0097D8  0E00               	movlw	0
 34132  0097DA  6EDE               	movwf	postinc2,c
 34133  0097DC  0E00               	movlw	0
 34134  0097DE  6EDD               	movwf	postdec2,c
 34135                           
 34136                           ;app_sens_measure.c: 68: kalmanFilter[chNum]._q_process = 0.0f;
 34137  0097E0  5023               	movf	sensMeasure_init@chNum^0,w,c
 34138  0097E2  0D18               	mullw	24
 34139  0097E4  0E58               	movlw	low (_kalmanFilter+8)
 34140  0097E6  24F3               	addwf	243,w,c
 34141  0097E8  6ED9               	movwf	fsr2l,c
 34142  0097EA  0E02               	movlw	high (_kalmanFilter+8)
 34143  0097EC  20F4               	addwfc	prodh,w,c
 34144  0097EE  6EDA               	movwf	fsr2h,c
 34145  0097F0  0E00               	movlw	0
 34146  0097F2  6EDE               	movwf	postinc2,c
 34147  0097F4  0E00               	movlw	0
 34148  0097F6  6EDE               	movwf	postinc2,c
 34149  0097F8  0E00               	movlw	0
 34150  0097FA  6EDE               	movwf	postinc2,c
 34151  0097FC  0E00               	movlw	0
 34152  0097FE  6EDD               	movwf	postdec2,c
 34153  009800                     
 34154                           ;app_sens_measure.c: 69: Kalman_setMeasurementError(&kalmanFilter[chNum],1);
 34155  009800  5023               	movf	sensMeasure_init@chNum^0,w,c
 34156  009802  0D18               	mullw	24
 34157  009804  0E50               	movlw	low _kalmanFilter
 34158  009806  24F3               	addwf	243,w,c
 34159  009808  6E0F               	movwf	Kalman_setMeasurementError@pObj^0,c
 34160  00980A  0E02               	movlw	high _kalmanFilter
 34161  00980C  20F4               	addwfc	prodh,w,c
 34162  00980E  6E10               	movwf	(Kalman_setMeasurementError@pObj+1)^0,c
 34163  009810  0E00               	movlw	0
 34164  009812  6E11               	movwf	Kalman_setMeasurementError@mea_e^0,c
 34165  009814  0E00               	movlw	0
 34166  009816  6E12               	movwf	(Kalman_setMeasurementError@mea_e+1)^0,c
 34167  009818  0E80               	movlw	128
 34168  00981A  6E13               	movwf	(Kalman_setMeasurementError@mea_e+2)^0,c
 34169  00981C  0E3F               	movlw	63
 34170  00981E  6E14               	movwf	(Kalman_setMeasurementError@mea_e+3)^0,c
 34171  009820  EC75  F078         	call	_Kalman_setMeasurementError	;wreg free
 34172  009824                     
 34173                           ;app_sens_measure.c: 70: Kalman_setEstimateError(&kalmanFilter[chNum],1);
 34174  009824  5023               	movf	sensMeasure_init@chNum^0,w,c
 34175  009826  0D18               	mullw	24
 34176  009828  0E50               	movlw	low _kalmanFilter
 34177  00982A  24F3               	addwf	243,w,c
 34178  00982C  6E0F               	movwf	Kalman_setEstimateError@pObj^0,c
 34179  00982E  0E02               	movlw	high _kalmanFilter
 34180  009830  20F4               	addwfc	prodh,w,c
 34181  009832  6E10               	movwf	(Kalman_setEstimateError@pObj+1)^0,c
 34182  009834  0E00               	movlw	0
 34183  009836  6E11               	movwf	Kalman_setEstimateError@est_e^0,c
 34184  009838  0E00               	movlw	0
 34185  00983A  6E12               	movwf	(Kalman_setEstimateError@est_e+1)^0,c
 34186  00983C  0E80               	movlw	128
 34187  00983E  6E13               	movwf	(Kalman_setEstimateError@est_e+2)^0,c
 34188  009840  0E3F               	movlw	63
 34189  009842  6E14               	movwf	(Kalman_setEstimateError@est_e+3)^0,c
 34190  009844  EC3C  F078         	call	_Kalman_setEstimateError	;wreg free
 34191  009848                     
 34192                           ;app_sens_measure.c: 71: Set_KalmanFilter_Sensitivity(&kalmanFilter[chNum], g_nvm.flash.
      +                          window_size[chNum]);
 34193  009848  5023               	movf	sensMeasure_init@chNum^0,w,c
 34194  00984A  0D18               	mullw	24
 34195  00984C  0E50               	movlw	low _kalmanFilter
 34196  00984E  24F3               	addwf	243,w,c
 34197  009850  6E15               	movwf	Set_KalmanFilter_Sensitivity@pObj^0,c
 34198  009852  0E02               	movlw	high _kalmanFilter
 34199  009854  20F4               	addwfc	prodh,w,c
 34200  009856  6E16               	movwf	(Set_KalmanFilter_Sensitivity@pObj+1)^0,c
 34201  009858  0E7E               	movlw	low (_g_nvm+5)
 34202  00985A  2423               	addwf	sensMeasure_init@chNum^0,w,c
 34203  00985C  6ED9               	movwf	fsr2l,c
 34204  00985E  6ADA               	clrf	fsr2h,c
 34205  009860  0E01               	movlw	high (_g_nvm+5)
 34206  009862  22DA               	addwfc	fsr2h,f,c
 34207  009864  50DF               	movf	indf2,w,c
 34208  009866  6E17               	movwf	Set_KalmanFilter_Sensitivity@e_level^0,c
 34209  009868  EC2D  F046         	call	_Set_KalmanFilter_Sensitivity	;wreg free
 34210  00986C  2A23               	incf	sensMeasure_init@chNum^0,f,c
 34211  00986E  0E03               	movlw	3
 34212  009870  6423               	cpfsgt	sensMeasure_init@chNum^0,c
 34213  009872  EF3D  F04C         	goto	u20201
 34214  009876  EF3F  F04C         	goto	u20200
 34215  00987A                     u20201:
 34216  00987A  EFA0  F04B         	goto	l18644
 34217  00987E                     u20200:
 34218  00987E                     
 34219                           ;app_sens_measure.c: 72: };app_sens_measure.c: 74: Kalman_setMeasurementError(&kalmanFil
      +                          ter[1], g_nvm.flash.KMf_e_measure);
 34220  00987E  0E68               	movlw	low (_kalmanFilter+24)
 34221  009880  6E0F               	movwf	Kalman_setMeasurementError@pObj^0,c
 34222  009882  0E02               	movlw	high (_kalmanFilter+24)
 34223  009884  6E10               	movwf	(Kalman_setMeasurementError@pObj+1)^0,c
 34224  009886  C1CE  F011         	movff	_g_nvm+85,Kalman_setMeasurementError@mea_e
 34225  00988A  C1CF  F012         	movff	_g_nvm+86,Kalman_setMeasurementError@mea_e+1
 34226  00988E  C1D0  F013         	movff	_g_nvm+87,Kalman_setMeasurementError@mea_e+2
 34227  009892  C1D1  F014         	movff	_g_nvm+88,Kalman_setMeasurementError@mea_e+3
 34228  009896  EC75  F078         	call	_Kalman_setMeasurementError	;wreg free
 34229  00989A  0012               	return		;funcret
 34230  00989C                     __end_of_sensMeasure_init:
 34231                           	callstack 0
 34232                           
 34233 ;; *************** function _tes0902_ABC_OFF *****************
 34234 ;; Defined at:
 34235 ;;		line 159 in file "bsp/TES0902.c"
 34236 ;; Parameters:    Size  Location     Type
 34237 ;;  status          1    wreg     unsigned char 
 34238 ;; Auto vars:     Size  Location     Type
 34239 ;;  status          1   33[COMRAM] unsigned char 
 34240 ;; Return value:  Size  Location     Type
 34241 ;;                  1    wreg      void 
 34242 ;; Registers used:
 34243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34244 ;; Tracked objects:
 34245 ;;		On entry : 0/0
 34246 ;;		On exit  : 0/0
 34247 ;;		Unchanged: 0/0
 34248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34253 ;;Total ram usage:        1 bytes
 34254 ;; Hardware stack levels used: 1
 34255 ;; Hardware stack levels required when called: 7
 34256 ;; This function calls:
 34257 ;;		_CMD_set_ABC_on
 34258 ;; This function is called by:
 34259 ;;		_update_command
 34260 ;;		_sensMeasure_init
 34261 ;; This function uses a non-reentrant model
 34262 ;;
 34263                           
 34264                           	psect	text154
 34265  00F186                     __ptext154:
 34266                           	callstack 0
 34267  00F186                     _tes0902_ABC_OFF:
 34268                           	callstack 21
 34269                           
 34270                           ;incstack = 0
 34271                           ;tes0902_ABC_OFF@status stored from wreg
 34272  00F186  6E22               	movwf	tes0902_ABC_OFF@status^0,c
 34273  00F188                     
 34274                           ;TES0902.c: 161: CMD_set_ABC_on(status);
 34275  00F188  5022               	movf	tes0902_ABC_OFF@status^0,w,c
 34276  00F18A  EC2A  F065         	call	_CMD_set_ABC_on
 34277  00F18E  0012               	return		;funcret
 34278  00F190                     __end_of_tes0902_ABC_OFF:
 34279                           	callstack 0
 34280                           
 34281 ;; *************** function _CMD_set_ABC_on *****************
 34282 ;; Defined at:
 34283 ;;		line 59 in file "bsp/TES0902.c"
 34284 ;; Parameters:    Size  Location     Type
 34285 ;;  value           1    wreg     unsigned char 
 34286 ;; Auto vars:     Size  Location     Type
 34287 ;;  value           1   31[COMRAM] unsigned char 
 34288 ;;  len             1   32[COMRAM] unsigned char 
 34289 ;; Return value:  Size  Location     Type
 34290 ;;                  1    wreg      void 
 34291 ;; Registers used:
 34292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34293 ;; Tracked objects:
 34294 ;;		On entry : 0/0
 34295 ;;		On exit  : 0/0
 34296 ;;		Unchanged: 0/0
 34297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34301 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34302 ;;Total ram usage:        2 bytes
 34303 ;; Hardware stack levels used: 1
 34304 ;; Hardware stack levels required when called: 6
 34305 ;; This function calls:
 34306 ;;		_Calculate_CRC16
 34307 ;;		_usart_writeBytes
 34308 ;; This function is called by:
 34309 ;;		_tes0902_ABC_OFF
 34310 ;; This function uses a non-reentrant model
 34311 ;;
 34312                           
 34313                           	psect	text155
 34314  00CA54                     __ptext155:
 34315                           	callstack 0
 34316  00CA54                     _CMD_set_ABC_on:
 34317                           	callstack 21
 34318                           
 34319                           ;incstack = 0
 34320                           ;CMD_set_ABC_on@value stored from wreg
 34321  00CA54  6E20               	movwf	CMD_set_ABC_on@value^0,c
 34322  00CA56                     
 34323                           ;TES0902.c: 61: uint8_t len = 0;
 34324  00CA56  0E00               	movlw	0
 34325  00CA58  6E21               	movwf	CMD_set_ABC_on@len^0,c
 34326  00CA5A                     
 34327                           ;TES0902.c: 62: g_Wbuff[len++] = 0xAA;
 34328  00CA5A  0EAA               	movlw	170
 34329  00CA5C  0101               	movlb	1	; () banked
 34330  00CA5E  6FE6               	movwf	_g_Wbuff& (0+255),b
 34331  00CA60                     
 34332                           ; BSR set to: 1
 34333  00CA60  2A21               	incf	CMD_set_ABC_on@len^0,f,c
 34334  00CA62                     
 34335                           ; BSR set to: 1
 34336                           ;TES0902.c: 63: g_Wbuff[len++] = 0x55;
 34337  00CA62  0EE6               	movlw	low _g_Wbuff
 34338  00CA64  2421               	addwf	CMD_set_ABC_on@len^0,w,c
 34339  00CA66  6ED9               	movwf	fsr2l,c
 34340  00CA68  6ADA               	clrf	fsr2h,c
 34341  00CA6A  0E01               	movlw	high _g_Wbuff
 34342  00CA6C  22DA               	addwfc	fsr2h,f,c
 34343  00CA6E  0E55               	movlw	85
 34344  00CA70  6EDF               	movwf	indf2,c
 34345  00CA72                     
 34346                           ; BSR set to: 1
 34347  00CA72  2A21               	incf	CMD_set_ABC_on@len^0,f,c
 34348  00CA74                     
 34349                           ; BSR set to: 1
 34350                           ;TES0902.c: 64: g_Wbuff[len++] = 0x22;
 34351  00CA74  0EE6               	movlw	low _g_Wbuff
 34352  00CA76  2421               	addwf	CMD_set_ABC_on@len^0,w,c
 34353  00CA78  6ED9               	movwf	fsr2l,c
 34354  00CA7A  6ADA               	clrf	fsr2h,c
 34355  00CA7C  0E01               	movlw	high _g_Wbuff
 34356  00CA7E  22DA               	addwfc	fsr2h,f,c
 34357  00CA80  0E22               	movlw	34
 34358  00CA82  6EDF               	movwf	indf2,c
 34359  00CA84                     
 34360                           ; BSR set to: 1
 34361  00CA84  2A21               	incf	CMD_set_ABC_on@len^0,f,c
 34362  00CA86                     
 34363                           ; BSR set to: 1
 34364                           ;TES0902.c: 65: g_Wbuff[len++] = 0x02;
 34365  00CA86  0EE6               	movlw	low _g_Wbuff
 34366  00CA88  2421               	addwf	CMD_set_ABC_on@len^0,w,c
 34367  00CA8A  6ED9               	movwf	fsr2l,c
 34368  00CA8C  6ADA               	clrf	fsr2h,c
 34369  00CA8E  0E01               	movlw	high _g_Wbuff
 34370  00CA90  22DA               	addwfc	fsr2h,f,c
 34371  00CA92  0E02               	movlw	2
 34372  00CA94  6EDF               	movwf	indf2,c
 34373  00CA96                     
 34374                           ; BSR set to: 1
 34375  00CA96  2A21               	incf	CMD_set_ABC_on@len^0,f,c
 34376  00CA98                     
 34377                           ; BSR set to: 1
 34378                           ;TES0902.c: 66: g_Wbuff[len++] = 0x00;
 34379  00CA98  0EE6               	movlw	low _g_Wbuff
 34380  00CA9A  2421               	addwf	CMD_set_ABC_on@len^0,w,c
 34381  00CA9C  6ED9               	movwf	fsr2l,c
 34382  00CA9E  6ADA               	clrf	fsr2h,c
 34383  00CAA0  0E01               	movlw	high _g_Wbuff
 34384  00CAA2  22DA               	addwfc	fsr2h,f,c
 34385  00CAA4  0E00               	movlw	0
 34386  00CAA6  6EDF               	movwf	indf2,c
 34387  00CAA8                     
 34388                           ; BSR set to: 1
 34389  00CAA8  2A21               	incf	CMD_set_ABC_on@len^0,f,c
 34390  00CAAA                     
 34391                           ; BSR set to: 1
 34392                           ;TES0902.c: 67: g_Wbuff[len++] = value;
 34393  00CAAA  0EE6               	movlw	low _g_Wbuff
 34394  00CAAC  2421               	addwf	CMD_set_ABC_on@len^0,w,c
 34395  00CAAE  6ED9               	movwf	fsr2l,c
 34396  00CAB0  6ADA               	clrf	fsr2h,c
 34397  00CAB2  0E01               	movlw	high _g_Wbuff
 34398  00CAB4  22DA               	addwfc	fsr2h,f,c
 34399  00CAB6  C020  FFDF         	movff	CMD_set_ABC_on@value,indf2
 34400  00CABA                     
 34401                           ; BSR set to: 1
 34402  00CABA  2A21               	incf	CMD_set_ABC_on@len^0,f,c
 34403  00CABC                     
 34404                           ; BSR set to: 1
 34405                           ;TES0902.c: 68: convData.u16_data = Calculate_CRC16(g_Wbuff, len);
 34406  00CABC  0EE6               	movlw	low _g_Wbuff
 34407  00CABE  6E0F               	movwf	Calculate_CRC16@crc^0,c
 34408  00CAC0  0E01               	movlw	high _g_Wbuff
 34409  00CAC2  6E10               	movwf	(Calculate_CRC16@crc+1)^0,c
 34410  00CAC4  C021  F011         	movff	CMD_set_ABC_on@len,Calculate_CRC16@crc_length
 34411  00CAC8  6A12               	clrf	(Calculate_CRC16@crc_length+1)^0,c
 34412  00CACA  ECBB  F05F         	call	_Calculate_CRC16	;wreg free
 34413  00CACE  C00F  F04B         	movff	?_Calculate_CRC16,_convData
 34414  00CAD2  C010  F04C         	movff	?_Calculate_CRC16+1,_convData+1
 34415  00CAD6                     
 34416                           ;TES0902.c: 69: g_Wbuff[len++] = convData.u8_Data[0];
 34417  00CAD6  0EE6               	movlw	low _g_Wbuff
 34418  00CAD8  2421               	addwf	CMD_set_ABC_on@len^0,w,c
 34419  00CADA  6ED9               	movwf	fsr2l,c
 34420  00CADC  6ADA               	clrf	fsr2h,c
 34421  00CADE  0E01               	movlw	high _g_Wbuff
 34422  00CAE0  22DA               	addwfc	fsr2h,f,c
 34423  00CAE2  C04B  FFDF         	movff	_convData,indf2
 34424  00CAE6  2A21               	incf	CMD_set_ABC_on@len^0,f,c
 34425  00CAE8                     
 34426                           ;TES0902.c: 70: g_Wbuff[len++] = convData.u8_Data[1];
 34427  00CAE8  0EE6               	movlw	low _g_Wbuff
 34428  00CAEA  2421               	addwf	CMD_set_ABC_on@len^0,w,c
 34429  00CAEC  6ED9               	movwf	fsr2l,c
 34430  00CAEE  6ADA               	clrf	fsr2h,c
 34431  00CAF0  0E01               	movlw	high _g_Wbuff
 34432  00CAF2  22DA               	addwfc	fsr2h,f,c
 34433  00CAF4  C04C  FFDF         	movff	_convData+1,indf2
 34434  00CAF8  2A21               	incf	CMD_set_ABC_on@len^0,f,c
 34435  00CAFA                     
 34436                           ;TES0902.c: 71: usart_writeBytes(g_Wbuff, len);
 34437  00CAFA  0EE6               	movlw	low _g_Wbuff
 34438  00CAFC  6E10               	movwf	usart_writeBytes@wrptr^0,c
 34439  00CAFE  0E01               	movlw	high _g_Wbuff
 34440  00CB00  6E11               	movwf	(usart_writeBytes@wrptr+1)^0,c
 34441  00CB02  C021  F012         	movff	CMD_set_ABC_on@len,usart_writeBytes@len
 34442  00CB06  EC1F  F072         	call	_usart_writeBytes	;wreg free
 34443  00CB0A  0012               	return		;funcret
 34444  00CB0C                     __end_of_CMD_set_ABC_on:
 34445                           	callstack 0
 34446                           
 34447 ;; *************** function _usart_writeBytes *****************
 34448 ;; Defined at:
 34449 ;;		line 68 in file "bsp/usart.c"
 34450 ;; Parameters:    Size  Location     Type
 34451 ;;  wrptr           2   15[COMRAM] PTR const unsigned char 
 34452 ;;		 -> g_Wbuff(8), 
 34453 ;;  len             1   17[COMRAM] const unsigned char 
 34454 ;; Auto vars:     Size  Location     Type
 34455 ;;  i               2   21[COMRAM] int 
 34456 ;; Return value:  Size  Location     Type
 34457 ;;                  1    wreg      void 
 34458 ;; Registers used:
 34459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34460 ;; Tracked objects:
 34461 ;;		On entry : 0/0
 34462 ;;		On exit  : 0/0
 34463 ;;		Unchanged: 0/0
 34464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34465 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34466 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34467 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34468 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34469 ;;Total ram usage:        8 bytes
 34470 ;; Hardware stack levels used: 1
 34471 ;; Hardware stack levels required when called: 5
 34472 ;; This function calls:
 34473 ;;		_usart_putc
 34474 ;; This function is called by:
 34475 ;;		_CMD_manual_cal
 34476 ;;		_CMD_set_ABC_on
 34477 ;;		_CMD_get_ppm
 34478 ;;		_CMD_get_version
 34479 ;;		_CMD_get_serialNumber
 34480 ;; This function uses a non-reentrant model
 34481 ;;
 34482                           
 34483                           	psect	text156
 34484  00E43E                     __ptext156:
 34485                           	callstack 0
 34486  00E43E                     _usart_writeBytes:
 34487                           	callstack 22
 34488  00E43E                     
 34489                           ;usart.c: 70: for (int i = 0 ; i < len ; i++) {
 34490  00E43E  0E00               	movlw	0
 34491  00E440  6E17               	movwf	(usart_writeBytes@i+1)^0,c
 34492  00E442  0E00               	movlw	0
 34493  00E444  6E16               	movwf	usart_writeBytes@i^0,c
 34494  00E446  5012               	movf	usart_writeBytes@len^0,w,c
 34495  00E448  A4D8               	btfss	status,2,c
 34496  00E44A  EF29  F072         	goto	u18611
 34497  00E44E  EF2B  F072         	goto	u18610
 34498  00E452                     u18611:
 34499  00E452  EF2D  F072         	goto	l17206
 34500  00E456                     u18610:
 34501  00E456  EF4A  F072         	goto	l474
 34502  00E45A                     l17206:
 34503                           
 34504                           ;usart.c: 71: usart_putc(wrptr[i]);
 34505  00E45A  5016               	movf	usart_writeBytes@i^0,w,c
 34506  00E45C  2410               	addwf	usart_writeBytes@wrptr^0,w,c
 34507  00E45E  6ED9               	movwf	fsr2l,c
 34508  00E460  5017               	movf	(usart_writeBytes@i+1)^0,w,c
 34509  00E462  2011               	addwfc	(usart_writeBytes@wrptr+1)^0,w,c
 34510  00E464  6EDA               	movwf	fsr2h,c
 34511  00E466  50DF               	movf	indf2,w,c
 34512  00E468  EC67  F078         	call	_usart_putc
 34513  00E46C  4A16               	infsnz	usart_writeBytes@i^0,f,c
 34514  00E46E  2A17               	incf	(usart_writeBytes@i+1)^0,f,c
 34515  00E470  5012               	movf	usart_writeBytes@len^0,w,c
 34516  00E472  6E13               	movwf	??_usart_writeBytes^0,c
 34517  00E474  6A14               	clrf	(??_usart_writeBytes+1)^0,c
 34518  00E476  5013               	movf	??_usart_writeBytes^0,w,c
 34519  00E478  5C16               	subwf	usart_writeBytes@i^0,w,c
 34520  00E47A  5017               	movf	(usart_writeBytes@i+1)^0,w,c
 34521  00E47C  0A80               	xorlw	128
 34522  00E47E  6E15               	movwf	(??_usart_writeBytes+2)^0,c
 34523  00E480  5014               	movf	(??_usart_writeBytes+1)^0,w,c
 34524  00E482  0A80               	xorlw	128
 34525  00E484  5815               	subwfb	(??_usart_writeBytes+2)^0,w,c
 34526  00E486  A0D8               	btfss	status,0,c
 34527  00E488  EF48  F072         	goto	u18621
 34528  00E48C  EF4A  F072         	goto	u18620
 34529  00E490                     u18621:
 34530  00E490  EF2D  F072         	goto	l17206
 34531  00E494                     u18620:
 34532  00E494                     l474:
 34533  00E494  0012               	return		;funcret
 34534  00E496                     __end_of_usart_writeBytes:
 34535                           	callstack 0
 34536                           
 34537 ;; *************** function _usart_putc *****************
 34538 ;; Defined at:
 34539 ;;		line 37 in file "bsp/usart.c"
 34540 ;; Parameters:    Size  Location     Type
 34541 ;;  c               1    wreg     unsigned char 
 34542 ;; Auto vars:     Size  Location     Type
 34543 ;;  c               1   14[COMRAM] unsigned char 
 34544 ;; Return value:  Size  Location     Type
 34545 ;;                  1    wreg      void 
 34546 ;; Registers used:
 34547 ;;		wreg, status,2, cstack
 34548 ;; Tracked objects:
 34549 ;;		On entry : 0/0
 34550 ;;		On exit  : 0/0
 34551 ;;		Unchanged: 0/0
 34552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34557 ;;Total ram usage:        1 bytes
 34558 ;; Hardware stack levels used: 1
 34559 ;; Hardware stack levels required when called: 4
 34560 ;; This function calls:
 34561 ;;		_usart_tx_empty
 34562 ;; This function is called by:
 34563 ;;		_usart_writeBytes
 34564 ;; This function uses a non-reentrant model
 34565 ;;
 34566                           
 34567                           	psect	text157
 34568  00F0CE                     __ptext157:
 34569                           	callstack 0
 34570  00F0CE                     _usart_putc:
 34571                           	callstack 22
 34572                           
 34573                           ;incstack = 0
 34574                           ;usart_putc@c stored from wreg
 34575  00F0CE  6E0F               	movwf	usart_putc@c^0,c
 34576  00F0D0                     l16736:
 34577  00F0D0  EC82  F078         	call	_usart_tx_empty	;wreg free
 34578  00F0D4  0900               	iorlw	0
 34579  00F0D6  B4D8               	btfsc	status,2,c
 34580  00F0D8  EF70  F078         	goto	u17841
 34581  00F0DC  EF72  F078         	goto	u17840
 34582  00F0E0                     u17841:
 34583  00F0E0  EF68  F078         	goto	l16736
 34584  00F0E4                     u17840:
 34585  00F0E4                     
 34586                           ;usart.c: 41: TXREG = c;
 34587  00F0E4  C00F  FFAE         	movff	usart_putc@c,4014	;volatile
 34588  00F0E8  0012               	return		;funcret
 34589  00F0EA                     __end_of_usart_putc:
 34590                           	callstack 0
 34591                           
 34592 ;; *************** function _usart_tx_empty *****************
 34593 ;; Defined at:
 34594 ;;		line 30 in file "bsp/usart.c"
 34595 ;; Parameters:    Size  Location     Type
 34596 ;;		None
 34597 ;; Auto vars:     Size  Location     Type
 34598 ;;		None
 34599 ;; Return value:  Size  Location     Type
 34600 ;;                  1    wreg      unsigned char 
 34601 ;; Registers used:
 34602 ;;		wreg
 34603 ;; Tracked objects:
 34604 ;;		On entry : 0/0
 34605 ;;		On exit  : 0/0
 34606 ;;		Unchanged: 0/0
 34607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34612 ;;Total ram usage:        0 bytes
 34613 ;; Hardware stack levels used: 1
 34614 ;; Hardware stack levels required when called: 3
 34615 ;; This function calls:
 34616 ;;		Nothing
 34617 ;; This function is called by:
 34618 ;;		_usart_putc
 34619 ;; This function uses a non-reentrant model
 34620 ;;
 34621                           
 34622                           	psect	text158
 34623  00F104                     __ptext158:
 34624                           	callstack 0
 34625  00F104                     _usart_tx_empty:
 34626                           	callstack 22
 34627  00F104                     
 34628                           ;usart.c: 32: if (TXSTA1bits.TRMT)
 34629  00F104  A2AD               	btfss	173,1,c	;volatile
 34630  00F106  EF87  F078         	goto	u16941
 34631  00F10A  EF89  F078         	goto	u16940
 34632  00F10E                     u16941:
 34633  00F10E  EF8C  F078         	goto	l16198
 34634  00F112                     u16940:
 34635  00F112                     
 34636                           ;usart.c: 33: return 1;
 34637  00F112  0E01               	movlw	1
 34638  00F114  EF8D  F078         	goto	l454
 34639  00F118                     l16198:
 34640                           
 34641                           ;usart.c: 34: return 0;
 34642  00F118  0E00               	movlw	0
 34643  00F11A                     l454:
 34644  00F11A  0012               	return		;funcret
 34645  00F11C                     __end_of_usart_tx_empty:
 34646                           	callstack 0
 34647                           
 34648 ;; *************** function _Calculate_CRC16 *****************
 34649 ;; Defined at:
 34650 ;;		line 109 in file "bsp/TES0902.c"
 34651 ;; Parameters:    Size  Location     Type
 34652 ;;  crc             2   14[COMRAM] PTR unsigned char 
 34653 ;;		 -> CRC_check@crc(12), g_Wbuff(8), 
 34654 ;;  crc_length      2   16[COMRAM] int 
 34655 ;; Auto vars:     Size  Location     Type
 34656 ;;  code            2   23[COMRAM] unsigned int 
 34657 ;;  i               2   27[COMRAM] int 
 34658 ;;  ret             2   29[COMRAM] unsigned int 
 34659 ;;  shift           2   25[COMRAM] int 
 34660 ;;  polynomial      2   21[COMRAM] unsigned int 
 34661 ;; Return value:  Size  Location     Type
 34662 ;;                  2   14[COMRAM] unsigned int 
 34663 ;; Registers used:
 34664 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 34665 ;; Tracked objects:
 34666 ;;		On entry : 0/0
 34667 ;;		On exit  : 0/0
 34668 ;;		Unchanged: 0/0
 34669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34671 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34672 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34673 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34674 ;;Total ram usage:       17 bytes
 34675 ;; Hardware stack levels used: 1
 34676 ;; Hardware stack levels required when called: 3
 34677 ;; This function calls:
 34678 ;;		Nothing
 34679 ;; This function is called by:
 34680 ;;		_CMD_manual_cal
 34681 ;;		_CMD_set_ABC_on
 34682 ;;		_CRC_check
 34683 ;;		_CMD_get_ppm
 34684 ;;		_CMD_get_version
 34685 ;;		_CMD_get_serialNumber
 34686 ;; This function uses a non-reentrant model
 34687 ;;
 34688                           
 34689                           	psect	text159
 34690  00BF76                     __ptext159:
 34691                           	callstack 0
 34692  00BF76                     _Calculate_CRC16:
 34693                           	callstack 24
 34694  00BF76                     
 34695                           ;TES0902.c: 111: uint16_t ret = 0xffff, polynomial = 0xA001;
 34696  00BF76  681E               	setf	Calculate_CRC16@ret^0,c
 34697  00BF78  681F               	setf	(Calculate_CRC16@ret+1)^0,c
 34698  00BF7A  0EA0               	movlw	160
 34699  00BF7C  6E17               	movwf	(Calculate_CRC16@polynomial+1)^0,c
 34700  00BF7E  0E01               	movlw	1
 34701  00BF80  6E16               	movwf	Calculate_CRC16@polynomial^0,c
 34702  00BF82                     
 34703                           ;TES0902.c: 113: for (int i= crc_length -1; i >= 0; i--)
 34704  00BF82  0EFF               	movlw	255
 34705  00BF84  2411               	addwf	Calculate_CRC16@crc_length^0,w,c
 34706  00BF86  6E1C               	movwf	Calculate_CRC16@i^0,c
 34707  00BF88  0EFF               	movlw	255
 34708  00BF8A  2012               	addwfc	(Calculate_CRC16@crc_length+1)^0,w,c
 34709  00BF8C  6E1D               	movwf	(Calculate_CRC16@i+1)^0,c
 34710  00BF8E                     l17178:
 34711  00BF8E  BE1D               	btfsc	(Calculate_CRC16@i+1)^0,7,c
 34712  00BF90  EFCE  F05F         	goto	u18580
 34713  00BF94  EFCC  F05F         	goto	u18581
 34714  00BF98                     u18581:
 34715  00BF98  EFD0  F05F         	goto	l17182
 34716  00BF9C                     u18580:
 34717  00BF9C  EF23  F060         	goto	l401
 34718  00BFA0                     l17182:
 34719                           
 34720                           ;TES0902.c: 114: {;TES0902.c: 115: uint16_t code = (uint16_t)(crc[crc_length -1 -i] & 0x
      +                          ff);
 34721  00BFA0  501C               	movf	Calculate_CRC16@i^0,w,c
 34722  00BFA2  5C0F               	subwf	Calculate_CRC16@crc^0,w,c
 34723  00BFA4  6E13               	movwf	??_Calculate_CRC16^0,c
 34724  00BFA6  501D               	movf	(Calculate_CRC16@i+1)^0,w,c
 34725  00BFA8  5810               	subwfb	(Calculate_CRC16@crc+1)^0,w,c
 34726  00BFAA  6E14               	movwf	(??_Calculate_CRC16+1)^0,c
 34727  00BFAC  5011               	movf	Calculate_CRC16@crc_length^0,w,c
 34728  00BFAE  2613               	addwf	??_Calculate_CRC16^0,f,c
 34729  00BFB0  5012               	movf	(Calculate_CRC16@crc_length+1)^0,w,c
 34730  00BFB2  2214               	addwfc	(??_Calculate_CRC16+1)^0,f,c
 34731  00BFB4  0EFF               	movlw	255
 34732  00BFB6  2413               	addwf	??_Calculate_CRC16^0,w,c
 34733  00BFB8  6ED9               	movwf	fsr2l,c
 34734  00BFBA  0EFF               	movlw	255
 34735  00BFBC  2014               	addwfc	(??_Calculate_CRC16+1)^0,w,c
 34736  00BFBE  6EDA               	movwf	fsr2h,c
 34737  00BFC0  50DF               	movf	indf2,w,c
 34738  00BFC2  6E15               	movwf	(??_Calculate_CRC16+2)^0,c
 34739  00BFC4  5015               	movf	(??_Calculate_CRC16+2)^0,w,c
 34740  00BFC6  6E18               	movwf	Calculate_CRC16@code^0,c
 34741  00BFC8  6A19               	clrf	(Calculate_CRC16@code+1)^0,c
 34742  00BFCA                     
 34743                           ;TES0902.c: 116: ret = ret ^ code ;
 34744  00BFCA  5018               	movf	Calculate_CRC16@code^0,w,c
 34745  00BFCC  181E               	xorwf	Calculate_CRC16@ret^0,w,c
 34746  00BFCE  6E1E               	movwf	Calculate_CRC16@ret^0,c
 34747  00BFD0  5019               	movf	(Calculate_CRC16@code+1)^0,w,c
 34748  00BFD2  181F               	xorwf	(Calculate_CRC16@ret+1)^0,w,c
 34749  00BFD4  6E1F               	movwf	(Calculate_CRC16@ret+1)^0,c
 34750  00BFD6                     
 34751                           ;TES0902.c: 117: shift = 0x0;
 34752  00BFD6  0E00               	movlw	0
 34753  00BFD8  6E1B               	movwf	(Calculate_CRC16@shift+1)^0,c
 34754  00BFDA  0E00               	movlw	0
 34755  00BFDC  6E1A               	movwf	Calculate_CRC16@shift^0,c
 34756                           
 34757                           ;TES0902.c: 118: while (shift <= 7)
 34758  00BFDE  EF10  F060         	goto	l17194
 34759  00BFE2                     l403:
 34760                           
 34761                           ;TES0902.c: 119: {;TES0902.c: 120: if (ret & 0x1) {
 34762  00BFE2  A01E               	btfss	Calculate_CRC16@ret^0,0,c
 34763  00BFE4  EFF6  F05F         	goto	u18591
 34764  00BFE8  EFF8  F05F         	goto	u18590
 34765  00BFEC                     u18591:
 34766  00BFEC  EF07  F060         	goto	l17190
 34767  00BFF0                     u18590:
 34768  00BFF0                     
 34769                           ;TES0902.c: 121: ret = ret >> 1;
 34770  00BFF0  90D8               	bcf	status,0,c
 34771  00BFF2  301F               	rrcf	(Calculate_CRC16@ret+1)^0,w,c
 34772  00BFF4  6E13               	movwf	??_Calculate_CRC16^0,c
 34773  00BFF6  301E               	rrcf	Calculate_CRC16@ret^0,w,c
 34774  00BFF8  6E1E               	movwf	Calculate_CRC16@ret^0,c
 34775  00BFFA  C013  F01F         	movff	??_Calculate_CRC16,Calculate_CRC16@ret+1
 34776                           
 34777                           ;TES0902.c: 122: ret = ret ^ polynomial;
 34778  00BFFE  5016               	movf	Calculate_CRC16@polynomial^0,w,c
 34779  00C000  181E               	xorwf	Calculate_CRC16@ret^0,w,c
 34780  00C002  6E1E               	movwf	Calculate_CRC16@ret^0,c
 34781  00C004  5017               	movf	(Calculate_CRC16@polynomial+1)^0,w,c
 34782  00C006  181F               	xorwf	(Calculate_CRC16@ret+1)^0,w,c
 34783  00C008  6E1F               	movwf	(Calculate_CRC16@ret+1)^0,c
 34784                           
 34785                           ;TES0902.c: 123: } else
 34786  00C00A  EF0E  F060         	goto	l17192
 34787  00C00E                     l17190:
 34788                           
 34789                           ;TES0902.c: 124: ret = ret >> 1;
 34790  00C00E  90D8               	bcf	status,0,c
 34791  00C010  301F               	rrcf	(Calculate_CRC16@ret+1)^0,w,c
 34792  00C012  6E13               	movwf	??_Calculate_CRC16^0,c
 34793  00C014  301E               	rrcf	Calculate_CRC16@ret^0,w,c
 34794  00C016  6E1E               	movwf	Calculate_CRC16@ret^0,c
 34795  00C018  C013  F01F         	movff	??_Calculate_CRC16,Calculate_CRC16@ret+1
 34796  00C01C                     l17192:
 34797                           
 34798                           ;TES0902.c: 125: shift++;
 34799  00C01C  4A1A               	infsnz	Calculate_CRC16@shift^0,f,c
 34800  00C01E  2A1B               	incf	(Calculate_CRC16@shift+1)^0,f,c
 34801  00C020                     l17194:
 34802  00C020  BE1B               	btfsc	(Calculate_CRC16@shift+1)^0,7,c
 34803  00C022  EF1C  F060         	goto	u18601
 34804  00C026  501B               	movf	(Calculate_CRC16@shift+1)^0,w,c
 34805  00C028  E109               	bnz	u18600
 34806  00C02A  0E08               	movlw	8
 34807  00C02C  5C1A               	subwf	Calculate_CRC16@shift^0,w,c
 34808  00C02E  A0D8               	btfss	status,0,c
 34809  00C030  EF1C  F060         	goto	u18601
 34810  00C034  EF1E  F060         	goto	u18600
 34811  00C038                     u18601:
 34812  00C038  EFF1  F05F         	goto	l403
 34813  00C03C                     u18600:
 34814  00C03C  061C               	decf	Calculate_CRC16@i^0,f,c
 34815  00C03E  A0D8               	btfss	status,0,c
 34816  00C040  061D               	decf	(Calculate_CRC16@i+1)^0,f,c
 34817  00C042  EFC7  F05F         	goto	l17178
 34818  00C046                     l401:
 34819                           
 34820                           ;TES0902.c: 126: };TES0902.c: 127: };TES0902.c: 128: return ret;
 34821  00C046  C01E  F00F         	movff	Calculate_CRC16@ret,?_Calculate_CRC16
 34822  00C04A  C01F  F010         	movff	Calculate_CRC16@ret+1,?_Calculate_CRC16+1
 34823  00C04E  0012               	return		;funcret
 34824  00C050                     __end_of_Calculate_CRC16:
 34825                           	callstack 0
 34826                           
 34827 ;; *************** function _Set_KalmanFilter_Sensitivity *****************
 34828 ;; Defined at:
 34829 ;;		line 55 in file "filter.c"
 34830 ;; Parameters:    Size  Location     Type
 34831 ;;  pObj            2   20[COMRAM] PTR struct .
 34832 ;;		 -> kalmanFilter(96), 
 34833 ;;  e_level         1   22[COMRAM] enum E127
 34834 ;; Auto vars:     Size  Location     Type
 34835 ;;  sensitivity     4   23[COMRAM] float 
 34836 ;; Return value:  Size  Location     Type
 34837 ;;                  1    wreg      void 
 34838 ;; Registers used:
 34839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34840 ;; Tracked objects:
 34841 ;;		On entry : 0/0
 34842 ;;		On exit  : 0/0
 34843 ;;		Unchanged: 0/0
 34844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 34845 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34846 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34848 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 34849 ;;Total ram usage:        7 bytes
 34850 ;; Hardware stack levels used: 1
 34851 ;; Hardware stack levels required when called: 4
 34852 ;; This function calls:
 34853 ;;		_Kalman_setProcessNoise
 34854 ;; This function is called by:
 34855 ;;		_update_command
 34856 ;;		_sensMeasure_init
 34857 ;; This function uses a non-reentrant model
 34858 ;;
 34859                           
 34860                           	psect	text160
 34861  008C5A                     __ptext160:
 34862                           	callstack 0
 34863  008C5A                     _Set_KalmanFilter_Sensitivity:
 34864                           	callstack 24
 34865  008C5A                     
 34866                           ;filter.c: 57: float sensitivity;;filter.c: 58: switch (e_level)
 34867  008C5A  EFCF  F046         	goto	l18206
 34868  008C5E                     l18172:
 34869  008C5E  0E00               	movlw	0
 34870  008C60  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34871  008C62  0E00               	movlw	0
 34872  008C64  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34873  008C66  0E80               	movlw	128
 34874  008C68  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34875  008C6A  0E3F               	movlw	63
 34876  008C6C  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34877  008C6E  EF0E  F047         	goto	l18208
 34878  008C72                     l18174:
 34879  008C72  0E66               	movlw	102
 34880  008C74  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34881  008C76  0E66               	movlw	102
 34882  008C78  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34883  008C7A  0E66               	movlw	102
 34884  008C7C  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34885  008C7E  0E3F               	movlw	63
 34886  008C80  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34887  008C82  EF0E  F047         	goto	l18208
 34888  008C86                     l18176:
 34889  008C86  0ECD               	movlw	205
 34890  008C88  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34891  008C8A  0ECC               	movlw	204
 34892  008C8C  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34893  008C8E  0E4C               	movlw	76
 34894  008C90  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34895  008C92  0E3F               	movlw	63
 34896  008C94  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34897  008C96  EF0E  F047         	goto	l18208
 34898  008C9A                     l18178:
 34899  008C9A  0E33               	movlw	51
 34900  008C9C  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34901  008C9E  0E33               	movlw	51
 34902  008CA0  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34903  008CA2  0E33               	movlw	51
 34904  008CA4  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34905  008CA6  0E3F               	movlw	63
 34906  008CA8  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34907  008CAA  EF0E  F047         	goto	l18208
 34908  008CAE                     l18180:
 34909  008CAE  0E9A               	movlw	154
 34910  008CB0  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34911  008CB2  0E99               	movlw	153
 34912  008CB4  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34913  008CB6  0E19               	movlw	25
 34914  008CB8  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34915  008CBA  0E3F               	movlw	63
 34916  008CBC  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34917  008CBE  EF0E  F047         	goto	l18208
 34918  008CC2                     l18182:
 34919  008CC2  0E00               	movlw	0
 34920  008CC4  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34921  008CC6  0E00               	movlw	0
 34922  008CC8  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34923  008CCA  0E00               	movlw	0
 34924  008CCC  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34925  008CCE  0E3F               	movlw	63
 34926  008CD0  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34927  008CD2  EF0E  F047         	goto	l18208
 34928  008CD6                     l18184:
 34929  008CD6  0ECD               	movlw	205
 34930  008CD8  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34931  008CDA  0ECC               	movlw	204
 34932  008CDC  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34933  008CDE  0ECC               	movlw	204
 34934  008CE0  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34935  008CE2  0E3E               	movlw	62
 34936  008CE4  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34937  008CE6  EF0E  F047         	goto	l18208
 34938  008CEA                     l18186:
 34939  008CEA  0E33               	movlw	51
 34940  008CEC  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34941  008CEE  0E33               	movlw	51
 34942  008CF0  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34943  008CF2  0EB3               	movlw	179
 34944  008CF4  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34945  008CF6  0E3E               	movlw	62
 34946  008CF8  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34947  008CFA  EF0E  F047         	goto	l18208
 34948  008CFE                     l18188:
 34949  008CFE  0E9A               	movlw	154
 34950  008D00  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34951  008D02  0E99               	movlw	153
 34952  008D04  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34953  008D06  0E99               	movlw	153
 34954  008D08  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34955  008D0A  0E3E               	movlw	62
 34956  008D0C  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34957  008D0E  EF0E  F047         	goto	l18208
 34958  008D12                     l18190:
 34959  008D12  0E00               	movlw	0
 34960  008D14  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34961  008D16  0E00               	movlw	0
 34962  008D18  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34963  008D1A  0E80               	movlw	128
 34964  008D1C  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34965  008D1E  0E3E               	movlw	62
 34966  008D20  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34967  008D22  EF0E  F047         	goto	l18208
 34968  008D26                     l18192:
 34969  008D26  0ECD               	movlw	205
 34970  008D28  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34971  008D2A  0ECC               	movlw	204
 34972  008D2C  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34973  008D2E  0E4C               	movlw	76
 34974  008D30  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34975  008D32  0E3E               	movlw	62
 34976  008D34  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34977  008D36  EF0E  F047         	goto	l18208
 34978  008D3A                     l18194:
 34979  008D3A  0ECD               	movlw	205
 34980  008D3C  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34981  008D3E  0ECC               	movlw	204
 34982  008D40  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34983  008D42  0ECC               	movlw	204
 34984  008D44  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34985  008D46  0E3D               	movlw	61
 34986  008D48  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34987  008D4A  EF0E  F047         	goto	l18208
 34988  008D4E                     l18196:
 34989  008D4E  0E0A               	movlw	10
 34990  008D50  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 34991  008D52  0ED7               	movlw	215
 34992  008D54  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 34993  008D56  0E23               	movlw	35
 34994  008D58  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 34995  008D5A  0E3C               	movlw	60
 34996  008D5C  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 34997  008D5E  EF0E  F047         	goto	l18208
 34998  008D62                     l18198:
 34999  008D62  0E6F               	movlw	111
 35000  008D64  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 35001  008D66  0E12               	movlw	18
 35002  008D68  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 35003  008D6A  0E83               	movlw	131
 35004  008D6C  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 35005  008D6E  0E3A               	movlw	58
 35006  008D70  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 35007  008D72  EF0E  F047         	goto	l18208
 35008  008D76                     l18200:
 35009  008D76  0E17               	movlw	23
 35010  008D78  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 35011  008D7A  0EB7               	movlw	183
 35012  008D7C  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 35013  008D7E  0ED1               	movlw	209
 35014  008D80  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 35015  008D82  0E38               	movlw	56
 35016  008D84  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 35017  008D86  EF0E  F047         	goto	l18208
 35018  008D8A                     l18202:
 35019  008D8A  0ECD               	movlw	205
 35020  008D8C  6E18               	movwf	Set_KalmanFilter_Sensitivity@sensitivity^0,c
 35021  008D8E  0ECC               	movlw	204
 35022  008D90  6E19               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+1)^0,c
 35023  008D92  0ECC               	movlw	204
 35024  008D94  6E1A               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+2)^0,c
 35025  008D96  0E3D               	movlw	61
 35026  008D98  6E1B               	movwf	(Set_KalmanFilter_Sensitivity@sensitivity+3)^0,c
 35027  008D9A  EF0E  F047         	goto	l18208
 35028  008D9E                     l18206:
 35029  008D9E  5017               	movf	Set_KalmanFilter_Sensitivity@e_level^0,w,c
 35030                           
 35031                           ; Switch size 1, requested type "simple"
 35032                           ; Number of cases is 15, Range of values is 1 to 15
 35033                           ; switch strategies available:
 35034                           ; Name         Instructions Cycles
 35035                           ; simple_byte           46    24 (average)
 35036                           ;	Chosen strategy is simple_byte
 35037  008DA0  0A01               	xorlw	1	; case 1
 35038  008DA2  B4D8               	btfsc	status,2,c
 35039  008DA4  EF2F  F046         	goto	l18172
 35040  008DA8  0A03               	xorlw	3	; case 2
 35041  008DAA  B4D8               	btfsc	status,2,c
 35042  008DAC  EF39  F046         	goto	l18174
 35043  008DB0  0A01               	xorlw	1	; case 3
 35044  008DB2  B4D8               	btfsc	status,2,c
 35045  008DB4  EF43  F046         	goto	l18176
 35046  008DB8  0A07               	xorlw	7	; case 4
 35047  008DBA  B4D8               	btfsc	status,2,c
 35048  008DBC  EF4D  F046         	goto	l18178
 35049  008DC0  0A01               	xorlw	1	; case 5
 35050  008DC2  B4D8               	btfsc	status,2,c
 35051  008DC4  EF57  F046         	goto	l18180
 35052  008DC8  0A03               	xorlw	3	; case 6
 35053  008DCA  B4D8               	btfsc	status,2,c
 35054  008DCC  EF61  F046         	goto	l18182
 35055  008DD0  0A01               	xorlw	1	; case 7
 35056  008DD2  B4D8               	btfsc	status,2,c
 35057  008DD4  EF6B  F046         	goto	l18184
 35058  008DD8  0A0F               	xorlw	15	; case 8
 35059  008DDA  B4D8               	btfsc	status,2,c
 35060  008DDC  EF75  F046         	goto	l18186
 35061  008DE0  0A01               	xorlw	1	; case 9
 35062  008DE2  B4D8               	btfsc	status,2,c
 35063  008DE4  EF7F  F046         	goto	l18188
 35064  008DE8  0A03               	xorlw	3	; case 10
 35065  008DEA  B4D8               	btfsc	status,2,c
 35066  008DEC  EF89  F046         	goto	l18190
 35067  008DF0  0A01               	xorlw	1	; case 11
 35068  008DF2  B4D8               	btfsc	status,2,c
 35069  008DF4  EF93  F046         	goto	l18192
 35070  008DF8  0A07               	xorlw	7	; case 12
 35071  008DFA  B4D8               	btfsc	status,2,c
 35072  008DFC  EF9D  F046         	goto	l18194
 35073  008E00  0A01               	xorlw	1	; case 13
 35074  008E02  B4D8               	btfsc	status,2,c
 35075  008E04  EFA7  F046         	goto	l18196
 35076  008E08  0A03               	xorlw	3	; case 14
 35077  008E0A  B4D8               	btfsc	status,2,c
 35078  008E0C  EFB1  F046         	goto	l18198
 35079  008E10  0A01               	xorlw	1	; case 15
 35080  008E12  B4D8               	btfsc	status,2,c
 35081  008E14  EFBB  F046         	goto	l18200
 35082  008E18  EFC5  F046         	goto	l18202
 35083  008E1C                     l18208:
 35084                           
 35085                           ;filter.c: 77: Kalman_setProcessNoise(pObj, sensitivity);
 35086  008E1C  C015  F00F         	movff	Set_KalmanFilter_Sensitivity@pObj,Kalman_setProcessNoise@pObj
 35087  008E20  C016  F010         	movff	Set_KalmanFilter_Sensitivity@pObj+1,Kalman_setProcessNoise@pObj+1
 35088  008E24  C018  F011         	movff	Set_KalmanFilter_Sensitivity@sensitivity,Kalman_setProcessNoise@q
 35089  008E28  C019  F012         	movff	Set_KalmanFilter_Sensitivity@sensitivity+1,Kalman_setProcessNoise@q+1
 35090  008E2C  C01A  F013         	movff	Set_KalmanFilter_Sensitivity@sensitivity+2,Kalman_setProcessNoise@q+2
 35091  008E30  C01B  F014         	movff	Set_KalmanFilter_Sensitivity@sensitivity+3,Kalman_setProcessNoise@q+3
 35092  008E34  EC2D  F078         	call	_Kalman_setProcessNoise	;wreg free
 35093  008E38  0012               	return		;funcret
 35094  008E3A                     __end_of_Set_KalmanFilter_Sensitivity:
 35095                           	callstack 0
 35096                           
 35097 ;; *************** function _Kalman_setProcessNoise *****************
 35098 ;; Defined at:
 35099 ;;		line 40 in file "filter.c"
 35100 ;; Parameters:    Size  Location     Type
 35101 ;;  pObj            2   14[COMRAM] PTR struct .
 35102 ;;		 -> kalmanFilter(96), 
 35103 ;;  q               4   16[COMRAM] float 
 35104 ;; Auto vars:     Size  Location     Type
 35105 ;;		None
 35106 ;; Return value:  Size  Location     Type
 35107 ;;                  1    wreg      void 
 35108 ;; Registers used:
 35109 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35110 ;; Tracked objects:
 35111 ;;		On entry : 0/0
 35112 ;;		On exit  : 0/0
 35113 ;;		Unchanged: 0/0
 35114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35115 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35118 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35119 ;;Total ram usage:        6 bytes
 35120 ;; Hardware stack levels used: 1
 35121 ;; Hardware stack levels required when called: 3
 35122 ;; This function calls:
 35123 ;;		Nothing
 35124 ;; This function is called by:
 35125 ;;		_Set_KalmanFilter_Sensitivity
 35126 ;; This function uses a non-reentrant model
 35127 ;;
 35128                           
 35129                           	psect	text161
 35130  00F05A                     __ptext161:
 35131                           	callstack 0
 35132  00F05A                     _Kalman_setProcessNoise:
 35133                           	callstack 24
 35134  00F05A                     
 35135                           ;filter.c: 42: pObj->_q_process=q;
 35136  00F05A  EE20 F008          	lfsr	2,8
 35137  00F05E  500F               	movf	Kalman_setProcessNoise@pObj^0,w,c
 35138  00F060  26D9               	addwf	fsr2l,f,c
 35139  00F062  5010               	movf	(Kalman_setProcessNoise@pObj+1)^0,w,c
 35140  00F064  22DA               	addwfc	fsr2h,f,c
 35141  00F066  C011  FFDE         	movff	Kalman_setProcessNoise@q,postinc2
 35142  00F06A  C012  FFDE         	movff	Kalman_setProcessNoise@q+1,postinc2
 35143  00F06E  C013  FFDE         	movff	Kalman_setProcessNoise@q+2,postinc2
 35144  00F072  C014  FFDE         	movff	Kalman_setProcessNoise@q+3,postinc2
 35145  00F076  0012               	return		;funcret
 35146  00F078                     __end_of_Kalman_setProcessNoise:
 35147                           	callstack 0
 35148                           
 35149 ;; *************** function _Kalman_setMeasurementError *****************
 35150 ;; Defined at:
 35151 ;;		line 31 in file "filter.c"
 35152 ;; Parameters:    Size  Location     Type
 35153 ;;  pObj            2   14[COMRAM] PTR struct .
 35154 ;;		 -> kalmanFilter(96), 
 35155 ;;  mea_e           4   16[COMRAM] float 
 35156 ;; Auto vars:     Size  Location     Type
 35157 ;;		None
 35158 ;; Return value:  Size  Location     Type
 35159 ;;                  1    wreg      void 
 35160 ;; Registers used:
 35161 ;;		fsr2l, fsr2h
 35162 ;; Tracked objects:
 35163 ;;		On entry : 0/0
 35164 ;;		On exit  : 0/0
 35165 ;;		Unchanged: 0/0
 35166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35167 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35170 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35171 ;;Total ram usage:        6 bytes
 35172 ;; Hardware stack levels used: 1
 35173 ;; Hardware stack levels required when called: 3
 35174 ;; This function calls:
 35175 ;;		Nothing
 35176 ;; This function is called by:
 35177 ;;		_update_command
 35178 ;;		_sensMeasure_init
 35179 ;; This function uses a non-reentrant model
 35180 ;;
 35181                           
 35182                           	psect	text162
 35183  00F0EA                     __ptext162:
 35184                           	callstack 0
 35185  00F0EA                     _Kalman_setMeasurementError:
 35186                           	callstack 25
 35187  00F0EA                     
 35188                           ;filter.c: 33: pObj->_err_measure = mea_e;
 35189  00F0EA  C00F  FFD9         	movff	Kalman_setMeasurementError@pObj,fsr2l
 35190  00F0EE  C010  FFDA         	movff	Kalman_setMeasurementError@pObj+1,fsr2h
 35191  00F0F2  C011  FFDE         	movff	Kalman_setMeasurementError@mea_e,postinc2
 35192  00F0F6  C012  FFDE         	movff	Kalman_setMeasurementError@mea_e+1,postinc2
 35193  00F0FA  C013  FFDE         	movff	Kalman_setMeasurementError@mea_e+2,postinc2
 35194  00F0FE  C014  FFDE         	movff	Kalman_setMeasurementError@mea_e+3,postinc2
 35195  00F102  0012               	return		;funcret
 35196  00F104                     __end_of_Kalman_setMeasurementError:
 35197                           	callstack 0
 35198                           
 35199 ;; *************** function _Kalman_setEstimateError *****************
 35200 ;; Defined at:
 35201 ;;		line 35 in file "filter.c"
 35202 ;; Parameters:    Size  Location     Type
 35203 ;;  pObj            2   14[COMRAM] PTR struct .
 35204 ;;		 -> kalmanFilter(96), 
 35205 ;;  est_e           4   16[COMRAM] float 
 35206 ;; Auto vars:     Size  Location     Type
 35207 ;;		None
 35208 ;; Return value:  Size  Location     Type
 35209 ;;                  1    wreg      void 
 35210 ;; Registers used:
 35211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35212 ;; Tracked objects:
 35213 ;;		On entry : 0/0
 35214 ;;		On exit  : 0/0
 35215 ;;		Unchanged: 0/0
 35216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35217 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35220 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35221 ;;Total ram usage:        6 bytes
 35222 ;; Hardware stack levels used: 1
 35223 ;; Hardware stack levels required when called: 3
 35224 ;; This function calls:
 35225 ;;		Nothing
 35226 ;; This function is called by:
 35227 ;;		_sensMeasure_init
 35228 ;; This function uses a non-reentrant model
 35229 ;;
 35230                           
 35231                           	psect	text163
 35232  00F078                     __ptext163:
 35233                           	callstack 0
 35234  00F078                     _Kalman_setEstimateError:
 35235                           	callstack 25
 35236  00F078                     
 35237                           ;filter.c: 37: pObj->_err_estimate=est_e;
 35238  00F078  EE20 F004          	lfsr	2,4
 35239  00F07C  500F               	movf	Kalman_setEstimateError@pObj^0,w,c
 35240  00F07E  26D9               	addwf	fsr2l,f,c
 35241  00F080  5010               	movf	(Kalman_setEstimateError@pObj+1)^0,w,c
 35242  00F082  22DA               	addwfc	fsr2h,f,c
 35243  00F084  C011  FFDE         	movff	Kalman_setEstimateError@est_e,postinc2
 35244  00F088  C012  FFDE         	movff	Kalman_setEstimateError@est_e+1,postinc2
 35245  00F08C  C013  FFDE         	movff	Kalman_setEstimateError@est_e+2,postinc2
 35246  00F090  C014  FFDE         	movff	Kalman_setEstimateError@est_e+3,postinc2
 35247  00F094  0012               	return		;funcret
 35248  00F096                     __end_of_Kalman_setEstimateError:
 35249                           	callstack 0
 35250                           
 35251 ;; *************** function _nvm_init *****************
 35252 ;; Defined at:
 35253 ;;		line 87 in file "nvm.c"
 35254 ;; Parameters:    Size  Location     Type
 35255 ;;		None
 35256 ;; Auto vars:     Size  Location     Type
 35257 ;;  pdesc           2   76[BANK0 ] PTR unsigned int 
 35258 ;;		 -> sd002.string(50), sd002(52), 
 35259 ;;  i               1   78[BANK0 ] unsigned char 
 35260 ;; Return value:  Size  Location     Type
 35261 ;;                  1    wreg      void 
 35262 ;; Registers used:
 35263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35264 ;; Tracked objects:
 35265 ;;		On entry : 0/0
 35266 ;;		On exit  : 0/0
 35267 ;;		Unchanged: 0/0
 35268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35270 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35271 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35272 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35273 ;;Total ram usage:        9 bytes
 35274 ;; Hardware stack levels used: 1
 35275 ;; Hardware stack levels required when called: 10
 35276 ;; This function calls:
 35277 ;;		_get_product_desc
 35278 ;;		_nvm_clear
 35279 ;;		_nvm_read_flash_all
 35280 ;;		_nvm_serialno_check
 35281 ;;		_nvm_write_flash_all
 35282 ;; This function is called by:
 35283 ;;		_Board_initialize
 35284 ;; This function uses a non-reentrant model
 35285 ;;
 35286                           
 35287                           	psect	text164
 35288  00C5E6                     __ptext164:
 35289                           	callstack 0
 35290  00C5E6                     _nvm_init:
 35291                           	callstack 19
 35292  00C5E6                     
 35293                           ;nvm.c: 89: uint8_t i;;nvm.c: 91: nvm_read_flash_all(&g_nvm.flash);
 35294  00C5E6  0E7A               	movlw	low (_g_nvm+1)
 35295  00C5E8  6E1F               	movwf	nvm_read_flash_all@flash^0,c
 35296  00C5EA  0E01               	movlw	high (_g_nvm+1)
 35297  00C5EC  6E20               	movwf	(nvm_read_flash_all@flash+1)^0,c
 35298  00C5EE  EC3D  F077         	call	_nvm_read_flash_all	;wreg free
 35299  00C5F2                     
 35300                           ;nvm.c: 92: g_nvm.status = NVM_INIT_FLASH;
 35301  00C5F2  0E01               	movlw	1
 35302  00C5F4  0101               	movlb	1	; () banked
 35303  00C5F6  6F79               	movwf	_g_nvm& (0+255),b
 35304  00C5F8                     
 35305                           ; BSR set to: 1
 35306                           ;nvm.c: 94: if (nvm_serialno_check(g_nvm.flash.serialNum)) {
 35307  00C5F8  0EDE               	movlw	low (_g_nvm+101)
 35308  00C5FA  6E0F               	movwf	nvm_serialno_check@sno^0,c
 35309  00C5FC  0E01               	movlw	high (_g_nvm+101)
 35310  00C5FE  6E10               	movwf	(nvm_serialno_check@sno+1)^0,c
 35311  00C600  EC4B  F072         	call	_nvm_serialno_check	;wreg free
 35312  00C604  0900               	iorlw	0
 35313  00C606  B4D8               	btfsc	status,2,c
 35314  00C608  EF08  F063         	goto	u20171
 35315  00C60C  EF0A  F063         	goto	u20170
 35316  00C610                     u20171:
 35317  00C610  EF3F  F063         	goto	l18606
 35318  00C614                     u20170:
 35319  00C614                     
 35320                           ;nvm.c: 95: uint16_t* pdesc = get_product_desc();
 35321  00C614  ECC8  F078         	call	_get_product_desc	;wreg free
 35322  00C618  C00F  F0AC         	movff	?_get_product_desc,nvm_init@pdesc
 35323  00C61C  C010  F0AD         	movff	?_get_product_desc+1,nvm_init@pdesc+1
 35324  00C620                     
 35325                           ;nvm.c: 96: for (i = 0 ; i < 8 ; i++)
 35326  00C620  0E00               	movlw	0
 35327  00C622  0100               	movlb	0	; () banked
 35328  00C624  6FAE               	movwf	nvm_init@i& (0+255),b
 35329  00C626                     l18600:
 35330                           
 35331                           ; BSR set to: 0
 35332                           ;nvm.c: 97: pdesc[i + 11] = g_nvm.flash.serialNum[i];
 35333  00C626  0EDE               	movlw	low (_g_nvm+101)
 35334  00C628  25AE               	addwf	nvm_init@i& (0+255),w,b
 35335  00C62A  6ED9               	movwf	fsr2l,c
 35336  00C62C  6ADA               	clrf	fsr2h,c
 35337  00C62E  0E01               	movlw	high (_g_nvm+101)
 35338  00C630  22DA               	addwfc	fsr2h,f,c
 35339  00C632  50DF               	movf	indf2,w,c
 35340  00C634  6FA6               	movwf	??_nvm_init& (0+255),b
 35341  00C636  6BA7               	clrf	(??_nvm_init+1)& (0+255),b
 35342  00C638  51AE               	movf	nvm_init@i& (0+255),w,b
 35343  00C63A  6FA8               	movwf	(??_nvm_init+2)& (0+255),b
 35344  00C63C  6BA9               	clrf	(??_nvm_init+3)& (0+255),b
 35345  00C63E  90D8               	bcf	status,0,c
 35346  00C640  37A8               	rlcf	(??_nvm_init+2)& (0+255),f,b
 35347  00C642  37A9               	rlcf	(??_nvm_init+3)& (0+255),f,b
 35348  00C644  C0AC  F0AA         	movff	nvm_init@pdesc,??_nvm_init+4
 35349  00C648  C0AD  F0AB         	movff	nvm_init@pdesc+1,??_nvm_init+5
 35350  00C64C  51A8               	movf	(??_nvm_init+2)& (0+255),w,b
 35351  00C64E  27AA               	addwf	(??_nvm_init+4)& (0+255),f,b
 35352  00C650  51A9               	movf	(??_nvm_init+3)& (0+255),w,b
 35353  00C652  23AB               	addwfc	(??_nvm_init+5)& (0+255),f,b
 35354  00C654  0E16               	movlw	22
 35355  00C656  25AA               	addwf	(??_nvm_init+4)& (0+255),w,b
 35356  00C658  6ED9               	movwf	fsr2l,c
 35357  00C65A  0E00               	movlw	0
 35358  00C65C  21AB               	addwfc	(??_nvm_init+5)& (0+255),w,b
 35359  00C65E  6EDA               	movwf	fsr2h,c
 35360  00C660  C0A6  FFDE         	movff	??_nvm_init,postinc2
 35361  00C664  C0A7  FFDD         	movff	??_nvm_init+1,postdec2
 35362  00C668                     
 35363                           ; BSR set to: 0
 35364  00C668  2BAE               	incf	nvm_init@i& (0+255),f,b
 35365  00C66A                     
 35366                           ; BSR set to: 0
 35367  00C66A  0E07               	movlw	7
 35368  00C66C  65AE               	cpfsgt	nvm_init@i& (0+255),b
 35369  00C66E  EF3B  F063         	goto	u20181
 35370  00C672  EF3D  F063         	goto	u20180
 35371  00C676                     u20181:
 35372  00C676  EF13  F063         	goto	l18600
 35373  00C67A                     u20180:
 35374  00C67A  EF54  F063         	goto	l1267
 35375  00C67E                     l18606:
 35376                           
 35377                           ;nvm.c: 99: nvm_clear();
 35378  00C67E  ECD4  F078         	call	_nvm_clear	;wreg free
 35379  00C682                     
 35380                           ;nvm.c: 100: if (nvm_write_flash_all(&g_nvm.flash) == 0)
 35381  00C682  0E7A               	movlw	low (_g_nvm+1)
 35382  00C684  6E1F               	movwf	nvm_write_flash_all@flash^0,c
 35383  00C686  0E01               	movlw	high (_g_nvm+1)
 35384  00C688  6E20               	movwf	(nvm_write_flash_all@flash+1)^0,c
 35385  00C68A  EC2F  F074         	call	_nvm_write_flash_all	;wreg free
 35386  00C68E  0900               	iorlw	0
 35387  00C690  A4D8               	btfss	status,2,c
 35388  00C692  EF4D  F063         	goto	u20191
 35389  00C696  EF4F  F063         	goto	u20190
 35390  00C69A                     u20191:
 35391  00C69A  EF51  F063         	goto	l18612
 35392  00C69E                     u20190:
 35393  00C69E  EF54  F063         	goto	l1267
 35394  00C6A2                     l18612:
 35395                           
 35396                           ;nvm.c: 102: g_nvm.status = NVM_INIT_FLASH;
 35397  00C6A2  0E01               	movlw	1
 35398  00C6A4  0101               	movlb	1	; () banked
 35399  00C6A6  6F79               	movwf	_g_nvm& (0+255),b
 35400  00C6A8                     l1267:
 35401  00C6A8  0012               	return		;funcret
 35402  00C6AA                     __end_of_nvm_init:
 35403                           	callstack 0
 35404                           
 35405 ;; *************** function _nvm_write_flash_all *****************
 35406 ;; Defined at:
 35407 ;;		line 106 in file "nvm.c"
 35408 ;; Parameters:    Size  Location     Type
 35409 ;;  flash           2   30[COMRAM] PTR struct .
 35410 ;;		 -> g_nvm(109), 
 35411 ;; Auto vars:     Size  Location     Type
 35412 ;;		None
 35413 ;; Return value:  Size  Location     Type
 35414 ;;                  1    wreg      unsigned char 
 35415 ;; Registers used:
 35416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35417 ;; Tracked objects:
 35418 ;;		On entry : 0/0
 35419 ;;		On exit  : 0/0
 35420 ;;		Unchanged: 0/0
 35421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35426 ;;Total ram usage:        2 bytes
 35427 ;; Hardware stack levels used: 1
 35428 ;; Hardware stack levels required when called: 4
 35429 ;; This function calls:
 35430 ;;		_flash_clear
 35431 ;;		_flash_writeBytes
 35432 ;; This function is called by:
 35433 ;;		_usedtime_task
 35434 ;;		_update_command
 35435 ;;		_nvm_init
 35436 ;;		_sens_ZeroCalibration
 35437 ;; This function uses a non-reentrant model
 35438 ;;
 35439                           
 35440                           	psect	text165
 35441  00E85E                     __ptext165:
 35442                           	callstack 0
 35443  00E85E                     _nvm_write_flash_all:
 35444                           	callstack 25
 35445  00E85E                     
 35446                           ;nvm.c: 108: flash_clear(0xf400, (0xf400 + 108));
 35447  00E85E  0E00               	movlw	0
 35448  00E860  6E0F               	movwf	flash_clear@startaddr^0,c
 35449  00E862  0EF4               	movlw	244
 35450  00E864  6E10               	movwf	(flash_clear@startaddr+1)^0,c
 35451  00E866  0E00               	movlw	0
 35452  00E868  6E11               	movwf	(flash_clear@startaddr+2)^0,c
 35453  00E86A  0E00               	movlw	0
 35454  00E86C  6E12               	movwf	(flash_clear@startaddr+3)^0,c
 35455  00E86E  0E6C               	movlw	108
 35456  00E870  6E13               	movwf	flash_clear@endaddr^0,c
 35457  00E872  0EF4               	movlw	244
 35458  00E874  6E14               	movwf	(flash_clear@endaddr+1)^0,c
 35459  00E876  0E00               	movlw	0
 35460  00E878  6E15               	movwf	(flash_clear@endaddr+2)^0,c
 35461  00E87A  0E00               	movlw	0
 35462  00E87C  6E16               	movwf	(flash_clear@endaddr+3)^0,c
 35463  00E87E  EC50  F06A         	call	_flash_clear	;wreg free
 35464  00E882                     
 35465                           ;nvm.c: 109: return flash_writeBytes(0xf400, flash->byte, 108);
 35466  00E882  0E00               	movlw	0
 35467  00E884  6E0F               	movwf	flash_writeBytes@startaddr^0,c
 35468  00E886  0EF4               	movlw	244
 35469  00E888  6E10               	movwf	(flash_writeBytes@startaddr+1)^0,c
 35470  00E88A  0E00               	movlw	0
 35471  00E88C  6E11               	movwf	(flash_writeBytes@startaddr+2)^0,c
 35472  00E88E  0E00               	movlw	0
 35473  00E890  6E12               	movwf	(flash_writeBytes@startaddr+3)^0,c
 35474  00E892  C01F  F013         	movff	nvm_write_flash_all@flash,flash_writeBytes@flash_array
 35475  00E896  C020  F014         	movff	nvm_write_flash_all@flash+1,flash_writeBytes@flash_array+1
 35476  00E89A  0E00               	movlw	0
 35477  00E89C  6E16               	movwf	(flash_writeBytes@num_bytes+1)^0,c
 35478  00E89E  0E6C               	movlw	108
 35479  00E8A0  6E15               	movwf	flash_writeBytes@num_bytes^0,c
 35480  00E8A2  EC8C  F056         	call	_flash_writeBytes	;wreg free
 35481  00E8A6  0012               	return		;funcret
 35482  00E8A8                     __end_of_nvm_write_flash_all:
 35483                           	callstack 0
 35484                           
 35485 ;; *************** function _flash_writeBytes *****************
 35486 ;; Defined at:
 35487 ;;		line 36 in file "bsp/flash.c"
 35488 ;; Parameters:    Size  Location     Type
 35489 ;;  startaddr       4   14[COMRAM] unsigned long 
 35490 ;;  flash_array     2   18[COMRAM] PTR unsigned char 
 35491 ;;		 -> nvm_write_flash_all@flash(2), g_nvm(109), 
 35492 ;;  num_bytes       2   20[COMRAM] unsigned int 
 35493 ;; Auto vars:     Size  Location     Type
 35494 ;;  flash_addr      4   26[COMRAM] struct .
 35495 ;;  flag            1   25[COMRAM] unsigned char 
 35496 ;;  write_byte      1   24[COMRAM] unsigned char 
 35497 ;;  retval          1   23[COMRAM] unsigned char 
 35498 ;; Return value:  Size  Location     Type
 35499 ;;                  1    wreg      unsigned char 
 35500 ;; Registers used:
 35501 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35502 ;; Tracked objects:
 35503 ;;		On entry : 0/0
 35504 ;;		On exit  : 0/0
 35505 ;;		Unchanged: 0/0
 35506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35507 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35508 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35510 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35511 ;;Total ram usage:       16 bytes
 35512 ;; Hardware stack levels used: 1
 35513 ;; Hardware stack levels required when called: 3
 35514 ;; This function calls:
 35515 ;;		Nothing
 35516 ;; This function is called by:
 35517 ;;		_nvm_write_flash_all
 35518 ;; This function uses a non-reentrant model
 35519 ;;
 35520                           
 35521                           	psect	text166
 35522  00AD18                     __ptext166:
 35523                           	callstack 0
 35524  00AD18                     _flash_writeBytes:
 35525                           	callstack 25
 35526  00AD18                     
 35527                           ;flash.c: 38: bool retval = 1;
 35528  00AD18  0E01               	movlw	1
 35529  00AD1A  6E18               	movwf	flash_writeBytes@retval^0,c
 35530  00AD1C  0E00               	movlw	0
 35531  00AD1E  6E1A               	movwf	flash_writeBytes@flag^0,c
 35532  00AD20                     
 35533                           ;flash.c: 40: DWORD_VAL flash_addr;;flash.c: 42: flash_addr.Val = startaddr;
 35534  00AD20  C00F  F01B         	movff	flash_writeBytes@startaddr,flash_writeBytes@flash_addr
 35535  00AD24  C010  F01C         	movff	flash_writeBytes@startaddr+1,flash_writeBytes@flash_addr+1
 35536  00AD28  C011  F01D         	movff	flash_writeBytes@startaddr+2,flash_writeBytes@flash_addr+2
 35537  00AD2C  C012  F01E         	movff	flash_writeBytes@startaddr+3,flash_writeBytes@flash_addr+3
 35538  00AD30                     
 35539                           ;flash.c: 44: startaddr /= 64 ;
 35540  00AD30  0E06               	movlw	6
 35541  00AD32  6E17               	movwf	??_flash_writeBytes^0,c
 35542  00AD34                     u18845:
 35543  00AD34  90D8               	bcf	status,0,c
 35544  00AD36  3212               	rrcf	(flash_writeBytes@startaddr+3)^0,f,c
 35545  00AD38  3211               	rrcf	(flash_writeBytes@startaddr+2)^0,f,c
 35546  00AD3A  3210               	rrcf	(flash_writeBytes@startaddr+1)^0,f,c
 35547  00AD3C  320F               	rrcf	flash_writeBytes@startaddr^0,f,c
 35548  00AD3E  2E17               	decfsz	??_flash_writeBytes^0,f,c
 35549  00AD40  EF9A  F056         	goto	u18845
 35550  00AD44                     
 35551                           ;flash.c: 45: startaddr *= 64 ;
 35552  00AD44  0E06               	movlw	6
 35553  00AD46                     u18855:
 35554  00AD46  90D8               	bcf	status,0,c
 35555  00AD48  360F               	rlcf	flash_writeBytes@startaddr^0,f,c
 35556  00AD4A  3610               	rlcf	(flash_writeBytes@startaddr+1)^0,f,c
 35557  00AD4C  3611               	rlcf	(flash_writeBytes@startaddr+2)^0,f,c
 35558  00AD4E  3612               	rlcf	(flash_writeBytes@startaddr+3)^0,f,c
 35559  00AD50  2EE8               	decfsz	wreg,f,c
 35560  00AD52  EFA3  F056         	goto	u18855
 35561  00AD56                     
 35562                           ;flash.c: 46: startaddr += 64 ;
 35563  00AD56  0E40               	movlw	64
 35564  00AD58  260F               	addwf	flash_writeBytes@startaddr^0,f,c
 35565  00AD5A  0E00               	movlw	0
 35566  00AD5C  2210               	addwfc	(flash_writeBytes@startaddr+1)^0,f,c
 35567  00AD5E  2211               	addwfc	(flash_writeBytes@startaddr+2)^0,f,c
 35568  00AD60  2212               	addwfc	(flash_writeBytes@startaddr+3)^0,f,c
 35569  00AD62                     
 35570                           ;flash.c: 48: write_byte = startaddr - flash_addr.Val;
 35571  00AD62  501B               	movf	flash_writeBytes@flash_addr^0,w,c
 35572  00AD64  5C0F               	subwf	flash_writeBytes@startaddr^0,w,c
 35573  00AD66  6E19               	movwf	flash_writeBytes@write_byte^0,c
 35574                           
 35575                           ;flash.c: 50: while(num_bytes)
 35576  00AD68  EF17  F057         	goto	l17410
 35577  00AD6C                     l24:
 35578                           
 35579                           ;flash.c: 51: {;flash.c: 52: TBLPTRU = flash_addr.byte.UB;
 35580  00AD6C  C01D  FFF8         	movff	flash_writeBytes@flash_addr+2,tblptru	;volatile
 35581                           
 35582                           ;flash.c: 53: TBLPTRH = flash_addr.byte.HB;
 35583  00AD70  C01C  FFF7         	movff	flash_writeBytes@flash_addr+1,tblptrh	;volatile
 35584                           
 35585                           ;flash.c: 54: TBLPTRL = flash_addr.byte.LB;
 35586  00AD74  C01B  FFF6         	movff	flash_writeBytes@flash_addr,tblptrl	;volatile
 35587                           
 35588                           ;flash.c: 56: while(write_byte--)
 35589  00AD78  EFD5  F056         	goto	l17390
 35590  00AD7C                     l17382:
 35591                           
 35592                           ;flash.c: 57: {;flash.c: 58: TABLAT = *flash_array++;
 35593  00AD7C  C013  FFD9         	movff	flash_writeBytes@flash_array,fsr2l
 35594  00AD80  C014  FFDA         	movff	flash_writeBytes@flash_array+1,fsr2h
 35595  00AD84  50DF               	movf	indf2,w,c
 35596  00AD86  6EF5               	movwf	245,c	;volatile
 35597  00AD88  4A13               	infsnz	flash_writeBytes@flash_array^0,f,c
 35598  00AD8A  2A14               	incf	(flash_writeBytes@flash_array+1)^0,f,c
 35599  00AD8C  000D               	tblwt		*+	;# 
 35600  00AD8E                     
 35601                           ;flash.c: 60: if(--num_bytes==0) break;
 35602  00AD8E  0615               	decf	flash_writeBytes@num_bytes^0,f,c
 35603  00AD90  A0D8               	btfss	status,0,c
 35604  00AD92  0616               	decf	(flash_writeBytes@num_bytes+1)^0,f,c
 35605  00AD94  5015               	movf	flash_writeBytes@num_bytes^0,w,c
 35606  00AD96  1016               	iorwf	(flash_writeBytes@num_bytes+1)^0,w,c
 35607  00AD98  A4D8               	btfss	status,2,c
 35608  00AD9A  EFD1  F056         	goto	u18861
 35609  00AD9E  EFD3  F056         	goto	u18860
 35610  00ADA2                     u18861:
 35611  00ADA2  EFD5  F056         	goto	l17390
 35612  00ADA6                     u18860:
 35613  00ADA6  EFDE  F056         	goto	l28
 35614  00ADAA                     l17390:
 35615  00ADAA  0619               	decf	flash_writeBytes@write_byte^0,f,c
 35616  00ADAC  2819               	incf	flash_writeBytes@write_byte^0,w,c
 35617  00ADAE  A4D8               	btfss	status,2,c
 35618  00ADB0  EFDC  F056         	goto	u18871
 35619  00ADB4  EFDE  F056         	goto	u18870
 35620  00ADB8                     u18871:
 35621  00ADB8  EFBE  F056         	goto	l17382
 35622  00ADBC                     u18870:
 35623  00ADBC                     l28:
 35624                           
 35625                           ;flash.c: 61: };flash.c: 63: TBLPTRU = flash_addr.byte.UB;
 35626  00ADBC  C01D  FFF8         	movff	flash_writeBytes@flash_addr+2,tblptru	;volatile
 35627                           
 35628                           ;flash.c: 64: TBLPTRH = flash_addr.byte.HB;
 35629  00ADC0  C01C  FFF7         	movff	flash_writeBytes@flash_addr+1,tblptrh	;volatile
 35630                           
 35631                           ;flash.c: 65: TBLPTRL = flash_addr.byte.LB;
 35632  00ADC4  C01B  FFF6         	movff	flash_writeBytes@flash_addr,tblptrl	;volatile
 35633                           
 35634                           ;flash.c: 67: EECON1bits.WREN = 1;
 35635  00ADC8  84A6               	bsf	166,2,c	;volsfr
 35636                           
 35637                           ;flash.c: 68: if(INTCONbits.GIE)
 35638  00ADCA  AEF2               	btfss	242,7,c	;volatile
 35639  00ADCC  EFEA  F056         	goto	u18881
 35640  00ADD0  EFEC  F056         	goto	u18880
 35641  00ADD4                     u18881:
 35642  00ADD4  EFEF  F056         	goto	l29
 35643  00ADD8                     u18880:
 35644  00ADD8                     
 35645                           ;flash.c: 69: {;flash.c: 70: INTCONbits.GIE = 0;
 35646  00ADD8  9EF2               	bcf	242,7,c	;volatile
 35647  00ADDA                     
 35648                           ;flash.c: 71: flag=1;
 35649  00ADDA  0E01               	movlw	1
 35650  00ADDC  6E1A               	movwf	flash_writeBytes@flag^0,c
 35651  00ADDE                     l29:
 35652                           
 35653                           ;flash.c: 72: };flash.c: 73: EECON2 = 0x55;
 35654  00ADDE  0E55               	movlw	85
 35655  00ADE0  6EA7               	movwf	167,c	;volsfr
 35656                           
 35657                           ;flash.c: 74: EECON2 = 0xAA;
 35658  00ADE2  0EAA               	movlw	170
 35659  00ADE4  6EA7               	movwf	167,c	;volsfr
 35660  00ADE6                     
 35661                           ;flash.c: 75: EECON1bits.WR =1;
 35662  00ADE6  82A6               	bsf	166,1,c	;volsfr
 35663  00ADE8                     
 35664                           ;flash.c: 76: EECON1bits.WREN = 0 ;
 35665  00ADE8  94A6               	bcf	166,2,c	;volsfr
 35666                           
 35667                           ;flash.c: 77: if(flag)
 35668  00ADEA  501A               	movf	flash_writeBytes@flag^0,w,c
 35669  00ADEC  B4D8               	btfsc	status,2,c
 35670  00ADEE  EFFB  F056         	goto	u18891
 35671  00ADF2  EFFD  F056         	goto	u18890
 35672  00ADF6                     u18891:
 35673  00ADF6  EF00  F057         	goto	l30
 35674  00ADFA                     u18890:
 35675  00ADFA                     
 35676                           ;flash.c: 78: {;flash.c: 79: INTCONbits.GIE = 1;
 35677  00ADFA  8EF2               	bsf	242,7,c	;volatile
 35678  00ADFC                     
 35679                           ;flash.c: 80: flag=0;
 35680  00ADFC  0E00               	movlw	0
 35681  00ADFE  6E1A               	movwf	flash_writeBytes@flag^0,c
 35682  00AE00                     l30:
 35683                           
 35684                           ;flash.c: 81: };flash.c: 82: write_byte = 64;
 35685  00AE00  0E40               	movlw	64
 35686  00AE02  6E19               	movwf	flash_writeBytes@write_byte^0,c
 35687  00AE04                     
 35688                           ;flash.c: 83: flash_addr.Val = flash_addr.Val + 64;
 35689  00AE04  0E40               	movlw	64
 35690  00AE06  241B               	addwf	flash_writeBytes@flash_addr^0,w,c
 35691  00AE08  6E1B               	movwf	flash_writeBytes@flash_addr^0,c
 35692  00AE0A  0E00               	movlw	0
 35693  00AE0C  201C               	addwfc	(flash_writeBytes@flash_addr+1)^0,w,c
 35694  00AE0E  6E1C               	movwf	(flash_writeBytes@flash_addr+1)^0,c
 35695  00AE10  0E00               	movlw	0
 35696  00AE12  201D               	addwfc	(flash_writeBytes@flash_addr+2)^0,w,c
 35697  00AE14  6E1D               	movwf	(flash_writeBytes@flash_addr+2)^0,c
 35698  00AE16  0E00               	movlw	0
 35699  00AE18  201E               	addwfc	(flash_writeBytes@flash_addr+3)^0,w,c
 35700  00AE1A  6E1E               	movwf	(flash_writeBytes@flash_addr+3)^0,c
 35701  00AE1C                     
 35702                           ;flash.c: 85: if (EECON1bits.WRERR == 1)
 35703  00AE1C  A6A6               	btfss	166,3,c	;volsfr
 35704  00AE1E  EF13  F057         	goto	u18901
 35705  00AE22  EF15  F057         	goto	u18900
 35706  00AE26                     u18901:
 35707  00AE26  EF17  F057         	goto	l17410
 35708  00AE2A                     u18900:
 35709  00AE2A                     
 35710                           ;flash.c: 86: retval = 0;
 35711  00AE2A  0E00               	movlw	0
 35712  00AE2C  6E18               	movwf	flash_writeBytes@retval^0,c
 35713  00AE2E                     l17410:
 35714  00AE2E  5015               	movf	flash_writeBytes@num_bytes^0,w,c
 35715  00AE30  1016               	iorwf	(flash_writeBytes@num_bytes+1)^0,w,c
 35716  00AE32  A4D8               	btfss	status,2,c
 35717  00AE34  EF1E  F057         	goto	u18911
 35718  00AE38  EF20  F057         	goto	u18910
 35719  00AE3C                     u18911:
 35720  00AE3C  EFB6  F056         	goto	l24
 35721  00AE40                     u18910:
 35722  00AE40                     
 35723                           ;flash.c: 87: };flash.c: 88: return retval;
 35724  00AE40  5018               	movf	flash_writeBytes@retval^0,w,c
 35725  00AE42  0012               	return		;funcret
 35726  00AE44                     __end_of_flash_writeBytes:
 35727                           	callstack 0
 35728                           
 35729 ;; *************** function _flash_clear *****************
 35730 ;; Defined at:
 35731 ;;		line 91 in file "bsp/flash.c"
 35732 ;; Parameters:    Size  Location     Type
 35733 ;;  startaddr       4   14[COMRAM] unsigned long 
 35734 ;;  endaddr         4   18[COMRAM] unsigned long 
 35735 ;; Auto vars:     Size  Location     Type
 35736 ;;  flash_addr      4   23[COMRAM] struct .
 35737 ;;  flag            1   22[COMRAM] unsigned char 
 35738 ;; Return value:  Size  Location     Type
 35739 ;;                  1    wreg      void 
 35740 ;; Registers used:
 35741 ;;		wreg, status,2, status,0
 35742 ;; Tracked objects:
 35743 ;;		On entry : 0/0
 35744 ;;		On exit  : 0/0
 35745 ;;		Unchanged: 0/0
 35746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35747 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35748 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35750 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35751 ;;Total ram usage:       13 bytes
 35752 ;; Hardware stack levels used: 1
 35753 ;; Hardware stack levels required when called: 3
 35754 ;; This function calls:
 35755 ;;		Nothing
 35756 ;; This function is called by:
 35757 ;;		_nvm_write_flash_all
 35758 ;; This function uses a non-reentrant model
 35759 ;;
 35760                           
 35761                           	psect	text167
 35762  00D4A0                     __ptext167:
 35763                           	callstack 0
 35764  00D4A0                     _flash_clear:
 35765                           	callstack 25
 35766  00D4A0                     
 35767                           ;flash.c: 93: unsigned char flag=0;
 35768  00D4A0  0E00               	movlw	0
 35769  00D4A2  6E17               	movwf	flash_clear@flag^0,c
 35770  00D4A4                     
 35771                           ;flash.c: 94: DWORD_VAL flash_addr;;flash.c: 96: flash_addr.Val = startaddr;
 35772  00D4A4  C00F  F018         	movff	flash_clear@startaddr,flash_clear@flash_addr
 35773  00D4A8  C010  F019         	movff	flash_clear@startaddr+1,flash_clear@flash_addr+1
 35774  00D4AC  C011  F01A         	movff	flash_clear@startaddr+2,flash_clear@flash_addr+2
 35775  00D4B0  C012  F01B         	movff	flash_clear@startaddr+3,flash_clear@flash_addr+3
 35776                           
 35777                           ;flash.c: 98: while(flash_addr.Val<endaddr)
 35778  00D4B4  EF88  F06A         	goto	l36
 35779  00D4B8                     l37:
 35780                           
 35781                           ;flash.c: 99: {;flash.c: 100: TBLPTRU = flash_addr.byte.UB;
 35782  00D4B8  C01A  FFF8         	movff	flash_clear@flash_addr+2,tblptru	;volatile
 35783                           
 35784                           ;flash.c: 101: TBLPTRH = flash_addr.byte.HB;
 35785  00D4BC  C019  FFF7         	movff	flash_clear@flash_addr+1,tblptrh	;volatile
 35786                           
 35787                           ;flash.c: 102: TBLPTRL = flash_addr.byte.LB;
 35788  00D4C0  C018  FFF6         	movff	flash_clear@flash_addr,tblptrl	;volatile
 35789                           
 35790                           ;flash.c: 104: EECON1bits.WREN = 1;
 35791  00D4C4  84A6               	bsf	166,2,c	;volsfr
 35792                           
 35793                           ;flash.c: 105: EECON1bits.FREE = 1;
 35794  00D4C6  88A6               	bsf	166,4,c	;volsfr
 35795                           
 35796                           ;flash.c: 106: if(INTCONbits.GIE)
 35797  00D4C8  AEF2               	btfss	242,7,c	;volatile
 35798  00D4CA  EF69  F06A         	goto	u18921
 35799  00D4CE  EF6B  F06A         	goto	u18920
 35800  00D4D2                     u18921:
 35801  00D4D2  EF6E  F06A         	goto	l38
 35802  00D4D6                     u18920:
 35803  00D4D6                     
 35804                           ;flash.c: 107: {;flash.c: 108: INTCONbits.GIE = 0;
 35805  00D4D6  9EF2               	bcf	242,7,c	;volatile
 35806  00D4D8                     
 35807                           ;flash.c: 109: flag=1;
 35808  00D4D8  0E01               	movlw	1
 35809  00D4DA  6E17               	movwf	flash_clear@flag^0,c
 35810  00D4DC                     l38:
 35811                           
 35812                           ;flash.c: 110: };flash.c: 111: EECON2 = 0x55;
 35813  00D4DC  0E55               	movlw	85
 35814  00D4DE  6EA7               	movwf	167,c	;volsfr
 35815                           
 35816                           ;flash.c: 112: EECON2 = 0xAA;
 35817  00D4E0  0EAA               	movlw	170
 35818  00D4E2  6EA7               	movwf	167,c	;volsfr
 35819  00D4E4                     
 35820                           ;flash.c: 113: EECON1bits.WR = 1;
 35821  00D4E4  82A6               	bsf	166,1,c	;volsfr
 35822                           
 35823                           ;flash.c: 114: if(flag)
 35824  00D4E6  5017               	movf	flash_clear@flag^0,w,c
 35825  00D4E8  B4D8               	btfsc	status,2,c
 35826  00D4EA  EF79  F06A         	goto	u18931
 35827  00D4EE  EF7B  F06A         	goto	u18930
 35828  00D4F2                     u18931:
 35829  00D4F2  EF7C  F06A         	goto	l17428
 35830  00D4F6                     u18930:
 35831  00D4F6                     
 35832                           ;flash.c: 115: INTCONbits.GIE = 1;
 35833  00D4F6  8EF2               	bsf	242,7,c	;volatile
 35834  00D4F8                     l17428:
 35835                           
 35836                           ;flash.c: 117: flash_addr.Val = flash_addr.Val + 1024;
 35837  00D4F8  0E00               	movlw	0
 35838  00D4FA  2418               	addwf	flash_clear@flash_addr^0,w,c
 35839  00D4FC  6E18               	movwf	flash_clear@flash_addr^0,c
 35840  00D4FE  0E04               	movlw	4
 35841  00D500  2019               	addwfc	(flash_clear@flash_addr+1)^0,w,c
 35842  00D502  6E19               	movwf	(flash_clear@flash_addr+1)^0,c
 35843  00D504  0E00               	movlw	0
 35844  00D506  201A               	addwfc	(flash_clear@flash_addr+2)^0,w,c
 35845  00D508  6E1A               	movwf	(flash_clear@flash_addr+2)^0,c
 35846  00D50A  0E00               	movlw	0
 35847  00D50C  201B               	addwfc	(flash_clear@flash_addr+3)^0,w,c
 35848  00D50E  6E1B               	movwf	(flash_clear@flash_addr+3)^0,c
 35849  00D510                     l36:
 35850  00D510  5013               	movf	flash_clear@endaddr^0,w,c
 35851  00D512  5C18               	subwf	flash_clear@flash_addr^0,w,c
 35852  00D514  5014               	movf	(flash_clear@endaddr+1)^0,w,c
 35853  00D516  5819               	subwfb	(flash_clear@flash_addr+1)^0,w,c
 35854  00D518  5015               	movf	(flash_clear@endaddr+2)^0,w,c
 35855  00D51A  581A               	subwfb	(flash_clear@flash_addr+2)^0,w,c
 35856  00D51C  5016               	movf	(flash_clear@endaddr+3)^0,w,c
 35857  00D51E  581B               	subwfb	(flash_clear@flash_addr+3)^0,w,c
 35858  00D520  A0D8               	btfss	status,0,c
 35859  00D522  EF95  F06A         	goto	u18941
 35860  00D526  EF97  F06A         	goto	u18940
 35861  00D52A                     u18941:
 35862  00D52A  EF5C  F06A         	goto	l37
 35863  00D52E                     u18940:
 35864  00D52E  0012               	return		;funcret
 35865  00D530                     __end_of_flash_clear:
 35866                           	callstack 0
 35867                           
 35868 ;; *************** function _nvm_serialno_check *****************
 35869 ;; Defined at:
 35870 ;;		line 77 in file "nvm.c"
 35871 ;; Parameters:    Size  Location     Type
 35872 ;;  sno             2   14[COMRAM] PTR const unsigned char 
 35873 ;;		 -> g_nvm.flash.serialNum(8), g_nvm.flash(108), 
 35874 ;; Auto vars:     Size  Location     Type
 35875 ;;  i               1   17[COMRAM] unsigned char 
 35876 ;; Return value:  Size  Location     Type
 35877 ;;                  1    wreg      unsigned char 
 35878 ;; Registers used:
 35879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 35880 ;; Tracked objects:
 35881 ;;		On entry : 0/0
 35882 ;;		On exit  : 0/0
 35883 ;;		Unchanged: 0/0
 35884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35885 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35888 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35889 ;;Total ram usage:        4 bytes
 35890 ;; Hardware stack levels used: 1
 35891 ;; Hardware stack levels required when called: 3
 35892 ;; This function calls:
 35893 ;;		Nothing
 35894 ;; This function is called by:
 35895 ;;		_nvm_init
 35896 ;; This function uses a non-reentrant model
 35897 ;;
 35898                           
 35899                           	psect	text168
 35900  00E496                     __ptext168:
 35901                           	callstack 0
 35902  00E496                     _nvm_serialno_check:
 35903                           	callstack 25
 35904  00E496                     
 35905                           ;nvm.c: 79: uint8_t i;;nvm.c: 80: for (i = 0 ; i < 8 ; i++) {
 35906  00E496  0E00               	movlw	0
 35907  00E498  6E12               	movwf	nvm_serialno_check@i^0,c
 35908  00E49A                     l18282:
 35909                           
 35910                           ;nvm.c: 81: if (sno[i] == 0xff || sno[i] == 0x00)
 35911  00E49A  5012               	movf	nvm_serialno_check@i^0,w,c
 35912  00E49C  240F               	addwf	nvm_serialno_check@sno^0,w,c
 35913  00E49E  6ED9               	movwf	fsr2l,c
 35914  00E4A0  0E00               	movlw	0
 35915  00E4A2  2010               	addwfc	(nvm_serialno_check@sno+1)^0,w,c
 35916  00E4A4  6EDA               	movwf	fsr2h,c
 35917  00E4A6  28DE               	incf	postinc2,w,c
 35918  00E4A8  B4D8               	btfsc	status,2,c
 35919  00E4AA  EF59  F072         	goto	u19771
 35920  00E4AE  EF5B  F072         	goto	u19770
 35921  00E4B2                     u19771:
 35922  00E4B2  EF69  F072         	goto	l18286
 35923  00E4B6                     u19770:
 35924  00E4B6  5012               	movf	nvm_serialno_check@i^0,w,c
 35925  00E4B8  240F               	addwf	nvm_serialno_check@sno^0,w,c
 35926  00E4BA  6ED9               	movwf	fsr2l,c
 35927  00E4BC  0E00               	movlw	0
 35928  00E4BE  2010               	addwfc	(nvm_serialno_check@sno+1)^0,w,c
 35929  00E4C0  6EDA               	movwf	fsr2h,c
 35930  00E4C2  50DF               	movf	indf2,w,c
 35931  00E4C4  A4D8               	btfss	status,2,c
 35932  00E4C6  EF67  F072         	goto	u19781
 35933  00E4CA  EF69  F072         	goto	u19780
 35934  00E4CE                     u19781:
 35935  00E4CE  EF6C  F072         	goto	l18290
 35936  00E4D2                     u19780:
 35937  00E4D2                     l18286:
 35938                           
 35939                           ;nvm.c: 82: return 0;
 35940  00E4D2  0E00               	movlw	0
 35941  00E4D4  EF76  F072         	goto	l1259
 35942  00E4D8                     l18290:
 35943  00E4D8  2A12               	incf	nvm_serialno_check@i^0,f,c
 35944  00E4DA  0E07               	movlw	7
 35945  00E4DC  6412               	cpfsgt	nvm_serialno_check@i^0,c
 35946  00E4DE  EF73  F072         	goto	u19791
 35947  00E4E2  EF75  F072         	goto	u19790
 35948  00E4E6                     u19791:
 35949  00E4E6  EF4D  F072         	goto	l18282
 35950  00E4EA                     u19790:
 35951  00E4EA                     
 35952                           ;nvm.c: 83: };nvm.c: 84: return 1;
 35953  00E4EA  0E01               	movlw	1
 35954  00E4EC                     l1259:
 35955  00E4EC  0012               	return		;funcret
 35956  00E4EE                     __end_of_nvm_serialno_check:
 35957                           	callstack 0
 35958                           
 35959 ;; *************** function _nvm_read_flash_all *****************
 35960 ;; Defined at:
 35961 ;;		line 112 in file "nvm.c"
 35962 ;; Parameters:    Size  Location     Type
 35963 ;;  flash           2   30[COMRAM] PTR struct .
 35964 ;;		 -> g_nvm(109), 
 35965 ;; Auto vars:     Size  Location     Type
 35966 ;;		None
 35967 ;; Return value:  Size  Location     Type
 35968 ;;                  1    wreg      void 
 35969 ;; Registers used:
 35970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35971 ;; Tracked objects:
 35972 ;;		On entry : 0/0
 35973 ;;		On exit  : 0/0
 35974 ;;		Unchanged: 0/0
 35975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 35976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 35980 ;;Total ram usage:        2 bytes
 35981 ;; Hardware stack levels used: 1
 35982 ;; Hardware stack levels required when called: 4
 35983 ;; This function calls:
 35984 ;;		_flash_readBytes
 35985 ;; This function is called by:
 35986 ;;		_build_response
 35987 ;;		_nvm_init
 35988 ;; This function uses a non-reentrant model
 35989 ;;
 35990                           
 35991                           	psect	text169
 35992  00EE7A                     __ptext169:
 35993                           	callstack 0
 35994  00EE7A                     _nvm_read_flash_all:
 35995                           	callstack 24
 35996  00EE7A                     
 35997                           ;nvm.c: 114: flash_readBytes(0xf400, flash->byte, 108);
 35998  00EE7A  0E00               	movlw	0
 35999  00EE7C  6E0F               	movwf	flash_readBytes@startaddr^0,c
 36000  00EE7E  0EF4               	movlw	244
 36001  00EE80  6E10               	movwf	(flash_readBytes@startaddr+1)^0,c
 36002  00EE82  0E00               	movlw	0
 36003  00EE84  6E11               	movwf	(flash_readBytes@startaddr+2)^0,c
 36004  00EE86  0E00               	movlw	0
 36005  00EE88  6E12               	movwf	(flash_readBytes@startaddr+3)^0,c
 36006  00EE8A  C01F  F013         	movff	nvm_read_flash_all@flash,flash_readBytes@flash_array
 36007  00EE8E  C020  F014         	movff	nvm_read_flash_all@flash+1,flash_readBytes@flash_array+1
 36008  00EE92  0E00               	movlw	0
 36009  00EE94  6E16               	movwf	(flash_readBytes@num_bytes+1)^0,c
 36010  00EE96  0E6C               	movlw	108
 36011  00EE98  6E15               	movwf	flash_readBytes@num_bytes^0,c
 36012  00EE9A  ECB0  F06F         	call	_flash_readBytes	;wreg free
 36013  00EE9E  0012               	return		;funcret
 36014  00EEA0                     __end_of_nvm_read_flash_all:
 36015                           	callstack 0
 36016                           
 36017 ;; *************** function _flash_readBytes *****************
 36018 ;; Defined at:
 36019 ;;		line 9 in file "bsp/flash.c"
 36020 ;; Parameters:    Size  Location     Type
 36021 ;;  startaddr       4   14[COMRAM] unsigned long 
 36022 ;;  flash_array     2   18[COMRAM] PTR unsigned char 
 36023 ;;		 -> nvm_read_flash_all@flash(2), g_nvm(109), 
 36024 ;;  num_bytes       2   20[COMRAM] unsigned int 
 36025 ;; Auto vars:     Size  Location     Type
 36026 ;;  tblptr_save     4   26[COMRAM] struct .
 36027 ;;  flash_addr      4   22[COMRAM] struct .
 36028 ;; Return value:  Size  Location     Type
 36029 ;;                  1    wreg      void 
 36030 ;; Registers used:
 36031 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 36032 ;; Tracked objects:
 36033 ;;		On entry : 0/0
 36034 ;;		On exit  : 0/0
 36035 ;;		Unchanged: 0/0
 36036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36037 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36038 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36040 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36041 ;;Total ram usage:       16 bytes
 36042 ;; Hardware stack levels used: 1
 36043 ;; Hardware stack levels required when called: 3
 36044 ;; This function calls:
 36045 ;;		Nothing
 36046 ;; This function is called by:
 36047 ;;		_nvm_read_flash_all
 36048 ;; This function uses a non-reentrant model
 36049 ;;
 36050                           
 36051                           	psect	text170
 36052  00DF60                     __ptext170:
 36053                           	callstack 0
 36054  00DF60                     _flash_readBytes:
 36055                           	callstack 24
 36056  00DF60                     
 36057                           ;flash.c: 11: DWORD_VAL flash_addr;;flash.c: 12: DWORD_VAL tblptr_save;;flash.c: 14: fla
      +                          sh_addr.Val = startaddr;
 36058  00DF60  C00F  F017         	movff	flash_readBytes@startaddr,flash_readBytes@flash_addr
 36059  00DF64  C010  F018         	movff	flash_readBytes@startaddr+1,flash_readBytes@flash_addr+1
 36060  00DF68  C011  F019         	movff	flash_readBytes@startaddr+2,flash_readBytes@flash_addr+2
 36061  00DF6C  C012  F01A         	movff	flash_readBytes@startaddr+3,flash_readBytes@flash_addr+3
 36062                           
 36063                           ;flash.c: 16: tblptr_save.byte.UB = TBLPTRU;
 36064  00DF70  CFF8 F01D          	movff	tblptru,flash_readBytes@tblptr_save+2	;volatile
 36065                           
 36066                           ;flash.c: 17: tblptr_save.byte.HB = TBLPTRH;
 36067  00DF74  CFF7 F01C          	movff	tblptrh,flash_readBytes@tblptr_save+1	;volatile
 36068                           
 36069                           ;flash.c: 18: tblptr_save.byte.LB = TBLPTRL;
 36070  00DF78  CFF6 F01B          	movff	tblptrl,flash_readBytes@tblptr_save	;volatile
 36071                           
 36072                           ;flash.c: 20: TBLPTRU = flash_addr.byte.UB;
 36073  00DF7C  C019  FFF8         	movff	flash_readBytes@flash_addr+2,tblptru	;volatile
 36074                           
 36075                           ;flash.c: 21: TBLPTRH = flash_addr.byte.HB;
 36076  00DF80  C018  FFF7         	movff	flash_readBytes@flash_addr+1,tblptrh	;volatile
 36077                           
 36078                           ;flash.c: 22: TBLPTRL = flash_addr.byte.LB;
 36079  00DF84  C017  FFF6         	movff	flash_readBytes@flash_addr,tblptrl	;volatile
 36080                           
 36081                           ;flash.c: 24: while(num_bytes--)
 36082  00DF88  EFCF  F06F         	goto	l17368
 36083  00DF8C                     l18:
 36084  00DF8C  0009               	tblrd		*+	;# 
 36085  00DF8E                     
 36086                           ;flash.c: 28: *flash_array++ = TABLAT;
 36087  00DF8E  C013  FFD9         	movff	flash_readBytes@flash_array,fsr2l
 36088  00DF92  C014  FFDA         	movff	flash_readBytes@flash_array+1,fsr2h
 36089  00DF96  CFF5 FFDF          	movff	tablat,indf2	;volatile
 36090  00DF9A  4A13               	infsnz	flash_readBytes@flash_array^0,f,c
 36091  00DF9C  2A14               	incf	(flash_readBytes@flash_array+1)^0,f,c
 36092  00DF9E                     l17368:
 36093  00DF9E  0615               	decf	flash_readBytes@num_bytes^0,f,c
 36094  00DFA0  A0D8               	btfss	status,0,c
 36095  00DFA2  0616               	decf	(flash_readBytes@num_bytes+1)^0,f,c
 36096  00DFA4  2815               	incf	flash_readBytes@num_bytes^0,w,c
 36097  00DFA6  E106               	bnz	u18831
 36098  00DFA8  2816               	incf	(flash_readBytes@num_bytes+1)^0,w,c
 36099  00DFAA  A4D8               	btfss	status,2,c
 36100  00DFAC  EFDA  F06F         	goto	u18831
 36101  00DFB0  EFDC  F06F         	goto	u18830
 36102  00DFB4                     u18831:
 36103  00DFB4  EFC6  F06F         	goto	l18
 36104  00DFB8                     u18830:
 36105  00DFB8                     
 36106                           ;flash.c: 29: };flash.c: 31: TBLPTRU = tblptr_save.byte.UB;
 36107  00DFB8  C01D  FFF8         	movff	flash_readBytes@tblptr_save+2,tblptru	;volatile
 36108                           
 36109                           ;flash.c: 32: TBLPTRH = tblptr_save.byte.HB;
 36110  00DFBC  C01C  FFF7         	movff	flash_readBytes@tblptr_save+1,tblptrh	;volatile
 36111                           
 36112                           ;flash.c: 33: TBLPTRL = tblptr_save.byte.LB;
 36113  00DFC0  C01B  FFF6         	movff	flash_readBytes@tblptr_save,tblptrl	;volatile
 36114  00DFC4  0012               	return		;funcret
 36115  00DFC6                     __end_of_flash_readBytes:
 36116                           	callstack 0
 36117                           
 36118 ;; *************** function _nvm_clear *****************
 36119 ;; Defined at:
 36120 ;;		line 65 in file "nvm.c"
 36121 ;; Parameters:    Size  Location     Type
 36122 ;;		None
 36123 ;; Auto vars:     Size  Location     Type
 36124 ;;		None
 36125 ;; Return value:  Size  Location     Type
 36126 ;;                  1    wreg      void 
 36127 ;; Registers used:
 36128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36129 ;; Tracked objects:
 36130 ;;		On entry : 0/0
 36131 ;;		On exit  : 0/0
 36132 ;;		Unchanged: 0/0
 36133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36138 ;;Total ram usage:        0 bytes
 36139 ;; Hardware stack levels used: 1
 36140 ;; Hardware stack levels required when called: 9
 36141 ;; This function calls:
 36142 ;;		_nvm_clear_flash
 36143 ;; This function is called by:
 36144 ;;		_nvm_clear_all
 36145 ;;		_nvm_init
 36146 ;; This function uses a non-reentrant model
 36147 ;;
 36148                           
 36149                           	psect	text171
 36150  00F1A8                     __ptext171:
 36151                           	callstack 0
 36152  00F1A8                     _nvm_clear:
 36153                           	callstack 18
 36154  00F1A8                     
 36155                           ;nvm.c: 67: nvm_clear_flash();
 36156  00F1A8  EC4E  F04C         	call	_nvm_clear_flash	;wreg free
 36157  00F1AC  0012               	return		;funcret
 36158  00F1AE                     __end_of_nvm_clear:
 36159                           	callstack 0
 36160                           
 36161 ;; *************** function _nvm_clear_flash *****************
 36162 ;; Defined at:
 36163 ;;		line 20 in file "nvm.c"
 36164 ;; Parameters:    Size  Location     Type
 36165 ;;		None
 36166 ;; Auto vars:     Size  Location     Type
 36167 ;;		None
 36168 ;; Return value:  Size  Location     Type
 36169 ;;                  1    wreg      void 
 36170 ;; Registers used:
 36171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36172 ;; Tracked objects:
 36173 ;;		On entry : 0/0
 36174 ;;		On exit  : 0/0
 36175 ;;		Unchanged: 0/0
 36176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36181 ;;Total ram usage:        0 bytes
 36182 ;; Hardware stack levels used: 1
 36183 ;; Hardware stack levels required when called: 8
 36184 ;; This function calls:
 36185 ;;		_build_time
 36186 ;; This function is called by:
 36187 ;;		_nvm_clear
 36188 ;; This function uses a non-reentrant model
 36189 ;;
 36190                           
 36191                           	psect	text172
 36192  00989C                     __ptext172:
 36193                           	callstack 0
 36194  00989C                     _nvm_clear_flash:
 36195                           	callstack 18
 36196  00989C                     
 36197                           ;nvm.c: 22: g_nvm.flash.filter_mode = FIL_MODE;
 36198  00989C  0E01               	movlw	1
 36199  00989E  0101               	movlb	1	; () banked
 36200  0098A0  6F7A               	movwf	(_g_nvm+1)& (0+255),b
 36201                           
 36202                           ;nvm.c: 23: g_nvm.flash.temp_corf = CELSIUS;
 36203  0098A2  0E00               	movlw	0
 36204  0098A4  6F7C               	movwf	(_g_nvm+3)& (0+255),b
 36205                           
 36206                           ;nvm.c: 24: g_nvm.flash.temp_cmp = TEMP_CMP_ON;
 36207  0098A6  0E01               	movlw	1
 36208  0098A8  6F7B               	movwf	(_g_nvm+2)& (0+255),b
 36209                           
 36210                           ;nvm.c: 25: g_nvm.flash.CO2_ABC = OFF;
 36211  0098AA  0E00               	movlw	0
 36212  0098AC  6F7D               	movwf	(_g_nvm+4)& (0+255),b
 36213                           
 36214                           ;nvm.c: 28: g_nvm.flash.span_uV[0] = 7114.0f;
 36215  0098AE  0E00               	movlw	0
 36216  0098B0  6F8E               	movwf	(_g_nvm+21)& (0+255),b
 36217  0098B2  0E50               	movlw	80
 36218  0098B4  6F8F               	movwf	(_g_nvm+22)& (0+255),b
 36219  0098B6  0EDE               	movlw	222
 36220  0098B8  6F90               	movwf	(_g_nvm+23)& (0+255),b
 36221  0098BA  0E45               	movlw	69
 36222  0098BC  6F91               	movwf	(_g_nvm+24)& (0+255),b
 36223                           
 36224                           ;nvm.c: 29: g_nvm.flash.span_uV[1] = 67169.0f;
 36225  0098BE  0E80               	movlw	128
 36226  0098C0  6F92               	movwf	(_g_nvm+25)& (0+255),b
 36227  0098C2  0E30               	movlw	48
 36228  0098C4  6F93               	movwf	(_g_nvm+26)& (0+255),b
 36229  0098C6  0E83               	movlw	131
 36230  0098C8  6F94               	movwf	(_g_nvm+27)& (0+255),b
 36231  0098CA  0E47               	movlw	71
 36232  0098CC  6F95               	movwf	(_g_nvm+28)& (0+255),b
 36233                           
 36234                           ;nvm.c: 30: g_nvm.flash.span_uV[2] = 199570.0f;
 36235  0098CE  0E80               	movlw	128
 36236  0098D0  6F96               	movwf	(_g_nvm+29)& (0+255),b
 36237  0098D2  0EE4               	movlw	228
 36238  0098D4  6F97               	movwf	(_g_nvm+30)& (0+255),b
 36239  0098D6  0E42               	movlw	66
 36240  0098D8  6F98               	movwf	(_g_nvm+31)& (0+255),b
 36241  0098DA  0E48               	movlw	72
 36242  0098DC  6F99               	movwf	(_g_nvm+32)& (0+255),b
 36243                           
 36244                           ;nvm.c: 32: g_nvm.flash.baseLine_uV[0] = 0.0f;
 36245  0098DE  0E00               	movlw	0
 36246  0098E0  6F82               	movwf	(_g_nvm+9)& (0+255),b
 36247  0098E2  0E00               	movlw	0
 36248  0098E4  6F83               	movwf	(_g_nvm+10)& (0+255),b
 36249  0098E6  0E00               	movlw	0
 36250  0098E8  6F84               	movwf	(_g_nvm+11)& (0+255),b
 36251  0098EA  0E00               	movlw	0
 36252  0098EC  6F85               	movwf	(_g_nvm+12)& (0+255),b
 36253                           
 36254                           ;nvm.c: 33: g_nvm.flash.baseLine_uV[1] = 0.0f;
 36255  0098EE  0E00               	movlw	0
 36256  0098F0  6F86               	movwf	(_g_nvm+13)& (0+255),b
 36257  0098F2  0E00               	movlw	0
 36258  0098F4  6F87               	movwf	(_g_nvm+14)& (0+255),b
 36259  0098F6  0E00               	movlw	0
 36260  0098F8  6F88               	movwf	(_g_nvm+15)& (0+255),b
 36261  0098FA  0E00               	movlw	0
 36262  0098FC  6F89               	movwf	(_g_nvm+16)& (0+255),b
 36263                           
 36264                           ;nvm.c: 34: g_nvm.flash.baseLine_uV[2] = 0.0f;
 36265  0098FE  0E00               	movlw	0
 36266  009900  6F8A               	movwf	(_g_nvm+17)& (0+255),b
 36267  009902  0E00               	movlw	0
 36268  009904  6F8B               	movwf	(_g_nvm+18)& (0+255),b
 36269  009906  0E00               	movlw	0
 36270  009908  6F8C               	movwf	(_g_nvm+19)& (0+255),b
 36271  00990A  0E00               	movlw	0
 36272  00990C  6F8D               	movwf	(_g_nvm+20)& (0+255),b
 36273                           
 36274                           ;nvm.c: 36: g_nvm.flash.CalibrationGas[0] = 50.0f;
 36275  00990E  0E00               	movlw	0
 36276  009910  6F9A               	movwf	(_g_nvm+33)& (0+255),b
 36277  009912  0E00               	movlw	0
 36278  009914  6F9B               	movwf	(_g_nvm+34)& (0+255),b
 36279  009916  0E48               	movlw	72
 36280  009918  6F9C               	movwf	(_g_nvm+35)& (0+255),b
 36281  00991A  0E42               	movlw	66
 36282  00991C  6F9D               	movwf	(_g_nvm+36)& (0+255),b
 36283                           
 36284                           ;nvm.c: 37: g_nvm.flash.CalibrationGas[1] = 10.0f;
 36285  00991E  0E00               	movlw	0
 36286  009920  6F9E               	movwf	(_g_nvm+37)& (0+255),b
 36287  009922  0E00               	movlw	0
 36288  009924  6F9F               	movwf	(_g_nvm+38)& (0+255),b
 36289  009926  0E20               	movlw	32
 36290  009928  6FA0               	movwf	(_g_nvm+39)& (0+255),b
 36291  00992A  0E41               	movlw	65
 36292  00992C  6FA1               	movwf	(_g_nvm+40)& (0+255),b
 36293                           
 36294                           ;nvm.c: 38: g_nvm.flash.CalibrationGas[2] = 49.8f;
 36295  00992E  0E33               	movlw	51
 36296  009930  6FA2               	movwf	(_g_nvm+41)& (0+255),b
 36297  009932  0E33               	movlw	51
 36298  009934  6FA3               	movwf	(_g_nvm+42)& (0+255),b
 36299  009936  0E47               	movlw	71
 36300  009938  6FA4               	movwf	(_g_nvm+43)& (0+255),b
 36301  00993A  0E42               	movlw	66
 36302  00993C  6FA5               	movwf	(_g_nvm+44)& (0+255),b
 36303                           
 36304                           ;nvm.c: 40: g_nvm.flash.gas_slope[0] = 0.0f;
 36305  00993E  0E00               	movlw	0
 36306  009940  6FA6               	movwf	(_g_nvm+45)& (0+255),b
 36307  009942  0E00               	movlw	0
 36308  009944  6FA7               	movwf	(_g_nvm+46)& (0+255),b
 36309  009946  0E00               	movlw	0
 36310  009948  6FA8               	movwf	(_g_nvm+47)& (0+255),b
 36311  00994A  0E00               	movlw	0
 36312  00994C  6FA9               	movwf	(_g_nvm+48)& (0+255),b
 36313                           
 36314                           ;nvm.c: 41: g_nvm.flash.gas_slope[1] = 0.0f;
 36315  00994E  0E00               	movlw	0
 36316  009950  6FAA               	movwf	(_g_nvm+49)& (0+255),b
 36317  009952  0E00               	movlw	0
 36318  009954  6FAB               	movwf	(_g_nvm+50)& (0+255),b
 36319  009956  0E00               	movlw	0
 36320  009958  6FAC               	movwf	(_g_nvm+51)& (0+255),b
 36321  00995A  0E00               	movlw	0
 36322  00995C  6FAD               	movwf	(_g_nvm+52)& (0+255),b
 36323                           
 36324                           ;nvm.c: 42: g_nvm.flash.gas_slope[2] = 0.0f;
 36325  00995E  0E00               	movlw	0
 36326  009960  6FAE               	movwf	(_g_nvm+53)& (0+255),b
 36327  009962  0E00               	movlw	0
 36328  009964  6FAF               	movwf	(_g_nvm+54)& (0+255),b
 36329  009966  0E00               	movlw	0
 36330  009968  6FB0               	movwf	(_g_nvm+55)& (0+255),b
 36331  00996A  0E00               	movlw	0
 36332  00996C  6FB1               	movwf	(_g_nvm+56)& (0+255),b
 36333                           
 36334                           ;nvm.c: 44: g_nvm.flash.gasOffset[0] = 0.0f;
 36335  00996E  0E00               	movlw	0
 36336  009970  6FB2               	movwf	(_g_nvm+57)& (0+255),b
 36337  009972  0E00               	movlw	0
 36338  009974  6FB3               	movwf	(_g_nvm+58)& (0+255),b
 36339  009976  0E00               	movlw	0
 36340  009978  6FB4               	movwf	(_g_nvm+59)& (0+255),b
 36341  00997A  0E00               	movlw	0
 36342  00997C  6FB5               	movwf	(_g_nvm+60)& (0+255),b
 36343                           
 36344                           ;nvm.c: 45: g_nvm.flash.gasOffset[1] = 0.0f;
 36345  00997E  0E00               	movlw	0
 36346  009980  6FB6               	movwf	(_g_nvm+61)& (0+255),b
 36347  009982  0E00               	movlw	0
 36348  009984  6FB7               	movwf	(_g_nvm+62)& (0+255),b
 36349  009986  0E00               	movlw	0
 36350  009988  6FB8               	movwf	(_g_nvm+63)& (0+255),b
 36351  00998A  0E00               	movlw	0
 36352  00998C  6FB9               	movwf	(_g_nvm+64)& (0+255),b
 36353                           
 36354                           ;nvm.c: 46: g_nvm.flash.gasOffset[2] = 0.0f;
 36355  00998E  0E00               	movlw	0
 36356  009990  6FBA               	movwf	(_g_nvm+65)& (0+255),b
 36357  009992  0E00               	movlw	0
 36358  009994  6FBB               	movwf	(_g_nvm+66)& (0+255),b
 36359  009996  0E00               	movlw	0
 36360  009998  6FBC               	movwf	(_g_nvm+67)& (0+255),b
 36361  00999A  0E00               	movlw	0
 36362  00999C  6FBD               	movwf	(_g_nvm+68)& (0+255),b
 36363                           
 36364                           ;nvm.c: 48: g_nvm.flash.window_size[0] = LEVEL_15;
 36365  00999E  0E0F               	movlw	15
 36366  0099A0  6F7E               	movwf	(_g_nvm+5)& (0+255),b
 36367                           
 36368                           ;nvm.c: 49: g_nvm.flash.window_size[1] = LEVEL_12;
 36369  0099A2  0E0C               	movlw	12
 36370  0099A4  6F7F               	movwf	(_g_nvm+6)& (0+255),b
 36371                           
 36372                           ;nvm.c: 50: g_nvm.flash.window_size[2] = LEVEL_12;
 36373  0099A6  0E0C               	movlw	12
 36374  0099A8  6F80               	movwf	(_g_nvm+7)& (0+255),b
 36375                           
 36376                           ;nvm.c: 51: g_nvm.flash.window_size[3] = LEVEL_1;
 36377  0099AA  0E01               	movlw	1
 36378  0099AC  6F81               	movwf	(_g_nvm+8)& (0+255),b
 36379                           
 36380                           ;nvm.c: 53: g_nvm.flash.co2Offset = 0;
 36381  0099AE  0E00               	movlw	0
 36382  0099B0  6FBE               	movwf	(_g_nvm+69)& (0+255),b
 36383  0099B2  0E00               	movlw	0
 36384  0099B4  6FBF               	movwf	(_g_nvm+70)& (0+255),b
 36385  0099B6  0E00               	movlw	0
 36386  0099B8  6FC0               	movwf	(_g_nvm+71)& (0+255),b
 36387  0099BA  0E00               	movlw	0
 36388  0099BC  6FC1               	movwf	(_g_nvm+72)& (0+255),b
 36389                           
 36390                           ;nvm.c: 54: g_nvm.flash.tempOffset = 0.0f;
 36391  0099BE  0E00               	movlw	0
 36392  0099C0  6FC2               	movwf	(_g_nvm+73)& (0+255),b
 36393  0099C2  0E00               	movlw	0
 36394  0099C4  6FC3               	movwf	(_g_nvm+74)& (0+255),b
 36395  0099C6  0E00               	movlw	0
 36396  0099C8  6FC4               	movwf	(_g_nvm+75)& (0+255),b
 36397  0099CA  0E00               	movlw	0
 36398  0099CC  6FC5               	movwf	(_g_nvm+76)& (0+255),b
 36399                           
 36400                           ;nvm.c: 55: g_nvm.flash.humiOffset = 0.0f;
 36401  0099CE  0E00               	movlw	0
 36402  0099D0  6FC6               	movwf	(_g_nvm+77)& (0+255),b
 36403  0099D2  0E00               	movlw	0
 36404  0099D4  6FC7               	movwf	(_g_nvm+78)& (0+255),b
 36405  0099D6  0E00               	movlw	0
 36406  0099D8  6FC8               	movwf	(_g_nvm+79)& (0+255),b
 36407  0099DA  0E00               	movlw	0
 36408  0099DC  6FC9               	movwf	(_g_nvm+80)& (0+255),b
 36409                           
 36410                           ;nvm.c: 56: g_nvm.flash.calib_temp = 0.0f;
 36411  0099DE  0E00               	movlw	0
 36412  0099E0  6FCA               	movwf	(_g_nvm+81)& (0+255),b
 36413  0099E2  0E00               	movlw	0
 36414  0099E4  6FCB               	movwf	(_g_nvm+82)& (0+255),b
 36415  0099E6  0E00               	movlw	0
 36416  0099E8  6FCC               	movwf	(_g_nvm+83)& (0+255),b
 36417  0099EA  0E00               	movlw	0
 36418  0099EC  6FCD               	movwf	(_g_nvm+84)& (0+255),b
 36419                           
 36420                           ;nvm.c: 58: g_nvm.flash.KMf_e_measure = 40.0f;
 36421  0099EE  0E00               	movlw	0
 36422  0099F0  6FCE               	movwf	(_g_nvm+85)& (0+255),b
 36423  0099F2  0E00               	movlw	0
 36424  0099F4  6FCF               	movwf	(_g_nvm+86)& (0+255),b
 36425  0099F6  0E20               	movlw	32
 36426  0099F8  6FD0               	movwf	(_g_nvm+87)& (0+255),b
 36427  0099FA  0E42               	movlw	66
 36428  0099FC  6FD1               	movwf	(_g_nvm+88)& (0+255),b
 36429                           
 36430                           ;nvm.c: 60: g_nvm.flash.exectime = 0;
 36431  0099FE  0E00               	movlw	0
 36432  009A00  6FD2               	movwf	(_g_nvm+89)& (0+255),b
 36433  009A02  0E00               	movlw	0
 36434  009A04  6FD3               	movwf	(_g_nvm+90)& (0+255),b
 36435  009A06  0E00               	movlw	0
 36436  009A08  6FD4               	movwf	(_g_nvm+91)& (0+255),b
 36437  009A0A  0E00               	movlw	0
 36438  009A0C  6FD5               	movwf	(_g_nvm+92)& (0+255),b
 36439                           
 36440                           ;nvm.c: 61: g_nvm.flash.usedtime = 0;
 36441  009A0E  0E00               	movlw	0
 36442  009A10  6FD6               	movwf	(_g_nvm+93)& (0+255),b
 36443  009A12  0E00               	movlw	0
 36444  009A14  6FD7               	movwf	(_g_nvm+94)& (0+255),b
 36445  009A16  0E00               	movlw	0
 36446  009A18  6FD8               	movwf	(_g_nvm+95)& (0+255),b
 36447  009A1A  0E00               	movlw	0
 36448  009A1C  6FD9               	movwf	(_g_nvm+96)& (0+255),b
 36449  009A1E                     
 36450                           ; BSR set to: 1
 36451                           ;nvm.c: 62: g_nvm.flash.buildtime = (uint32_t)build_time();
 36452  009A1E  EC5B  F024         	call	_build_time	;wreg free
 36453  009A22  C064  F1DA         	movff	?_build_time,_g_nvm+97
 36454  009A26  C065  F1DB         	movff	?_build_time+1,_g_nvm+98
 36455  009A2A  C066  F1DC         	movff	?_build_time+2,_g_nvm+99
 36456  009A2E  C067  F1DD         	movff	?_build_time+3,_g_nvm+100
 36457  009A32  0012               	return		;funcret
 36458  009A34                     __end_of_nvm_clear_flash:
 36459                           	callstack 0
 36460                           
 36461 ;; *************** function _build_time *****************
 36462 ;; Defined at:
 36463 ;;		line 4 in file "util/build_time.c"
 36464 ;; Parameters:    Size  Location     Type
 36465 ;;		None
 36466 ;; Auto vars:     Size  Location     Type
 36467 ;;  tm             18   52[BANK0 ] struct tm
 36468 ;;  timestamp       4   10[BANK0 ] long 
 36469 ;; Return value:  Size  Location     Type
 36470 ;;                  4    4[BANK0 ] long 
 36471 ;; Registers used:
 36472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36473 ;; Tracked objects:
 36474 ;;		On entry : 0/0
 36475 ;;		On exit  : 0/0
 36476 ;;		Unchanged: 0/0
 36477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 36478 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36479 ;;      Locals:         0      60       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36480 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36481 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 36482 ;;Total ram usage:       66 bytes
 36483 ;; Hardware stack levels used: 1
 36484 ;; Hardware stack levels required when called: 7
 36485 ;; This function calls:
 36486 ;;		___wmul
 36487 ;;		_mktime
 36488 ;; This function is called by:
 36489 ;;		_nvm_clear_flash
 36490 ;; This function uses a non-reentrant model
 36491 ;;
 36492                           
 36493                           	psect	text173
 36494  0048B6                     __ptext173:
 36495                           	callstack 0
 36496  0048B6                     _build_time:
 36497                           	callstack 18
 36498  0048B6                     
 36499                           ;build_time.c: 6: struct tm tm = { 0 };
 36500  0048B6  EE23  F050         	lfsr	2,build_time@F37
 36501  0048BA  EE10  F094         	lfsr	1,build_time@tm
 36502  0048BE  0E11               	movlw	17
 36503  0048C0                     u17851:
 36504  0048C0  CFDB FFE3          	movff	plusw2,plusw1
 36505  0048C4  06E8               	decf	wreg,f,c
 36506  0048C6  E2FC               	bc	u17851
 36507  0048C8                     
 36508                           ;build_time.c: 7: time_t timestamp;;build_time.c: 9: tm.tm_year = ((("Feb 02 2023"[0] ==
      +                           '?')) ? 99 : ( ("Feb 02 2023"[ 7] - '0') * 1000 + ("Feb 02 2023"[ 8] - '0') * 100 + ("F
      +                          eb 02 2023"[ 9] - '0') * 10 + ("Feb 02 2023"[10] - '0') )) - 1900;
 36509  0048C8  0E58               	movlw	low STR_14
 36510  0048CA  6EF6               	movwf	tblptrl,c
 36511  0048CC                     	if	1	;There is more than 1 active tblptr byte
 36512  0048CC  0E23               	movlw	high STR_14
 36513  0048CE  6EF7               	movwf	tblptrh,c
 36514  0048D0                     	endif
 36515  0048D0                     	if	0	;There are less than 3 active tblptr bytes
 36516  0048D0                     	endif
 36517  0048D0  0008               	tblrd		*
 36518  0048D2  50F5               	movf	tablat,w,c
 36519  0048D4  0A3F               	xorlw	63
 36520  0048D6  B4D8               	btfsc	status,2,c
 36521  0048D8  EF70  F024         	goto	u17861
 36522  0048DC  EF72  F024         	goto	u17860
 36523  0048E0                     u17861:
 36524  0048E0  EFAC  F024         	goto	l16744
 36525  0048E4                     u17860:
 36526  0048E4  0E5F               	movlw	low (STR_14+7)
 36527  0048E6  6EF6               	movwf	tblptrl,c
 36528  0048E8  0E23               	movlw	high (STR_14+7)
 36529  0048EA  6EF7               	movwf	tblptrh,c
 36530  0048EC                     	if	0	;tblptru may be non-zero
 36531  0048EC                     	endif
 36532  0048EC                     	if	0	;tblptru may be non-zero
 36533  0048EC                     	endif
 36534  0048EC  0008               	tblrd		*
 36535  0048EE  50F5               	movf	tablat,w,c
 36536  0048F0  6E0F               	movwf	___wmul@multiplier^0,c
 36537  0048F2  6A10               	clrf	(___wmul@multiplier+1)^0,c
 36538  0048F4  0E03               	movlw	3
 36539  0048F6  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 36540  0048F8  0EE8               	movlw	232
 36541  0048FA  6E11               	movwf	___wmul@multiplicand^0,c
 36542  0048FC  EC50  F077         	call	___wmul	;wreg free
 36543  004900  0E60               	movlw	low (STR_14+8)
 36544  004902  6EF6               	movwf	tblptrl,c
 36545  004904  0E23               	movlw	high (STR_14+8)
 36546  004906  6EF7               	movwf	tblptrh,c
 36547  004908                     	if	0	;tblptru may be non-zero
 36548  004908                     	endif
 36549  004908                     	if	0	;tblptru may be non-zero
 36550  004908                     	endif
 36551  004908  0008               	tblrd		*
 36552  00490A  50F5               	movf	tablat,w,c
 36553  00490C  0D64               	mullw	100
 36554  00490E  CFF3 F068          	movff	prodl,??_build_time
 36555  004912  CFF4 F069          	movff	prodh,??_build_time+1
 36556  004916  0E61               	movlw	low (STR_14+9)
 36557  004918  6EF6               	movwf	tblptrl,c
 36558  00491A  0E23               	movlw	high (STR_14+9)
 36559  00491C  6EF7               	movwf	tblptrh,c
 36560  00491E                     	if	0	;tblptru may be non-zero
 36561  00491E                     	endif
 36562  00491E                     	if	0	;tblptru may be non-zero
 36563  00491E                     	endif
 36564  00491E  0008               	tblrd		*
 36565  004920  50F5               	movf	tablat,w,c
 36566  004922  0D0A               	mullw	10
 36567  004924  50F3               	movf	243,w,c
 36568  004926  0100               	movlb	0	; () banked
 36569  004928  2768               	addwf	??_build_time& (0+255),f,b
 36570  00492A  50F4               	movf	244,w,c
 36571  00492C  2369               	addwfc	(??_build_time+1)& (0+255),f,b
 36572  00492E  500F               	movf	?___wmul^0,w,c
 36573  004930  2768               	addwf	??_build_time& (0+255),f,b
 36574  004932  5010               	movf	(?___wmul+1)^0,w,c
 36575  004934  2369               	addwfc	(??_build_time+1)& (0+255),f,b
 36576  004936  0E62               	movlw	low (STR_14+10)
 36577  004938  6EF6               	movwf	tblptrl,c
 36578  00493A  0E23               	movlw	high (STR_14+10)
 36579  00493C  6EF7               	movwf	tblptrh,c
 36580  00493E                     	if	0	;tblptru may be non-zero
 36581  00493E                     	endif
 36582  00493E                     	if	0	;tblptru may be non-zero
 36583  00493E                     	endif
 36584  00493E  0008               	tblrd		*
 36585  004940  50F5               	movf	tablat,w,c
 36586  004942  2768               	addwf	??_build_time& (0+255),f,b
 36587  004944  0E00               	movlw	0
 36588  004946  2369               	addwfc	(??_build_time+1)& (0+255),f,b
 36589  004948  0EB0               	movlw	176
 36590  00494A  2568               	addwf	??_build_time& (0+255),w,b
 36591  00494C  6F6E               	movwf	_build_time$5891& (0+255),b
 36592  00494E  0E2F               	movlw	47
 36593  004950  2169               	addwfc	(??_build_time+1)& (0+255),w,b
 36594  004952  6F6F               	movwf	(_build_time$5891+1)& (0+255),b
 36595  004954  EFB1  F024         	goto	l16746
 36596  004958                     l16744:
 36597  004958  0E00               	movlw	0
 36598  00495A  0100               	movlb	0	; () banked
 36599  00495C  6F6F               	movwf	(_build_time$5891+1)& (0+255),b
 36600  00495E  0E63               	movlw	99
 36601  004960  6F6E               	movwf	_build_time$5891& (0+255),b
 36602  004962                     l16746:
 36603                           
 36604                           ; BSR set to: 0
 36605  004962  0E94               	movlw	148
 36606  004964  256E               	addwf	_build_time$5891& (0+255),w,b
 36607  004966  6F9E               	movwf	(build_time@tm+10)& (0+255),b
 36608  004968  0EF8               	movlw	248
 36609  00496A  216F               	addwfc	(_build_time$5891+1)& (0+255),w,b
 36610  00496C  6F9F               	movwf	(build_time@tm+11)& (0+255),b
 36611  00496E                     
 36612                           ; BSR set to: 0
 36613                           ;build_time.c: 10: tm.tm_mon = ((("Feb 02 2023"[0] == '?')) ? 99 : ( (("Feb 02 2023"[0] 
      +                          == 'J' && "Feb 02 2023"[1] == 'a' && "Feb 02 2023"[2] == 'n')) ? 1 : (("Feb 02 2023"[0] 
      +                          == 'F')) ? 2 : (("Feb 02 2023"[0] == 'M' && "Feb 02 2023"[1] == 'a' && "Feb 02 2023"[2] 
      +                          == 'r
 36614  00496E  0E58               	movlw	low STR_14
 36615  004970  6EF6               	movwf	tblptrl,c
 36616  004972                     	if	1	;There is more than 1 active tblptr byte
 36617  004972  0E23               	movlw	high STR_14
 36618  004974  6EF7               	movwf	tblptrh,c
 36619  004976                     	endif
 36620  004976                     	if	0	;There are less than 3 active tblptr bytes
 36621  004976                     	endif
 36622  004976  0008               	tblrd		*
 36623  004978  50F5               	movf	tablat,w,c
 36624  00497A  0A3F               	xorlw	63
 36625  00497C  B4D8               	btfsc	status,2,c
 36626  00497E  EFC3  F024         	goto	u17871
 36627  004982  EFC5  F024         	goto	u17870
 36628  004986                     u17871:
 36629  004986  EF93  F026         	goto	l16848
 36630  00498A                     u17870:
 36631  00498A                     
 36632                           ; BSR set to: 0
 36633  00498A  0E58               	movlw	low STR_14
 36634  00498C  6EF6               	movwf	tblptrl,c
 36635  00498E                     	if	1	;There is more than 1 active tblptr byte
 36636  00498E  0E23               	movlw	high STR_14
 36637  004990  6EF7               	movwf	tblptrh,c
 36638  004992                     	endif
 36639  004992                     	if	0	;There are less than 3 active tblptr bytes
 36640  004992                     	endif
 36641  004992  0008               	tblrd		*
 36642  004994  50F5               	movf	tablat,w,c
 36643  004996  0A4A               	xorlw	74
 36644  004998  A4D8               	btfss	status,2,c
 36645  00499A  EFD1  F024         	goto	u17881
 36646  00499E  EFD3  F024         	goto	u17880
 36647  0049A2                     u17881:
 36648  0049A2  EFEF  F024         	goto	l16756
 36649  0049A6                     u17880:
 36650  0049A6                     
 36651                           ; BSR set to: 0
 36652  0049A6  0E59               	movlw	low (STR_14+1)
 36653  0049A8  6EF6               	movwf	tblptrl,c
 36654  0049AA  0E23               	movlw	high (STR_14+1)
 36655  0049AC  6EF7               	movwf	tblptrh,c
 36656  0049AE                     	if	0	;tblptru may be non-zero
 36657  0049AE                     	endif
 36658  0049AE                     	if	0	;tblptru may be non-zero
 36659  0049AE                     	endif
 36660  0049AE  0008               	tblrd		*
 36661  0049B0  50F5               	movf	tablat,w,c
 36662  0049B2  0A61               	xorlw	97
 36663  0049B4  A4D8               	btfss	status,2,c
 36664  0049B6  EFDF  F024         	goto	u17891
 36665  0049BA  EFE1  F024         	goto	u17890
 36666  0049BE                     u17891:
 36667  0049BE  EFEF  F024         	goto	l16756
 36668  0049C2                     u17890:
 36669  0049C2                     
 36670                           ; BSR set to: 0
 36671  0049C2  0E5A               	movlw	low (STR_14+2)
 36672  0049C4  6EF6               	movwf	tblptrl,c
 36673  0049C6  0E23               	movlw	high (STR_14+2)
 36674  0049C8  6EF7               	movwf	tblptrh,c
 36675  0049CA                     	if	0	;tblptru may be non-zero
 36676  0049CA                     	endif
 36677  0049CA                     	if	0	;tblptru may be non-zero
 36678  0049CA                     	endif
 36679  0049CA  0008               	tblrd		*
 36680  0049CC  50F5               	movf	tablat,w,c
 36681  0049CE  0A6E               	xorlw	110
 36682  0049D0  B4D8               	btfsc	status,2,c
 36683  0049D2  EFED  F024         	goto	u17901
 36684  0049D6  EFEF  F024         	goto	u17900
 36685  0049DA                     u17901:
 36686  0049DA  EF89  F026         	goto	l16844
 36687  0049DE                     u17900:
 36688  0049DE                     l16756:
 36689                           
 36690                           ; BSR set to: 0
 36691  0049DE  0E58               	movlw	low STR_14
 36692  0049E0  6EF6               	movwf	tblptrl,c
 36693  0049E2                     	if	1	;There is more than 1 active tblptr byte
 36694  0049E2  0E23               	movlw	high STR_14
 36695  0049E4  6EF7               	movwf	tblptrh,c
 36696  0049E6                     	endif
 36697  0049E6                     	if	0	;There are less than 3 active tblptr bytes
 36698  0049E6                     	endif
 36699  0049E6  0008               	tblrd		*
 36700  0049E8  50F5               	movf	tablat,w,c
 36701  0049EA  0A46               	xorlw	70
 36702  0049EC  B4D8               	btfsc	status,2,c
 36703  0049EE  EFFB  F024         	goto	u17911
 36704  0049F2  EFFD  F024         	goto	u17910
 36705  0049F6                     u17911:
 36706  0049F6  EF7F  F026         	goto	l16840
 36707  0049FA                     u17910:
 36708  0049FA                     
 36709                           ; BSR set to: 0
 36710  0049FA  0E58               	movlw	low STR_14
 36711  0049FC  6EF6               	movwf	tblptrl,c
 36712  0049FE                     	if	1	;There is more than 1 active tblptr byte
 36713  0049FE  0E23               	movlw	high STR_14
 36714  004A00  6EF7               	movwf	tblptrh,c
 36715  004A02                     	endif
 36716  004A02                     	if	0	;There are less than 3 active tblptr bytes
 36717  004A02                     	endif
 36718  004A02  0008               	tblrd		*
 36719  004A04  50F5               	movf	tablat,w,c
 36720  004A06  0A4D               	xorlw	77
 36721  004A08  A4D8               	btfss	status,2,c
 36722  004A0A  EF09  F025         	goto	u17921
 36723  004A0E  EF0B  F025         	goto	u17920
 36724  004A12                     u17921:
 36725  004A12  EF27  F025         	goto	l16764
 36726  004A16                     u17920:
 36727  004A16                     
 36728                           ; BSR set to: 0
 36729  004A16  0E59               	movlw	low (STR_14+1)
 36730  004A18  6EF6               	movwf	tblptrl,c
 36731  004A1A  0E23               	movlw	high (STR_14+1)
 36732  004A1C  6EF7               	movwf	tblptrh,c
 36733  004A1E                     	if	0	;tblptru may be non-zero
 36734  004A1E                     	endif
 36735  004A1E                     	if	0	;tblptru may be non-zero
 36736  004A1E                     	endif
 36737  004A1E  0008               	tblrd		*
 36738  004A20  50F5               	movf	tablat,w,c
 36739  004A22  0A61               	xorlw	97
 36740  004A24  A4D8               	btfss	status,2,c
 36741  004A26  EF17  F025         	goto	u17931
 36742  004A2A  EF19  F025         	goto	u17930
 36743  004A2E                     u17931:
 36744  004A2E  EF27  F025         	goto	l16764
 36745  004A32                     u17930:
 36746  004A32                     
 36747                           ; BSR set to: 0
 36748  004A32  0E5A               	movlw	low (STR_14+2)
 36749  004A34  6EF6               	movwf	tblptrl,c
 36750  004A36  0E23               	movlw	high (STR_14+2)
 36751  004A38  6EF7               	movwf	tblptrh,c
 36752  004A3A                     	if	0	;tblptru may be non-zero
 36753  004A3A                     	endif
 36754  004A3A                     	if	0	;tblptru may be non-zero
 36755  004A3A                     	endif
 36756  004A3A  0008               	tblrd		*
 36757  004A3C  50F5               	movf	tablat,w,c
 36758  004A3E  0A72               	xorlw	114
 36759  004A40  B4D8               	btfsc	status,2,c
 36760  004A42  EF25  F025         	goto	u17941
 36761  004A46  EF27  F025         	goto	u17940
 36762  004A4A                     u17941:
 36763  004A4A  EF75  F026         	goto	l16836
 36764  004A4E                     u17940:
 36765  004A4E                     l16764:
 36766                           
 36767                           ; BSR set to: 0
 36768  004A4E  0E58               	movlw	low STR_14
 36769  004A50  6EF6               	movwf	tblptrl,c
 36770  004A52                     	if	1	;There is more than 1 active tblptr byte
 36771  004A52  0E23               	movlw	high STR_14
 36772  004A54  6EF7               	movwf	tblptrh,c
 36773  004A56                     	endif
 36774  004A56                     	if	0	;There are less than 3 active tblptr bytes
 36775  004A56                     	endif
 36776  004A56  0008               	tblrd		*
 36777  004A58  50F5               	movf	tablat,w,c
 36778  004A5A  0A41               	xorlw	65
 36779  004A5C  A4D8               	btfss	status,2,c
 36780  004A5E  EF33  F025         	goto	u17951
 36781  004A62  EF35  F025         	goto	u17950
 36782  004A66                     u17951:
 36783  004A66  EF43  F025         	goto	l16768
 36784  004A6A                     u17950:
 36785  004A6A                     
 36786                           ; BSR set to: 0
 36787  004A6A  0E59               	movlw	low (STR_14+1)
 36788  004A6C  6EF6               	movwf	tblptrl,c
 36789  004A6E  0E23               	movlw	high (STR_14+1)
 36790  004A70  6EF7               	movwf	tblptrh,c
 36791  004A72                     	if	0	;tblptru may be non-zero
 36792  004A72                     	endif
 36793  004A72                     	if	0	;tblptru may be non-zero
 36794  004A72                     	endif
 36795  004A72  0008               	tblrd		*
 36796  004A74  50F5               	movf	tablat,w,c
 36797  004A76  0A70               	xorlw	112
 36798  004A78  B4D8               	btfsc	status,2,c
 36799  004A7A  EF41  F025         	goto	u17961
 36800  004A7E  EF43  F025         	goto	u17960
 36801  004A82                     u17961:
 36802  004A82  EF6B  F026         	goto	l16832
 36803  004A86                     u17960:
 36804  004A86                     l16768:
 36805                           
 36806                           ; BSR set to: 0
 36807  004A86  0E58               	movlw	low STR_14
 36808  004A88  6EF6               	movwf	tblptrl,c
 36809  004A8A                     	if	1	;There is more than 1 active tblptr byte
 36810  004A8A  0E23               	movlw	high STR_14
 36811  004A8C  6EF7               	movwf	tblptrh,c
 36812  004A8E                     	endif
 36813  004A8E                     	if	0	;There are less than 3 active tblptr bytes
 36814  004A8E                     	endif
 36815  004A8E  0008               	tblrd		*
 36816  004A90  50F5               	movf	tablat,w,c
 36817  004A92  0A4D               	xorlw	77
 36818  004A94  A4D8               	btfss	status,2,c
 36819  004A96  EF4F  F025         	goto	u17971
 36820  004A9A  EF51  F025         	goto	u17970
 36821  004A9E                     u17971:
 36822  004A9E  EF6D  F025         	goto	l16774
 36823  004AA2                     u17970:
 36824  004AA2                     
 36825                           ; BSR set to: 0
 36826  004AA2  0E59               	movlw	low (STR_14+1)
 36827  004AA4  6EF6               	movwf	tblptrl,c
 36828  004AA6  0E23               	movlw	high (STR_14+1)
 36829  004AA8  6EF7               	movwf	tblptrh,c
 36830  004AAA                     	if	0	;tblptru may be non-zero
 36831  004AAA                     	endif
 36832  004AAA                     	if	0	;tblptru may be non-zero
 36833  004AAA                     	endif
 36834  004AAA  0008               	tblrd		*
 36835  004AAC  50F5               	movf	tablat,w,c
 36836  004AAE  0A61               	xorlw	97
 36837  004AB0  A4D8               	btfss	status,2,c
 36838  004AB2  EF5D  F025         	goto	u17981
 36839  004AB6  EF5F  F025         	goto	u17980
 36840  004ABA                     u17981:
 36841  004ABA  EF6D  F025         	goto	l16774
 36842  004ABE                     u17980:
 36843  004ABE                     
 36844                           ; BSR set to: 0
 36845  004ABE  0E5A               	movlw	low (STR_14+2)
 36846  004AC0  6EF6               	movwf	tblptrl,c
 36847  004AC2  0E23               	movlw	high (STR_14+2)
 36848  004AC4  6EF7               	movwf	tblptrh,c
 36849  004AC6                     	if	0	;tblptru may be non-zero
 36850  004AC6                     	endif
 36851  004AC6                     	if	0	;tblptru may be non-zero
 36852  004AC6                     	endif
 36853  004AC6  0008               	tblrd		*
 36854  004AC8  50F5               	movf	tablat,w,c
 36855  004ACA  0A79               	xorlw	121
 36856  004ACC  B4D8               	btfsc	status,2,c
 36857  004ACE  EF6B  F025         	goto	u17991
 36858  004AD2  EF6D  F025         	goto	u17990
 36859  004AD6                     u17991:
 36860  004AD6  EF61  F026         	goto	l16828
 36861  004ADA                     u17990:
 36862  004ADA                     l16774:
 36863                           
 36864                           ; BSR set to: 0
 36865  004ADA  0E58               	movlw	low STR_14
 36866  004ADC  6EF6               	movwf	tblptrl,c
 36867  004ADE                     	if	1	;There is more than 1 active tblptr byte
 36868  004ADE  0E23               	movlw	high STR_14
 36869  004AE0  6EF7               	movwf	tblptrh,c
 36870  004AE2                     	endif
 36871  004AE2                     	if	0	;There are less than 3 active tblptr bytes
 36872  004AE2                     	endif
 36873  004AE2  0008               	tblrd		*
 36874  004AE4  50F5               	movf	tablat,w,c
 36875  004AE6  0A4A               	xorlw	74
 36876  004AE8  A4D8               	btfss	status,2,c
 36877  004AEA  EF79  F025         	goto	u18001
 36878  004AEE  EF7B  F025         	goto	u18000
 36879  004AF2                     u18001:
 36880  004AF2  EF97  F025         	goto	l16780
 36881  004AF6                     u18000:
 36882  004AF6                     
 36883                           ; BSR set to: 0
 36884  004AF6  0E59               	movlw	low (STR_14+1)
 36885  004AF8  6EF6               	movwf	tblptrl,c
 36886  004AFA  0E23               	movlw	high (STR_14+1)
 36887  004AFC  6EF7               	movwf	tblptrh,c
 36888  004AFE                     	if	0	;tblptru may be non-zero
 36889  004AFE                     	endif
 36890  004AFE                     	if	0	;tblptru may be non-zero
 36891  004AFE                     	endif
 36892  004AFE  0008               	tblrd		*
 36893  004B00  50F5               	movf	tablat,w,c
 36894  004B02  0A75               	xorlw	117
 36895  004B04  A4D8               	btfss	status,2,c
 36896  004B06  EF87  F025         	goto	u18011
 36897  004B0A  EF89  F025         	goto	u18010
 36898  004B0E                     u18011:
 36899  004B0E  EF97  F025         	goto	l16780
 36900  004B12                     u18010:
 36901  004B12                     
 36902                           ; BSR set to: 0
 36903  004B12  0E5A               	movlw	low (STR_14+2)
 36904  004B14  6EF6               	movwf	tblptrl,c
 36905  004B16  0E23               	movlw	high (STR_14+2)
 36906  004B18  6EF7               	movwf	tblptrh,c
 36907  004B1A                     	if	0	;tblptru may be non-zero
 36908  004B1A                     	endif
 36909  004B1A                     	if	0	;tblptru may be non-zero
 36910  004B1A                     	endif
 36911  004B1A  0008               	tblrd		*
 36912  004B1C  50F5               	movf	tablat,w,c
 36913  004B1E  0A6E               	xorlw	110
 36914  004B20  B4D8               	btfsc	status,2,c
 36915  004B22  EF95  F025         	goto	u18021
 36916  004B26  EF97  F025         	goto	u18020
 36917  004B2A                     u18021:
 36918  004B2A  EF57  F026         	goto	l16824
 36919  004B2E                     u18020:
 36920  004B2E                     l16780:
 36921                           
 36922                           ; BSR set to: 0
 36923  004B2E  0E58               	movlw	low STR_14
 36924  004B30  6EF6               	movwf	tblptrl,c
 36925  004B32                     	if	1	;There is more than 1 active tblptr byte
 36926  004B32  0E23               	movlw	high STR_14
 36927  004B34  6EF7               	movwf	tblptrh,c
 36928  004B36                     	endif
 36929  004B36                     	if	0	;There are less than 3 active tblptr bytes
 36930  004B36                     	endif
 36931  004B36  0008               	tblrd		*
 36932  004B38  50F5               	movf	tablat,w,c
 36933  004B3A  0A4A               	xorlw	74
 36934  004B3C  A4D8               	btfss	status,2,c
 36935  004B3E  EFA3  F025         	goto	u18031
 36936  004B42  EFA5  F025         	goto	u18030
 36937  004B46                     u18031:
 36938  004B46  EFC1  F025         	goto	l16786
 36939  004B4A                     u18030:
 36940  004B4A                     
 36941                           ; BSR set to: 0
 36942  004B4A  0E59               	movlw	low (STR_14+1)
 36943  004B4C  6EF6               	movwf	tblptrl,c
 36944  004B4E  0E23               	movlw	high (STR_14+1)
 36945  004B50  6EF7               	movwf	tblptrh,c
 36946  004B52                     	if	0	;tblptru may be non-zero
 36947  004B52                     	endif
 36948  004B52                     	if	0	;tblptru may be non-zero
 36949  004B52                     	endif
 36950  004B52  0008               	tblrd		*
 36951  004B54  50F5               	movf	tablat,w,c
 36952  004B56  0A75               	xorlw	117
 36953  004B58  A4D8               	btfss	status,2,c
 36954  004B5A  EFB1  F025         	goto	u18041
 36955  004B5E  EFB3  F025         	goto	u18040
 36956  004B62                     u18041:
 36957  004B62  EFC1  F025         	goto	l16786
 36958  004B66                     u18040:
 36959  004B66                     
 36960                           ; BSR set to: 0
 36961  004B66  0E5A               	movlw	low (STR_14+2)
 36962  004B68  6EF6               	movwf	tblptrl,c
 36963  004B6A  0E23               	movlw	high (STR_14+2)
 36964  004B6C  6EF7               	movwf	tblptrh,c
 36965  004B6E                     	if	0	;tblptru may be non-zero
 36966  004B6E                     	endif
 36967  004B6E                     	if	0	;tblptru may be non-zero
 36968  004B6E                     	endif
 36969  004B6E  0008               	tblrd		*
 36970  004B70  50F5               	movf	tablat,w,c
 36971  004B72  0A6C               	xorlw	108
 36972  004B74  B4D8               	btfsc	status,2,c
 36973  004B76  EFBF  F025         	goto	u18051
 36974  004B7A  EFC1  F025         	goto	u18050
 36975  004B7E                     u18051:
 36976  004B7E  EF4D  F026         	goto	l16820
 36977  004B82                     u18050:
 36978  004B82                     l16786:
 36979                           
 36980                           ; BSR set to: 0
 36981  004B82  0E58               	movlw	low STR_14
 36982  004B84  6EF6               	movwf	tblptrl,c
 36983  004B86                     	if	1	;There is more than 1 active tblptr byte
 36984  004B86  0E23               	movlw	high STR_14
 36985  004B88  6EF7               	movwf	tblptrh,c
 36986  004B8A                     	endif
 36987  004B8A                     	if	0	;There are less than 3 active tblptr bytes
 36988  004B8A                     	endif
 36989  004B8A  0008               	tblrd		*
 36990  004B8C  50F5               	movf	tablat,w,c
 36991  004B8E  0A41               	xorlw	65
 36992  004B90  A4D8               	btfss	status,2,c
 36993  004B92  EFCD  F025         	goto	u18061
 36994  004B96  EFCF  F025         	goto	u18060
 36995  004B9A                     u18061:
 36996  004B9A  EFDD  F025         	goto	l16790
 36997  004B9E                     u18060:
 36998  004B9E                     
 36999                           ; BSR set to: 0
 37000  004B9E  0E59               	movlw	low (STR_14+1)
 37001  004BA0  6EF6               	movwf	tblptrl,c
 37002  004BA2  0E23               	movlw	high (STR_14+1)
 37003  004BA4  6EF7               	movwf	tblptrh,c
 37004  004BA6                     	if	0	;tblptru may be non-zero
 37005  004BA6                     	endif
 37006  004BA6                     	if	0	;tblptru may be non-zero
 37007  004BA6                     	endif
 37008  004BA6  0008               	tblrd		*
 37009  004BA8  50F5               	movf	tablat,w,c
 37010  004BAA  0A75               	xorlw	117
 37011  004BAC  B4D8               	btfsc	status,2,c
 37012  004BAE  EFDB  F025         	goto	u18071
 37013  004BB2  EFDD  F025         	goto	u18070
 37014  004BB6                     u18071:
 37015  004BB6  EF43  F026         	goto	l16816
 37016  004BBA                     u18070:
 37017  004BBA                     l16790:
 37018                           
 37019                           ; BSR set to: 0
 37020  004BBA  0E58               	movlw	low STR_14
 37021  004BBC  6EF6               	movwf	tblptrl,c
 37022  004BBE                     	if	1	;There is more than 1 active tblptr byte
 37023  004BBE  0E23               	movlw	high STR_14
 37024  004BC0  6EF7               	movwf	tblptrh,c
 37025  004BC2                     	endif
 37026  004BC2                     	if	0	;There are less than 3 active tblptr bytes
 37027  004BC2                     	endif
 37028  004BC2  0008               	tblrd		*
 37029  004BC4  50F5               	movf	tablat,w,c
 37030  004BC6  0A53               	xorlw	83
 37031  004BC8  B4D8               	btfsc	status,2,c
 37032  004BCA  EFE9  F025         	goto	u18081
 37033  004BCE  EFEB  F025         	goto	u18080
 37034  004BD2                     u18081:
 37035  004BD2  EF39  F026         	goto	l16812
 37036  004BD6                     u18080:
 37037  004BD6                     
 37038                           ; BSR set to: 0
 37039  004BD6  0E58               	movlw	low STR_14
 37040  004BD8  6EF6               	movwf	tblptrl,c
 37041  004BDA                     	if	1	;There is more than 1 active tblptr byte
 37042  004BDA  0E23               	movlw	high STR_14
 37043  004BDC  6EF7               	movwf	tblptrh,c
 37044  004BDE                     	endif
 37045  004BDE                     	if	0	;There are less than 3 active tblptr bytes
 37046  004BDE                     	endif
 37047  004BDE  0008               	tblrd		*
 37048  004BE0  50F5               	movf	tablat,w,c
 37049  004BE2  0A4F               	xorlw	79
 37050  004BE4  B4D8               	btfsc	status,2,c
 37051  004BE6  EFF7  F025         	goto	u18091
 37052  004BEA  EFF9  F025         	goto	u18090
 37053  004BEE                     u18091:
 37054  004BEE  EF2F  F026         	goto	l16808
 37055  004BF2                     u18090:
 37056  004BF2                     
 37057                           ; BSR set to: 0
 37058  004BF2  0E58               	movlw	low STR_14
 37059  004BF4  6EF6               	movwf	tblptrl,c
 37060  004BF6                     	if	1	;There is more than 1 active tblptr byte
 37061  004BF6  0E23               	movlw	high STR_14
 37062  004BF8  6EF7               	movwf	tblptrh,c
 37063  004BFA                     	endif
 37064  004BFA                     	if	0	;There are less than 3 active tblptr bytes
 37065  004BFA                     	endif
 37066  004BFA  0008               	tblrd		*
 37067  004BFC  50F5               	movf	tablat,w,c
 37068  004BFE  0A4E               	xorlw	78
 37069  004C00  B4D8               	btfsc	status,2,c
 37070  004C02  EF05  F026         	goto	u18101
 37071  004C06  EF07  F026         	goto	u18100
 37072  004C0A                     u18101:
 37073  004C0A  EF25  F026         	goto	l16804
 37074  004C0E                     u18100:
 37075  004C0E                     
 37076                           ; BSR set to: 0
 37077  004C0E  0E58               	movlw	low STR_14
 37078  004C10  6EF6               	movwf	tblptrl,c
 37079  004C12                     	if	1	;There is more than 1 active tblptr byte
 37080  004C12  0E23               	movlw	high STR_14
 37081  004C14  6EF7               	movwf	tblptrh,c
 37082  004C16                     	endif
 37083  004C16                     	if	0	;There are less than 3 active tblptr bytes
 37084  004C16                     	endif
 37085  004C16  0008               	tblrd		*
 37086  004C18  50F5               	movf	tablat,w,c
 37087  004C1A  0A44               	xorlw	68
 37088  004C1C  B4D8               	btfsc	status,2,c
 37089  004C1E  EF13  F026         	goto	u18111
 37090  004C22  EF15  F026         	goto	u18110
 37091  004C26                     u18111:
 37092  004C26  EF1B  F026         	goto	l16800
 37093  004C2A                     u18110:
 37094  004C2A                     
 37095                           ; BSR set to: 0
 37096  004C2A  0E00               	movlw	0
 37097  004C2C  6F89               	movwf	(_build_time$5929+1)& (0+255),b
 37098  004C2E  0E63               	movlw	99
 37099  004C30  6F88               	movwf	_build_time$5929& (0+255),b
 37100  004C32  EF1F  F026         	goto	l16802
 37101  004C36                     l16800:
 37102                           
 37103                           ; BSR set to: 0
 37104  004C36  0E00               	movlw	0
 37105  004C38  6F89               	movwf	(_build_time$5929+1)& (0+255),b
 37106  004C3A  0E0C               	movlw	12
 37107  004C3C  6F88               	movwf	_build_time$5929& (0+255),b
 37108  004C3E                     l16802:
 37109                           
 37110                           ; BSR set to: 0
 37111  004C3E  C088  F086         	movff	_build_time$5929,_build_time$5928
 37112  004C42  C089  F087         	movff	_build_time$5929+1,_build_time$5928+1
 37113  004C46  EF29  F026         	goto	l16806
 37114  004C4A                     l16804:
 37115                           
 37116                           ; BSR set to: 0
 37117  004C4A  0E00               	movlw	0
 37118  004C4C  6F87               	movwf	(_build_time$5928+1)& (0+255),b
 37119  004C4E  0E0B               	movlw	11
 37120  004C50  6F86               	movwf	_build_time$5928& (0+255),b
 37121  004C52                     l16806:
 37122                           
 37123                           ; BSR set to: 0
 37124  004C52  C086  F084         	movff	_build_time$5928,_build_time$5927
 37125  004C56  C087  F085         	movff	_build_time$5928+1,_build_time$5927+1
 37126  004C5A  EF33  F026         	goto	l16810
 37127  004C5E                     l16808:
 37128                           
 37129                           ; BSR set to: 0
 37130  004C5E  0E00               	movlw	0
 37131  004C60  6F85               	movwf	(_build_time$5927+1)& (0+255),b
 37132  004C62  0E0A               	movlw	10
 37133  004C64  6F84               	movwf	_build_time$5927& (0+255),b
 37134  004C66                     l16810:
 37135                           
 37136                           ; BSR set to: 0
 37137  004C66  C084  F082         	movff	_build_time$5927,_build_time$5926
 37138  004C6A  C085  F083         	movff	_build_time$5927+1,_build_time$5926+1
 37139  004C6E  EF3D  F026         	goto	l16814
 37140  004C72                     l16812:
 37141                           
 37142                           ; BSR set to: 0
 37143  004C72  0E00               	movlw	0
 37144  004C74  6F83               	movwf	(_build_time$5926+1)& (0+255),b
 37145  004C76  0E09               	movlw	9
 37146  004C78  6F82               	movwf	_build_time$5926& (0+255),b
 37147  004C7A                     l16814:
 37148                           
 37149                           ; BSR set to: 0
 37150  004C7A  C082  F080         	movff	_build_time$5926,_build_time$5925
 37151  004C7E  C083  F081         	movff	_build_time$5926+1,_build_time$5925+1
 37152  004C82  EF47  F026         	goto	l16818
 37153  004C86                     l16816:
 37154                           
 37155                           ; BSR set to: 0
 37156  004C86  0E00               	movlw	0
 37157  004C88  6F81               	movwf	(_build_time$5925+1)& (0+255),b
 37158  004C8A  0E08               	movlw	8
 37159  004C8C  6F80               	movwf	_build_time$5925& (0+255),b
 37160  004C8E                     l16818:
 37161                           
 37162                           ; BSR set to: 0
 37163  004C8E  C080  F07E         	movff	_build_time$5925,_build_time$5924
 37164  004C92  C081  F07F         	movff	_build_time$5925+1,_build_time$5924+1
 37165  004C96  EF51  F026         	goto	l16822
 37166  004C9A                     l16820:
 37167                           
 37168                           ; BSR set to: 0
 37169  004C9A  0E00               	movlw	0
 37170  004C9C  6F7F               	movwf	(_build_time$5924+1)& (0+255),b
 37171  004C9E  0E07               	movlw	7
 37172  004CA0  6F7E               	movwf	_build_time$5924& (0+255),b
 37173  004CA2                     l16822:
 37174                           
 37175                           ; BSR set to: 0
 37176  004CA2  C07E  F07C         	movff	_build_time$5924,_build_time$5923
 37177  004CA6  C07F  F07D         	movff	_build_time$5924+1,_build_time$5923+1
 37178  004CAA  EF5B  F026         	goto	l16826
 37179  004CAE                     l16824:
 37180                           
 37181                           ; BSR set to: 0
 37182  004CAE  0E00               	movlw	0
 37183  004CB0  6F7D               	movwf	(_build_time$5923+1)& (0+255),b
 37184  004CB2  0E06               	movlw	6
 37185  004CB4  6F7C               	movwf	_build_time$5923& (0+255),b
 37186  004CB6                     l16826:
 37187                           
 37188                           ; BSR set to: 0
 37189  004CB6  C07C  F07A         	movff	_build_time$5923,_build_time$5922
 37190  004CBA  C07D  F07B         	movff	_build_time$5923+1,_build_time$5922+1
 37191  004CBE  EF65  F026         	goto	l16830
 37192  004CC2                     l16828:
 37193                           
 37194                           ; BSR set to: 0
 37195  004CC2  0E00               	movlw	0
 37196  004CC4  6F7B               	movwf	(_build_time$5922+1)& (0+255),b
 37197  004CC6  0E05               	movlw	5
 37198  004CC8  6F7A               	movwf	_build_time$5922& (0+255),b
 37199  004CCA                     l16830:
 37200                           
 37201                           ; BSR set to: 0
 37202  004CCA  C07A  F078         	movff	_build_time$5922,_build_time$5921
 37203  004CCE  C07B  F079         	movff	_build_time$5922+1,_build_time$5921+1
 37204  004CD2  EF6F  F026         	goto	l16834
 37205  004CD6                     l16832:
 37206                           
 37207                           ; BSR set to: 0
 37208  004CD6  0E00               	movlw	0
 37209  004CD8  6F79               	movwf	(_build_time$5921+1)& (0+255),b
 37210  004CDA  0E04               	movlw	4
 37211  004CDC  6F78               	movwf	_build_time$5921& (0+255),b
 37212  004CDE                     l16834:
 37213                           
 37214                           ; BSR set to: 0
 37215  004CDE  C078  F076         	movff	_build_time$5921,_build_time$5920
 37216  004CE2  C079  F077         	movff	_build_time$5921+1,_build_time$5920+1
 37217  004CE6  EF79  F026         	goto	l16838
 37218  004CEA                     l16836:
 37219                           
 37220                           ; BSR set to: 0
 37221  004CEA  0E00               	movlw	0
 37222  004CEC  6F77               	movwf	(_build_time$5920+1)& (0+255),b
 37223  004CEE  0E03               	movlw	3
 37224  004CF0  6F76               	movwf	_build_time$5920& (0+255),b
 37225  004CF2                     l16838:
 37226                           
 37227                           ; BSR set to: 0
 37228  004CF2  C076  F074         	movff	_build_time$5920,_build_time$5919
 37229  004CF6  C077  F075         	movff	_build_time$5920+1,_build_time$5919+1
 37230  004CFA  EF83  F026         	goto	l16842
 37231  004CFE                     l16840:
 37232                           
 37233                           ; BSR set to: 0
 37234  004CFE  0E00               	movlw	0
 37235  004D00  6F75               	movwf	(_build_time$5919+1)& (0+255),b
 37236  004D02  0E02               	movlw	2
 37237  004D04  6F74               	movwf	_build_time$5919& (0+255),b
 37238  004D06                     l16842:
 37239                           
 37240                           ; BSR set to: 0
 37241  004D06  C074  F072         	movff	_build_time$5919,_build_time$5918
 37242  004D0A  C075  F073         	movff	_build_time$5919+1,_build_time$5918+1
 37243  004D0E  EF8D  F026         	goto	l16846
 37244  004D12                     l16844:
 37245                           
 37246                           ; BSR set to: 0
 37247  004D12  0E00               	movlw	0
 37248  004D14  6F73               	movwf	(_build_time$5918+1)& (0+255),b
 37249  004D16  0E01               	movlw	1
 37250  004D18  6F72               	movwf	_build_time$5918& (0+255),b
 37251  004D1A                     l16846:
 37252                           
 37253                           ; BSR set to: 0
 37254  004D1A  C072  F070         	movff	_build_time$5918,_build_time$5917
 37255  004D1E  C073  F071         	movff	_build_time$5918+1,_build_time$5917+1
 37256  004D22  EF97  F026         	goto	l16850
 37257  004D26                     l16848:
 37258                           
 37259                           ; BSR set to: 0
 37260  004D26  0E00               	movlw	0
 37261  004D28  6F71               	movwf	(_build_time$5917+1)& (0+255),b
 37262  004D2A  0E63               	movlw	99
 37263  004D2C  6F70               	movwf	_build_time$5917& (0+255),b
 37264  004D2E                     l16850:
 37265                           
 37266                           ; BSR set to: 0
 37267  004D2E  0EFF               	movlw	255
 37268  004D30  2570               	addwf	_build_time$5917& (0+255),w,b
 37269  004D32  6F9C               	movwf	(build_time@tm+8)& (0+255),b
 37270  004D34  0EFF               	movlw	255
 37271  004D36  2171               	addwfc	(_build_time$5917+1)& (0+255),w,b
 37272  004D38  6F9D               	movwf	(build_time@tm+9)& (0+255),b
 37273  004D3A                     
 37274                           ; BSR set to: 0
 37275                           ;build_time.c: 11: tm.tm_mday = ((("Feb 02 2023"[0] == '?')) ? 99 : ( (("Feb 02 2023"[4]
      +                           >= '0') ? ("Feb 02 2023"[4] - '0') * 10 : 0) + ("Feb 02 2023"[5] - '0') ));
 37276  004D3A  0E58               	movlw	low STR_14
 37277  004D3C  6EF6               	movwf	tblptrl,c
 37278  004D3E                     	if	1	;There is more than 1 active tblptr byte
 37279  004D3E  0E23               	movlw	high STR_14
 37280  004D40  6EF7               	movwf	tblptrh,c
 37281  004D42                     	endif
 37282  004D42                     	if	0	;There are less than 3 active tblptr bytes
 37283  004D42                     	endif
 37284  004D42  0008               	tblrd		*
 37285  004D44  50F5               	movf	tablat,w,c
 37286  004D46  0A3F               	xorlw	63
 37287  004D48  B4D8               	btfsc	status,2,c
 37288  004D4A  EFA9  F026         	goto	u18121
 37289  004D4E  EFAB  F026         	goto	u18120
 37290  004D52                     u18121:
 37291  004D52  EFE9  F026         	goto	l16862
 37292  004D56                     u18120:
 37293  004D56                     
 37294                           ; BSR set to: 0
 37295  004D56  0E5C               	movlw	low (STR_14+4)
 37296  004D58  6EF6               	movwf	tblptrl,c
 37297  004D5A  0E23               	movlw	high (STR_14+4)
 37298  004D5C  6EF7               	movwf	tblptrh,c
 37299  004D5E                     	if	0	;tblptru may be non-zero
 37300  004D5E                     	endif
 37301  004D5E                     	if	0	;tblptru may be non-zero
 37302  004D5E                     	endif
 37303  004D5E  0E30               	movlw	48
 37304  004D60  0008               	tblrd		*
 37305  004D62  60F5               	cpfslt	tablat,c
 37306  004D64  EFB6  F026         	goto	u18131
 37307  004D68  EFB8  F026         	goto	u18130
 37308  004D6C                     u18131:
 37309  004D6C  EFBE  F026         	goto	l16858
 37310  004D70                     u18130:
 37311  004D70                     
 37312                           ; BSR set to: 0
 37313  004D70  0E00               	movlw	0
 37314  004D72  6F8D               	movwf	(_build_time$5935+1)& (0+255),b
 37315  004D74  0E00               	movlw	0
 37316  004D76  6F8C               	movwf	_build_time$5935& (0+255),b
 37317  004D78  EFD5  F026         	goto	l16860
 37318  004D7C                     l16858:
 37319                           
 37320                           ; BSR set to: 0
 37321  004D7C  0E5C               	movlw	low (STR_14+4)
 37322  004D7E  6EF6               	movwf	tblptrl,c
 37323  004D80  0E23               	movlw	high (STR_14+4)
 37324  004D82  6EF7               	movwf	tblptrh,c
 37325  004D84                     	if	0	;tblptru may be non-zero
 37326  004D84                     	endif
 37327  004D84                     	if	0	;tblptru may be non-zero
 37328  004D84                     	endif
 37329  004D84  0008               	tblrd		*
 37330  004D86  CFF5 F068          	movff	tablat,??_build_time
 37331  004D8A  0ED0               	movlw	208
 37332  004D8C  2568               	addwf	??_build_time& (0+255),w,b
 37333  004D8E  6E0F               	movwf	___wmul@multiplier^0,c
 37334  004D90  6A10               	clrf	(___wmul@multiplier+1)^0,c
 37335  004D92  0EFF               	movlw	255
 37336  004D94  2210               	addwfc	(___wmul@multiplier+1)^0,f,c
 37337  004D96  0E00               	movlw	0
 37338  004D98  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 37339  004D9A  0E0A               	movlw	10
 37340  004D9C  6E11               	movwf	___wmul@multiplicand^0,c
 37341  004D9E  EC50  F077         	call	___wmul	;wreg free
 37342  004DA2  C00F  F08C         	movff	?___wmul,_build_time$5935
 37343  004DA6  C010  F08D         	movff	?___wmul+1,_build_time$5935+1
 37344  004DAA                     l16860:
 37345  004DAA  0E5D               	movlw	low (STR_14+5)
 37346  004DAC  6EF6               	movwf	tblptrl,c
 37347  004DAE  0E23               	movlw	high (STR_14+5)
 37348  004DB0  6EF7               	movwf	tblptrh,c
 37349  004DB2                     	if	0	;tblptru may be non-zero
 37350  004DB2                     	endif
 37351  004DB2                     	if	0	;tblptru may be non-zero
 37352  004DB2                     	endif
 37353  004DB2  0008               	tblrd		*
 37354  004DB4  50F5               	movf	tablat,w,c
 37355  004DB6  0100               	movlb	0	; () banked
 37356  004DB8  258C               	addwf	_build_time$5935& (0+255),w,b
 37357  004DBA  6F68               	movwf	??_build_time& (0+255),b
 37358  004DBC  0E00               	movlw	0
 37359  004DBE  218D               	addwfc	(_build_time$5935+1)& (0+255),w,b
 37360  004DC0  6F69               	movwf	(??_build_time+1)& (0+255),b
 37361  004DC2  0ED0               	movlw	208
 37362  004DC4  2568               	addwf	??_build_time& (0+255),w,b
 37363  004DC6  6F8A               	movwf	_build_time$5934& (0+255),b
 37364  004DC8  0EFF               	movlw	255
 37365  004DCA  2169               	addwfc	(??_build_time+1)& (0+255),w,b
 37366  004DCC  6F8B               	movwf	(_build_time$5934+1)& (0+255),b
 37367  004DCE  EFED  F026         	goto	l16864
 37368  004DD2                     l16862:
 37369                           
 37370                           ; BSR set to: 0
 37371  004DD2  0E00               	movlw	0
 37372  004DD4  6F8B               	movwf	(_build_time$5934+1)& (0+255),b
 37373  004DD6  0E63               	movlw	99
 37374  004DD8  6F8A               	movwf	_build_time$5934& (0+255),b
 37375  004DDA                     l16864:
 37376                           
 37377                           ; BSR set to: 0
 37378  004DDA  C08A  F09A         	movff	_build_time$5934,build_time@tm+6
 37379  004DDE  C08B  F09B         	movff	_build_time$5934+1,build_time@tm+7
 37380  004DE2                     
 37381                           ; BSR set to: 0
 37382                           ;build_time.c: 12: tm.tm_hour = ((("10:03:47"[0] == '?')) ? 99 : (("10:03:47"[0] - '0') 
      +                          * 10 + "10:03:47"[1] - '0')) - 9;
 37383  004DE2  0E6E               	movlw	low STR_48
 37384  004DE4  6EF6               	movwf	tblptrl,c
 37385  004DE6                     	if	1	;There is more than 1 active tblptr byte
 37386  004DE6  0E23               	movlw	high STR_48
 37387  004DE8  6EF7               	movwf	tblptrh,c
 37388  004DEA                     	endif
 37389  004DEA                     	if	0	;There are less than 3 active tblptr bytes
 37390  004DEA                     	endif
 37391  004DEA  0008               	tblrd		*
 37392  004DEC  50F5               	movf	tablat,w,c
 37393  004DEE  0A3F               	xorlw	63
 37394  004DF0  B4D8               	btfsc	status,2,c
 37395  004DF2  EFFD  F026         	goto	u18141
 37396  004DF6  EFFF  F026         	goto	u18140
 37397  004DFA                     u18141:
 37398  004DFA  EF1B  F027         	goto	l16870
 37399  004DFE                     u18140:
 37400  004DFE                     
 37401                           ; BSR set to: 0
 37402  004DFE  0E6E               	movlw	low STR_48
 37403  004E00  6EF6               	movwf	tblptrl,c
 37404  004E02                     	if	1	;There is more than 1 active tblptr byte
 37405  004E02  0E23               	movlw	high STR_48
 37406  004E04  6EF7               	movwf	tblptrh,c
 37407  004E06                     	endif
 37408  004E06                     	if	0	;There are less than 3 active tblptr bytes
 37409  004E06                     	endif
 37410  004E06  0008               	tblrd		*
 37411  004E08  50F5               	movf	tablat,w,c
 37412  004E0A  0D0A               	mullw	10
 37413  004E0C  CFF3 F068          	movff	prodl,??_build_time
 37414  004E10  CFF4 F069          	movff	prodh,??_build_time+1
 37415  004E14  0E6F               	movlw	low (STR_48+1)
 37416  004E16  6EF6               	movwf	tblptrl,c
 37417  004E18  0E23               	movlw	high (STR_48+1)
 37418  004E1A  6EF7               	movwf	tblptrh,c
 37419  004E1C                     	if	0	;tblptru may be non-zero
 37420  004E1C                     	endif
 37421  004E1C                     	if	0	;tblptru may be non-zero
 37422  004E1C                     	endif
 37423  004E1C  0008               	tblrd		*
 37424  004E1E  50F5               	movf	tablat,w,c
 37425  004E20  2768               	addwf	??_build_time& (0+255),f,b
 37426  004E22  0E00               	movlw	0
 37427  004E24  2369               	addwfc	(??_build_time+1)& (0+255),f,b
 37428  004E26  0EF0               	movlw	240
 37429  004E28  2568               	addwf	??_build_time& (0+255),w,b
 37430  004E2A  6F8E               	movwf	_build_time$5939& (0+255),b
 37431  004E2C  0EFD               	movlw	253
 37432  004E2E  2169               	addwfc	(??_build_time+1)& (0+255),w,b
 37433  004E30  6F8F               	movwf	(_build_time$5939+1)& (0+255),b
 37434  004E32  EF1F  F027         	goto	l16872
 37435  004E36                     l16870:
 37436                           
 37437                           ; BSR set to: 0
 37438  004E36  0E00               	movlw	0
 37439  004E38  6F8F               	movwf	(_build_time$5939+1)& (0+255),b
 37440  004E3A  0E63               	movlw	99
 37441  004E3C  6F8E               	movwf	_build_time$5939& (0+255),b
 37442  004E3E                     l16872:
 37443                           
 37444                           ; BSR set to: 0
 37445  004E3E  0EF7               	movlw	247
 37446  004E40  258E               	addwf	_build_time$5939& (0+255),w,b
 37447  004E42  6F98               	movwf	(build_time@tm+4)& (0+255),b
 37448  004E44  0EFF               	movlw	255
 37449  004E46  218F               	addwfc	(_build_time$5939+1)& (0+255),w,b
 37450  004E48  6F99               	movwf	(build_time@tm+5)& (0+255),b
 37451  004E4A                     
 37452                           ; BSR set to: 0
 37453                           ;build_time.c: 13: tm.tm_min = ((("10:03:47"[0] == '?')) ? 99 : (("10:03:47"[3] - '0') *
      +                           10 + "10:03:47"[4] - '0'));
 37454  004E4A  0E6E               	movlw	low STR_48
 37455  004E4C  6EF6               	movwf	tblptrl,c
 37456  004E4E                     	if	1	;There is more than 1 active tblptr byte
 37457  004E4E  0E23               	movlw	high STR_48
 37458  004E50  6EF7               	movwf	tblptrh,c
 37459  004E52                     	endif
 37460  004E52                     	if	0	;There are less than 3 active tblptr bytes
 37461  004E52                     	endif
 37462  004E52  0008               	tblrd		*
 37463  004E54  50F5               	movf	tablat,w,c
 37464  004E56  0A3F               	xorlw	63
 37465  004E58  B4D8               	btfsc	status,2,c
 37466  004E5A  EF31  F027         	goto	u18151
 37467  004E5E  EF33  F027         	goto	u18150
 37468  004E62                     u18151:
 37469  004E62  EF4F  F027         	goto	l16878
 37470  004E66                     u18150:
 37471  004E66                     
 37472                           ; BSR set to: 0
 37473  004E66  0E71               	movlw	low (STR_48+3)
 37474  004E68  6EF6               	movwf	tblptrl,c
 37475  004E6A  0E23               	movlw	high (STR_48+3)
 37476  004E6C  6EF7               	movwf	tblptrh,c
 37477  004E6E                     	if	0	;tblptru may be non-zero
 37478  004E6E                     	endif
 37479  004E6E                     	if	0	;tblptru may be non-zero
 37480  004E6E                     	endif
 37481  004E6E  0008               	tblrd		*
 37482  004E70  50F5               	movf	tablat,w,c
 37483  004E72  0D0A               	mullw	10
 37484  004E74  CFF3 F068          	movff	prodl,??_build_time
 37485  004E78  CFF4 F069          	movff	prodh,??_build_time+1
 37486  004E7C  0E72               	movlw	low (STR_48+4)
 37487  004E7E  6EF6               	movwf	tblptrl,c
 37488  004E80  0E23               	movlw	high (STR_48+4)
 37489  004E82  6EF7               	movwf	tblptrh,c
 37490  004E84                     	if	0	;tblptru may be non-zero
 37491  004E84                     	endif
 37492  004E84                     	if	0	;tblptru may be non-zero
 37493  004E84                     	endif
 37494  004E84  0008               	tblrd		*
 37495  004E86  50F5               	movf	tablat,w,c
 37496  004E88  2768               	addwf	??_build_time& (0+255),f,b
 37497  004E8A  0E00               	movlw	0
 37498  004E8C  2369               	addwfc	(??_build_time+1)& (0+255),f,b
 37499  004E8E  0EF0               	movlw	240
 37500  004E90  2568               	addwf	??_build_time& (0+255),w,b
 37501  004E92  6F90               	movwf	_build_time$5943& (0+255),b
 37502  004E94  0EFD               	movlw	253
 37503  004E96  2169               	addwfc	(??_build_time+1)& (0+255),w,b
 37504  004E98  6F91               	movwf	(_build_time$5943+1)& (0+255),b
 37505  004E9A  EF53  F027         	goto	l16880
 37506  004E9E                     l16878:
 37507                           
 37508                           ; BSR set to: 0
 37509  004E9E  0E00               	movlw	0
 37510  004EA0  6F91               	movwf	(_build_time$5943+1)& (0+255),b
 37511  004EA2  0E63               	movlw	99
 37512  004EA4  6F90               	movwf	_build_time$5943& (0+255),b
 37513  004EA6                     l16880:
 37514                           
 37515                           ; BSR set to: 0
 37516  004EA6  C090  F096         	movff	_build_time$5943,build_time@tm+2
 37517  004EAA  C091  F097         	movff	_build_time$5943+1,build_time@tm+3
 37518  004EAE                     
 37519                           ; BSR set to: 0
 37520                           ;build_time.c: 14: tm.tm_sec = ((("10:03:47"[0] == '?')) ? 99 : (("10:03:47"[6] - '0') *
      +                           10 + "10:03:47"[7] - '0'));
 37521  004EAE  0E6E               	movlw	low STR_48
 37522  004EB0  6EF6               	movwf	tblptrl,c
 37523  004EB2                     	if	1	;There is more than 1 active tblptr byte
 37524  004EB2  0E23               	movlw	high STR_48
 37525  004EB4  6EF7               	movwf	tblptrh,c
 37526  004EB6                     	endif
 37527  004EB6                     	if	0	;There are less than 3 active tblptr bytes
 37528  004EB6                     	endif
 37529  004EB6  0008               	tblrd		*
 37530  004EB8  50F5               	movf	tablat,w,c
 37531  004EBA  0A3F               	xorlw	63
 37532  004EBC  B4D8               	btfsc	status,2,c
 37533  004EBE  EF63  F027         	goto	u18161
 37534  004EC2  EF65  F027         	goto	u18160
 37535  004EC6                     u18161:
 37536  004EC6  EF81  F027         	goto	l16886
 37537  004ECA                     u18160:
 37538  004ECA                     
 37539                           ; BSR set to: 0
 37540  004ECA  0E74               	movlw	low (STR_48+6)
 37541  004ECC  6EF6               	movwf	tblptrl,c
 37542  004ECE  0E23               	movlw	high (STR_48+6)
 37543  004ED0  6EF7               	movwf	tblptrh,c
 37544  004ED2                     	if	0	;tblptru may be non-zero
 37545  004ED2                     	endif
 37546  004ED2                     	if	0	;tblptru may be non-zero
 37547  004ED2                     	endif
 37548  004ED2  0008               	tblrd		*
 37549  004ED4  50F5               	movf	tablat,w,c
 37550  004ED6  0D0A               	mullw	10
 37551  004ED8  CFF3 F068          	movff	prodl,??_build_time
 37552  004EDC  CFF4 F069          	movff	prodh,??_build_time+1
 37553  004EE0  0E75               	movlw	low (STR_48+7)
 37554  004EE2  6EF6               	movwf	tblptrl,c
 37555  004EE4  0E23               	movlw	high (STR_48+7)
 37556  004EE6  6EF7               	movwf	tblptrh,c
 37557  004EE8                     	if	0	;tblptru may be non-zero
 37558  004EE8                     	endif
 37559  004EE8                     	if	0	;tblptru may be non-zero
 37560  004EE8                     	endif
 37561  004EE8  0008               	tblrd		*
 37562  004EEA  50F5               	movf	tablat,w,c
 37563  004EEC  2768               	addwf	??_build_time& (0+255),f,b
 37564  004EEE  0E00               	movlw	0
 37565  004EF0  2369               	addwfc	(??_build_time+1)& (0+255),f,b
 37566  004EF2  0EF0               	movlw	240
 37567  004EF4  2568               	addwf	??_build_time& (0+255),w,b
 37568  004EF6  6F92               	movwf	_build_time$5947& (0+255),b
 37569  004EF8  0EFD               	movlw	253
 37570  004EFA  2169               	addwfc	(??_build_time+1)& (0+255),w,b
 37571  004EFC  6F93               	movwf	(_build_time$5947+1)& (0+255),b
 37572  004EFE  EF85  F027         	goto	l16888
 37573  004F02                     l16886:
 37574                           
 37575                           ; BSR set to: 0
 37576  004F02  0E00               	movlw	0
 37577  004F04  6F93               	movwf	(_build_time$5947+1)& (0+255),b
 37578  004F06  0E63               	movlw	99
 37579  004F08  6F92               	movwf	_build_time$5947& (0+255),b
 37580  004F0A                     l16888:
 37581                           
 37582                           ; BSR set to: 0
 37583  004F0A  C092  F094         	movff	_build_time$5947,build_time@tm
 37584  004F0E  C093  F095         	movff	_build_time$5947+1,build_time@tm+1
 37585  004F12                     
 37586                           ; BSR set to: 0
 37587                           ;build_time.c: 15: timestamp = mktime(&tm);
 37588  004F12  0E94               	movlw	low build_time@tm
 37589  004F14  6E36               	movwf	mktime@timeptr^0,c
 37590  004F16  0E00               	movlw	high build_time@tm
 37591  004F18  6E37               	movwf	(mktime@timeptr+1)^0,c
 37592  004F1A  EC12  F045         	call	_mktime	;wreg free
 37593  004F1E  C036  F06A         	movff	?_mktime,build_time@timestamp
 37594  004F22  C037  F06B         	movff	?_mktime+1,build_time@timestamp+1
 37595  004F26  C038  F06C         	movff	?_mktime+2,build_time@timestamp+2
 37596  004F2A  C039  F06D         	movff	?_mktime+3,build_time@timestamp+3
 37597  004F2E                     
 37598                           ;build_time.c: 17: return timestamp;
 37599  004F2E  C06A  F064         	movff	build_time@timestamp,?_build_time
 37600  004F32  C06B  F065         	movff	build_time@timestamp+1,?_build_time+1
 37601  004F36  C06C  F066         	movff	build_time@timestamp+2,?_build_time+2
 37602  004F3A  C06D  F067         	movff	build_time@timestamp+3,?_build_time+3
 37603  004F3E  0012               	return		;funcret
 37604  004F40                     __end_of_build_time:
 37605                           	callstack 0
 37606                           
 37607 ;; *************** function _mktime *****************
 37608 ;; Defined at:
 37609 ;;		line 52 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 37610 ;; Parameters:    Size  Location     Type
 37611 ;;  timeptr         2   53[COMRAM] PTR struct tm
 37612 ;;		 -> build_time@tm(18), 
 37613 ;; Auto vars:     Size  Location     Type
 37614 ;;  tt              4    0[BANK0 ] long 
 37615 ;; Return value:  Size  Location     Type
 37616 ;;                  4   53[COMRAM] long 
 37617 ;; Registers used:
 37618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37619 ;; Tracked objects:
 37620 ;;		On entry : 0/0
 37621 ;;		On exit  : 0/0
 37622 ;;		Unchanged: 0/0
 37623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37625 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37626 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37627 ;;      Totals:        10       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37628 ;;Total ram usage:       14 bytes
 37629 ;; Hardware stack levels used: 1
 37630 ;; Hardware stack levels required when called: 6
 37631 ;; This function calls:
 37632 ;;		___lmul
 37633 ;;		_ymd_to_scalar
 37634 ;; This function is called by:
 37635 ;;		_build_time
 37636 ;; This function uses a non-reentrant model
 37637 ;;
 37638                           
 37639                           	psect	text174
 37640  008A24                     __ptext174:
 37641                           	callstack 0
 37642  008A24                     _mktime:
 37643                           	callstack 18
 37644  008A24  EE20 F00A          	lfsr	2,10
 37645  008A28  5036               	movf	mktime@timeptr^0,w,c
 37646  008A2A  26D9               	addwf	fsr2l,f,c
 37647  008A2C  5037               	movf	(mktime@timeptr+1)^0,w,c
 37648  008A2E  22DA               	addwfc	fsr2h,f,c
 37649  008A30  0E01               	movlw	1
 37650  008A32  BEDB               	btfsc	plusw2,7,c
 37651  008A34  EF26  F045         	goto	u16951
 37652  008A38  0E01               	movlw	1
 37653  008A3A  50DB               	movf	plusw2,w,c
 37654  008A3C  E109               	bnz	u16950
 37655  008A3E  0E46               	movlw	70
 37656  008A40  5CDE               	subwf	postinc2,w,c
 37657  008A42  A0D8               	btfss	status,0,c
 37658  008A44  EF26  F045         	goto	u16951
 37659  008A48  EF28  F045         	goto	u16950
 37660  008A4C                     u16951:
 37661  008A4C  EF3E  F045         	goto	l3300
 37662  008A50                     u16950:
 37663  008A50  EE20 F00A          	lfsr	2,10
 37664  008A54  5036               	movf	mktime@timeptr^0,w,c
 37665  008A56  26D9               	addwf	fsr2l,f,c
 37666  008A58  5037               	movf	(mktime@timeptr+1)^0,w,c
 37667  008A5A  22DA               	addwfc	fsr2h,f,c
 37668  008A5C  0E01               	movlw	1
 37669  008A5E  BEDB               	btfsc	plusw2,7,c
 37670  008A60  EF3C  F045         	goto	u16961
 37671  008A64  0E01               	movlw	1
 37672  008A66  50DB               	movf	plusw2,w,c
 37673  008A68  E109               	bnz	u16960
 37674  008A6A  0E8B               	movlw	139
 37675  008A6C  5CDE               	subwf	postinc2,w,c
 37676  008A6E  A0D8               	btfss	status,0,c
 37677  008A70  EF3C  F045         	goto	u16961
 37678  008A74  EF3E  F045         	goto	u16960
 37679  008A78                     u16961:
 37680  008A78  EF45  F045         	goto	l16206
 37681  008A7C                     u16960:
 37682  008A7C                     l3300:
 37683  008A7C  0100               	movlb	0	; () banked
 37684  008A7E  6960               	setf	mktime@tt& (0+255),b
 37685  008A80  6961               	setf	(mktime@tt+1)& (0+255),b
 37686  008A82  6962               	setf	(mktime@tt+2)& (0+255),b
 37687  008A84  6963               	setf	(mktime@tt+3)& (0+255),b
 37688  008A86  EF24  F046         	goto	l16216
 37689  008A8A                     l16206:
 37690  008A8A  EE20 F00A          	lfsr	2,10
 37691  008A8E  5036               	movf	mktime@timeptr^0,w,c
 37692  008A90  26D9               	addwf	fsr2l,f,c
 37693  008A92  5037               	movf	(mktime@timeptr+1)^0,w,c
 37694  008A94  22DA               	addwfc	fsr2h,f,c
 37695  008A96  CFDE F03A          	movff	postinc2,??_mktime
 37696  008A9A  CFDD F03B          	movff	postdec2,??_mktime+1
 37697  008A9E  0E6C               	movlw	108
 37698  008AA0  243A               	addwf	??_mktime^0,w,c
 37699  008AA2  6E26               	movwf	ymd_to_scalar@yr^0,c
 37700  008AA4  0E07               	movlw	7
 37701  008AA6  203B               	addwfc	(??_mktime+1)^0,w,c
 37702  008AA8  6E27               	movwf	(ymd_to_scalar@yr+1)^0,c
 37703  008AAA  EE20 F008          	lfsr	2,8
 37704  008AAE  5036               	movf	mktime@timeptr^0,w,c
 37705  008AB0  26D9               	addwf	fsr2l,f,c
 37706  008AB2  5037               	movf	(mktime@timeptr+1)^0,w,c
 37707  008AB4  22DA               	addwfc	fsr2h,f,c
 37708  008AB6  CFDE F03C          	movff	postinc2,??_mktime+2
 37709  008ABA  CFDD F03D          	movff	postdec2,??_mktime+3
 37710  008ABE  0E01               	movlw	1
 37711  008AC0  243C               	addwf	(??_mktime+2)^0,w,c
 37712  008AC2  6E28               	movwf	ymd_to_scalar@mo^0,c
 37713  008AC4  0E00               	movlw	0
 37714  008AC6  203D               	addwfc	(??_mktime+3)^0,w,c
 37715  008AC8  6E29               	movwf	(ymd_to_scalar@mo+1)^0,c
 37716  008ACA  EE20 F006          	lfsr	2,6
 37717  008ACE  5036               	movf	mktime@timeptr^0,w,c
 37718  008AD0  26D9               	addwf	fsr2l,f,c
 37719  008AD2  5037               	movf	(mktime@timeptr+1)^0,w,c
 37720  008AD4  22DA               	addwfc	fsr2h,f,c
 37721  008AD6  CFDE F02A          	movff	postinc2,ymd_to_scalar@day
 37722  008ADA  CFDD F02B          	movff	postdec2,ymd_to_scalar@day+1
 37723  008ADE  ECB6  F063         	call	_ymd_to_scalar	;wreg free
 37724  008AE2  C026  F060         	movff	?_ymd_to_scalar,mktime@tt
 37725  008AE6  C027  F061         	movff	?_ymd_to_scalar+1,mktime@tt+1
 37726  008AEA  C028  F062         	movff	?_ymd_to_scalar+2,mktime@tt+2
 37727  008AEE  C029  F063         	movff	?_ymd_to_scalar+3,mktime@tt+3
 37728  008AF2  0E07               	movlw	7
 37729  008AF4  6E27               	movwf	(ymd_to_scalar@yr+1)^0,c
 37730  008AF6  0EB2               	movlw	178
 37731  008AF8  6E26               	movwf	ymd_to_scalar@yr^0,c
 37732  008AFA  0E00               	movlw	0
 37733  008AFC  6E29               	movwf	(ymd_to_scalar@mo+1)^0,c
 37734  008AFE  0E01               	movlw	1
 37735  008B00  6E28               	movwf	ymd_to_scalar@mo^0,c
 37736  008B02  0E00               	movlw	0
 37737  008B04  6E2B               	movwf	(ymd_to_scalar@day+1)^0,c
 37738  008B06  0E01               	movlw	1
 37739  008B08  6E2A               	movwf	ymd_to_scalar@day^0,c
 37740  008B0A  ECB6  F063         	call	_ymd_to_scalar	;wreg free
 37741  008B0E  5026               	movf	?_ymd_to_scalar^0,w,c
 37742  008B10  0100               	movlb	0	; () banked
 37743  008B12  5F60               	subwf	mktime@tt& (0+255),f,b
 37744  008B14  5027               	movf	(?_ymd_to_scalar+1)^0,w,c
 37745  008B16  5B61               	subwfb	(mktime@tt+1)& (0+255),f,b
 37746  008B18  5028               	movf	(?_ymd_to_scalar+2)^0,w,c
 37747  008B1A  5B62               	subwfb	(mktime@tt+2)& (0+255),f,b
 37748  008B1C  5029               	movf	(?_ymd_to_scalar+3)^0,w,c
 37749  008B1E  5B63               	subwfb	(mktime@tt+3)& (0+255),f,b
 37750  008B20                     
 37751                           ; BSR set to: 0
 37752  008B20  EE20 F004          	lfsr	2,4
 37753  008B24  5036               	movf	mktime@timeptr^0,w,c
 37754  008B26  26D9               	addwf	fsr2l,f,c
 37755  008B28  5037               	movf	(mktime@timeptr+1)^0,w,c
 37756  008B2A  22DA               	addwfc	fsr2h,f,c
 37757  008B2C  CFDE F03A          	movff	postinc2,??_mktime
 37758  008B30  CFDD F03B          	movff	postdec2,??_mktime+1
 37759  008B34  C03A  F03C         	movff	??_mktime,??_mktime+2
 37760  008B38  C03B  F03D         	movff	??_mktime+1,??_mktime+3
 37761  008B3C  0E00               	movlw	0
 37762  008B3E  BE3D               	btfsc	(??_mktime+3)^0,7,c
 37763  008B40  0EFF               	movlw	255
 37764  008B42  6E3E               	movwf	(??_mktime+4)^0,c
 37765  008B44  6E3F               	movwf	(??_mktime+5)^0,c
 37766  008B46  C060  F00F         	movff	mktime@tt,___lmul@multiplier
 37767  008B4A  C061  F010         	movff	mktime@tt+1,___lmul@multiplier+1
 37768  008B4E  C062  F011         	movff	mktime@tt+2,___lmul@multiplier+2
 37769  008B52  C063  F012         	movff	mktime@tt+3,___lmul@multiplier+3
 37770  008B56  0E18               	movlw	24
 37771  008B58  6E13               	movwf	___lmul@multiplicand^0,c
 37772  008B5A  0E00               	movlw	0
 37773  008B5C  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 37774  008B5E  0E00               	movlw	0
 37775  008B60  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 37776  008B62  0E00               	movlw	0
 37777  008B64  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 37778  008B66  ECE0  F06E         	call	___lmul	;wreg free
 37779  008B6A  503C               	movf	(??_mktime+2)^0,w,c
 37780  008B6C  240F               	addwf	?___lmul^0,w,c
 37781  008B6E  0100               	movlb	0	; () banked
 37782  008B70  6F60               	movwf	mktime@tt& (0+255),b
 37783  008B72  503D               	movf	(??_mktime+3)^0,w,c
 37784  008B74  2010               	addwfc	(?___lmul+1)^0,w,c
 37785  008B76  6F61               	movwf	(mktime@tt+1)& (0+255),b
 37786  008B78  503E               	movf	(??_mktime+4)^0,w,c
 37787  008B7A  2011               	addwfc	(?___lmul+2)^0,w,c
 37788  008B7C  6F62               	movwf	(mktime@tt+2)& (0+255),b
 37789  008B7E  503F               	movf	(??_mktime+5)^0,w,c
 37790  008B80  2012               	addwfc	(?___lmul+3)^0,w,c
 37791  008B82  6F63               	movwf	(mktime@tt+3)& (0+255),b
 37792  008B84                     
 37793                           ; BSR set to: 0
 37794  008B84  EE20 F002          	lfsr	2,2
 37795  008B88  5036               	movf	mktime@timeptr^0,w,c
 37796  008B8A  26D9               	addwf	fsr2l,f,c
 37797  008B8C  5037               	movf	(mktime@timeptr+1)^0,w,c
 37798  008B8E  22DA               	addwfc	fsr2h,f,c
 37799  008B90  CFDE F03A          	movff	postinc2,??_mktime
 37800  008B94  CFDD F03B          	movff	postdec2,??_mktime+1
 37801  008B98  C03A  F03C         	movff	??_mktime,??_mktime+2
 37802  008B9C  C03B  F03D         	movff	??_mktime+1,??_mktime+3
 37803  008BA0  0E00               	movlw	0
 37804  008BA2  BE3D               	btfsc	(??_mktime+3)^0,7,c
 37805  008BA4  0EFF               	movlw	255
 37806  008BA6  6E3E               	movwf	(??_mktime+4)^0,c
 37807  008BA8  6E3F               	movwf	(??_mktime+5)^0,c
 37808  008BAA  C060  F00F         	movff	mktime@tt,___lmul@multiplier
 37809  008BAE  C061  F010         	movff	mktime@tt+1,___lmul@multiplier+1
 37810  008BB2  C062  F011         	movff	mktime@tt+2,___lmul@multiplier+2
 37811  008BB6  C063  F012         	movff	mktime@tt+3,___lmul@multiplier+3
 37812  008BBA  0E3C               	movlw	60
 37813  008BBC  6E13               	movwf	___lmul@multiplicand^0,c
 37814  008BBE  0E00               	movlw	0
 37815  008BC0  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 37816  008BC2  0E00               	movlw	0
 37817  008BC4  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 37818  008BC6  0E00               	movlw	0
 37819  008BC8  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 37820  008BCA  ECE0  F06E         	call	___lmul	;wreg free
 37821  008BCE  503C               	movf	(??_mktime+2)^0,w,c
 37822  008BD0  240F               	addwf	?___lmul^0,w,c
 37823  008BD2  0100               	movlb	0	; () banked
 37824  008BD4  6F60               	movwf	mktime@tt& (0+255),b
 37825  008BD6  503D               	movf	(??_mktime+3)^0,w,c
 37826  008BD8  2010               	addwfc	(?___lmul+1)^0,w,c
 37827  008BDA  6F61               	movwf	(mktime@tt+1)& (0+255),b
 37828  008BDC  503E               	movf	(??_mktime+4)^0,w,c
 37829  008BDE  2011               	addwfc	(?___lmul+2)^0,w,c
 37830  008BE0  6F62               	movwf	(mktime@tt+2)& (0+255),b
 37831  008BE2  503F               	movf	(??_mktime+5)^0,w,c
 37832  008BE4  2012               	addwfc	(?___lmul+3)^0,w,c
 37833  008BE6  6F63               	movwf	(mktime@tt+3)& (0+255),b
 37834  008BE8                     
 37835                           ; BSR set to: 0
 37836  008BE8  C036  FFD9         	movff	mktime@timeptr,fsr2l
 37837  008BEC  C037  FFDA         	movff	mktime@timeptr+1,fsr2h
 37838  008BF0  CFDE F03A          	movff	postinc2,??_mktime
 37839  008BF4  CFDD F03B          	movff	postdec2,??_mktime+1
 37840  008BF8  C03A  F03C         	movff	??_mktime,??_mktime+2
 37841  008BFC  C03B  F03D         	movff	??_mktime+1,??_mktime+3
 37842  008C00  0E00               	movlw	0
 37843  008C02  BE3D               	btfsc	(??_mktime+3)^0,7,c
 37844  008C04  0EFF               	movlw	255
 37845  008C06  6E3E               	movwf	(??_mktime+4)^0,c
 37846  008C08  6E3F               	movwf	(??_mktime+5)^0,c
 37847  008C0A  C060  F00F         	movff	mktime@tt,___lmul@multiplier
 37848  008C0E  C061  F010         	movff	mktime@tt+1,___lmul@multiplier+1
 37849  008C12  C062  F011         	movff	mktime@tt+2,___lmul@multiplier+2
 37850  008C16  C063  F012         	movff	mktime@tt+3,___lmul@multiplier+3
 37851  008C1A  0E3C               	movlw	60
 37852  008C1C  6E13               	movwf	___lmul@multiplicand^0,c
 37853  008C1E  0E00               	movlw	0
 37854  008C20  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 37855  008C22  0E00               	movlw	0
 37856  008C24  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 37857  008C26  0E00               	movlw	0
 37858  008C28  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 37859  008C2A  ECE0  F06E         	call	___lmul	;wreg free
 37860  008C2E  503C               	movf	(??_mktime+2)^0,w,c
 37861  008C30  240F               	addwf	?___lmul^0,w,c
 37862  008C32  0100               	movlb	0	; () banked
 37863  008C34  6F60               	movwf	mktime@tt& (0+255),b
 37864  008C36  503D               	movf	(??_mktime+3)^0,w,c
 37865  008C38  2010               	addwfc	(?___lmul+1)^0,w,c
 37866  008C3A  6F61               	movwf	(mktime@tt+1)& (0+255),b
 37867  008C3C  503E               	movf	(??_mktime+4)^0,w,c
 37868  008C3E  2011               	addwfc	(?___lmul+2)^0,w,c
 37869  008C40  6F62               	movwf	(mktime@tt+2)& (0+255),b
 37870  008C42  503F               	movf	(??_mktime+5)^0,w,c
 37871  008C44  2012               	addwfc	(?___lmul+3)^0,w,c
 37872  008C46  6F63               	movwf	(mktime@tt+3)& (0+255),b
 37873  008C48                     l16216:
 37874                           
 37875                           ; BSR set to: 0
 37876  008C48  C060  F036         	movff	mktime@tt,?_mktime
 37877  008C4C  C061  F037         	movff	mktime@tt+1,?_mktime+1
 37878  008C50  C062  F038         	movff	mktime@tt+2,?_mktime+2
 37879  008C54  C063  F039         	movff	mktime@tt+3,?_mktime+3
 37880  008C58                     
 37881                           ; BSR set to: 0
 37882  008C58  0012               	return		;funcret
 37883  008C5A                     __end_of_mktime:
 37884                           	callstack 0
 37885                           
 37886 ;; *************** function _ymd_to_scalar *****************
 37887 ;; Defined at:
 37888 ;;		line 40 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 37889 ;; Parameters:    Size  Location     Type
 37890 ;;  yr              2   37[COMRAM] unsigned int 
 37891 ;;  mo              2   39[COMRAM] unsigned int 
 37892 ;;  day             2   41[COMRAM] unsigned int 
 37893 ;; Auto vars:     Size  Location     Type
 37894 ;;  scalar          4   49[COMRAM] long 
 37895 ;; Return value:  Size  Location     Type
 37896 ;;                  4   37[COMRAM] long 
 37897 ;; Registers used:
 37898 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 37899 ;; Tracked objects:
 37900 ;;		On entry : 0/0
 37901 ;;		On exit  : 0/0
 37902 ;;		Unchanged: 0/0
 37903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 37904 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37905 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37906 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37907 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 37908 ;;Total ram usage:       16 bytes
 37909 ;; Hardware stack levels used: 1
 37910 ;; Hardware stack levels required when called: 5
 37911 ;; This function calls:
 37912 ;;		_isleap
 37913 ;;		_months_to_days
 37914 ;;		_years_to_days
 37915 ;; This function is called by:
 37916 ;;		_mktime
 37917 ;; This function uses a non-reentrant model
 37918 ;;
 37919                           
 37920                           	psect	text175
 37921  00C76C                     __ptext175:
 37922                           	callstack 0
 37923  00C76C                     _ymd_to_scalar:
 37924                           	callstack 18
 37925  00C76C  C028  F01C         	movff	ymd_to_scalar@mo,months_to_days@month
 37926  00C770  C029  F01D         	movff	ymd_to_scalar@mo+1,months_to_days@month+1
 37927  00C774  ECEE  F075         	call	_months_to_days	;wreg free
 37928  00C778  502A               	movf	ymd_to_scalar@day^0,w,c
 37929  00C77A  261C               	addwf	?_months_to_days^0,f,c
 37930  00C77C  502B               	movf	(ymd_to_scalar@day+1)^0,w,c
 37931  00C77E  221D               	addwfc	(?_months_to_days+1)^0,f,c
 37932  00C780  C01C  F032         	movff	?_months_to_days,ymd_to_scalar@scalar
 37933  00C784  C01D  F033         	movff	?_months_to_days+1,ymd_to_scalar@scalar+1
 37934  00C788  6A34               	clrf	(ymd_to_scalar@scalar+2)^0,c
 37935  00C78A  6A35               	clrf	(ymd_to_scalar@scalar+3)^0,c
 37936  00C78C  5029               	movf	(ymd_to_scalar@mo+1)^0,w,c
 37937  00C78E  E109               	bnz	u16840
 37938  00C790  0E03               	movlw	3
 37939  00C792  5C28               	subwf	ymd_to_scalar@mo^0,w,c
 37940  00C794  A0D8               	btfss	status,0,c
 37941  00C796  EFCF  F063         	goto	u16841
 37942  00C79A  EFD1  F063         	goto	u16840
 37943  00C79E                     u16841:
 37944  00C79E  EFFB  F063         	goto	l16126
 37945  00C7A2                     u16840:
 37946  00C7A2  C026  F014         	movff	ymd_to_scalar@yr,isleap@yr
 37947  00C7A6  C027  F015         	movff	ymd_to_scalar@yr+1,isleap@yr+1
 37948  00C7AA  EC67  F06C         	call	_isleap	;wreg free
 37949  00C7AE  5014               	movf	?_isleap^0,w,c
 37950  00C7B0  1015               	iorwf	(?_isleap+1)^0,w,c
 37951  00C7B2  A4D8               	btfss	status,2,c
 37952  00C7B4  EFDE  F063         	goto	u16851
 37953  00C7B8  EFE0  F063         	goto	u16850
 37954  00C7BC                     u16851:
 37955  00C7BC  EFE6  F063         	goto	l16122
 37956  00C7C0                     u16850:
 37957  00C7C0  0E00               	movlw	0
 37958  00C7C2  6E31               	movwf	(_ymd_to_scalar$6532+1)^0,c
 37959  00C7C4  0E02               	movlw	2
 37960  00C7C6  6E30               	movwf	_ymd_to_scalar$6532^0,c
 37961  00C7C8  EFEA  F063         	goto	l16124
 37962  00C7CC                     l16122:
 37963  00C7CC  0E00               	movlw	0
 37964  00C7CE  6E31               	movwf	(_ymd_to_scalar$6532+1)^0,c
 37965  00C7D0  0E01               	movlw	1
 37966  00C7D2  6E30               	movwf	_ymd_to_scalar$6532^0,c
 37967  00C7D4                     l16124:
 37968  00C7D4  C030  F02C         	movff	_ymd_to_scalar$6532,??_ymd_to_scalar
 37969  00C7D8  C031  F02D         	movff	_ymd_to_scalar$6532+1,??_ymd_to_scalar+1
 37970  00C7DC  0E00               	movlw	0
 37971  00C7DE  BE2D               	btfsc	(??_ymd_to_scalar+1)^0,7,c
 37972  00C7E0  0EFF               	movlw	255
 37973  00C7E2  6E2E               	movwf	(??_ymd_to_scalar+2)^0,c
 37974  00C7E4  6E2F               	movwf	(??_ymd_to_scalar+3)^0,c
 37975  00C7E6  502C               	movf	??_ymd_to_scalar^0,w,c
 37976  00C7E8  5E32               	subwf	ymd_to_scalar@scalar^0,f,c
 37977  00C7EA  502D               	movf	(??_ymd_to_scalar+1)^0,w,c
 37978  00C7EC  5A33               	subwfb	(ymd_to_scalar@scalar+1)^0,f,c
 37979  00C7EE  502E               	movf	(??_ymd_to_scalar+2)^0,w,c
 37980  00C7F0  5A34               	subwfb	(ymd_to_scalar@scalar+2)^0,f,c
 37981  00C7F2  502F               	movf	(??_ymd_to_scalar+3)^0,w,c
 37982  00C7F4  5A35               	subwfb	(ymd_to_scalar@scalar+3)^0,f,c
 37983  00C7F6                     l16126:
 37984  00C7F6  0626               	decf	ymd_to_scalar@yr^0,f,c
 37985  00C7F8  A0D8               	btfss	status,0,c
 37986  00C7FA  0627               	decf	(ymd_to_scalar@yr+1)^0,f,c
 37987  00C7FC  C026  F01C         	movff	ymd_to_scalar@yr,years_to_days@yr
 37988  00C800  C027  F01D         	movff	ymd_to_scalar@yr+1,years_to_days@yr+1
 37989  00C804  ECE9  F067         	call	_years_to_days	;wreg free
 37990  00C808  501C               	movf	?_years_to_days^0,w,c
 37991  00C80A  2632               	addwf	ymd_to_scalar@scalar^0,f,c
 37992  00C80C  501D               	movf	(?_years_to_days+1)^0,w,c
 37993  00C80E  2233               	addwfc	(ymd_to_scalar@scalar+1)^0,f,c
 37994  00C810  501E               	movf	(?_years_to_days+2)^0,w,c
 37995  00C812  2234               	addwfc	(ymd_to_scalar@scalar+2)^0,f,c
 37996  00C814  501F               	movf	(?_years_to_days+3)^0,w,c
 37997  00C816  2235               	addwfc	(ymd_to_scalar@scalar+3)^0,f,c
 37998  00C818  C032  F026         	movff	ymd_to_scalar@scalar,?_ymd_to_scalar
 37999  00C81C  C033  F027         	movff	ymd_to_scalar@scalar+1,?_ymd_to_scalar+1
 38000  00C820  C034  F028         	movff	ymd_to_scalar@scalar+2,?_ymd_to_scalar+2
 38001  00C824  C035  F029         	movff	ymd_to_scalar@scalar+3,?_ymd_to_scalar+3
 38002  00C828  0012               	return		;funcret
 38003  00C82A                     __end_of_ymd_to_scalar:
 38004                           	callstack 0
 38005                           
 38006 ;; *************** function _years_to_days *****************
 38007 ;; Defined at:
 38008 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 38009 ;; Parameters:    Size  Location     Type
 38010 ;;  yr              2   27[COMRAM] unsigned int 
 38011 ;; Auto vars:     Size  Location     Type
 38012 ;;  ret             4   33[COMRAM] long 
 38013 ;; Return value:  Size  Location     Type
 38014 ;;                  4   27[COMRAM] long 
 38015 ;; Registers used:
 38016 ;;		wreg, status,2, status,0, cstack
 38017 ;; Tracked objects:
 38018 ;;		On entry : 0/0
 38019 ;;		On exit  : 0/0
 38020 ;;		Unchanged: 0/0
 38021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38023 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38024 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38025 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38026 ;;Total ram usage:       10 bytes
 38027 ;; Hardware stack levels used: 1
 38028 ;; Hardware stack levels required when called: 4
 38029 ;; This function calls:
 38030 ;;		___lmul
 38031 ;;		___lwdiv
 38032 ;; This function is called by:
 38033 ;;		_ymd_to_scalar
 38034 ;; This function uses a non-reentrant model
 38035 ;;
 38036                           
 38037                           	psect	text176
 38038  00CFD2                     __ptext176:
 38039                           	callstack 0
 38040  00CFD2                     _years_to_days:
 38041                           	callstack 18
 38042  00CFD2  C01C  F00F         	movff	years_to_days@yr,___lmul@multiplier
 38043  00CFD6  C01D  F010         	movff	years_to_days@yr+1,___lmul@multiplier+1
 38044  00CFDA  6A11               	clrf	(___lmul@multiplier+2)^0,c
 38045  00CFDC  6A12               	clrf	(___lmul@multiplier+3)^0,c
 38046  00CFDE  0E6D               	movlw	109
 38047  00CFE0  6E13               	movwf	___lmul@multiplicand^0,c
 38048  00CFE2  0E01               	movlw	1
 38049  00CFE4  6E14               	movwf	(___lmul@multiplicand+1)^0,c
 38050  00CFE6  0E00               	movlw	0
 38051  00CFE8  6E15               	movwf	(___lmul@multiplicand+2)^0,c
 38052  00CFEA  0E00               	movlw	0
 38053  00CFEC  6E16               	movwf	(___lmul@multiplicand+3)^0,c
 38054  00CFEE  ECE0  F06E         	call	___lmul	;wreg free
 38055  00CFF2  C00F  F022         	movff	?___lmul,years_to_days@ret
 38056  00CFF6  C010  F023         	movff	?___lmul+1,years_to_days@ret+1
 38057  00CFFA  C011  F024         	movff	?___lmul+2,years_to_days@ret+2
 38058  00CFFE  C012  F025         	movff	?___lmul+3,years_to_days@ret+3
 38059  00D002  C01C  F015         	movff	years_to_days@yr,___lwdiv@dividend
 38060  00D006  C01D  F016         	movff	years_to_days@yr+1,___lwdiv@dividend+1
 38061  00D00A  0E00               	movlw	0
 38062  00D00C  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 38063  00D00E  0E64               	movlw	100
 38064  00D010  6E17               	movwf	___lwdiv@divisor^0,c
 38065  00D012  EC92  F06D         	call	___lwdiv	;wreg free
 38066  00D016  C01C  F020         	movff	years_to_days@yr,??_years_to_days
 38067  00D01A  C01D  F021         	movff	years_to_days@yr+1,??_years_to_days+1
 38068  00D01E  90D8               	bcf	status,0,c
 38069  00D020  3221               	rrcf	(??_years_to_days+1)^0,f,c
 38070  00D022  3220               	rrcf	??_years_to_days^0,f,c
 38071  00D024  90D8               	bcf	status,0,c
 38072  00D026  3221               	rrcf	(??_years_to_days+1)^0,f,c
 38073  00D028  3220               	rrcf	??_years_to_days^0,f,c
 38074  00D02A  5015               	movf	?___lwdiv^0,w,c
 38075  00D02C  5E20               	subwf	??_years_to_days^0,f,c
 38076  00D02E  5016               	movf	(?___lwdiv+1)^0,w,c
 38077  00D030  5A21               	subwfb	(??_years_to_days+1)^0,f,c
 38078  00D032  5020               	movf	??_years_to_days^0,w,c
 38079  00D034  2622               	addwf	years_to_days@ret^0,f,c
 38080  00D036  5021               	movf	(??_years_to_days+1)^0,w,c
 38081  00D038  2223               	addwfc	(years_to_days@ret+1)^0,f,c
 38082  00D03A  0E00               	movlw	0
 38083  00D03C  2224               	addwfc	(years_to_days@ret+2)^0,f,c
 38084  00D03E  0E00               	movlw	0
 38085  00D040  2225               	addwfc	(years_to_days@ret+3)^0,f,c
 38086  00D042  C01C  F015         	movff	years_to_days@yr,___lwdiv@dividend
 38087  00D046  C01D  F016         	movff	years_to_days@yr+1,___lwdiv@dividend+1
 38088  00D04A  0E01               	movlw	1
 38089  00D04C  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 38090  00D04E  0E90               	movlw	144
 38091  00D050  6E17               	movwf	___lwdiv@divisor^0,c
 38092  00D052  EC92  F06D         	call	___lwdiv	;wreg free
 38093  00D056  5015               	movf	?___lwdiv^0,w,c
 38094  00D058  2622               	addwf	years_to_days@ret^0,f,c
 38095  00D05A  5016               	movf	(?___lwdiv+1)^0,w,c
 38096  00D05C  2223               	addwfc	(years_to_days@ret+1)^0,f,c
 38097  00D05E  0E00               	movlw	0
 38098  00D060  2224               	addwfc	(years_to_days@ret+2)^0,f,c
 38099  00D062  0E00               	movlw	0
 38100  00D064  2225               	addwfc	(years_to_days@ret+3)^0,f,c
 38101  00D066  C022  F01C         	movff	years_to_days@ret,?_years_to_days
 38102  00D06A  C023  F01D         	movff	years_to_days@ret+1,?_years_to_days+1
 38103  00D06E  C024  F01E         	movff	years_to_days@ret+2,?_years_to_days+2
 38104  00D072  C025  F01F         	movff	years_to_days@ret+3,?_years_to_days+3
 38105  00D076  0012               	return		;funcret
 38106  00D078                     __end_of_years_to_days:
 38107                           	callstack 0
 38108                           
 38109 ;; *************** function ___lmul *****************
 38110 ;; Defined at:
 38111 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul32.c"
 38112 ;; Parameters:    Size  Location     Type
 38113 ;;  multiplier      4   14[COMRAM] unsigned long 
 38114 ;;  multiplicand    4   18[COMRAM] unsigned long 
 38115 ;; Auto vars:     Size  Location     Type
 38116 ;;  product         4   22[COMRAM] unsigned long 
 38117 ;; Return value:  Size  Location     Type
 38118 ;;                  4   14[COMRAM] unsigned long 
 38119 ;; Registers used:
 38120 ;;		wreg, status,2, status,0
 38121 ;; Tracked objects:
 38122 ;;		On entry : 0/0
 38123 ;;		On exit  : 0/0
 38124 ;;		Unchanged: 0/0
 38125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38126 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38127 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38129 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38130 ;;Total ram usage:       12 bytes
 38131 ;; Hardware stack levels used: 1
 38132 ;; Hardware stack levels required when called: 3
 38133 ;; This function calls:
 38134 ;;		Nothing
 38135 ;; This function is called by:
 38136 ;;		_sht3x_measure_read
 38137 ;;		__atoi
 38138 ;;		__itoa
 38139 ;;		_years_to_days
 38140 ;;		_mktime
 38141 ;; This function uses a non-reentrant model
 38142 ;;
 38143                           
 38144                           	psect	text177
 38145  00DDC0                     __ptext177:
 38146                           	callstack 0
 38147  00DDC0                     ___lmul:
 38148                           	callstack 22
 38149  00DDC0  0E00               	movlw	0
 38150  00DDC2  6E17               	movwf	___lmul@product^0,c
 38151  00DDC4  0E00               	movlw	0
 38152  00DDC6  6E18               	movwf	(___lmul@product+1)^0,c
 38153  00DDC8  0E00               	movlw	0
 38154  00DDCA  6E19               	movwf	(___lmul@product+2)^0,c
 38155  00DDCC  0E00               	movlw	0
 38156  00DDCE  6E1A               	movwf	(___lmul@product+3)^0,c
 38157  00DDD0                     l16014:
 38158  00DDD0  A00F               	btfss	___lmul@multiplier^0,0,c
 38159  00DDD2  EFED  F06E         	goto	u16591
 38160  00DDD6  EFEF  F06E         	goto	u16590
 38161  00DDDA                     u16591:
 38162  00DDDA  EFF7  F06E         	goto	l16018
 38163  00DDDE                     u16590:
 38164  00DDDE  5013               	movf	___lmul@multiplicand^0,w,c
 38165  00DDE0  2617               	addwf	___lmul@product^0,f,c
 38166  00DDE2  5014               	movf	(___lmul@multiplicand+1)^0,w,c
 38167  00DDE4  2218               	addwfc	(___lmul@product+1)^0,f,c
 38168  00DDE6  5015               	movf	(___lmul@multiplicand+2)^0,w,c
 38169  00DDE8  2219               	addwfc	(___lmul@product+2)^0,f,c
 38170  00DDEA  5016               	movf	(___lmul@multiplicand+3)^0,w,c
 38171  00DDEC  221A               	addwfc	(___lmul@product+3)^0,f,c
 38172  00DDEE                     l16018:
 38173  00DDEE  90D8               	bcf	status,0,c
 38174  00DDF0  3613               	rlcf	___lmul@multiplicand^0,f,c
 38175  00DDF2  3614               	rlcf	(___lmul@multiplicand+1)^0,f,c
 38176  00DDF4  3615               	rlcf	(___lmul@multiplicand+2)^0,f,c
 38177  00DDF6  3616               	rlcf	(___lmul@multiplicand+3)^0,f,c
 38178  00DDF8  90D8               	bcf	status,0,c
 38179  00DDFA  3212               	rrcf	(___lmul@multiplier+3)^0,f,c
 38180  00DDFC  3211               	rrcf	(___lmul@multiplier+2)^0,f,c
 38181  00DDFE  3210               	rrcf	(___lmul@multiplier+1)^0,f,c
 38182  00DE00  320F               	rrcf	___lmul@multiplier^0,f,c
 38183  00DE02  500F               	movf	___lmul@multiplier^0,w,c
 38184  00DE04  1010               	iorwf	(___lmul@multiplier+1)^0,w,c
 38185  00DE06  1011               	iorwf	(___lmul@multiplier+2)^0,w,c
 38186  00DE08  1012               	iorwf	(___lmul@multiplier+3)^0,w,c
 38187  00DE0A  A4D8               	btfss	status,2,c
 38188  00DE0C  EF0A  F06F         	goto	u16601
 38189  00DE10  EF0C  F06F         	goto	u16600
 38190  00DE14                     u16601:
 38191  00DE14  EFE8  F06E         	goto	l16014
 38192  00DE18                     u16600:
 38193  00DE18  C017  F00F         	movff	___lmul@product,?___lmul
 38194  00DE1C  C018  F010         	movff	___lmul@product+1,?___lmul+1
 38195  00DE20  C019  F011         	movff	___lmul@product+2,?___lmul+2
 38196  00DE24  C01A  F012         	movff	___lmul@product+3,?___lmul+3
 38197  00DE28  0012               	return		;funcret
 38198  00DE2A                     __end_of___lmul:
 38199                           	callstack 0
 38200                           
 38201 ;; *************** function _months_to_days *****************
 38202 ;; Defined at:
 38203 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 38204 ;; Parameters:    Size  Location     Type
 38205 ;;  month           2   27[COMRAM] unsigned int 
 38206 ;; Auto vars:     Size  Location     Type
 38207 ;;		None
 38208 ;; Return value:  Size  Location     Type
 38209 ;;                  2   27[COMRAM] unsigned int 
 38210 ;; Registers used:
 38211 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 38212 ;; Tracked objects:
 38213 ;;		On entry : 0/0
 38214 ;;		On exit  : 0/0
 38215 ;;		Unchanged: 0/0
 38216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38221 ;;Total ram usage:        2 bytes
 38222 ;; Hardware stack levels used: 1
 38223 ;; Hardware stack levels required when called: 4
 38224 ;; This function calls:
 38225 ;;		___lwdiv
 38226 ;;		___wmul
 38227 ;; This function is called by:
 38228 ;;		_ymd_to_scalar
 38229 ;; This function uses a non-reentrant model
 38230 ;;
 38231                           
 38232                           	psect	text178
 38233  00EBDC                     __ptext178:
 38234                           	callstack 0
 38235  00EBDC                     _months_to_days:
 38236                           	callstack 18
 38237  00EBDC  C01C  F00F         	movff	months_to_days@month,___wmul@multiplier
 38238  00EBE0  C01D  F010         	movff	months_to_days@month+1,___wmul@multiplier+1
 38239  00EBE4  0E0B               	movlw	11
 38240  00EBE6  6E12               	movwf	(___wmul@multiplicand+1)^0,c
 38241  00EBE8  0EF1               	movlw	241
 38242  00EBEA  6E11               	movwf	___wmul@multiplicand^0,c
 38243  00EBEC  EC50  F077         	call	___wmul	;wreg free
 38244  00EBF0  0E41               	movlw	65
 38245  00EBF2  240F               	addwf	?___wmul^0,w,c
 38246  00EBF4  6E15               	movwf	___lwdiv@dividend^0,c
 38247  00EBF6  0EF4               	movlw	244
 38248  00EBF8  2010               	addwfc	(?___wmul+1)^0,w,c
 38249  00EBFA  6E16               	movwf	(___lwdiv@dividend+1)^0,c
 38250  00EBFC  0E00               	movlw	0
 38251  00EBFE  6E18               	movwf	(___lwdiv@divisor+1)^0,c
 38252  00EC00  0E64               	movlw	100
 38253  00EC02  6E17               	movwf	___lwdiv@divisor^0,c
 38254  00EC04  EC92  F06D         	call	___lwdiv	;wreg free
 38255  00EC08  C015  F01C         	movff	?___lwdiv,?_months_to_days
 38256  00EC0C  C016  F01D         	movff	?___lwdiv+1,?_months_to_days+1
 38257  00EC10  0012               	return		;funcret
 38258  00EC12                     __end_of_months_to_days:
 38259                           	callstack 0
 38260                           
 38261 ;; *************** function ___wmul *****************
 38262 ;; Defined at:
 38263 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
 38264 ;; Parameters:    Size  Location     Type
 38265 ;;  multiplier      2   14[COMRAM] unsigned int 
 38266 ;;  multiplicand    2   16[COMRAM] unsigned int 
 38267 ;; Auto vars:     Size  Location     Type
 38268 ;;  product         2   18[COMRAM] unsigned int 
 38269 ;; Return value:  Size  Location     Type
 38270 ;;                  2   14[COMRAM] unsigned int 
 38271 ;; Registers used:
 38272 ;;		wreg, status,2, status,0, prodl, prodh
 38273 ;; Tracked objects:
 38274 ;;		On entry : 0/0
 38275 ;;		On exit  : 0/0
 38276 ;;		Unchanged: 0/0
 38277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38281 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38282 ;;Total ram usage:        6 bytes
 38283 ;; Hardware stack levels used: 1
 38284 ;; Hardware stack levels required when called: 3
 38285 ;; This function calls:
 38286 ;;		Nothing
 38287 ;; This function is called by:
 38288 ;;		_build_time
 38289 ;;		_sprintf
 38290 ;;		_months_to_days
 38291 ;; This function uses a non-reentrant model
 38292 ;;
 38293                           
 38294                           	psect	text179
 38295  00EEA0                     __ptext179:
 38296                           	callstack 0
 38297  00EEA0                     ___wmul:
 38298                           	callstack 18
 38299  00EEA0  500F               	movf	___wmul@multiplier^0,w,c
 38300  00EEA2  0211               	mulwf	___wmul@multiplicand^0,c
 38301  00EEA4  CFF3 F013          	movff	prodl,___wmul@product
 38302  00EEA8  CFF4 F014          	movff	prodh,___wmul@product+1
 38303  00EEAC  500F               	movf	___wmul@multiplier^0,w,c
 38304  00EEAE  0212               	mulwf	(___wmul@multiplicand+1)^0,c
 38305  00EEB0  50F3               	movf	243,w,c
 38306  00EEB2  2614               	addwf	(___wmul@product+1)^0,f,c
 38307  00EEB4  5010               	movf	(___wmul@multiplier+1)^0,w,c
 38308  00EEB6  0211               	mulwf	___wmul@multiplicand^0,c
 38309  00EEB8  50F3               	movf	243,w,c
 38310  00EEBA  2614               	addwf	(___wmul@product+1)^0,f,c
 38311  00EEBC  C013  F00F         	movff	___wmul@product,?___wmul
 38312  00EEC0  C014  F010         	movff	___wmul@product+1,?___wmul+1
 38313  00EEC4  0012               	return		;funcret
 38314  00EEC6                     __end_of___wmul:
 38315                           	callstack 0
 38316                           
 38317 ;; *************** function ___lwdiv *****************
 38318 ;; Defined at:
 38319 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
 38320 ;; Parameters:    Size  Location     Type
 38321 ;;  dividend        2   20[COMRAM] unsigned int 
 38322 ;;  divisor         2   22[COMRAM] unsigned int 
 38323 ;; Auto vars:     Size  Location     Type
 38324 ;;  quotient        2   25[COMRAM] unsigned int 
 38325 ;;  counter         1   24[COMRAM] unsigned char 
 38326 ;; Return value:  Size  Location     Type
 38327 ;;                  2   20[COMRAM] unsigned int 
 38328 ;; Registers used:
 38329 ;;		wreg, status,2, status,0
 38330 ;; Tracked objects:
 38331 ;;		On entry : 0/0
 38332 ;;		On exit  : 0/0
 38333 ;;		Unchanged: 0/0
 38334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38336 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38338 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38339 ;;Total ram usage:        7 bytes
 38340 ;; Hardware stack levels used: 1
 38341 ;; Hardware stack levels required when called: 3
 38342 ;; This function calls:
 38343 ;;		Nothing
 38344 ;; This function is called by:
 38345 ;;		_fround
 38346 ;;		_months_to_days
 38347 ;;		_years_to_days
 38348 ;;		_Average_filter
 38349 ;; This function uses a non-reentrant model
 38350 ;;
 38351                           
 38352                           	psect	text180
 38353  00DB24                     __ptext180:
 38354                           	callstack 0
 38355  00DB24                     ___lwdiv:
 38356                           	callstack 18
 38357  00DB24  0E00               	movlw	0
 38358  00DB26  6E1B               	movwf	(___lwdiv@quotient+1)^0,c
 38359  00DB28  0E00               	movlw	0
 38360  00DB2A  6E1A               	movwf	___lwdiv@quotient^0,c
 38361  00DB2C  5017               	movf	___lwdiv@divisor^0,w,c
 38362  00DB2E  1018               	iorwf	(___lwdiv@divisor+1)^0,w,c
 38363  00DB30  B4D8               	btfsc	status,2,c
 38364  00DB32  EF9D  F06D         	goto	u16611
 38365  00DB36  EF9F  F06D         	goto	u16610
 38366  00DB3A                     u16611:
 38367  00DB3A  EFC7  F06D         	goto	l3048
 38368  00DB3E                     u16610:
 38369  00DB3E  0E01               	movlw	1
 38370  00DB40  6E19               	movwf	___lwdiv@counter^0,c
 38371  00DB42  EFA7  F06D         	goto	l16030
 38372  00DB46                     l16028:
 38373  00DB46  90D8               	bcf	status,0,c
 38374  00DB48  3617               	rlcf	___lwdiv@divisor^0,f,c
 38375  00DB4A  3618               	rlcf	(___lwdiv@divisor+1)^0,f,c
 38376  00DB4C  2A19               	incf	___lwdiv@counter^0,f,c
 38377  00DB4E                     l16030:
 38378  00DB4E  AE18               	btfss	(___lwdiv@divisor+1)^0,7,c
 38379  00DB50  EFAC  F06D         	goto	u16621
 38380  00DB54  EFAE  F06D         	goto	u16620
 38381  00DB58                     u16621:
 38382  00DB58  EFA3  F06D         	goto	l16028
 38383  00DB5C                     u16620:
 38384  00DB5C                     l16032:
 38385  00DB5C  90D8               	bcf	status,0,c
 38386  00DB5E  361A               	rlcf	___lwdiv@quotient^0,f,c
 38387  00DB60  361B               	rlcf	(___lwdiv@quotient+1)^0,f,c
 38388  00DB62  5017               	movf	___lwdiv@divisor^0,w,c
 38389  00DB64  5C15               	subwf	___lwdiv@dividend^0,w,c
 38390  00DB66  5018               	movf	(___lwdiv@divisor+1)^0,w,c
 38391  00DB68  5816               	subwfb	(___lwdiv@dividend+1)^0,w,c
 38392  00DB6A  A0D8               	btfss	status,0,c
 38393  00DB6C  EFBA  F06D         	goto	u16631
 38394  00DB70  EFBC  F06D         	goto	u16630
 38395  00DB74                     u16631:
 38396  00DB74  EFC1  F06D         	goto	l16040
 38397  00DB78                     u16630:
 38398  00DB78  5017               	movf	___lwdiv@divisor^0,w,c
 38399  00DB7A  5E15               	subwf	___lwdiv@dividend^0,f,c
 38400  00DB7C  5018               	movf	(___lwdiv@divisor+1)^0,w,c
 38401  00DB7E  5A16               	subwfb	(___lwdiv@dividend+1)^0,f,c
 38402  00DB80  801A               	bsf	___lwdiv@quotient^0,0,c
 38403  00DB82                     l16040:
 38404  00DB82  90D8               	bcf	status,0,c
 38405  00DB84  3218               	rrcf	(___lwdiv@divisor+1)^0,f,c
 38406  00DB86  3217               	rrcf	___lwdiv@divisor^0,f,c
 38407  00DB88  2E19               	decfsz	___lwdiv@counter^0,f,c
 38408  00DB8A  EFAE  F06D         	goto	l16032
 38409  00DB8E                     l3048:
 38410  00DB8E  C01A  F015         	movff	___lwdiv@quotient,?___lwdiv
 38411  00DB92  C01B  F016         	movff	___lwdiv@quotient+1,?___lwdiv+1
 38412  00DB96  0012               	return		;funcret
 38413  00DB98                     __end_of___lwdiv:
 38414                           	callstack 0
 38415                           
 38416 ;; *************** function _isleap *****************
 38417 ;; Defined at:
 38418 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\mktime.c"
 38419 ;; Parameters:    Size  Location     Type
 38420 ;;  yr              2   19[COMRAM] unsigned int 
 38421 ;; Auto vars:     Size  Location     Type
 38422 ;;		None
 38423 ;; Return value:  Size  Location     Type
 38424 ;;                  2   19[COMRAM] int 
 38425 ;; Registers used:
 38426 ;;		wreg, status,2, status,0, cstack
 38427 ;; Tracked objects:
 38428 ;;		On entry : 0/0
 38429 ;;		On exit  : 0/0
 38430 ;;		Unchanged: 0/0
 38431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38434 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38435 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38436 ;;Total ram usage:        5 bytes
 38437 ;; Hardware stack levels used: 1
 38438 ;; Hardware stack levels required when called: 4
 38439 ;; This function calls:
 38440 ;;		___lwmod
 38441 ;; This function is called by:
 38442 ;;		_ymd_to_scalar
 38443 ;; This function uses a non-reentrant model
 38444 ;;
 38445                           
 38446                           	psect	text181
 38447  00D8CE                     __ptext181:
 38448                           	callstack 0
 38449  00D8CE                     _isleap:
 38450                           	callstack 18
 38451  00D8CE  0E01               	movlw	1
 38452  00D8D0  6E18               	movwf	_isleap$6519^0,c
 38453  00D8D2  C014  F00F         	movff	isleap@yr,___lwmod@dividend
 38454  00D8D6  C015  F010         	movff	isleap@yr+1,___lwmod@dividend+1
 38455  00D8DA  0E01               	movlw	1
 38456  00D8DC  6E12               	movwf	(___lwmod@divisor+1)^0,c
 38457  00D8DE  0E90               	movlw	144
 38458  00D8E0  6E11               	movwf	___lwmod@divisor^0,c
 38459  00D8E2  EC47  F070         	call	___lwmod	;wreg free
 38460  00D8E6  500F               	movf	?___lwmod^0,w,c
 38461  00D8E8  1010               	iorwf	(?___lwmod+1)^0,w,c
 38462  00D8EA  B4D8               	btfsc	status,2,c
 38463  00D8EC  EF7A  F06C         	goto	u16671
 38464  00D8F0  EF7C  F06C         	goto	u16670
 38465  00D8F4                     u16671:
 38466  00D8F4  EFA0  F06C         	goto	l16070
 38467  00D8F8                     u16670:
 38468  00D8F8  0E03               	movlw	3
 38469  00D8FA  1414               	andwf	isleap@yr^0,w,c
 38470  00D8FC  6E16               	movwf	??_isleap^0,c
 38471  00D8FE  0E00               	movlw	0
 38472  00D900  1415               	andwf	(isleap@yr+1)^0,w,c
 38473  00D902  6E17               	movwf	(??_isleap+1)^0,c
 38474  00D904  5016               	movf	??_isleap^0,w,c
 38475  00D906  1017               	iorwf	(??_isleap+1)^0,w,c
 38476  00D908  A4D8               	btfss	status,2,c
 38477  00D90A  EF89  F06C         	goto	u16681
 38478  00D90E  EF8B  F06C         	goto	u16680
 38479  00D912                     u16681:
 38480  00D912  EF9E  F06C         	goto	l16068
 38481  00D916                     u16680:
 38482  00D916  C014  F00F         	movff	isleap@yr,___lwmod@dividend
 38483  00D91A  C015  F010         	movff	isleap@yr+1,___lwmod@dividend+1
 38484  00D91E  0E00               	movlw	0
 38485  00D920  6E12               	movwf	(___lwmod@divisor+1)^0,c
 38486  00D922  0E64               	movlw	100
 38487  00D924  6E11               	movwf	___lwmod@divisor^0,c
 38488  00D926  EC47  F070         	call	___lwmod	;wreg free
 38489  00D92A  500F               	movf	?___lwmod^0,w,c
 38490  00D92C  1010               	iorwf	(?___lwmod+1)^0,w,c
 38491  00D92E  A4D8               	btfss	status,2,c
 38492  00D930  EF9C  F06C         	goto	u16691
 38493  00D934  EF9E  F06C         	goto	u16690
 38494  00D938                     u16691:
 38495  00D938  EFA0  F06C         	goto	l16070
 38496  00D93C                     u16690:
 38497  00D93C                     l16068:
 38498  00D93C  0E00               	movlw	0
 38499  00D93E  6E18               	movwf	_isleap$6519^0,c
 38500  00D940                     l16070:
 38501  00D940  C018  F014         	movff	_isleap$6519,?_isleap
 38502  00D944  6A15               	clrf	(?_isleap+1)^0,c
 38503  00D946  0012               	return		;funcret
 38504  00D948                     __end_of_isleap:
 38505                           	callstack 0
 38506                           
 38507 ;; *************** function ___lwmod *****************
 38508 ;; Defined at:
 38509 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
 38510 ;; Parameters:    Size  Location     Type
 38511 ;;  dividend        2   14[COMRAM] unsigned int 
 38512 ;;  divisor         2   16[COMRAM] unsigned int 
 38513 ;; Auto vars:     Size  Location     Type
 38514 ;;  counter         1   18[COMRAM] unsigned char 
 38515 ;; Return value:  Size  Location     Type
 38516 ;;                  2   14[COMRAM] unsigned int 
 38517 ;; Registers used:
 38518 ;;		wreg, status,2, status,0
 38519 ;; Tracked objects:
 38520 ;;		On entry : 0/0
 38521 ;;		On exit  : 0/0
 38522 ;;		Unchanged: 0/0
 38523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38524 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38525 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38527 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38528 ;;Total ram usage:        5 bytes
 38529 ;; Hardware stack levels used: 1
 38530 ;; Hardware stack levels required when called: 3
 38531 ;; This function calls:
 38532 ;;		Nothing
 38533 ;; This function is called by:
 38534 ;;		_fround
 38535 ;;		_isleap
 38536 ;; This function uses a non-reentrant model
 38537 ;;
 38538                           
 38539                           	psect	text182
 38540  00E08E                     __ptext182:
 38541                           	callstack 0
 38542  00E08E                     ___lwmod:
 38543                           	callstack 18
 38544  00E08E  5011               	movf	___lwmod@divisor^0,w,c
 38545  00E090  1012               	iorwf	(___lwmod@divisor+1)^0,w,c
 38546  00E092  B4D8               	btfsc	status,2,c
 38547  00E094  EF4E  F070         	goto	u16641
 38548  00E098  EF50  F070         	goto	u16640
 38549  00E09C                     u16641:
 38550  00E09C  EF74  F070         	goto	l3058
 38551  00E0A0                     u16640:
 38552  00E0A0  0E01               	movlw	1
 38553  00E0A2  6E13               	movwf	___lwmod@counter^0,c
 38554  00E0A4  EF58  F070         	goto	l16050
 38555  00E0A8                     l16048:
 38556  00E0A8  90D8               	bcf	status,0,c
 38557  00E0AA  3611               	rlcf	___lwmod@divisor^0,f,c
 38558  00E0AC  3612               	rlcf	(___lwmod@divisor+1)^0,f,c
 38559  00E0AE  2A13               	incf	___lwmod@counter^0,f,c
 38560  00E0B0                     l16050:
 38561  00E0B0  AE12               	btfss	(___lwmod@divisor+1)^0,7,c
 38562  00E0B2  EF5D  F070         	goto	u16651
 38563  00E0B6  EF5F  F070         	goto	u16650
 38564  00E0BA                     u16651:
 38565  00E0BA  EF54  F070         	goto	l16048
 38566  00E0BE                     u16650:
 38567  00E0BE                     l16052:
 38568  00E0BE  5011               	movf	___lwmod@divisor^0,w,c
 38569  00E0C0  5C0F               	subwf	___lwmod@dividend^0,w,c
 38570  00E0C2  5012               	movf	(___lwmod@divisor+1)^0,w,c
 38571  00E0C4  5810               	subwfb	(___lwmod@dividend+1)^0,w,c
 38572  00E0C6  A0D8               	btfss	status,0,c
 38573  00E0C8  EF68  F070         	goto	u16661
 38574  00E0CC  EF6A  F070         	goto	u16660
 38575  00E0D0                     u16661:
 38576  00E0D0  EF6E  F070         	goto	l16056
 38577  00E0D4                     u16660:
 38578  00E0D4  5011               	movf	___lwmod@divisor^0,w,c
 38579  00E0D6  5E0F               	subwf	___lwmod@dividend^0,f,c
 38580  00E0D8  5012               	movf	(___lwmod@divisor+1)^0,w,c
 38581  00E0DA  5A10               	subwfb	(___lwmod@dividend+1)^0,f,c
 38582  00E0DC                     l16056:
 38583  00E0DC  90D8               	bcf	status,0,c
 38584  00E0DE  3212               	rrcf	(___lwmod@divisor+1)^0,f,c
 38585  00E0E0  3211               	rrcf	___lwmod@divisor^0,f,c
 38586  00E0E2  2E13               	decfsz	___lwmod@counter^0,f,c
 38587  00E0E4  EF5F  F070         	goto	l16052
 38588  00E0E8                     l3058:
 38589  00E0E8  C00F  F00F         	movff	___lwmod@dividend,?___lwmod
 38590  00E0EC  C010  F010         	movff	___lwmod@dividend+1,?___lwmod+1
 38591  00E0F0  0012               	return		;funcret
 38592  00E0F2                     __end_of___lwmod:
 38593                           	callstack 0
 38594                           
 38595 ;; *************** function _get_product_desc *****************
 38596 ;; Defined at:
 38597 ;;		line 272 in file "usb_descriptors.c"
 38598 ;; Parameters:    Size  Location     Type
 38599 ;;		None
 38600 ;; Auto vars:     Size  Location     Type
 38601 ;;		None
 38602 ;; Return value:  Size  Location     Type
 38603 ;;                  2   14[COMRAM] PTR unsigned int 
 38604 ;; Registers used:
 38605 ;;		wreg, status,2, status,0
 38606 ;; Tracked objects:
 38607 ;;		On entry : 0/0
 38608 ;;		On exit  : 0/0
 38609 ;;		Unchanged: 0/0
 38610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38615 ;;Total ram usage:        2 bytes
 38616 ;; Hardware stack levels used: 1
 38617 ;; Hardware stack levels required when called: 3
 38618 ;; This function calls:
 38619 ;;		Nothing
 38620 ;; This function is called by:
 38621 ;;		_nvm_init
 38622 ;; This function uses a non-reentrant model
 38623 ;;
 38624                           
 38625                           	psect	text183
 38626  00F190                     __ptext183:
 38627                           	callstack 0
 38628  00F190                     _get_product_desc:
 38629                           	callstack 25
 38630  00F190                     
 38631                           ;usb_descriptors.c: 274: return sd002.string;
 38632  00F190  0EC5               	movlw	low (_sd002+2)
 38633  00F192  6E0F               	movwf	?_get_product_desc^0,c
 38634  00F194  0E04               	movlw	high (_sd002+2)
 38635  00F196  6E10               	movwf	(?_get_product_desc+1)^0,c
 38636  00F198  0012               	return		;funcret
 38637  00F19A                     __end_of_get_product_desc:
 38638                           	callstack 0
 38639                           
 38640 ;; *************** function _lmp91000_pin_init *****************
 38641 ;; Defined at:
 38642 ;;		line 261 in file "bsp/lmp91000.c"
 38643 ;; Parameters:    Size  Location     Type
 38644 ;;		None
 38645 ;; Auto vars:     Size  Location     Type
 38646 ;;		None
 38647 ;; Return value:  Size  Location     Type
 38648 ;;                  1    wreg      void 
 38649 ;; Registers used:
 38650 ;;		None
 38651 ;; Tracked objects:
 38652 ;;		On entry : 0/0
 38653 ;;		On exit  : 0/0
 38654 ;;		Unchanged: 0/0
 38655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38660 ;;Total ram usage:        0 bytes
 38661 ;; Hardware stack levels used: 1
 38662 ;; Hardware stack levels required when called: 3
 38663 ;; This function calls:
 38664 ;;		Nothing
 38665 ;; This function is called by:
 38666 ;;		_Board_initialize
 38667 ;; This function uses a non-reentrant model
 38668 ;;
 38669                           
 38670                           	psect	text184
 38671  00F19A                     __ptext184:
 38672                           	callstack 0
 38673  00F19A                     _lmp91000_pin_init:
 38674                           	callstack 26
 38675  00F19A                     
 38676                           ;lmp91000.c: 263: TRISBbits.TRISB0 = 0;
 38677  00F19A  9093               	bcf	147,0,c	;volatile
 38678                           
 38679                           ;lmp91000.c: 264: TRISBbits.TRISB1 = 0;
 38680  00F19C  9293               	bcf	147,1,c	;volatile
 38681                           
 38682                           ;lmp91000.c: 265: TRISBbits.TRISB2 = 0;
 38683  00F19E  9493               	bcf	147,2,c	;volatile
 38684  00F1A0  0012               	return		;funcret
 38685  00F1A2                     __end_of_lmp91000_pin_init:
 38686                           	callstack 0
 38687                           
 38688 ;; *************** function _lmp91000_disable *****************
 38689 ;; Defined at:
 38690 ;;		line 278 in file "bsp/lmp91000.c"
 38691 ;; Parameters:    Size  Location     Type
 38692 ;;  chNum           1    wreg     enum E5258
 38693 ;; Auto vars:     Size  Location     Type
 38694 ;;  chNum           1   14[COMRAM] enum E5258
 38695 ;; Return value:  Size  Location     Type
 38696 ;;                  1    wreg      void 
 38697 ;; Registers used:
 38698 ;;		wreg, status,2, status,0
 38699 ;; Tracked objects:
 38700 ;;		On entry : 0/0
 38701 ;;		On exit  : 0/0
 38702 ;;		Unchanged: 0/0
 38703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38705 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38708 ;;Total ram usage:        1 bytes
 38709 ;; Hardware stack levels used: 1
 38710 ;; Hardware stack levels required when called: 3
 38711 ;; This function calls:
 38712 ;;		Nothing
 38713 ;; This function is called by:
 38714 ;;		_lmp91000_get_status
 38715 ;;		_lmp91000_unlock
 38716 ;;		_lmp91000_set_GainRLoad
 38717 ;;		_lmp91000_set_Reference
 38718 ;;		_lmp91000_set_Mode
 38719 ;;		_Board_initialize
 38720 ;;		_lmp91000_lock
 38721 ;; This function uses a non-reentrant model
 38722 ;;
 38723                           
 38724                           	psect	text185
 38725  00EBA4                     __ptext185:
 38726                           	callstack 0
 38727  00EBA4                     _lmp91000_disable:
 38728                           	callstack 24
 38729                           
 38730                           ;incstack = 0
 38731                           ;lmp91000_disable@chNum stored from wreg
 38732  00EBA4  6E0F               	movwf	lmp91000_disable@chNum^0,c
 38733  00EBA6                     
 38734                           ;lmp91000.c: 280: switch(chNum)
 38735  00EBA6  EFDE  F075         	goto	l16708
 38736  00EBAA                     l271:
 38737  00EBAA  808A               	bsf	138,0,c	;volatile
 38738  00EBAC  EFED  F075         	goto	l275
 38739  00EBB0                     l273:
 38740  00EBB0  828A               	bsf	138,1,c	;volatile
 38741  00EBB2  EFED  F075         	goto	l275
 38742  00EBB6                     l274:
 38743  00EBB6  848A               	bsf	138,2,c	;volatile
 38744  00EBB8  EFED  F075         	goto	l275
 38745  00EBBC                     l16708:
 38746  00EBBC  500F               	movf	lmp91000_disable@chNum^0,w,c
 38747                           
 38748                           ; Switch size 1, requested type "simple"
 38749                           ; Number of cases is 3, Range of values is 0 to 2
 38750                           ; switch strategies available:
 38751                           ; Name         Instructions Cycles
 38752                           ; simple_byte           10     6 (average)
 38753                           ;	Chosen strategy is simple_byte
 38754  00EBBE  0A00               	xorlw	0	; case 0
 38755  00EBC0  B4D8               	btfsc	status,2,c
 38756  00EBC2  EFD5  F075         	goto	l271
 38757  00EBC6  0A01               	xorlw	1	; case 1
 38758  00EBC8  B4D8               	btfsc	status,2,c
 38759  00EBCA  EFD8  F075         	goto	l273
 38760  00EBCE  0A03               	xorlw	3	; case 2
 38761  00EBD0  B4D8               	btfsc	status,2,c
 38762  00EBD2  EFDB  F075         	goto	l274
 38763  00EBD6  EFED  F075         	goto	l275
 38764  00EBDA                     l275:
 38765  00EBDA  0012               	return		;funcret
 38766  00EBDC                     __end_of_lmp91000_disable:
 38767                           	callstack 0
 38768                           
 38769 ;; *************** function _led_init *****************
 38770 ;; Defined at:
 38771 ;;		line 59 in file "app_led_task.c"
 38772 ;; Parameters:    Size  Location     Type
 38773 ;;		None
 38774 ;; Auto vars:     Size  Location     Type
 38775 ;;		None
 38776 ;; Return value:  Size  Location     Type
 38777 ;;                  1    wreg      void 
 38778 ;; Registers used:
 38779 ;;		wreg, status,2, status,0, cstack
 38780 ;; Tracked objects:
 38781 ;;		On entry : 0/0
 38782 ;;		On exit  : 0/0
 38783 ;;		Unchanged: 0/0
 38784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38789 ;;Total ram usage:        0 bytes
 38790 ;; Hardware stack levels used: 1
 38791 ;; Hardware stack levels required when called: 4
 38792 ;; This function calls:
 38793 ;;		_LED_Off
 38794 ;;		_LED_On
 38795 ;; This function is called by:
 38796 ;;		_Board_initialize
 38797 ;; This function uses a non-reentrant model
 38798 ;;
 38799                           
 38800                           	psect	text186
 38801  00E598                     __ptext186:
 38802                           	callstack 0
 38803  00E598                     _led_init:
 38804                           	callstack 25
 38805  00E598                     
 38806                           ;app_led_task.c: 61: g_led_status.seq = LED_INIT;
 38807  00E598  0E00               	movlw	0
 38808  00E59A  0101               	movlb	1	; () banked
 38809  00E59C  6F29               	movwf	_g_led_status& (0+255),b
 38810                           
 38811                           ;app_led_task.c: 62: g_led_status.last_state = LED_INIT;
 38812  00E59E  0E00               	movlw	0
 38813  00E5A0  6F2A               	movwf	(_g_led_status+1)& (0+255),b
 38814                           
 38815                           ;app_led_task.c: 63: g_led_status.isBlink = 0;
 38816  00E5A2  0E00               	movlw	0
 38817  00E5A4  6F2B               	movwf	(_g_led_status+2)& (0+255),b
 38818                           
 38819                           ;app_led_task.c: 64: g_led_status.toggle = 0;
 38820  00E5A6  0E00               	movlw	0
 38821  00E5A8  6F2C               	movwf	(_g_led_status+3)& (0+255),b
 38822                           
 38823                           ;app_led_task.c: 65: g_led_status.twoYear = 0;
 38824  00E5AA  0E00               	movlw	0
 38825  00E5AC  6F2D               	movwf	(_g_led_status+4)& (0+255),b
 38826  00E5AE                     
 38827                           ; BSR set to: 1
 38828                           ;app_led_task.c: 66: if (g_nvm.flash.usedtime >= 17520) {
 38829  00E5AE  51D9               	movf	(_g_nvm+96)& (0+255),w,b
 38830  00E5B0  11D8               	iorwf	(_g_nvm+95)& (0+255),w,b
 38831  00E5B2  E10B               	bnz	u20160
 38832  00E5B4  0E70               	movlw	112
 38833  00E5B6  5DD6               	subwf	(_g_nvm+93)& (0+255),w,b
 38834  00E5B8  0E44               	movlw	68
 38835  00E5BA  59D7               	subwfb	(_g_nvm+94)& (0+255),w,b
 38836  00E5BC  A0D8               	btfss	status,0,c
 38837  00E5BE  EFE3  F072         	goto	u20161
 38838  00E5C2  EFE5  F072         	goto	u20160
 38839  00E5C6                     u20161:
 38840  00E5C6  EFE7  F072         	goto	l18574
 38841  00E5CA                     u20160:
 38842  00E5CA                     
 38843                           ; BSR set to: 1
 38844                           ;app_led_task.c: 67: g_led_status.twoYear = 1;
 38845  00E5CA  0E01               	movlw	1
 38846  00E5CC  6F2D               	movwf	(_g_led_status+4)& (0+255),b
 38847  00E5CE                     l18574:
 38848                           
 38849                           ; BSR set to: 1
 38850                           ;app_led_task.c: 68: };app_led_task.c: 70: LED_Off();
 38851  00E5CE  ECD7  F078         	call	_LED_Off	;wreg free
 38852  00E5D2                     
 38853                           ;app_led_task.c: 71: LED_On(LED_RED);
 38854  00E5D2  0E01               	movlw	1
 38855  00E5D4  EC56  F076         	call	_LED_On
 38856  00E5D8                     
 38857                           ;app_led_task.c: 73: g_led_counter = 0;
 38858  00E5D8  0E00               	movlw	0
 38859  00E5DA  0101               	movlb	1	; () banked
 38860  00E5DC  6F46               	movwf	_g_led_counter& (0+255),b	;volatile
 38861  00E5DE  0E00               	movlw	0
 38862  00E5E0  6F47               	movwf	(_g_led_counter+1)& (0+255),b	;volatile
 38863  00E5E2  0E00               	movlw	0
 38864  00E5E4  6F48               	movwf	(_g_led_counter+2)& (0+255),b	;volatile
 38865  00E5E6  0E00               	movlw	0
 38866  00E5E8  6F49               	movwf	(_g_led_counter+3)& (0+255),b	;volatile
 38867  00E5EA                     
 38868                           ; BSR set to: 1
 38869  00E5EA  0012               	return		;funcret
 38870  00E5EC                     __end_of_led_init:
 38871                           	callstack 0
 38872                           
 38873 ;; *************** function _LED_On *****************
 38874 ;; Defined at:
 38875 ;;		line 53 in file "bsp/leds.c"
 38876 ;; Parameters:    Size  Location     Type
 38877 ;;  led             1    wreg     enum E5223
 38878 ;; Auto vars:     Size  Location     Type
 38879 ;;  led             1   14[COMRAM] enum E5223
 38880 ;; Return value:  Size  Location     Type
 38881 ;;                  1    wreg      void 
 38882 ;; Registers used:
 38883 ;;		wreg, status,2, status,0
 38884 ;; Tracked objects:
 38885 ;;		On entry : 0/0
 38886 ;;		On exit  : 0/0
 38887 ;;		Unchanged: 0/0
 38888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38893 ;;Total ram usage:        1 bytes
 38894 ;; Hardware stack levels used: 1
 38895 ;; Hardware stack levels required when called: 3
 38896 ;; This function calls:
 38897 ;;		Nothing
 38898 ;; This function is called by:
 38899 ;;		_led_warmup
 38900 ;;		_led_zerocal_end
 38901 ;;		_led_fail
 38902 ;;		_led_init
 38903 ;;		_led_task
 38904 ;;		_sens_ZeroCalib_task
 38905 ;; This function uses a non-reentrant model
 38906 ;;
 38907                           
 38908                           	psect	text187
 38909  00ECAC                     __ptext187:
 38910                           	callstack 0
 38911  00ECAC                     _LED_On:
 38912                           	callstack 26
 38913                           
 38914                           ; BSR set to: 1
 38915                           ;incstack = 0
 38916                           ;LED_On@led stored from wreg
 38917  00ECAC  6E0F               	movwf	LED_On@led^0,c
 38918  00ECAE                     
 38919                           ;leds.c: 55: switch(led)
 38920  00ECAE  EF5F  F076         	goto	l18000
 38921  00ECB2                     l160:
 38922                           
 38923                           ;leds.c: 58: LATCbits.LATC1 = 0;
 38924  00ECB2  928B               	bcf	139,1,c	;volatile
 38925                           
 38926                           ;leds.c: 59: break;
 38927  00ECB4  EF6E  F076         	goto	l164
 38928  00ECB8                     l162:
 38929                           
 38930                           ;leds.c: 62: LATCbits.LATC0 = 0;
 38931  00ECB8  908B               	bcf	139,0,c	;volatile
 38932                           
 38933                           ;leds.c: 63: break;
 38934  00ECBA  EF6E  F076         	goto	l164
 38935  00ECBE                     l18000:
 38936  00ECBE  500F               	movf	LED_On@led^0,w,c
 38937                           
 38938                           ; Switch size 1, requested type "simple"
 38939                           ; Number of cases is 3, Range of values is 0 to 2
 38940                           ; switch strategies available:
 38941                           ; Name         Instructions Cycles
 38942                           ; simple_byte           10     6 (average)
 38943                           ;	Chosen strategy is simple_byte
 38944  00ECC0  0A00               	xorlw	0	; case 0
 38945  00ECC2  B4D8               	btfsc	status,2,c
 38946  00ECC4  EF6E  F076         	goto	l164
 38947  00ECC8  0A01               	xorlw	1	; case 1
 38948  00ECCA  B4D8               	btfsc	status,2,c
 38949  00ECCC  EF59  F076         	goto	l160
 38950  00ECD0  0A03               	xorlw	3	; case 2
 38951  00ECD2  B4D8               	btfsc	status,2,c
 38952  00ECD4  EF5C  F076         	goto	l162
 38953  00ECD8  EF6E  F076         	goto	l164
 38954  00ECDC                     l164:
 38955  00ECDC  0012               	return		;funcret
 38956  00ECDE                     __end_of_LED_On:
 38957                           	callstack 0
 38958                           
 38959 ;; *************** function _LED_Off *****************
 38960 ;; Defined at:
 38961 ;;		line 86 in file "bsp/leds.c"
 38962 ;; Parameters:    Size  Location     Type
 38963 ;;		None
 38964 ;; Auto vars:     Size  Location     Type
 38965 ;;		None
 38966 ;; Return value:  Size  Location     Type
 38967 ;;                  1    wreg      void 
 38968 ;; Registers used:
 38969 ;;		None
 38970 ;; Tracked objects:
 38971 ;;		On entry : 0/0
 38972 ;;		On exit  : 0/0
 38973 ;;		Unchanged: 0/0
 38974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 38975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 38979 ;;Total ram usage:        0 bytes
 38980 ;; Hardware stack levels used: 1
 38981 ;; Hardware stack levels required when called: 3
 38982 ;; This function calls:
 38983 ;;		Nothing
 38984 ;; This function is called by:
 38985 ;;		_led_warmup
 38986 ;;		_led_zerocal_end
 38987 ;;		_led_fail
 38988 ;;		_led_init
 38989 ;;		_led_task
 38990 ;;		_sens_ZeroCalib_task
 38991 ;; This function uses a non-reentrant model
 38992 ;;
 38993                           
 38994                           	psect	text188
 38995  00F1AE                     __ptext188:
 38996                           	callstack 0
 38997  00F1AE                     _LED_Off:
 38998                           	callstack 26
 38999  00F1AE                     
 39000                           ;leds.c: 88: LATCbits.LATC1 = 1;
 39001  00F1AE  828B               	bsf	139,1,c	;volatile
 39002                           
 39003                           ;leds.c: 89: LATCbits.LATC0 = 1;
 39004  00F1B0  808B               	bsf	139,0,c	;volatile
 39005  00F1B2  0012               	return		;funcret
 39006  00F1B4                     __end_of_LED_Off:
 39007                           	callstack 0
 39008                           
 39009 ;; *************** function _i2c_init *****************
 39010 ;; Defined at:
 39011 ;;		line 16 in file "bsp/i2c.c"
 39012 ;; Parameters:    Size  Location     Type
 39013 ;;  speed           1    wreg     const enum E5223
 39014 ;; Auto vars:     Size  Location     Type
 39015 ;;  speed           1   14[COMRAM] const enum E5223
 39016 ;; Return value:  Size  Location     Type
 39017 ;;                  1    wreg      void 
 39018 ;; Registers used:
 39019 ;;		wreg, status,2
 39020 ;; Tracked objects:
 39021 ;;		On entry : 0/0
 39022 ;;		On exit  : 0/0
 39023 ;;		Unchanged: 0/0
 39024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39029 ;;Total ram usage:        1 bytes
 39030 ;; Hardware stack levels used: 1
 39031 ;; Hardware stack levels required when called: 3
 39032 ;; This function calls:
 39033 ;;		Nothing
 39034 ;; This function is called by:
 39035 ;;		_Board_initialize
 39036 ;; This function uses a non-reentrant model
 39037 ;;
 39038                           
 39039                           	psect	text189
 39040  00EA8A                     __ptext189:
 39041                           	callstack 0
 39042  00EA8A                     _i2c_init:
 39043                           	callstack 26
 39044                           
 39045                           ;incstack = 0
 39046                           ;i2c_init@speed stored from wreg
 39047  00EA8A  6E0F               	movwf	i2c_init@speed^0,c
 39048  00EA8C                     
 39049                           ;i2c.c: 19: TRISBbits.TRISB4 = 1;
 39050  00EA8C  8893               	bsf	147,4,c	;volatile
 39051                           
 39052                           ;i2c.c: 20: TRISBbits.TRISB5 = 1;
 39053  00EA8E  8A93               	bsf	147,5,c	;volatile
 39054  00EA90                     
 39055                           ;i2c.c: 23: SSP1CON1 = 0x28;
 39056  00EA90  0E28               	movlw	40
 39057  00EA92  6EC6               	movwf	198,c	;volatile
 39058                           
 39059                           ;i2c.c: 24: SSP1CON2 = 0x00;
 39060  00EA94  0E00               	movlw	0
 39061  00EA96  6EC5               	movwf	197,c	;volatile
 39062  00EA98                     
 39063                           ;i2c.c: 26: if (speed == I2C_100kHz)
 39064  00EA98  500F               	movf	i2c_init@speed^0,w,c
 39065  00EA9A  A4D8               	btfss	status,2,c
 39066  00EA9C  EF52  F075         	goto	u20141
 39067  00EAA0  EF54  F075         	goto	u20140
 39068  00EAA4                     u20141:
 39069  00EAA4  EF5A  F075         	goto	l18538
 39070  00EAA8                     u20140:
 39071  00EAA8                     
 39072                           ;i2c.c: 27: {;i2c.c: 28: SSP1STAT = 0x80;
 39073  00EAA8  0E80               	movlw	128
 39074  00EAAA  6EC7               	movwf	199,c	;volatile
 39075                           
 39076                           ;i2c.c: 29: SSP1ADD = 119;
 39077  00EAAC  0E77               	movlw	119
 39078  00EAAE  6EC8               	movwf	200,c	;volatile
 39079                           
 39080                           ;i2c.c: 30: }
 39081  00EAB0  EF5E  F075         	goto	l18540
 39082  00EAB4                     l18538:
 39083                           
 39084                           ;i2c.c: 31: else;i2c.c: 32: {;i2c.c: 33: SSP1STAT = 0x00;
 39085  00EAB4  0E00               	movlw	0
 39086  00EAB6  6EC7               	movwf	199,c	;volatile
 39087                           
 39088                           ;i2c.c: 34: SSP1ADD = 29;
 39089  00EAB8  0E1D               	movlw	29
 39090  00EABA  6EC8               	movwf	200,c	;volatile
 39091  00EABC                     l18540:
 39092                           
 39093                           ;i2c.c: 35: };i2c.c: 37: PIR1bits.SSP1IF = 0;
 39094  00EABC  969E               	bcf	158,3,c	;volatile
 39095  00EABE                     
 39096                           ;i2c.c: 38: PIR2bits.BCL1IF = 0;
 39097  00EABE  96A1               	bcf	161,3,c	;volatile
 39098  00EAC0                     
 39099                           ;i2c.c: 39: SSP1CON2bits.SEN = 0;
 39100  00EAC0  90C5               	bcf	197,0,c	;volatile
 39101  00EAC2  0012               	return		;funcret
 39102  00EAC4                     __end_of_i2c_init:
 39103                           	callstack 0
 39104                           
 39105 ;; *************** function _buffer_init *****************
 39106 ;; Defined at:
 39107 ;;		line 9 in file "util/buffer.c"
 39108 ;; Parameters:    Size  Location     Type
 39109 ;;  queue           2   14[COMRAM] PTR struct buff_queue
 39110 ;;		 -> g_usb_queue(67), g_usart_queue(67), 
 39111 ;; Auto vars:     Size  Location     Type
 39112 ;;		None
 39113 ;; Return value:  Size  Location     Type
 39114 ;;                  1    wreg      void 
 39115 ;; Registers used:
 39116 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39117 ;; Tracked objects:
 39118 ;;		On entry : 0/0
 39119 ;;		On exit  : 0/0
 39120 ;;		Unchanged: 0/0
 39121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39122 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39125 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39126 ;;Total ram usage:        2 bytes
 39127 ;; Hardware stack levels used: 1
 39128 ;; Hardware stack levels required when called: 3
 39129 ;; This function calls:
 39130 ;;		Nothing
 39131 ;; This function is called by:
 39132 ;;		_Board_initialize
 39133 ;; This function uses a non-reentrant model
 39134 ;;
 39135                           
 39136                           	psect	text190
 39137  00EDF8                     __ptext190:
 39138                           	callstack 0
 39139  00EDF8                     _buffer_init:
 39140                           	callstack 26
 39141  00EDF8                     
 39142                           ;buffer.c: 11: queue->size = 64;
 39143  00EDF8  C00F  FFD9         	movff	buffer_init@queue,fsr2l
 39144  00EDFC  C010  FFDA         	movff	buffer_init@queue+1,fsr2h
 39145  00EE00  0E40               	movlw	64
 39146  00EE02  6EDF               	movwf	indf2,c
 39147  00EE04                     
 39148                           ;buffer.c: 12: queue->read_pos = 0;
 39149  00EE04  EE20 F001          	lfsr	2,1
 39150  00EE08  500F               	movf	buffer_init@queue^0,w,c
 39151  00EE0A  26D9               	addwf	fsr2l,f,c
 39152  00EE0C  5010               	movf	(buffer_init@queue+1)^0,w,c
 39153  00EE0E  22DA               	addwfc	fsr2h,f,c
 39154  00EE10  0E00               	movlw	0
 39155  00EE12  6EDF               	movwf	indf2,c
 39156  00EE14                     
 39157                           ;buffer.c: 13: queue->write_pos = 0;
 39158  00EE14  EE20 F002          	lfsr	2,2
 39159  00EE18  500F               	movf	buffer_init@queue^0,w,c
 39160  00EE1A  26D9               	addwf	fsr2l,f,c
 39161  00EE1C  5010               	movf	(buffer_init@queue+1)^0,w,c
 39162  00EE1E  22DA               	addwfc	fsr2h,f,c
 39163  00EE20  0E00               	movlw	0
 39164  00EE22  6EDF               	movwf	indf2,c
 39165  00EE24  0012               	return		;funcret
 39166  00EE26                     __end_of_buffer_init:
 39167                           	callstack 0
 39168                           
 39169 ;; *************** function _atcommand_init *****************
 39170 ;; Defined at:
 39171 ;;		line 115 in file "app_atcommand.c"
 39172 ;; Parameters:    Size  Location     Type
 39173 ;;		None
 39174 ;; Auto vars:     Size  Location     Type
 39175 ;;		None
 39176 ;; Return value:  Size  Location     Type
 39177 ;;                  1    wreg      void 
 39178 ;; Registers used:
 39179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39180 ;; Tracked objects:
 39181 ;;		On entry : 0/0
 39182 ;;		On exit  : 0/0
 39183 ;;		Unchanged: 0/0
 39184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39189 ;;Total ram usage:        0 bytes
 39190 ;; Hardware stack levels used: 1
 39191 ;; Hardware stack levels required when called: 5
 39192 ;; This function calls:
 39193 ;;		_clear_command
 39194 ;; This function is called by:
 39195 ;;		_Board_initialize
 39196 ;; This function uses a non-reentrant model
 39197 ;;
 39198                           
 39199                           	psect	text191
 39200  00F17A                     __ptext191:
 39201                           	callstack 0
 39202  00F17A                     _atcommand_init:
 39203                           	callstack 24
 39204  00F17A                     
 39205                           ;app_atcommand.c: 117: g_atcommand.seq = AT_INIT;
 39206  00F17A  0E00               	movlw	0
 39207  00F17C  0105               	movlb	5	; () banked
 39208  00F17E  6F00               	movwf	_g_atcommand& (0+255),b
 39209  00F180                     
 39210                           ; BSR set to: 5
 39211                           ;app_atcommand.c: 118: clear_command();
 39212  00F180  EC75  F06E         	call	_clear_command	;wreg free
 39213  00F184  0012               	return		;funcret
 39214  00F186                     __end_of_atcommand_init:
 39215                           	callstack 0
 39216                           
 39217 ;; *************** function _clear_command *****************
 39218 ;; Defined at:
 39219 ;;		line 580 in file "app_atcommand.c"
 39220 ;; Parameters:    Size  Location     Type
 39221 ;;		None
 39222 ;; Auto vars:     Size  Location     Type
 39223 ;;		None
 39224 ;; Return value:  Size  Location     Type
 39225 ;;                  1    wreg      void 
 39226 ;; Registers used:
 39227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39228 ;; Tracked objects:
 39229 ;;		On entry : 0/0
 39230 ;;		On exit  : 0/0
 39231 ;;		Unchanged: 0/0
 39232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39237 ;;Total ram usage:        0 bytes
 39238 ;; Hardware stack levels used: 1
 39239 ;; Hardware stack levels required when called: 4
 39240 ;; This function calls:
 39241 ;;		__strclr
 39242 ;; This function is called by:
 39243 ;;		_atcommand_init
 39244 ;;		_atcommand_task
 39245 ;; This function uses a non-reentrant model
 39246 ;;
 39247                           
 39248                           	psect	text192
 39249  00DCEA                     __ptext192:
 39250                           	callstack 0
 39251  00DCEA                     _clear_command:
 39252                           	callstack 25
 39253  00DCEA                     
 39254                           ;app_atcommand.c: 582: g_atcommand.readidx = 0;
 39255  00DCEA  0E00               	movlw	0
 39256  00DCEC  0105               	movlb	5	; () banked
 39257  00DCEE  6F41               	movwf	(_g_atcommand+65)& (0+255),b
 39258                           
 39259                           ;app_atcommand.c: 583: g_atcommand.status.channelno = 0;
 39260  00DCF0  0E00               	movlw	0
 39261  00DCF2  6F42               	movwf	(_g_atcommand+66)& (0+255),b
 39262                           
 39263                           ;app_atcommand.c: 584: g_atcommand.status.last_update = 0;
 39264  00DCF4  0E00               	movlw	0
 39265  00DCF6  6F43               	movwf	(_g_atcommand+67)& (0+255),b
 39266                           
 39267                           ;app_atcommand.c: 585: g_atcommand.status.atcommand = ATNONE;
 39268  00DCF8  0E00               	movlw	0
 39269  00DCFA  6F44               	movwf	(_g_atcommand+68)& (0+255),b
 39270                           
 39271                           ;app_atcommand.c: 586: g_atcommand.status.isApply = 0;
 39272  00DCFC  0E00               	movlw	0
 39273  00DCFE  6F50               	movwf	(_g_atcommand+80)& (0+255),b
 39274                           
 39275                           ;app_atcommand.c: 587: g_atcommand.status.type = AT_READONLY;
 39276  00DD00  0E00               	movlw	0
 39277  00DD02  6FF1               	movwf	(_g_atcommand+241)& (0+255),b
 39278  00DD04                     
 39279                           ; BSR set to: 5
 39280                           ;app_atcommand.c: 589: _strclr(g_atcommand.read_cmd, sizeof(g_atcommand.read_cmd));
 39281  00DD04  0E01               	movlw	low (_g_atcommand+1)
 39282  00DD06  6E0F               	movwf	__strclr@dest^0,c
 39283  00DD08  0E05               	movlw	high (_g_atcommand+1)
 39284  00DD0A  6E10               	movwf	(__strclr@dest+1)^0,c
 39285  00DD0C  0E00               	movlw	0
 39286  00DD0E  6E12               	movwf	(__strclr@n+1)^0,c
 39287  00DD10  0E40               	movlw	64
 39288  00DD12  6E11               	movwf	__strclr@n^0,c
 39289  00DD14  EC0C  F071         	call	__strclr	;wreg free
 39290  00DD18                     
 39291                           ;app_atcommand.c: 590: _strclr(g_atcommand.status.szcommand, sizeof(g_atcommand.status.s
      +                          zcommand));
 39292  00DD18  0E45               	movlw	low (_g_atcommand+69)
 39293  00DD1A  6E0F               	movwf	__strclr@dest^0,c
 39294  00DD1C  0E05               	movlw	high (_g_atcommand+69)
 39295  00DD1E  6E10               	movwf	(__strclr@dest+1)^0,c
 39296  00DD20  0E00               	movlw	0
 39297  00DD22  6E12               	movwf	(__strclr@n+1)^0,c
 39298  00DD24  0E0B               	movlw	11
 39299  00DD26  6E11               	movwf	__strclr@n^0,c
 39300  00DD28  EC0C  F071         	call	__strclr	;wreg free
 39301  00DD2C                     
 39302                           ;app_atcommand.c: 591: _strclr(g_atcommand.status.apply_params, sizeof(g_atcommand.statu
      +                          s.apply_params));
 39303  00DD2C  0E51               	movlw	low (_g_atcommand+81)
 39304  00DD2E  6E0F               	movwf	__strclr@dest^0,c
 39305  00DD30  0E05               	movlw	high (_g_atcommand+81)
 39306  00DD32  6E10               	movwf	(__strclr@dest+1)^0,c
 39307  00DD34  0E00               	movlw	0
 39308  00DD36  6E12               	movwf	(__strclr@n+1)^0,c
 39309  00DD38  0E20               	movlw	32
 39310  00DD3A  6E11               	movwf	__strclr@n^0,c
 39311  00DD3C  EC0C  F071         	call	__strclr	;wreg free
 39312  00DD40                     
 39313                           ;app_atcommand.c: 592: _strclr(writeBuffer, 64);
 39314  00DD40  0EB0               	movlw	low _writeBuffer
 39315  00DD42  6E0F               	movwf	__strclr@dest^0,c
 39316  00DD44  0E02               	movlw	high _writeBuffer
 39317  00DD46  6E10               	movwf	(__strclr@dest+1)^0,c
 39318  00DD48  0E00               	movlw	0
 39319  00DD4A  6E12               	movwf	(__strclr@n+1)^0,c
 39320  00DD4C  0E40               	movlw	64
 39321  00DD4E  6E11               	movwf	__strclr@n^0,c
 39322  00DD50  EC0C  F071         	call	__strclr	;wreg free
 39323  00DD54  0012               	return		;funcret
 39324  00DD56                     __end_of_clear_command:
 39325                           	callstack 0
 39326                           
 39327 ;; *************** function __strclr *****************
 39328 ;; Defined at:
 39329 ;;		line 47 in file "util/_string.c"
 39330 ;; Parameters:    Size  Location     Type
 39331 ;;  dest            2   14[COMRAM] PTR unsigned char 
 39332 ;;		 -> writeBuffer(64), g_atcommand.status(176), g_atcommand(242), 
 39333 ;;  n               2   16[COMRAM] int 
 39334 ;; Auto vars:     Size  Location     Type
 39335 ;;		None
 39336 ;; Return value:  Size  Location     Type
 39337 ;;                  1    wreg      void 
 39338 ;; Registers used:
 39339 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39340 ;; Tracked objects:
 39341 ;;		On entry : 0/0
 39342 ;;		On exit  : 0/0
 39343 ;;		Unchanged: 0/0
 39344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39349 ;;Total ram usage:        4 bytes
 39350 ;; Hardware stack levels used: 1
 39351 ;; Hardware stack levels required when called: 3
 39352 ;; This function calls:
 39353 ;;		Nothing
 39354 ;; This function is called by:
 39355 ;;		_atcommand_task
 39356 ;;		_clear_command
 39357 ;; This function uses a non-reentrant model
 39358 ;;
 39359                           
 39360                           	psect	text193
 39361  00E218                     __ptext193:
 39362                           	callstack 0
 39363  00E218                     __strclr:
 39364                           	callstack 25
 39365  00E218                     
 39366                           ;_string.c: 49: if(!dest || !n || n<0) return;
 39367  00E218  500F               	movf	__strclr@dest^0,w,c
 39368  00E21A  1010               	iorwf	(__strclr@dest+1)^0,w,c
 39369  00E21C  B4D8               	btfsc	status,2,c
 39370  00E21E  EF13  F071         	goto	u19071
 39371  00E222  EF15  F071         	goto	u19070
 39372  00E226                     u19071:
 39373  00E226  EF3C  F071         	goto	l2316
 39374  00E22A                     u19070:
 39375  00E22A  5011               	movf	__strclr@n^0,w,c
 39376  00E22C  1012               	iorwf	(__strclr@n+1)^0,w,c
 39377  00E22E  B4D8               	btfsc	status,2,c
 39378  00E230  EF1C  F071         	goto	u19081
 39379  00E234  EF1E  F071         	goto	u19080
 39380  00E238                     u19081:
 39381  00E238  EF3C  F071         	goto	l2316
 39382  00E23C                     u19080:
 39383  00E23C  BE12               	btfsc	(__strclr@n+1)^0,7,c
 39384  00E23E  EF25  F071         	goto	u19090
 39385  00E242  EF23  F071         	goto	u19091
 39386  00E246                     u19091:
 39387  00E246  EF2F  F071         	goto	l17674
 39388  00E24A                     u19090:
 39389  00E24A  EF3C  F071         	goto	l2316
 39390  00E24E                     l17670:
 39391  00E24E  C00F  FFD9         	movff	__strclr@dest,fsr2l
 39392  00E252  C010  FFDA         	movff	__strclr@dest+1,fsr2h
 39393  00E256  0E00               	movlw	0
 39394  00E258  6EDF               	movwf	indf2,c
 39395  00E25A  4A0F               	infsnz	__strclr@dest^0,f,c
 39396  00E25C  2A10               	incf	(__strclr@dest+1)^0,f,c
 39397  00E25E                     l17674:
 39398  00E25E  0611               	decf	__strclr@n^0,f,c
 39399  00E260  A0D8               	btfss	status,0,c
 39400  00E262  0612               	decf	(__strclr@n+1)^0,f,c
 39401  00E264  2811               	incf	__strclr@n^0,w,c
 39402  00E266  E106               	bnz	u19101
 39403  00E268  2812               	incf	(__strclr@n+1)^0,w,c
 39404  00E26A  A4D8               	btfss	status,2,c
 39405  00E26C  EF3A  F071         	goto	u19101
 39406  00E270  EF3C  F071         	goto	u19100
 39407  00E274                     u19101:
 39408  00E274  EF27  F071         	goto	l17670
 39409  00E278                     u19100:
 39410  00E278                     l2316:
 39411  00E278  0012               	return		;funcret
 39412  00E27A                     __end_of__strclr:
 39413                           	callstack 0
 39414                           
 39415 ;; *************** function _LED_Enable *****************
 39416 ;; Defined at:
 39417 ;;		line 173 in file "bsp/leds.c"
 39418 ;; Parameters:    Size  Location     Type
 39419 ;;  led             1    wreg     enum E5223
 39420 ;; Auto vars:     Size  Location     Type
 39421 ;;  led             1   14[COMRAM] enum E5223
 39422 ;; Return value:  Size  Location     Type
 39423 ;;                  1    wreg      void 
 39424 ;; Registers used:
 39425 ;;		wreg, status,2, status,0
 39426 ;; Tracked objects:
 39427 ;;		On entry : 0/0
 39428 ;;		On exit  : 0/0
 39429 ;;		Unchanged: 0/0
 39430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39435 ;;Total ram usage:        1 bytes
 39436 ;; Hardware stack levels used: 1
 39437 ;; Hardware stack levels required when called: 3
 39438 ;; This function calls:
 39439 ;;		Nothing
 39440 ;; This function is called by:
 39441 ;;		_Board_initialize
 39442 ;; This function uses a non-reentrant model
 39443 ;;
 39444                           
 39445                           	psect	text194
 39446  00ECDE                     __ptext194:
 39447                           	callstack 0
 39448  00ECDE                     _LED_Enable:
 39449                           	callstack 26
 39450                           
 39451                           ;incstack = 0
 39452                           ;LED_Enable@led stored from wreg
 39453  00ECDE  6E0F               	movwf	LED_Enable@led^0,c
 39454  00ECE0                     
 39455                           ;leds.c: 175: switch(led)
 39456  00ECE0  EF78  F076         	goto	l18550
 39457  00ECE4                     l187:
 39458                           
 39459                           ;leds.c: 178: TRISCbits.TRISC1 = 0;
 39460  00ECE4  9294               	bcf	148,1,c	;volatile
 39461                           
 39462                           ;leds.c: 179: break;
 39463  00ECE6  EF87  F076         	goto	l191
 39464  00ECEA                     l189:
 39465                           
 39466                           ;leds.c: 182: TRISCbits.TRISC0 = 0;
 39467  00ECEA  9094               	bcf	148,0,c	;volatile
 39468                           
 39469                           ;leds.c: 183: break;
 39470  00ECEC  EF87  F076         	goto	l191
 39471  00ECF0                     l18550:
 39472  00ECF0  500F               	movf	LED_Enable@led^0,w,c
 39473                           
 39474                           ; Switch size 1, requested type "simple"
 39475                           ; Number of cases is 3, Range of values is 0 to 2
 39476                           ; switch strategies available:
 39477                           ; Name         Instructions Cycles
 39478                           ; simple_byte           10     6 (average)
 39479                           ;	Chosen strategy is simple_byte
 39480  00ECF2  0A00               	xorlw	0	; case 0
 39481  00ECF4  B4D8               	btfsc	status,2,c
 39482  00ECF6  EF87  F076         	goto	l191
 39483  00ECFA  0A01               	xorlw	1	; case 1
 39484  00ECFC  B4D8               	btfsc	status,2,c
 39485  00ECFE  EF72  F076         	goto	l187
 39486  00ED02  0A03               	xorlw	3	; case 2
 39487  00ED04  B4D8               	btfsc	status,2,c
 39488  00ED06  EF75  F076         	goto	l189
 39489  00ED0A  EF87  F076         	goto	l191
 39490  00ED0E                     l191:
 39491  00ED0E  0012               	return		;funcret
 39492  00ED10                     __end_of_LED_Enable:
 39493                           	callstack 0
 39494                           
 39495 ;; *************** function _uart_getBuffer *****************
 39496 ;; Defined at:
 39497 ;;		line 69 in file "main.c"
 39498 ;; Parameters:    Size  Location     Type
 39499 ;;		None
 39500 ;; Auto vars:     Size  Location     Type
 39501 ;;  ch              1   13[COMRAM] unsigned char 
 39502 ;; Return value:  Size  Location     Type
 39503 ;;                  1    wreg      void 
 39504 ;; Registers used:
 39505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 39506 ;; Tracked objects:
 39507 ;;		On entry : 0/0
 39508 ;;		On exit  : 0/0
 39509 ;;		Unchanged: 0/0
 39510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39513 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39514 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39515 ;;Total ram usage:        8 bytes
 39516 ;; Hardware stack levels used: 1
 39517 ;; Hardware stack levels required when called: 2
 39518 ;; This function calls:
 39519 ;;		_usart_getc
 39520 ;;		_usart_rx_ready
 39521 ;;		i1_buffer_en_queue
 39522 ;; This function is called by:
 39523 ;;		Interrupt level 1
 39524 ;; This function uses a non-reentrant model
 39525 ;;
 39526                           
 39527                           	psect	intcodelo
 39528  002018                     __pintcodelo:
 39529                           	callstack 0
 39530  002018                     _uart_getBuffer:
 39531                           	callstack 18
 39532                           
 39533                           ;incstack = 0
 39534  002018  8051               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
 39535  00201A  CFD8 F007          	movff	status,??_uart_getBuffer
 39536  00201E  CFE8 F008          	movff	wreg,??_uart_getBuffer+1
 39537  002022  CFE0 F009          	movff	bsr,??_uart_getBuffer+2
 39538  002026  CFE1 F00A          	movff	fsr1l,??_uart_getBuffer+3
 39539  00202A  CFE2 F00B          	movff	fsr1h,??_uart_getBuffer+4
 39540  00202E  CFD9 F00C          	movff	fsr2l,??_uart_getBuffer+5
 39541  002032  CFDA F00D          	movff	fsr2h,??_uart_getBuffer+6
 39542  002036                     
 39543                           ;main.c: 74: if(usart_rx_ready()) {
 39544  002036  EC8E  F078         	call	_usart_rx_ready	;wreg free
 39545  00203A  0900               	iorlw	0
 39546  00203C  B4D8               	btfsc	status,2,c
 39547  00203E  EF23  F010         	goto	i1u1645_21
 39548  002042  EF25  F010         	goto	i1u1645_20
 39549  002046                     i1u1645_21:
 39550  002046  EF30  F010         	goto	i1l613
 39551  00204A                     i1u1645_20:
 39552  00204A                     
 39553                           ;main.c: 75: uint8_t ch = usart_getc();
 39554  00204A  ECBD  F077         	call	_usart_getc	;wreg free
 39555  00204E  6E0E               	movwf	uart_getBuffer@ch^0,c
 39556  002050                     
 39557                           ;main.c: 76: buffer_en_queue(&g_usart_queue, ch);
 39558  002050  0E77               	movlw	low _g_usart_queue
 39559  002052  6E01               	movwf	i1buffer_en_queue@queue^0,c
 39560  002054  0E03               	movlw	high _g_usart_queue
 39561  002056  6E02               	movwf	(i1buffer_en_queue@queue+1)^0,c
 39562  002058  C00E  F003         	movff	uart_getBuffer@ch,i1buffer_en_queue@ch
 39563  00205C  ECBD  F073         	call	i1_buffer_en_queue	;wreg free
 39564  002060                     i1l613:
 39565  002060  C00D  FFDA         	movff	??_uart_getBuffer+6,fsr2h
 39566  002064  C00C  FFD9         	movff	??_uart_getBuffer+5,fsr2l
 39567  002068  C00B  FFE2         	movff	??_uart_getBuffer+4,fsr1h
 39568  00206C  C00A  FFE1         	movff	??_uart_getBuffer+3,fsr1l
 39569  002070  C009  FFE0         	movff	??_uart_getBuffer+2,bsr
 39570  002074  C008  FFE8         	movff	??_uart_getBuffer+1,wreg
 39571  002078  C007  FFD8         	movff	??_uart_getBuffer,status
 39572  00207C  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
 39573  00207E  0010               	retfie	
 39574  002080                     __end_of_uart_getBuffer:
 39575                           	callstack 0
 39576                           
 39577 ;; *************** function i1_buffer_en_queue *****************
 39578 ;; Defined at:
 39579 ;;		line 16 in file "util/buffer.c"
 39580 ;; Parameters:    Size  Location     Type
 39581 ;;  queue           2    0[COMRAM] PTR struct buff_queue
 39582 ;;		 -> g_usb_queue(67), g_usart_queue(67), 
 39583 ;;  ch              1    2[COMRAM] unsigned char 
 39584 ;; Auto vars:     Size  Location     Type
 39585 ;;		None
 39586 ;; Return value:  Size  Location     Type
 39587 ;;                  1    wreg      void 
 39588 ;; Registers used:
 39589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 39590 ;; Tracked objects:
 39591 ;;		On entry : 0/0
 39592 ;;		On exit  : 0/0
 39593 ;;		Unchanged: 0/0
 39594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39595 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39597 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39598 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39599 ;;Total ram usage:        6 bytes
 39600 ;; Hardware stack levels used: 1
 39601 ;; Hardware stack levels required when called: 1
 39602 ;; This function calls:
 39603 ;;		Nothing
 39604 ;; This function is called by:
 39605 ;;		_uart_getBuffer
 39606 ;; This function uses a non-reentrant model
 39607 ;;
 39608                           
 39609                           	psect	text196
 39610  00E77A                     __ptext196:
 39611                           	callstack 0
 39612  00E77A                     i1_buffer_en_queue:
 39613                           	callstack 18
 39614  00E77A                     
 39615                           ;buffer.c: 18: queue->buffer[queue->write_pos] = ch;
 39616  00E77A  EE20 F002          	lfsr	2,2
 39617  00E77E  5001               	movf	i1buffer_en_queue@queue^0,w,c
 39618  00E780  26D9               	addwf	fsr2l,f,c
 39619  00E782  5002               	movf	(i1buffer_en_queue@queue+1)^0,w,c
 39620  00E784  22DA               	addwfc	fsr2h,f,c
 39621  00E786  50DF               	movf	indf2,w,c
 39622  00E788  6E04               	movwf	??i1_buffer_en_queue^0,c
 39623  00E78A  5004               	movf	??i1_buffer_en_queue^0,w,c
 39624  00E78C  2401               	addwf	i1buffer_en_queue@queue^0,w,c
 39625  00E78E  6E05               	movwf	(??i1_buffer_en_queue+1)^0,c
 39626  00E790  0E00               	movlw	0
 39627  00E792  2002               	addwfc	(i1buffer_en_queue@queue+1)^0,w,c
 39628  00E794  6E06               	movwf	(??i1_buffer_en_queue+2)^0,c
 39629  00E796  0E03               	movlw	3
 39630  00E798  2405               	addwf	(??i1_buffer_en_queue+1)^0,w,c
 39631  00E79A  6ED9               	movwf	fsr2l,c
 39632  00E79C  0E00               	movlw	0
 39633  00E79E  2006               	addwfc	(??i1_buffer_en_queue+2)^0,w,c
 39634  00E7A0  6EDA               	movwf	fsr2h,c
 39635  00E7A2  C003  FFDF         	movff	i1buffer_en_queue@ch,indf2
 39636  00E7A6                     
 39637                           ;buffer.c: 19: queue->write_pos = (++queue->write_pos)%64;
 39638  00E7A6  EE20 F002          	lfsr	2,2
 39639  00E7AA  5001               	movf	i1buffer_en_queue@queue^0,w,c
 39640  00E7AC  26D9               	addwf	fsr2l,f,c
 39641  00E7AE  5002               	movf	(i1buffer_en_queue@queue+1)^0,w,c
 39642  00E7B0  22DA               	addwfc	fsr2h,f,c
 39643  00E7B2  EE10 F002          	lfsr	1,2
 39644  00E7B6  5001               	movf	i1buffer_en_queue@queue^0,w,c
 39645  00E7B8  26E1               	addwf	fsr1l,f,c
 39646  00E7BA  5002               	movf	(i1buffer_en_queue@queue+1)^0,w,c
 39647  00E7BC  22E2               	addwfc	fsr1h,f,c
 39648  00E7BE  2AE7               	incf	indf1,f,c
 39649  00E7C0  50E7               	movf	indf1,w,c
 39650  00E7C2  0B3F               	andlw	63
 39651  00E7C4  6EDF               	movwf	indf2,c
 39652  00E7C6  0012               	return		;funcret
 39653  00E7C8                     __end_ofi1_buffer_en_queue:
 39654                           	callstack 0
 39655                           
 39656 ;; *************** function _usart_rx_ready *****************
 39657 ;; Defined at:
 39658 ;;		line 44 in file "bsp/usart.c"
 39659 ;; Parameters:    Size  Location     Type
 39660 ;;		None
 39661 ;; Auto vars:     Size  Location     Type
 39662 ;;		None
 39663 ;; Return value:  Size  Location     Type
 39664 ;;                  1    wreg      unsigned char 
 39665 ;; Registers used:
 39666 ;;		wreg
 39667 ;; Tracked objects:
 39668 ;;		On entry : 0/0
 39669 ;;		On exit  : 0/0
 39670 ;;		Unchanged: 0/0
 39671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39676 ;;Total ram usage:        0 bytes
 39677 ;; Hardware stack levels used: 1
 39678 ;; Hardware stack levels required when called: 1
 39679 ;; This function calls:
 39680 ;;		Nothing
 39681 ;; This function is called by:
 39682 ;;		_uart_getBuffer
 39683 ;;		_usart_readByte
 39684 ;; This function uses a non-reentrant model
 39685 ;;
 39686                           
 39687                           	psect	text197
 39688  00F11C                     __ptext197:
 39689                           	callstack 0
 39690  00F11C                     _usart_rx_ready:
 39691                           	callstack 18
 39692  00F11C                     
 39693                           ;usart.c: 46: if (PIR1bits.RC1IF)
 39694  00F11C  AA9E               	btfss	158,5,c	;volatile
 39695  00F11E  EF93  F078         	goto	i1u1539_21
 39696  00F122  EF95  F078         	goto	i1u1539_20
 39697  00F126                     i1u1539_21:
 39698  00F126  EF98  F078         	goto	i1l14964
 39699  00F12A                     i1u1539_20:
 39700  00F12A                     
 39701                           ;usart.c: 47: return 1;
 39702  00F12A  0E01               	movlw	1
 39703  00F12C  EF99  F078         	goto	i1l464
 39704  00F130                     i1l14964:
 39705                           
 39706                           ;usart.c: 48: return 0;
 39707  00F130  0E00               	movlw	0
 39708  00F132                     i1l464:
 39709  00F132  0012               	return		;funcret
 39710  00F134                     __end_of_usart_rx_ready:
 39711                           	callstack 0
 39712                           
 39713 ;; *************** function _usart_getc *****************
 39714 ;; Defined at:
 39715 ;;		line 51 in file "bsp/usart.c"
 39716 ;; Parameters:    Size  Location     Type
 39717 ;;		None
 39718 ;; Auto vars:     Size  Location     Type
 39719 ;;  c               1    0[COMRAM] unsigned char 
 39720 ;; Return value:  Size  Location     Type
 39721 ;;                  1    wreg      unsigned char 
 39722 ;; Registers used:
 39723 ;;		wreg, status,2
 39724 ;; Tracked objects:
 39725 ;;		On entry : 0/0
 39726 ;;		On exit  : 0/0
 39727 ;;		Unchanged: 0/0
 39728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39732 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39733 ;;Total ram usage:        1 bytes
 39734 ;; Hardware stack levels used: 1
 39735 ;; Hardware stack levels required when called: 1
 39736 ;; This function calls:
 39737 ;;		Nothing
 39738 ;; This function is called by:
 39739 ;;		_uart_getBuffer
 39740 ;;		_usart_readByte
 39741 ;; This function uses a non-reentrant model
 39742 ;;
 39743                           
 39744                           	psect	text198
 39745  00EF7A                     __ptext198:
 39746                           	callstack 0
 39747  00EF7A                     _usart_getc:
 39748                           	callstack 18
 39749  00EF7A                     
 39750                           ;usart.c: 55: if(RCSTA1bits.OERR == 1)
 39751  00EF7A  A2AC               	btfss	172,1,c	;volatile
 39752  00EF7C  EFC2  F077         	goto	i1u1540_21
 39753  00EF80  EFC4  F077         	goto	i1u1540_20
 39754  00EF84                     i1u1540_21:
 39755  00EF84  EFCA  F077         	goto	i1l467
 39756  00EF88                     i1u1540_20:
 39757  00EF88                     
 39758                           ;usart.c: 56: {;usart.c: 57: RCSTA1bits.CREN = 0;
 39759  00EF88  98AC               	bcf	172,4,c	;volatile
 39760                           
 39761                           ;usart.c: 58: c = RCREG1;
 39762  00EF8A  CFAF F001          	movff	4015,usart_getc@c	;volatile
 39763                           
 39764                           ;usart.c: 59: RCSTA1bits.CREN = 1;
 39765  00EF8E  88AC               	bsf	172,4,c	;volatile
 39766                           
 39767                           ;usart.c: 60: }
 39768  00EF90  EFCC  F077         	goto	i1l14974
 39769  00EF94                     i1l467:
 39770                           
 39771                           ;usart.c: 61: else;usart.c: 62: {;usart.c: 63: c = RCREG1;
 39772  00EF94  CFAF F001          	movff	4015,usart_getc@c	;volatile
 39773  00EF98                     i1l14974:
 39774                           
 39775                           ;usart.c: 64: };usart.c: 65: return c;
 39776  00EF98  5001               	movf	usart_getc@c^0,w,c
 39777  00EF9A  0012               	return		;funcret
 39778  00EF9C                     __end_of_usart_getc:
 39779                           	callstack 0
 39780                           
 39781 ;; *************** function _SYS_InterruptHigh *****************
 39782 ;; Defined at:
 39783 ;;		line 145 in file "system.c"
 39784 ;; Parameters:    Size  Location     Type
 39785 ;;		None
 39786 ;; Auto vars:     Size  Location     Type
 39787 ;;		None
 39788 ;; Return value:  Size  Location     Type
 39789 ;;                  1    wreg      void 
 39790 ;; Registers used:
 39791 ;;		wreg, status,2, status,0
 39792 ;; Tracked objects:
 39793 ;;		On entry : 0/0
 39794 ;;		On exit  : 0/0
 39795 ;;		Unchanged: 0/0
 39796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 39797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 39801 ;;Total ram usage:        0 bytes
 39802 ;; Hardware stack levels used: 1
 39803 ;; This function calls:
 39804 ;;		Nothing
 39805 ;; This function is called by:
 39806 ;;		Interrupt level 2
 39807 ;; This function uses a non-reentrant model
 39808 ;;
 39809                           
 39810                           	psect	intcode
 39811  002008                     __pintcode:
 39812                           	callstack 0
 39813  002008                     _SYS_InterruptHigh:
 39814                           	callstack 18
 39815                           
 39816                           ;incstack = 0
 39817  002008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 39818  00200A  EF6C  F071         	goto	int_func
 39819                           
 39820                           	psect	intcode_body
 39821  00E2D8                     __pintcode_body:
 39822                           	callstack 18
 39823  00E2D8                     int_func:
 39824                           	callstack 18
 39825  00E2D8                     
 39826                           ;system.c: 152: if(INTCONbits.TMR0IF)
 39827  00E2D8  A4F2               	btfss	242,2,c	;volatile
 39828  00E2DA  EF71  F071         	goto	i2u1646_41
 39829  00E2DE  EF73  F071         	goto	i2u1646_40
 39830  00E2E2                     i2u1646_41:
 39831  00E2E2  EF98  F071         	goto	i2l1534
 39832  00E2E6                     i2u1646_40:
 39833  00E2E6                     
 39834                           ;system.c: 153: {;system.c: 154: INTCONbits.TMR0IF = 0;
 39835  00E2E6  94F2               	bcf	242,2,c	;volatile
 39836  00E2E8                     
 39837                           ;system.c: 155: g_tick_count++;
 39838  00E2E8  0101               	movlb	1	; () banked
 39839  00E2EA  2B75               	incf	_g_tick_count& (0+255),f,b	;volatile
 39840  00E2EC                     
 39841                           ; BSR set to: 1
 39842                           ;system.c: 157: if(g_tick_count > 7)
 39843  00E2EC  0E07               	movlw	7
 39844  00E2EE  6575               	cpfsgt	_g_tick_count& (0+255),b	;volatile
 39845  00E2F0  EF7C  F071         	goto	i2u1647_41
 39846  00E2F4  EF7E  F071         	goto	i2u1647_40
 39847  00E2F8                     i2u1647_41:
 39848  00E2F8  EF98  F071         	goto	i2l1534
 39849  00E2FC                     i2u1647_40:
 39850  00E2FC                     
 39851                           ; BSR set to: 1
 39852                           ;system.c: 158: {;system.c: 159: g_large_counter++;
 39853  00E2FC  0E01               	movlw	1
 39854  00E2FE  2742               	addwf	_g_large_counter& (0+255),f,b	;volatile
 39855  00E300  0E00               	movlw	0
 39856  00E302  2343               	addwfc	(_g_large_counter+1)& (0+255),f,b	;volatile
 39857  00E304  2344               	addwfc	(_g_large_counter+2)& (0+255),f,b	;volatile
 39858  00E306  2345               	addwfc	(_g_large_counter+3)& (0+255),f,b	;volatile
 39859                           
 39860                           ;system.c: 160: g_led_counter++;
 39861  00E308  0E01               	movlw	1
 39862  00E30A  2746               	addwf	_g_led_counter& (0+255),f,b	;volatile
 39863  00E30C  0E00               	movlw	0
 39864  00E30E  2347               	addwfc	(_g_led_counter+1)& (0+255),f,b	;volatile
 39865  00E310  2348               	addwfc	(_g_led_counter+2)& (0+255),f,b	;volatile
 39866  00E312  2349               	addwfc	(_g_led_counter+3)& (0+255),f,b	;volatile
 39867                           
 39868                           ;system.c: 161: g_usedtime_count++;
 39869  00E314  0E01               	movlw	1
 39870  00E316  274A               	addwf	_g_usedtime_count& (0+255),f,b	;volatile
 39871  00E318  0E00               	movlw	0
 39872  00E31A  234B               	addwfc	(_g_usedtime_count+1)& (0+255),f,b	;volatile
 39873  00E31C  234C               	addwfc	(_g_usedtime_count+2)& (0+255),f,b	;volatile
 39874  00E31E  234D               	addwfc	(_g_usedtime_count+3)& (0+255),f,b	;volatile
 39875                           
 39876                           ;system.c: 162: g_calib_count++;
 39877  00E320  0E01               	movlw	1
 39878  00E322  273A               	addwf	_g_calib_count& (0+255),f,b	;volatile
 39879  00E324  0E00               	movlw	0
 39880  00E326  233B               	addwfc	(_g_calib_count+1)& (0+255),f,b	;volatile
 39881  00E328  233C               	addwfc	(_g_calib_count+2)& (0+255),f,b	;volatile
 39882  00E32A  233D               	addwfc	(_g_calib_count+3)& (0+255),f,b	;volatile
 39883  00E32C                     
 39884                           ; BSR set to: 1
 39885                           ;system.c: 163: g_tick_count = 0;
 39886  00E32C  0E00               	movlw	0
 39887  00E32E  6F75               	movwf	_g_tick_count& (0+255),b	;volatile
 39888  00E330                     i2l1534:
 39889  00E330  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 39890  00E332  0011               	retfie		f
 39891  00E334                     __end_of_SYS_InterruptHigh:
 39892                           	callstack 0
 39893                           
 39894                           	psect	rparam
 39895  0000                     
 39896                           	psect	temp
 39897  000051                     btemp:
 39898                           	callstack 0
 39899  000051                     	ds	1
 39900  0000                     int$flags	set	btemp
 39901  0000                     wtemp8	set	btemp+1
 39902  0000                     ttemp5	set	btemp+1
 39903  0000                     ttemp6	set	btemp+4
 39904  0000                     ttemp7	set	btemp+8
 39905                           
 39906                           	psect	config
 39907                           
 39908                           ;Config register CONFIG1L @ 0xFFF8
 39909                           ;	Watchdog Timer
 39910                           ;	WDTEN = OFF, Disabled - Controlled by SWDTEN bit
 39911                           ;	PLL Prescaler Selection bits
 39912                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 39913                           ;	Stack Overflow/Underflow Reset
 39914                           ;	STVREN = ON, Enabled
 39915                           ;	Extended Instruction Set
 39916                           ;	XINST = OFF, Disabled
 39917                           ;	Background Debug
 39918                           ;	DEBUG = 0x1, unprogrammed default
 39919  FFF8                     	org	65528
 39920  FFF8  AC                 	db	172
 39921                           
 39922                           ;Config register CONFIG1H @ 0xFFF9
 39923                           ;	CPU System Clock Postscaler
 39924                           ;	CPUDIV = OSC1, No CPU system clock divide
 39925                           ;	Code Protect
 39926                           ;	CP0 = OFF, Program memory is not code-protected
 39927  FFF9                     	org	65529
 39928  FFF9  F7                 	db	247
 39929                           
 39930                           ;Config register CONFIG2L @ 0xFFFA
 39931                           ;	Oscillator
 39932                           ;	OSC = INTOSCPLL, INTOSCPLL
 39933                           ;	T1OSCEN Enforcement
 39934                           ;	T1DIG = OFF, Secondary Oscillator clock source may not be selected
 39935                           ;	Low-Power Timer1 Oscillator
 39936                           ;	LPT1OSC = OFF, High-power operation
 39937                           ;	Fail-Safe Clock Monitor
 39938                           ;	FCMEN = ON, Enabled
 39939                           ;	Internal External Oscillator Switch Over Mode
 39940                           ;	IESO = OFF, Disabled
 39941  FFFA                     	org	65530
 39942  FFFA  52                 	db	82
 39943                           
 39944                           ;Config register CONFIG2H @ 0xFFFB
 39945                           ;	Watchdog Postscaler
 39946                           ;	WDTPS = 1024, 1:1024
 39947  FFFB                     	org	65531
 39948  FFFB  FA                 	db	250
 39949                           
 39950                           ;Config register CONFIG3L @ 0xFFFC
 39951                           ;	DSWDT Clock Select
 39952                           ;	DSWDTOSC = INTOSCREF, DSWDT uses INTRC
 39953                           ;	RTCC Clock Select
 39954                           ;	RTCOSC = T1OSCREF, RTCC uses T1OSC/T1CKI
 39955                           ;	Deep Sleep BOR
 39956                           ;	DSBOREN = OFF, Disabled
 39957                           ;	Deep Sleep Watchdog Timer
 39958                           ;	DSWDTEN = ON, Enabled
 39959                           ;	Deep Sleep Watchdog Postscaler
 39960                           ;	DSWDTPS = K32, 1:32,768 (34 seconds)
 39961  FFFC                     	org	65532
 39962  FFFC  7B                 	db	123
 39963                           
 39964                           ;Config register CONFIG3H @ 0xFFFD
 39965                           ;	IOLOCK One-Way Set Enable bit
 39966                           ;	IOL1WAY = ON, The IOLOCK bit (PPSCON<0>) can be set once
 39967                           ;	MSSP address masking
 39968                           ;	MSSP7B_EN = MSK7, 7 Bit address masking mode
 39969  FFFD                     	org	65533
 39970  FFFD  F9                 	db	249
 39971                           
 39972                           ;Config register CONFIG4L @ 0xFFFE
 39973                           ;	Write/Erase Protect Page Start/End Location
 39974                           ;	WPFP = PAGE_1, Write Protect Program Flash Page 1
 39975                           ;	Write/Erase Protect Region Select (valid when WPDIS = 0)
 39976                           ;	WPEND = PAGE_0, Page 0 through WPFP<5:0> erase/write protected
 39977                           ;	Write/Erase Protect Configuration Region
 39978                           ;	WPCFG = OFF, Configuration Words page not erase/write-protected
 39979  FFFE                     	org	65534
 39980  FFFE  81                 	db	129
 39981                           
 39982                           ;Config register CONFIG4H @ 0xFFFF
 39983                           ;	Write Protect Disable bit
 39984                           ;	WPDIS = OFF, WPFP<5:0>/WPEND region ignored
 39985  FFFF                     	org	65535
 39986  FFFF  F1                 	db	241
 39987                           tosu	equ	0xFFF
 39988                           tosh	equ	0xFFE
 39989                           tosl	equ	0xFFD
 39990                           stkptr	equ	0xFFC
 39991                           pclatu	equ	0xFFB
 39992                           pclath	equ	0xFFA
 39993                           pcl	equ	0xFF9
 39994                           tblptru	equ	0xFF8
 39995                           tblptrh	equ	0xFF7
 39996                           tblptrl	equ	0xFF6
 39997                           tablat	equ	0xFF5
 39998                           prodh	equ	0xFF4
 39999                           prodl	equ	0xFF3
 40000                           indf0	equ	0xFEF
 40001                           postinc0	equ	0xFEE
 40002                           postdec0	equ	0xFED
 40003                           preinc0	equ	0xFEC
 40004                           plusw0	equ	0xFEB
 40005                           fsr0h	equ	0xFEA
 40006                           fsr0l	equ	0xFE9
 40007                           wreg	equ	0xFE8
 40008                           indf1	equ	0xFE7
 40009                           postinc1	equ	0xFE6
 40010                           postdec1	equ	0xFE5
 40011                           preinc1	equ	0xFE4
 40012                           plusw1	equ	0xFE3
 40013                           fsr1h	equ	0xFE2
 40014                           fsr1l	equ	0xFE1
 40015                           bsr	equ	0xFE0
 40016                           indf2	equ	0xFDF
 40017                           postinc2	equ	0xFDE
 40018                           postdec2	equ	0xFDD
 40019                           preinc2	equ	0xFDC
 40020                           plusw2	equ	0xFDB
 40021                           fsr2h	equ	0xFDA
 40022                           fsr2l	equ	0xFD9
 40023                           status	equ	0xFD8

Data Sizes:
    Strings     58
    Constant    707
    Data        58
    BSS         1379
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      80
    BANK0           160    152     160
    BANK1           256      0     254
    BANK2           256      0     248
    BANK3           256      0     250
    BANK4           192      0     183
    BANK5           256     12     254
    BANK6           256      0     236
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), USTATcopy(COMRAM[1]), USBActiveConfiguration(BANK1[1]), BDT(BIGRAMl[48]), 
		 -> NULL(NULL[0]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    mktime@timeptr	PTR struct tm size(2) Largest target is 18
		 -> build_time@tm(BANK0[18]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 109
		 -> SetupPkt(BIGRAMh[8]), g_nvm.flash(BANK1[108]), g_nvm(BANK1[109]), g_flash_temp(BANK6[108]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 109
		 -> SetupPkt(BIGRAMh[8]), g_nvm.flash(BANK1[108]), g_nvm(BANK1[109]), g_flash_temp(BANK6[108]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[3775]), SetupPkt(BIGRAMh[8]), g_nvm.flash(BANK1[108]), 
		 -> g_nvm(BANK1[109]), g_flash_temp(BANK6[108]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> CtrlTrfData(BIGRAMh[8]), RAM(DATA[3775]), SetupPkt(BIGRAMh[8]), g_nvm.flash(BANK1[108]), 
		 -> g_nvm(BANK1[109]), g_flash_temp(BANK6[108]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_13(CODE[5]), STR_10(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    buffer_de_queue_bool@ch	PTR unsigned char  size(2) Largest target is 8
		 -> tes0902_data_receive@rev_crc(COMRAM[2]), tes0902_data_receive@rev_data(COMRAM[8]), Co2_measure_task@rev_data(BANK0[1]), 

    buffer_de_queue_bool@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_usart_queue(BANK3[67]), 

    buffer_de_queue@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_usb_queue(BANK4[67]), 

    buffer_en_queue@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_usb_queue(BANK4[67]), g_usart_queue(BANK3[67]), 

    buffer_init@queue	PTR struct buff_queue size(2) Largest target is 67
		 -> g_usb_queue(BANK4[67]), g_usart_queue(BANK3[67]), 

    _isdigit@src	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[242]), 

    _strclr@dest	PTR unsigned char  size(2) Largest target is 242
		 -> writeBuffer(BANK2[64]), g_atcommand.status(BANK5[176]), g_atcommand(BANK5[242]), 

    _strlen@source	PTR const unsigned char  size(2) Largest target is 338
		 -> g_atcommand.apply_params(BANK5[32]), writeBuffer(BANK2[64]), parse_command@cmd(BANK0[11]), g_atcommand(BANK5[242]), 
		 -> atcommand_type(CODE[338]), 

    _strlen@sc	PTR const unsigned char  size(2) Largest target is 338
		 -> g_atcommand.apply_params(BANK5[32]), writeBuffer(BANK2[64]), parse_command@cmd(BANK0[11]), g_atcommand(BANK5[242]), 
		 -> atcommand_type(CODE[338]), 

    _strcpy@dest	PTR unsigned char  size(2) Largest target is 242
		 -> writeBuffer(BANK2[64]), g_atcommand(BANK5[242]), 

    _strcpy@source	PTR const unsigned char  size(2) Largest target is 242
		 -> STR_12(CODE[6]), STR_11(CODE[6]), STR_9(CODE[6]), STR_8(CODE[6]), 
		 -> STR_7(CODE[5]), STR_6(CODE[10]), STR_5(CODE[5]), STR_4(CODE[5]), 
		 -> STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[16]), parse_command@param(BANK0[32]), 
		 -> parse_command@cmd(BANK0[11]), g_atcommand.status(BANK5[176]), g_atcommand(BANK5[242]), 

    _itoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _itoa@p	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _ftoa@str	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    _atoi@str	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[242]), 

    _atoi@p	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[242]), 

    _atof@str	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.manual_params(BANK5[128]), g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[242]), 

    _atof@p	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand.manual_params(BANK5[128]), g_atcommand.apply_params(BANK5[32]), g_atcommand(BANK5[242]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> readBuffer(BANK6[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S5398_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S5398_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S5398_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S5398_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3775
		 -> RAM(DATA[3775]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S3910$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S3900$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S3900$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3876$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3876$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3876$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3876$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(BANK4[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    sensor_temp_fahrenheit@temp	PTR float  size(2) Largest target is 4
		 -> build_response@temp_2492(BANK0[4]), build_response@temp(BANK0[4]), 

    sensor_read_temp_humi@humi	PTR float  size(2) Largest target is 4
		 -> tempSensor_read@humi(BANK0[4]), 

    sensor_read_temp_humi@temp	PTR float  size(2) Largest target is 4
		 -> tempSensor_read@temp(BANK0[4]), 

    sensor_ADC_read@raw_adc	PTR int  size(2) Largest target is 2
		 -> CMP_temp_read@raw(BANK0[2]), gasSensor_read@raw(BANK5[2]), 

    nvm_read_flash_all@flash	PTR struct . size(2) Largest target is 109
		 -> g_nvm(BANK1[109]), 

    nvm_write_flash_all@flash	PTR struct . size(2) Largest target is 109
		 -> g_nvm(BANK1[109]), 

    sp__get_product_desc	PTR unsigned int  size(2) Largest target is 52
		 -> sd002.string(BANK4[50]), sd002(BANK4[52]), 

    nvm_init@pdesc	PTR unsigned int  size(2) Largest target is 52
		 -> sd002.string(BANK4[50]), sd002(BANK4[52]), 

    nvm_serialno_check@sno	PTR const unsigned char  size(2) Largest target is 108
		 -> g_nvm.flash.serialNum(BANK1[8]), g_nvm.flash(BANK1[108]), 

    Set_KalmanFilter_Sensitivity@pObj	PTR struct . size(2) Largest target is 96
		 -> kalmanFilter(BANK2[96]), 

    Kalman_setProcessNoise@pObj	PTR struct . size(2) Largest target is 96
		 -> kalmanFilter(BANK2[96]), 

    Kalman_setEstimateError@pObj	PTR struct . size(2) Largest target is 96
		 -> kalmanFilter(BANK2[96]), 

    Kalman_setMeasurementError@pObj	PTR struct . size(2) Largest target is 96
		 -> kalmanFilter(BANK2[96]), 

    Kalman_updateEstimate@pObj	PTR struct . size(2) Largest target is 96
		 -> kalmanFilter(BANK2[96]), 

    build_response@status	PTR const struct . size(2) Largest target is 242
		 -> g_atcommand.status(BANK5[176]), g_atcommand(BANK5[242]), 

    update_command@status	PTR struct . size(2) Largest target is 242
		 -> g_atcommand(BANK5[242]), 

    split_param@params	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand(BANK5[242]), 

    split_param@src	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand(BANK5[242]), 

    parse_command@status	PTR struct . size(2) Largest target is 242
		 -> g_atcommand(BANK5[242]), 

    parse_command@buff	PTR const unsigned char  size(2) Largest target is 242
		 -> g_atcommand.read_cmd(BANK5[64]), g_atcommand(BANK5[242]), 

    check_atcommand@chno	PTR unsigned char  size(2) Largest target is 1
		 -> parse_command@chno(BANK0[1]), 

    check_atcommand@cmd	PTR const unsigned char  size(2) Largest target is 11
		 -> parse_command@cmd(BANK0[11]), 

    atcommand_compare@channelno	PTR unsigned char  size(2) Largest target is 1
		 -> parse_command@chno(BANK0[1]), 

    atcommand_compare@src2	PTR const unsigned char  size(2) Largest target is 11
		 -> parse_command@cmd(BANK0[11]), 

    atcommand_compare@src1	PTR const unsigned char  size(2) Largest target is 338
		 -> atcommand_type(CODE[338]), 

    param_copy@src2	PTR const unsigned char  size(2) Largest target is 32
		 -> parse_command@param(BANK0[32]), 

    param_copy@src1	PTR unsigned char  size(2) Largest target is 242
		 -> g_atcommand(BANK5[242]), 

    write_command@buff	PTR const unsigned char  size(2) Largest target is 64
		 -> writeBuffer(BANK2[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 109
		 -> SetupPkt(BIGRAMh[8]), g_nvm.flash(BANK1[108]), g_nvm(BANK1[109]), g_flash_temp(BANK6[108]), 

    ads1114_read@raw_adc	PTR int  size(2) Largest target is 2
		 -> CMP_temp_read@raw(BANK0[2]), gasSensor_read@raw(BANK5[2]), 

    usart_writeBytes@wrptr	PTR const unsigned char  size(2) Largest target is 8
		 -> g_Wbuff(BANK1[8]), 

    Calculate_CRC16@crc	PTR unsigned char  size(2) Largest target is 12
		 -> CRC_check@crc(COMRAM[12]), g_Wbuff(BANK1[8]), 

    sht3x_measure_nonblock_read@humi	PTR float  size(2) Largest target is 4
		 -> tempSensor_read@humi(BANK0[4]), 

    sht3x_measure_nonblock_read@temp	PTR float  size(2) Largest target is 4
		 -> tempSensor_read@temp(BANK0[4]), 

    sht3x_measure_read@humi	PTR float  size(2) Largest target is 4
		 -> tempSensor_read@humi(BANK0[4]), 

    sht3x_measure_read@temp	PTR float  size(2) Largest target is 4
		 -> tempSensor_read@temp(BANK0[4]), 

    sht3x_common_read@humi	PTR long  size(2) Largest target is 4
		 -> sht3x_measure_read@raw_humi(BANK0[4]), 

    sht3x_common_read@temp	PTR long  size(2) Largest target is 4
		 -> sht3x_measure_read@raw_temp(BANK0[4]), 

    check_crc8@data	PTR unsigned char  size(2) Largest target is 6
		 -> sht3x_read_status_reg@buff(COMRAM[3]), sht3x_common_read@buff(COMRAM[6]), 

    crc8@data	PTR unsigned char  size(2) Largest target is 6
		 -> sht3x_write_alert_limits@buff(COMRAM[3]), sht3x_read_status_reg@buff(COMRAM[3]), sht3x_common_read@buff(COMRAM[6]), 

    lmp91000_get_status@preg	PTR unsigned char  size(2) Largest target is 1
		 -> lmp91000_isReady@rBuff(COMRAM[1]), 

    i2c_readBytes@rdptr	PTR unsigned char  size(2) Largest target is 6
		 -> ads1114_Comparator_SetUp@rbuff(COMRAM[2]), ads1114_read@rbuff(COMRAM[2]), ads1114_read_ready@rbuff(COMRAM[2]), sht3x_read_status_reg@buff(COMRAM[3]), 
		 -> sht3x_common_read@buff(COMRAM[6]), lmp91000_get_Modecn@rBuff(COMRAM[1]), lmp91000_get_Refcn@rBuff(COMRAM[1]), lmp91000_get_Tiacn@rBuff(COMRAM[1]), 
		 -> lmp91000_get_lock@rBuff(COMRAM[1]), lmp91000_get_status@rBuff(COMRAM[1]), 

    i2c_writeBytes_to@wrptr	PTR const unsigned char  size(2) Largest target is 3
		 -> ads1114_Comparator_SetUp@rbuff(COMRAM[2]), ads1115_SetUp@buff(COMRAM[2]), sht3x_write_alert_limits@buff(COMRAM[3]), 

    i2c_writeBytes_to@wraddr	PTR const unsigned char  size(2) Largest target is 2
		 -> ads1114_Comparator_SetUp@wbuff(COMRAM[1]), ads1115_SetUp@wraddr(COMRAM[1]), sht3x_write_alert_limits@cmd(COMRAM[2]), 

    i2c_writeBytes@wrptr	PTR const unsigned char  size(2) Largest target is 2
		 -> ads1114_Comparator_SetUp@wbuff(COMRAM[1]), ads1114_read@wbuff(COMRAM[1]), ads1115_SetUp@wraddr(COMRAM[1]), ads1114_read_ready@wbuff(COMRAM[1]), 
		 -> sht3x_write_alert_limits@cmd(COMRAM[2]), sht3x_heaterOff@cmd(COMRAM[2]), sht3x_heaterOn@cmd(COMRAM[2]), sht3x_read_status_reg@cmd(COMRAM[2]), 
		 -> sht3x_clear_status_reg@cmd(COMRAM[2]), sht3x_break_cmd@cmd(COMRAM[2]), sht3x_art_cmd@cmd(COMRAM[2]), sht3x_measure_block_read@cmd(COMRAM[2]), 
		 -> sht3x_measure_nonblock_read@cmd(BANK0[2]), sht3x_measure_start@cmd(COMRAM[2]), sht3x_softreset@cmd(COMRAM[2]), lmp91000_set_Mode@buff(COMRAM[2]), 
		 -> lmp91000_set_Reference@buff(COMRAM[2]), lmp91000_set_GainRLoad@buff(COMRAM[2]), lmp91000_unlock@buff(COMRAM[2]), lmp91000_lock@buff(COMRAM[2]), 
		 -> lmp91000_get_Modecn@wBuff(COMRAM[1]), lmp91000_get_Refcn@wBuff(COMRAM[1]), lmp91000_get_Tiacn@wBuff(COMRAM[1]), lmp91000_get_lock@wBuff(COMRAM[1]), 
		 -> lmp91000_get_status@wBuff(COMRAM[1]), 

    i2c_writeData@wrptr	PTR const unsigned char  size(2) Largest target is 3
		 -> ads1114_Comparator_SetUp@rbuff(COMRAM[2]), ads1114_Comparator_SetUp@wbuff(COMRAM[1]), ads1114_read@wbuff(COMRAM[1]), ads1115_SetUp@buff(COMRAM[2]), 
		 -> ads1115_SetUp@wraddr(COMRAM[1]), ads1114_read_ready@wbuff(COMRAM[1]), sht3x_write_alert_limits@buff(COMRAM[3]), sht3x_write_alert_limits@cmd(COMRAM[2]), 
		 -> sht3x_heaterOff@cmd(COMRAM[2]), sht3x_heaterOn@cmd(COMRAM[2]), sht3x_read_status_reg@cmd(COMRAM[2]), sht3x_clear_status_reg@cmd(COMRAM[2]), 
		 -> sht3x_break_cmd@cmd(COMRAM[2]), sht3x_art_cmd@cmd(COMRAM[2]), sht3x_measure_block_read@cmd(COMRAM[2]), sht3x_measure_nonblock_read@cmd(BANK0[2]), 
		 -> sht3x_measure_start@cmd(COMRAM[2]), sht3x_softreset@cmd(COMRAM[2]), lmp91000_set_Mode@buff(COMRAM[2]), lmp91000_set_Reference@buff(COMRAM[2]), 
		 -> lmp91000_set_GainRLoad@buff(COMRAM[2]), lmp91000_unlock@buff(COMRAM[2]), lmp91000_lock@buff(COMRAM[2]), lmp91000_get_Modecn@wBuff(COMRAM[1]), 
		 -> lmp91000_get_Refcn@wBuff(COMRAM[1]), lmp91000_get_Tiacn@wBuff(COMRAM[1]), lmp91000_get_lock@wBuff(COMRAM[1]), lmp91000_get_status@wBuff(COMRAM[1]), 

    flash_writeBytes@flash_array	PTR unsigned char  size(2) Largest target is 2
		 -> nvm_write_flash_all@flash(COMRAM[2]), g_nvm(BANK1[109]), 

    flash_readBytes@flash_array	PTR unsigned char  size(2) Largest target is 2
		 -> nvm_read_flash_all@flash(COMRAM[2]), g_nvm(BANK1[109]), 


Critical Paths under _main in COMRAM

    _main->_Board_initialize
    _usedtime_task->_nvm_write_flash_all
    _sht3x_common_read->_i2c_readBytes
    _check_crc8->_crc8
    _sensor_temp_mode->_ads1115_SetUp
    _sensor_gas_mode->_ads1115_SetUp
    _gas_init->_sensor_adc_initialize
    _sensor_adc_initialize->_ads1115_SetUp
    _ads1115_SetUp->_i2c_writeBytes_to
    _i2c_writeBytes_to->_i2c_writeBytes
    _pow->___fleq
    _log->___fleq
    _exp->___fleq
    _ldexp->___fleq
    _frexp->___fleq
    _GasSensor_Zerofilter->___flge
    _Sensors_initialize->_sensor_lmp_initialize
    _sensor_sht3x_init->_sht3x_clear_status_reg
    _sensor_sht3x_init->_sht3x_heaterOff
    _sensor_sht3x_init->_sht3x_measure_start
    _sht3x_measure_start->_i2c_writeBytes
    _sht3x_heaterOff->_i2c_writeBytes
    _sht3x_clear_status_reg->_i2c_writeBytes
    _sensor_lmp_initialize->_lmp91000_isReady
    _lmp91000_unlock->_i2c_writeBytes
    _lmp91000_set_Reference->_i2c_writeBytes
    _lmp91000_set_Mode->_i2c_writeBytes
    _lmp91000_set_GainRLoad->_i2c_writeBytes
    _lmp91000_isReady->_lmp91000_get_status
    _lmp91000_get_status->_i2c_readBytes
    _sensor_ADC_read->_ads1114_read
    _ads1114_read_ready->_i2c_readBytes
    _ads1114_read->_i2c_readBytes
    _i2c_writeBytes->_i2c_writeData
    _i2c_writeData->_I2C_Write
    _i2c_readBytes->_I2C_Read
    _led_task->_led_warmup
    _led_zerocal_end->_LED_On
    _led_warmup->_LED_On
    _led_fail->_LED_On
    _update_command->___fleq
    _update_command->_nvm_clear_all
    _split_param->__strlen
    __atoi->___lmul
    _USBDisableWithLongDelay->_DelayRoutine
    _CMD_manual_cal->_Calculate_CRC16
    _parse_command->_check_atcommand
    _param_copy->_check_param
    _check_atcommand->_atcommand_compare
    _atcommand_compare->__strlen
    _build_response->___fleq
    _write_command->_putUSBUSART
    _putUSBUSART->__strlen
    __itoa->___fltol
    _sprintf->___fleq
    ___awdiv->___awmod
    ___fleq->___xxtofl
    _app_usb_task->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _tes0902_data_receive->_buffer_de_queue_bool
    ___xxtofl->___fltol
    ___fltol->___awdiv
    _fabs->___flneg
    _CRC_check->_Calculate_CRC16
    _usart_init->___lldiv
    _sensMeasure_init->_tes0902_ABC_OFF
    _tes0902_ABC_OFF->_CMD_set_ABC_on
    _CMD_set_ABC_on->_Calculate_CRC16
    _usart_writeBytes->_usart_putc
    _Set_KalmanFilter_Sensitivity->_Kalman_setProcessNoise
    _nvm_write_flash_all->_flash_writeBytes
    _nvm_read_flash_all->_flash_readBytes
    _build_time->_mktime
    _mktime->_ymd_to_scalar
    _ymd_to_scalar->_years_to_days
    _years_to_days->___lwdiv
    _months_to_days->___lwdiv
    ___lwdiv->___wmul
    _isleap->___lwmod
    _led_init->_LED_On
    _clear_command->__strclr

Critical Paths under _uart_getBuffer in COMRAM

    _uart_getBuffer->i1_buffer_en_queue

Critical Paths under _SYS_InterruptHigh in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sensMeasure_task
    _sens_ZeroCalibration->___fldiv
    _tempSensor_read->_sensor_read_temp_humi
    _sensor_read_temp_humi->_sht3x_measure_nonblock_read
    _sht3x_measure_nonblock_read->_sht3x_measure_read
    _sht3x_measure_read->___fldiv
    _gasSensor_read->_gasSensor_calib
    _gasSensor_temperature_cmp_coefficient->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->___fldiv
    _ldexp->_eval_poly
    _floor->___fladd
    _eval_poly->___fladd
    _gasSensor_calib->___fldiv
    _CMP_temp_read->___fldiv
    _ADCto_uVoltage->___flmul
    _atcommand_task->_build_response
    _update_command->__atof
    __atof->___fldiv
    _build_response->__ftoa
    _sensor_temp_fahrenheit->___fladd
    __ftoa->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    _Co2_measure_task->_tes0902_data_parsing
    _tes0902_data_parsing->_Kalman_updateEstimate
    _Kalman_updateEstimate->___fldiv
    ___flsub->___fladd
    ___fladd->_fround
    ___flmul->_frexp
    ___fldiv->___flsub
    _Board_initialize->_nvm_init
    _nvm_clear_flash->_build_time
    _build_time->_mktime

Critical Paths under _uart_getBuffer in BANK0

    None.

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _uart_getBuffer in BANK1

    None.

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _uart_getBuffer in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _uart_getBuffer in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _uart_getBuffer in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    _sensMeasure_task->_gasSensor_read

Critical Paths under _uart_getBuffer in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _uart_getBuffer in BANK6

    None.

Critical Paths under _SYS_InterruptHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _uart_getBuffer in BANK7

    None.

Critical Paths under _SYS_InterruptHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _uart_getBuffer in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _uart_getBuffer in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _uart_getBuffer in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _uart_getBuffer in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _uart_getBuffer in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _uart_getBuffer in BANK13

    None.

Critical Paths under _SYS_InterruptHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _uart_getBuffer in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1163611
                   _Board_initialize
                   _Co2_measure_task
                          _InitTimer
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                     _WDT_initialize
                       _app_usb_task
                     _atcommand_task
                _changeUsbState_task
                           _led_task
                   _sensMeasure_task
                _sens_ZeroCalib_task
                      _usedtime_task
 ---------------------------------------------------------------------------------
 (1) _usedtime_task                                        0     0      0    2730
                             _memcpy
                _nvm_write_flash_all
 ---------------------------------------------------------------------------------
 (1) _sens_ZeroCalib_task                                  0     0      0   27176
                            _LED_Off
                             _LED_On
               _sens_ZeroCalibration
 ---------------------------------------------------------------------------------
 (2) _sens_ZeroCalibration                                 0     0      0   27145
                     _CMD_manual_cal
                            ___fldiv
                            ___flsub
                _nvm_write_flash_all
 ---------------------------------------------------------------------------------
 (1) _sensMeasure_task                                     4     4      0  641052
                                            148 BANK0      4     4      0
                      _CMP_temp_read
                 _Sensors_initialize
                     _gasSensor_read
                           _gas_init
                    _sensor_gas_mode
                   _sensor_temp_mode
                    _tempSensor_read
 ---------------------------------------------------------------------------------
 (2) _tempSensor_read                                      8     8      0   34477
                                            118 BANK0      8     8      0
                            ___fladd
              _sensor_read_temp_humi
 ---------------------------------------------------------------------------------
 (3) _sensor_read_temp_humi                                4     0      4   25867
                                            114 BANK0      4     0      4
        _sht3x_measure_nonblock_read
 ---------------------------------------------------------------------------------
 (4) _sht3x_measure_nonblock_read                          6     2      4   25597
                                            108 BANK0      6     2      4
                     _i2c_writeBytes
                 _sht3x_measure_read
 ---------------------------------------------------------------------------------
 (5) _sht3x_measure_read                                  13     9      4   16732
                                             95 BANK0     13     9      4
                            ___fldiv
                             ___lmul
                           ___xxtofl
                  _sht3x_common_read
 ---------------------------------------------------------------------------------
 (6) _sht3x_common_read                                   18    14      4    5079
                                             28 COMRAM    18    14      4
                         _check_crc8
                      _i2c_readBytes
 ---------------------------------------------------------------------------------
 (7) _check_crc8                                           5     1      4    2008
                                             20 COMRAM     5     1      4
                               _crc8
 ---------------------------------------------------------------------------------
 (8) _crc8                                                 6     3      3    1118
                                             14 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _sensor_temp_mode                                     1     1      0   22787
                                             44 COMRAM     1     1      0
                      _ads1115_SetUp
                  _lmp91000_set_Mode
 ---------------------------------------------------------------------------------
 (2) _sensor_gas_mode                                      2     2      0   22858
                                             44 COMRAM     2     2      0
                      _ads1115_SetUp
                  _lmp91000_set_Mode
 ---------------------------------------------------------------------------------
 (2) _gas_init                                             2     2      0   13484
                                             46 COMRAM     2     2      0
              _sensor_adc_initialize
 ---------------------------------------------------------------------------------
 (3) _sensor_adc_initialize                                2     2      0   13391
                                             44 COMRAM     2     2      0
                      _ads1115_SetUp
 ---------------------------------------------------------------------------------
 (3) _ads1115_SetUp                                       12     9      3   13289
                                             32 COMRAM    12     9      3
                  _i2c_writeBytes_to
 ---------------------------------------------------------------------------------
 (4) _i2c_writeBytes_to                                    7     1      6   12050
                                             25 COMRAM     7     1      6
                           _I2C_Stop
                     _i2c_writeBytes
                      _i2c_writeData
 ---------------------------------------------------------------------------------
 (2) _gasSensor_read                                      12    12      0  410354
                                              0 BANK5     12    12      0
                     _ADCto_uVoltage
               _GasSensor_Zerofilter
              _Kalman_updateEstimate
                            ___fladd
                            ___flmul
                            ___flneg
                              _floor
                    _gasSensor_calib
_gasSensor_temperature_cmp_coefficie
                    _sensor_ADC_read
 ---------------------------------------------------------------------------------
 (3) _gasSensor_temperature_cmp_coefficient               17    13      4  231440
                                            127 BANK0     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                                _pow
 ---------------------------------------------------------------------------------
 (4) _pow                                                 21    13      8  180340
                                            106 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (5) _log                                                  6     2      4   50860
                                             78 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _exp                                                 11     7      4  100948
                                             95 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (6) _ldexp                                                8     2      6    4569
                                             78 BANK0      8     2      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (6) _floor                                               10     6      4   25685
                                             62 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6    4740
                                              0 BANK0      8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (6) _eval_poly                                           16     8      8   20365
                                             62 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) _gasSensor_calib                                     53    49      4   43068
                                             95 BANK0     53    49      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) _GasSensor_Zerofilter                                 9     5      4    9145
                                             26 COMRAM     9     5      4
                             ___flge
 ---------------------------------------------------------------------------------
 (2) _Sensors_initialize                                   0     0      0   74056
              _sensor_lmp_initialize
                  _sensor_sht3x_init
 ---------------------------------------------------------------------------------
 (3) _sensor_sht3x_init                                    2     2      0   25785
                                             27 COMRAM     2     2      0
             _sht3x_clear_status_reg
                    _sht3x_heaterOff
                _sht3x_measure_start
 ---------------------------------------------------------------------------------
 (4) _sht3x_measure_start                                  2     2      0    8595
                                             25 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _sht3x_heaterOff                                      2     2      0    8595
                                             25 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _sht3x_clear_status_reg                               2     2      0    8595
                                             25 COMRAM     2     2      0
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (3) _sensor_lmp_initialize                                2     2      0   48271
                                             35 COMRAM     2     2      0
                   _lmp91000_isReady
             _lmp91000_set_GainRLoad
                  _lmp91000_set_Mode
             _lmp91000_set_Reference
                    _lmp91000_unlock
 ---------------------------------------------------------------------------------
 (4) _lmp91000_unlock                                      3     3      0    8710
                                             25 COMRAM     3     3      0
                     _i2c_writeBytes
                   _lmp91000_disable
                    _lmp91000_enable
 ---------------------------------------------------------------------------------
 (4) _lmp91000_set_Reference                               8     4      4    9299
                                             25 COMRAM     8     4      4
                     _i2c_writeBytes
                   _lmp91000_disable
                    _lmp91000_enable
 ---------------------------------------------------------------------------------
 (3) _lmp91000_set_Mode                                    6     4      2    9436
                                             25 COMRAM     6     4      2
                     _i2c_writeBytes
                   _lmp91000_disable
                    _lmp91000_enable
 ---------------------------------------------------------------------------------
 (4) _lmp91000_set_GainRLoad                               6     4      2    9023
                                             25 COMRAM     6     4      2
                     _i2c_writeBytes
                   _lmp91000_disable
                    _lmp91000_enable
 ---------------------------------------------------------------------------------
 (4) _lmp91000_isReady                                     2     2      0   11577
                                             33 COMRAM     2     2      0
                _lmp91000_get_status
 ---------------------------------------------------------------------------------
 (5) _lmp91000_get_status                                  5     2      3   11478
                                             28 COMRAM     5     2      3
                      _i2c_readBytes
                     _i2c_writeBytes
                   _lmp91000_disable
                    _lmp91000_enable
 ---------------------------------------------------------------------------------
 (4) _lmp91000_enable                                      1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CMP_temp_read                                       11    11      0   63036
                                             95 BANK0     11    11      0
                     _ADCto_uVoltage
                            ___fladd
                            ___fldiv
                            ___flmul
                    _sensor_ADC_read
 ---------------------------------------------------------------------------------
 (3) _sensor_ADC_read                                      3     1      2   22842
                                             36 COMRAM     3     1      2
                       _ads1114_read
                 _ads1114_read_ready
 ---------------------------------------------------------------------------------
 (4) _ads1114_read_ready                                   4     4      0   11186
                                             28 COMRAM     4     4      0
                      _i2c_readBytes
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (4) _ads1114_read                                         8     6      2   11355
                                             28 COMRAM     8     6      2
                      _i2c_readBytes
                     _i2c_writeBytes
 ---------------------------------------------------------------------------------
 (5) _i2c_writeBytes                                       5     1      4    8521
                                             20 COMRAM     5     1      4
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                      _i2c_writeData
 ---------------------------------------------------------------------------------
 (6) _i2c_writeData                                        5     1      4     878
                                             15 COMRAM     5     1      4
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (7) _i2c_readBytes                                       12     9      3    2498
                                             16 COMRAM    12     9      3
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (8) _I2C_Write                                            1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_Read                                             2     2      0      65
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADCto_uVoltage                                      12     8      4   13542
                                             33 BANK0     12     8      4
                        _FSR_set_LSB
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _FSR_set_LSB                                          5     1      4     155
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _led_task                                             2     2      0     198
                                             17 COMRAM     2     2      0
                            _LED_Off
                             _LED_On
                           _led_fail
                         _led_warmup
                    _led_zerocal_end
 ---------------------------------------------------------------------------------
 (2) _led_zerocal_end                                      0     0      0      31
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (2) _led_warmup                                           2     2      0      68
                                             15 COMRAM     2     2      0
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (2) _led_fail                                             0     0      0      31
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (1) _changeUsbState_task                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _atcommand_task                                       3     3      0  352847
                                            137 BANK0      3     3      0
                            __strclr
                    _buffer_de_queue
                     _build_response
                      _clear_command
                      _parse_command
                     _update_command
 ---------------------------------------------------------------------------------
 (2) _update_command                                      10     8      2  104485
                                            115 BANK0     10     8      2
                     _CMD_manual_cal
         _Kalman_setMeasurementError
             _ResetBootloaderCleanly
                 _ResetDeviceCleanly
       _Set_KalmanFilter_Sensitivity
                            ___fldiv
                             ___fleq
                            ___flsub
                              __atof
                              __atoi
                           __isdigit
                            __strlen
                      _nvm_clear_all
                _nvm_write_flash_all
                        _split_param
                    _tes0902_ABC_OFF
 ---------------------------------------------------------------------------------
 (3) _split_param                                         12     6      6    1518
                                             18 COMRAM    12     6      6
                            __strlen
 ---------------------------------------------------------------------------------
 (3) _nvm_clear_all                                        1     1      0   29538
                                             63 COMRAM     1     1      0
                          _nvm_clear
 ---------------------------------------------------------------------------------
 (3) __isdigit                                             5     1      4     246
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) __atoi                                               16    12      4    3235
                                             26 COMRAM    16    12      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) __atof                                               20    16      4   29922
                                             95 BANK0     20    16      4
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _ResetDeviceCleanly                                   0     0      0     112
            _USBDisableWithLongDelay
 ---------------------------------------------------------------------------------
 (3) _ResetBootloaderCleanly                               0     0      0     112
            _USBDisableWithLongDelay
 ---------------------------------------------------------------------------------
 (4) _USBDisableWithLongDelay                              0     0      0     112
                       _DelayRoutine
 ---------------------------------------------------------------------------------
 (5) _DelayRoutine                                         2     0      2     112
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _CMD_manual_cal                                       1     1      0    3281
                                             31 COMRAM     1     1      0
                    _Calculate_CRC16
                   _usart_writeBytes
 ---------------------------------------------------------------------------------
 (2) _parse_command                                       55    51      4    6856
                                             40 COMRAM     5     1      4
                                              0 BANK0     50    50      0
                            __strcpy
                    _check_atcommand
                         _param_copy
 ---------------------------------------------------------------------------------
 (3) _param_copy                                           7     3      4     648
                                             15 COMRAM     7     3      4
                        _check_param
 ---------------------------------------------------------------------------------
 (4) _check_param                                          1     1      0     110
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _check_atcommand                                      7     3      4    1715
                                             33 COMRAM     7     3      4
                            __strlen
                  _atcommand_compare
 ---------------------------------------------------------------------------------
 (4) _atcommand_compare                                   15     8      7     713
                                             18 COMRAM    15     8      7
                            __strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _build_response                                      20    18      2  238648
                                            117 BANK0     20    18      2
                             ___fleq
                            ___fltol
                              __ftoa
                              __itoa
                            __strcpy
                 _nvm_read_flash_all
             _sensor_temp_fahrenheit
                            _sprintf
                      _write_command
 ---------------------------------------------------------------------------------
 (3) _write_command                                        2     0      2     979
                                             21 COMRAM     2     0      2
                            __strlen
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (4) _putUSBUSART                                          3     0      3     222
                                             18 COMRAM     3     0      3
                            __strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) __strlen                                              4     2      2     624
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _sensor_temp_fahrenheit                               2     0      2   19757
                                             62 BANK0      2     0      2
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) __strcpy                                              8     4      4    2626
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __itoa                                               18    12      6    6477
                                             38 COMRAM    18    12      6
                            ___aldiv
                            ___almod
                            ___fltol (ARG)
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___almod                                             10     2      8     474
                                             14 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     656
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) __ftoa                                                8     2      6  101700
                                            109 BANK0      8     2      6
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             47    39      8   96162
                                             70 BANK0     39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                9     5      4   14552
                                             33 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1364
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1546
                                             20 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              13     9      4   14332
                                             33 BANK0     13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     481
                                             14 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     481
                                             14 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     693
                                             14 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    8586
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8    4002
                                             52 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _buffer_de_queue                                      6     4      2     267
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _app_usb_task                                         2     2      0    4309
                                             29 COMRAM     2     2      0
                       _CDCTxService
                    _buffer_en_queue
                       _getsUSBUSART
 ---------------------------------------------------------------------------------
 (2) _getsUSBUSART                                         4     1      3    1956
                                             25 COMRAM     4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (2) _buffer_en_queue                                      6     3      3     414
                                             14 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (2) _CDCTxService                                         2     2      0    1848
                                             25 COMRAM     2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (1) _WDT_initialize                                       2     2      0      15
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0   40876
                                             42 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0    5204
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0    5204
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                             22 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     1     1      0   23852
                                             41 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) _memcpy                                              11     5      6     944
                                             14 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   22679
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   17383
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0    6458
                                             34 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                             14 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                             14 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              7     7      0    5675
                                             34 COMRAM     7     7      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5204
                                             26 COMRAM     8     2      6
                          _CDCInitEP
                  _SYSTEM_Initialize
                 _USBCheckCDCRequest
                       _app_usb_init
 ---------------------------------------------------------------------------------
 (3) _app_usb_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                             14 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _CDCInitEP                                            0     0      0    2444
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    1711
                                             14 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                             22 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                             14 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                             14 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                             15 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitTimer                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Co2_measure_task                                     1     1      0   52030
                                            112 BANK0      1     1      0
               _buffer_de_queue_bool
               _tes0902_data_parsing
               _tes0902_data_receive
 ---------------------------------------------------------------------------------
 (2) _tes0902_data_receive                                12    12      0    1496
                                             21 COMRAM    12    12      0
               _buffer_de_queue_bool
 ---------------------------------------------------------------------------------
 (3) _buffer_de_queue_bool                                 7     3      4    1222
                                             14 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _tes0902_data_parsing                                 3     3      0   48965
                                            109 BANK0      3     3      0
                          _CRC_check
              _Kalman_updateEstimate
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1828
                                             38 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4    1481
                                             28 COMRAM    10     6      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___flneg (ARG)
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (3) _Kalman_updateEstimate                               14     8      6   43527
                                             95 BANK0     14     8      6
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4     886
                                             18 COMRAM     4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     689
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8   15111
                                             62 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    8474
                                             46 BANK0     16     8      8
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                               _fabs (ARG)
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8   11013
                                              8 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                               _fabs (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    6967
                                             70 BANK0     25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _CRC_check                                           16    16      0    2098
                                             31 COMRAM    16    16      0
                    _Calculate_CRC16
 ---------------------------------------------------------------------------------
 (1) _Board_initialize                                     1     1      0   40944
                                             63 COMRAM     1     1      0
                         _LED_Enable
                     _atcommand_init
                        _buffer_init
                           _i2c_init
                           _led_init
                   _lmp91000_disable
                  _lmp91000_pin_init
                           _nvm_init
                   _sensMeasure_init
                _sens_ZeroCalib_init
                         _usart_init
 ---------------------------------------------------------------------------------
 (2) _usart_init                                          12     8      4    1034
                                             27 COMRAM    12     8      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     865
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _sens_ZeroCalib_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _sensMeasure_init                                     1     1      0    5572
                                             34 COMRAM     1     1      0
            _Kalman_setEstimateError
         _Kalman_setMeasurementError
       _Set_KalmanFilter_Sensitivity
                    _tes0902_ABC_OFF
 ---------------------------------------------------------------------------------
 (3) _tes0902_ABC_OFF                                      1     1      0    3411
                                             33 COMRAM     1     1      0
                     _CMD_set_ABC_on
 ---------------------------------------------------------------------------------
 (4) _CMD_set_ABC_on                                       2     2      0    3380
                                             31 COMRAM     2     2      0
                    _Calculate_CRC16
                   _usart_writeBytes
 ---------------------------------------------------------------------------------
 (4) _usart_writeBytes                                     8     5      3    1263
                                             15 COMRAM     8     5      3
                         _usart_putc
 ---------------------------------------------------------------------------------
 (5) _usart_putc                                           1     1      0      31
                                             14 COMRAM     1     1      0
                     _usart_tx_empty
 ---------------------------------------------------------------------------------
 (6) _usart_tx_empty                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Calculate_CRC16                                     17    13      4    1749
                                             14 COMRAM    17    13      4
 ---------------------------------------------------------------------------------
 (3) _Set_KalmanFilter_Sensitivity                         7     4      3     827
                                             20 COMRAM     7     4      3
             _Kalman_setProcessNoise
 ---------------------------------------------------------------------------------
 (4) _Kalman_setProcessNoise                               6     0      6     270
                                             14 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _Kalman_setMeasurementError                           6     0      6     686
                                             14 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (3) _Kalman_setEstimateError                              6     0      6     270
                                             14 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) _nvm_init                                             9     9      0   32616
                                             70 BANK0      9     9      0
                   _get_product_desc
                          _nvm_clear
                 _nvm_read_flash_all
                 _nvm_serialno_check
                _nvm_write_flash_all
 ---------------------------------------------------------------------------------
 (2) _nvm_write_flash_all                                  2     0      2    1786
                                             30 COMRAM     2     0      2
                        _flash_clear
                   _flash_writeBytes
 ---------------------------------------------------------------------------------
 (3) _flash_writeBytes                                    16     8      8     862
                                             14 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (3) _flash_clear                                         13     5      8     474
                                             14 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _nvm_serialno_check                                   4     2      2     296
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _nvm_read_flash_all                                   2     0      2     931
                                             30 COMRAM     2     0      2
                    _flash_readBytes
 ---------------------------------------------------------------------------------
 (4) _flash_readBytes                                     16     8      8     686
                                             14 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) _nvm_clear                                            0     0      0   29439
                    _nvm_clear_flash
 ---------------------------------------------------------------------------------
 (5) _nvm_clear_flash                                      0     0      0   29439
                         _build_time
 ---------------------------------------------------------------------------------
 (6) _build_time                                          66    62      4   29439
                                              4 BANK0     66    62      4
                             ___wmul
                             _mktime
 ---------------------------------------------------------------------------------
 (7) _mktime                                              14    10      4   19732
                                             53 COMRAM    10     6      4
                                              0 BANK0      4     4      0
                             ___lmul
                      _ymd_to_scalar
 ---------------------------------------------------------------------------------
 (8) _ymd_to_scalar                                       16    10      6   17062
                                             37 COMRAM    16    10      6
                             _isleap
                     _months_to_days
                      _years_to_days
 ---------------------------------------------------------------------------------
 (9) _years_to_days                                       10     6      4    4141
                                             27 COMRAM    10     6      4
                             ___lmul
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    2176
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (9) _months_to_days                                       2     0      2   10556
                                             27 COMRAM     2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (10) ___wmul                                              6     2      4    8724
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4    1697
                                             20 COMRAM     7     3      4
                            ___lwmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (9) _isleap                                               5     3      2    1506
                                             19 COMRAM     5     3      2
                            ___lwmod
 ---------------------------------------------------------------------------------
 (10) ___lwmod                                             5     1      4    1272
                                             14 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _get_product_desc                                     2     0      2       0
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _lmp91000_pin_init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lmp91000_disable                                     1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _led_init                                             0     0      0      31
                            _LED_Off
                             _LED_On
 ---------------------------------------------------------------------------------
 (2) _LED_On                                               1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LED_Off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _buffer_init                                          2     0      2     301
                                             14 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _atcommand_init                                       0     0      0    1198
                      _clear_command
 ---------------------------------------------------------------------------------
 (2) _clear_command                                        0     0      0    1198
                            __strclr
 ---------------------------------------------------------------------------------
 (3) __strclr                                              4     0      4    1198
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _LED_Enable                                           1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _uart_getBuffer                                      8     8      0     210
                                              6 COMRAM     8     8      0
                         _usart_getc
                     _usart_rx_ready
                  i1_buffer_en_queue
 ---------------------------------------------------------------------------------
 (12) i1_buffer_en_queue                                   6     3      3     162
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (12) _usart_rx_ready                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _usart_getc                                          1     1      0      25
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Board_initialize
     _LED_Enable
     _atcommand_init
       _clear_command
         __strclr
     _buffer_init
     _i2c_init
     _led_init
       _LED_Off
       _LED_On
     _lmp91000_disable
     _lmp91000_pin_init
     _nvm_init
       _get_product_desc
       _nvm_clear
         _nvm_clear_flash
           _build_time
             ___wmul
             _mktime
               ___lmul
               _ymd_to_scalar
                 _isleap
                   ___lwmod
                 _months_to_days
                   ___lwdiv
                     ___lwmod (ARG)
                     ___wmul (ARG)
                   ___wmul
                 _years_to_days
                   ___lmul
                   ___lwdiv
       _nvm_read_flash_all
         _flash_readBytes
       _nvm_serialno_check
       _nvm_write_flash_all
         _flash_clear
         _flash_writeBytes
     _sensMeasure_init
       _Kalman_setEstimateError
       _Kalman_setMeasurementError
       _Set_KalmanFilter_Sensitivity
         _Kalman_setProcessNoise
       _tes0902_ABC_OFF
         _CMD_set_ABC_on
           _Calculate_CRC16
           _usart_writeBytes
             _usart_putc
               _usart_tx_empty
     _sens_ZeroCalib_init
     _usart_init
       ___lldiv
   _Co2_measure_task
     _buffer_de_queue_bool
     _tes0902_data_parsing
       _CRC_check
         _Calculate_CRC16
       _Kalman_updateEstimate
         ___fladd
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
               ___awmod (ARG)
               ___flneg (ARG)
               _fabs (ARG)
                 ___flneg
             ___lwdiv (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
             _fabs (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
           _fabs (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___flmul
             ___lwdiv
             ___lwmod
         ___fldiv
           ___fladd (ARG)
           ___flmul (ARG)
           ___flsub (ARG)
             ___fladd
             ___flmul (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
             _fabs (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
         ___flmul
         ___flsub
         ___fltol (ARG)
         ___xxtofl (ARG)
         _fabs (ARG)
       ___fltol
       ___xxtofl
     _tes0902_data_receive
       _buffer_de_queue_bool
   _InitTimer
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckCDCRequest
               _app_usb_init
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
       _memcpy
     _USBDeviceInit
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
     _USER_USB_CALLBACK_EVENT_HANDLER
   _WDT_initialize
   _app_usb_task
     _CDCTxService
       _USBTransferOnePacket
     _buffer_en_queue
     _getsUSBUSART
       _USBTransferOnePacket
   _atcommand_task
     __strclr
     _buffer_de_queue
     _build_response
       ___fleq
       ___fltol
       __ftoa
         _sprintf
           ___awdiv
           ___fladd
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
           ___fltol
           ___lldiv
           ___llmod
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
           _isdigit
           _scale
             ___awdiv
             ___awmod
             ___flmul
             ___fltol (ARG)
       __itoa
         ___aldiv
         ___almod
         ___fltol (ARG)
         ___lmul (ARG)
       __strcpy
       _nvm_read_flash_all
       _sensor_temp_fahrenheit
         ___fladd
         ___flmul
       _sprintf
       _write_command
         __strlen
         _putUSBUSART
           __strlen (ARG)
     _clear_command
     _parse_command
       __strcpy
       _check_atcommand
         __strlen
         _atcommand_compare
           __strlen (ARG)
       _param_copy
         _check_param
     _update_command
       _CMD_manual_cal
         _Calculate_CRC16
         _usart_writeBytes
       _Kalman_setMeasurementError
       _ResetBootloaderCleanly
         _USBDisableWithLongDelay
           _DelayRoutine
       _ResetDeviceCleanly
         _USBDisableWithLongDelay
       _Set_KalmanFilter_Sensitivity
       ___fldiv
       ___fleq
       ___flsub
       __atof
         ___fladd
         ___fldiv
         ___flmul
         ___xxtofl
       __atoi
         ___lmul
       __isdigit
       __strlen
       _nvm_clear_all
         _nvm_clear
       _nvm_write_flash_all
       _split_param
         __strlen
       _tes0902_ABC_OFF
   _changeUsbState_task
   _led_task
     _LED_Off
     _LED_On
     _led_fail
       _LED_Off
       _LED_On
     _led_warmup
       _LED_Off
       _LED_On
     _led_zerocal_end
       _LED_Off
       _LED_On
   _sensMeasure_task
     _CMP_temp_read
       _ADCto_uVoltage
         _FSR_set_LSB
         ___flmul
         ___xxtofl
       ___fladd
       ___fldiv
       ___flmul
       _sensor_ADC_read
         _ads1114_read
           _i2c_readBytes
             _I2C_Read
             _I2C_Start
             _I2C_Stop
             _I2C_Write
           _i2c_writeBytes
             _I2C_Start
             _I2C_Stop
             _I2C_Write
             _i2c_writeData
               _I2C_Stop
               _I2C_Write
         _ads1114_read_ready
           _i2c_readBytes
           _i2c_writeBytes
     _Sensors_initialize
       _sensor_lmp_initialize
         _lmp91000_isReady
           _lmp91000_get_status
             _i2c_readBytes
             _i2c_writeBytes
             _lmp91000_disable
             _lmp91000_enable
         _lmp91000_set_GainRLoad
           _i2c_writeBytes
           _lmp91000_disable
           _lmp91000_enable
         _lmp91000_set_Mode
           _i2c_writeBytes
           _lmp91000_disable
           _lmp91000_enable
         _lmp91000_set_Reference
           _i2c_writeBytes
           _lmp91000_disable
           _lmp91000_enable
         _lmp91000_unlock
           _i2c_writeBytes
           _lmp91000_disable
           _lmp91000_enable
       _sensor_sht3x_init
         _sht3x_clear_status_reg
           _i2c_writeBytes
         _sht3x_heaterOff
           _i2c_writeBytes
         _sht3x_measure_start
           _i2c_writeBytes
     _gasSensor_read
       _ADCto_uVoltage
       _GasSensor_Zerofilter
         ___flge
       _Kalman_updateEstimate
       ___fladd
       ___flmul
       ___flneg
       _floor
         ___fladd
         ___flge
         ___fltol
         ___xxtofl
         _frexp
       _gasSensor_calib
         ___fladd
         ___fldiv
         ___flmul
         ___flsub
       _gasSensor_temperature_cmp_coefficient
         ___fladd
         ___fldiv
         ___flge
         ___flmul
         ___flsub
         _pow
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___fltol
           ___xxtofl
           _exp
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___xxtofl
             _eval_poly
               ___fladd
               ___flmul
             _floor
             _ldexp
               ___fleq
               _eval_poly (ARG)
             _log (ARG)
               ___fladd
               ___fleq
               ___flmul
               ___xxtofl
               _eval_poly
               _frexp
           _log
       _sensor_ADC_read
     _gas_init
       _sensor_adc_initialize
         _ads1115_SetUp
           _i2c_writeBytes_to
             _I2C_Stop
             _i2c_writeBytes
             _i2c_writeData
     _sensor_gas_mode
       _ads1115_SetUp
       _lmp91000_set_Mode
     _sensor_temp_mode
       _ads1115_SetUp
       _lmp91000_set_Mode
     _tempSensor_read
       ___fladd
       _sensor_read_temp_humi
         _sht3x_measure_nonblock_read
           _i2c_writeBytes
           _sht3x_measure_read
             ___fldiv
             ___lmul
             ___xxtofl
             _sht3x_common_read
               _check_crc8
                 _crc8
               _i2c_readBytes
   _sens_ZeroCalib_task
     _LED_Off
     _LED_On
     _sens_ZeroCalibration
       _CMD_manual_cal
       ___fldiv
       ___flsub
       _nvm_write_flash_all
   _usedtime_task
     _memcpy
     _nvm_write_flash_all

 _uart_getBuffer (ROOT)
   _usart_getc
   _usart_rx_ready
   i1_buffer_en_queue

 _SYS_InterruptHigh (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0       0      36        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      EC      18       92.2%
BITBANK5           100      0       0      15        0.0%
BANK5              100      C      FE      16       99.2%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      F8      10       96.9%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FE       7       99.2%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      B7      14       95.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      50       1       85.1%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     681       8        0.0%
DATA                 0      0     681       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Feb 02 10:03:59 2023

                             i2c_writeBytes@len 0017                        __end_of_usart_writeBytes E496  
                                param_copy@src1 0010                                  param_copy@src2 0012  
                             buffer_de_queue@ch 0014                             ads1115_SetUp@wraddr 002B  
                                 _years_to_days CFD2                 __end_of_USBDisableWithLongDelay F160  
                                    _USB_SD_Ptr 20ED                                    ___fldiv@aexp 00BE  
                                  ___fldiv@bexp 00BD                                               _b 0600  
                               ??_nvm_clear_all 0040                                    ___fldiv@sign 00B6  
                            __size_of_I2C_Start 0024                              __size_of_I2C_Write 003A  
                                            l20 DFC4                                              l30 AE00  
                                            l24 AD6C                                              l41 D52E  
                                            l33 AE42                                              l18 DF8C  
                                            l19 DFB8                                              l36 D510  
                                            l28 ADBC                                              l37 D4B8  
                                            l29 ADDE                                              l38 D4DC  
                                            l80 DC78                                              l74 EAC2  
                                            l90 E2D6                                              l85 E63C  
                                            l95 CE7A                         __end_of_tes0902_ABC_OFF F190  
                                   ?_LED_Enable 0001                                ??_uart_getBuffer 0007  
                                  ___awdiv@sign 001A                             months_to_days@month 001C  
                         __end_of_parse_command 5A8C                                              bsr 000FE0  
                                 _USBDeviceInit A19E                                 _g_Num_of_sample 0162  
                           ___wmul@multiplicand 0011                          __size_of_i2c_writeData 0070  
                               _build_time$5920 0076                                  _update_command 32D0  
                               _build_time$5921 0078                                 _build_time$5922 007A  
                               _build_time$5923 007C                                 _build_time$5924 007E  
                               _build_time$5925 0080                                 _build_time$5917 0070  
                               _build_time$5934 008A                                 _build_time$5926 0082  
                               _build_time$5918 0072                                 _build_time$5943 0090  
                               _build_time$5935 008C                                 _build_time$5927 0084  
                               _build_time$5919 0074                                 _build_time$5928 0086  
                               _build_time$5929 0088                                 _build_time$5947 0092  
                               _build_time$5939 008E                                 _build_time$5891 006E  
                            __size_of_CDCInitEP 0064                             i2c_writeBytes@wrptr 0015  
                 ??_sht3x_measure_nonblock_read 0041                                   app_usb_task@i 001F  
                            atcommand_compare@n 0017                                     _split_param AE44  
          USER_USB_CALLBACK_EVENT_HANDLER@event 001B            USER_USB_CALLBACK_EVENT_HANDLER@pdata 001D  
                     __end_of_lmp91000_pin_init F1A2                       __end_of_sht3x_common_read B9D2  
                                           l110 EF2E                                             l111 EF30  
                                           l120 EF0C                                             l105 EF10  
                                           l114 EEEC                                             l107 EF1E  
                                           l108 EF20                                             l116 EEFA  
                                           l132 EA54                                             l141 E4F2  
                                           l117 EEFC                                             l151 E540  
                                           l143 E500                                             l119 EF0A  
                                           l135 EA66                                             l207 DC08  
                                           l160 ECB2                                             l152 E542  
                                           l144 E502                                             l401 C046  
                                           l137 EA74                                             l305 EFBA  
                                           l162 ECB8                                             l146 E510  
                                           l138 EA88                                             l403 BFE2  
                                           l147 E52C                                             l315 9D50  
                                           l164 ECDC                                             l148 E52E  
                                           l244 ED9A                                             l252 DF5E  
                                           l236 EA0A                           ??_sens_ZeroCalib_init 000F  
                                           l421 F18E                                             l149 E532  
                                           l501 D252                                             l309 B9D0  
                   __end_of_USBStdGetDscHandler AD18                                             l334 EFFA  
                                           l191 ED0E                                             l167 F1B2  
                                           l271 EBAA                                             l407 C04E  
                                           l415 CA52                                             l263 EB02  
                                           l319 E152                                             l248 E38C  
                                           l256 E596                                             l273 EBB0  
                                           l265 EB08                                             l345 EFDA  
                                           l274 EBB6                                             l450 D8CC  
                                           l266 EB0E                                             l290 DE48  
                                           l187 ECE4                                             l275 EBDA  
                                           l259 F1A0                                             l267 EB32  
                                           l460 F0E8                                             l189 ECEA  
                                           l454 F11A                                             l391 CB0A  
                                           l295 DE90                                             l720 EDF6  
                                           l641 EF54                                             l474 E494  
                                           l626 D7D2                                             l490 D750  
                                           l618 E998                                             l459 F0E4  
                                           l491 D73C                                             l299 ED6C  
                                           l716 F184                                             l388 D40E  
                                           l724 9012                                             l636 BE8A  
                                           l629 F058                                             l760 D5BA  
                                           l913 39F2                                             l497 DEF8  
                                           l754 E1B4                                             l914 3AAC  
                                           l763 D5B2                                             l915 3B36  
                                           _BDT 000400                                  _build_response 2384  
                                           l846 5A8A                                             l783 CBBE  
                                           l855 AF68                                             l871 3F7C  
                                           l769 B080                                             l954 270E  
                     __end_of_lmp91000_set_Mode E598                           ??_sens_ZeroCalib_task 0041  
                      build_response@chNum_2487 00E6                                             _UIE 000F36  
                                           _UIR 000F62                            i2c_writeBytes@isStop 0018  
                       Kalman_setProcessNoise@q 0011                                             _exp 7812  
                                           _log 954C                                      _USBSuspend ED10  
                                           _pow 87C2                                    ___awmod@sign 0014  
                          USBStdSetCfgHandler@i 0023                                             prod 000FF3  
                                           wreg 000FE8                                  _USBDeviceTasks 807A  
                                    _TXSTA1bits 000FAD                                  ??_app_usb_init 000F  
                                _USBDeviceState 004F                                  ??_app_usb_task 001E  
                                  ___flmul@aexp 0075                                    ___flmul@bexp 007A  
                             ??_nvm_clear_flash 0040                         __size_of_i2c_writeBytes 0052  
                                  ___flmul@sign 0074                                    ___flmul@temp 007F  
                    __size_of_i2c_writeBytes_to 005E                                    ___flmul@prod 007B  
                         i2c_writeBytes@address 0019                              _sht3x_measure_read 9BC4  
                         ??_USBCtrlTrfRxService 000F             __size_of_Kalman_setMeasurementError 001A  
                           atcommand_compare@ch 0021                             atcommand_compare@no 0020  
                                ??_getsUSBUSART 001D                                 _check_atcommand CB0C  
                      USBEnableEndpoint@options 0017                                 __end_of_LED_Off F1B4  
                                  ___fltol@exp1 0026                            buffer_de_queue@queue 000F  
                                          l1014 32CE                                            l2000 B5A6  
                                          l1017 DD54                                            l2001 B4E8  
                                          l2002 B4EE                                            l2011 E214  
                                          l1043 E3E4                                            l1124 989A  
                                          l1053 E5EA                                            l2013 E216  
                                          l1037 DB22                                            l1141 7354  
                                          l2030 C8E2                                            l2022 EA4E  
                                          l1142 73CC                                            l2103 EC78  
                                          l1224 8E38                                            l2040 DA36  
                                          l2008 B5C2                                            l2016 ED3E  
                                          l2033 D37C                                            l1049 E43C  
                                          l1081 91EA                                            l2210 9AEC  
                                          l1243 9A32                 __size_of_sensor_temp_fahrenheit 0070  
                                          l1251 EE50                                            l2060 B9EE  
                                          l2204 9BC2                                            l1172 D268  
                                          l1412 5572                                            l1148 74F8  
                                          l2053 B29C                                            l2205 9A78  
                                          l1173 D2E8                                            l1246 F1AC  
                                          l1270 E8A6                                            l3102 5D96  
                                          l2054 B2A4                                            l2046 B28C  
                                          l2150 BCB4                                            l1334 EEE8  
                                          l1191 F102                                            l3111 5E66  
                                          l3112 5E54                                            l2240 87C0  
                                          l1440 C2C6                                            l1360 E8EE  
                                          l1273 EE9E                                            l1169 F03A  
                                          l1433 EDC8                                            l1194 F094  
                                          l2058 BAD0                                            l1338 E028  
                                          l1426 853C                                            l1259 E4EC  
                                          l1267 C6A8                                            l2163 E08C  
                                          l2075 6B7C                                            l1443 C2B6  
                                          l1451 F148                                            l2316 E278  
                                          l3300 8A7C                                            l1188 7DD2  
                                          l3212 9242                                            l2332 E778  
                                          l2252 A818                                            l1436 DAAC  
                                          l1348 C1F8                                            l1428 854C  
                                          l1197 F076                                            l3141 6990  
                                          l2341 D6CA                                            l1525 D9BE  
                                          l2157 BC44                                            l2069 BA3C  
                                          l2325 E85C                                            l1429 855C  
                                          l3302 8C58                                            l3150 69D6  
                                          l2094 6DEC                                            l2086 6D3E  
                                          l2182 C99A                                            l1454 DCE8  
                                          l3055 DB96                                            l3127 E97E  
                                          l3231 E926                                            l3215 939E  
                                          l2159 BC7C                                            l2271 D43C  
                                          l1367 71CE                                            l1463 EAFA  
                                          l3048 DB8E                                            l3152 6A4E  
                                          l3144 6954                                            l3232 E936  
                                          l2336 D852                                            l2272 D49E  
                                          l1544 F000                                            l1552 F178  
                                          l1384 7810                                            l3312 8836  
                                          l2329 EE24                                            l3065 E0F0  
                                          l1705 F0CC                                            l3153 6A3C  
                                          l1537 EF78                                            l2265 A03E  
                                          l3241 A6C4                                            l3313 8A22  
                                          l1473 DDBE                                            l1721 C124  
                                          l3058 E0E8                                            l3226 9336  
                                          l2098 6E8A                                            l2258 E68C  
                                          l2266 A046                                            l2290 E72A  
                                          l2186 EE78                                            l1546 F01A  
                                          l1458 C390                                            l3139 6B30  
                                          l3171 6014                                            l3219 92DA  
                                          l2275 D496                                            l1555 F16C  
                                          l3251 AA9C                                            l3331 7B00  
                                          l1379 7162                                            l1483 F0B0  
                                          l3180 6282                                            l1636 94A2  
                                          l1644 954A                                            l2532 48B4  
                                          l1708 9ED6                      USBConfigureEndpoint@handle 0015  
                                          l3181 6270                                            l3085 5C7C  
                                          l1901 ABDA                                            l2517 461A  
                                          l1549 F15E                                            l3341 B7BC  
                                          l3317 8A12                                            l3094 5F4C  
                                          l3086 5C6A                                            l3270 E6DC  
                                          l2614 B4BC                                            l1478 B3B0  
                                          l3342 B7CC                                            l2535 EEC4  
                                          l2439 4F3E                                            l3175 6378  
                                          l3087 5C30                                            l1655 C520  
                                          l1639 94D8                                            l3247 C45A  
                                          l3239 A6D4                                            l3335 7AF0  
                                          l1568 F198                                            l1920 BBC6  
                                          l3264 ECAA                                            l3281 D946  
                                          l2546 DE18                                            l2562 D10A  
                                          l3178 620A                                            l2466 6794  
                                          l3354 96F4                                            l2547 DE28  
                                          l1659 C76A                                            l1931 CF26  
                                          l1595 D1BA                                            l2459 8078  
                                          l2627 BDA0                                            l3284 EC10  
                                          l3188 633A                                            l1916 BBC6  
                                          l3276 EB6A                                            l1860 A2F0  
                                          l2900 A0E2                                            l2813 B88A  
                                          l2901 A114                                            l1926 CC70  
                                          l1934 A394                                            l2814 B8D0  
                                          l3287 D076                                            l3295 C828  
                                          l1855 A206                                            l2807 CFD0  
                                          l1944 A442                                            l1864 82F0  
                                          l1872 8120                                            l2569 D11A  
                                          l2841 B6C8                                            l1881 8246  
                                          l2818 EBA2                                            l1970 A946  
                                          l1882 82EE                                            l1866 80A6  
                                          l1883 825A                                            l1867 80A4  
                                          l2907 A18C                                            l1972 A95C  
                                          l2766 C5E4                                            l1959 B194  
                                          l1895 E812                                            l1993 AD16  
                                          l1979 BF74                                            l2779 CD20  
                                          l1997 B4CC                                            l2789 A58E  
                                          l2798 A57E                                            l2984 D642  
                                          l2977 D632                                            l2898 A19C  
                                          ?_exp 00BF                                            ?_log 00AE  
                                          l8730 F04C                                            l8740 F056  
                                          l8732 F04E                                            l8734 F050  
                                          l8726 F03C                                            l8742 EF58  
                                          l8736 F052                                            l8728 F048  
                                          l8738 F054                                            ?_pow 00CA  
                                          l9920 DE2A                         __end_of_tempSensor_read C392  
                                          l9922 DE2C                                            l9940 DE7A  
                                          l9932 DE56                                            l9924 DE34  
                                          l9870 CEC0                                            l9950 E7D8  
                                          l9934 DE62                                            l9926 DE44  
                                          l9942 DE7C                                            STR_1 2348  
                                          l9880 CF18                                            l9872 CECA  
                                          l9952 E7E2                                            l9960 AAA0  
                                          l9944 DE8E                                            l9936 DE68  
                                          STR_2 2369                                            STR_3 2369  
                                          l9874 CEDA                                            l9866 CE7E  
                                          l9954 E7F0                                            l9962 AAB0  
                                          l9938 DE6A                                            STR_4 2369  
                                          STR_5 2369                                            l9876 CEF6  
                                          l9868 CE86                                            l9956 E7FA  
                                          l9948 E7CA                                            l9980 AB4A  
                                          l9972 AB02                                            l9964 AACC  
                                          STR_6 2364                                            STR_7 2369  
                                          l9878 CF0E                                            l9958 E806  
                                          l9982 AB5A                                            l9974 AB26  
                                          l9966 AAE4                                            STR_8 2377  
                                          STR_9 2377                                            l9984 AB98  
                                          l9976 AB32                                            l9968 AAF6  
                                          l9986 ABD2                                            l9978 AB3E  
                                          u7040 EF6C                                            u7041 EF64  
                                          u7058 EF6E                           ??_USBCtrlTrfTxService 000F  
                                          _UCFG 000F39                                            u8620 DE56  
                                          _UEP0 000F26                                            u8621 DE52  
                                          _UEP1 000F27                                            u8470 CEDA  
                                          u8630 DE7A                                            u8471 CED6  
                                          u8631 DE76                                            u8640 DE8E  
                                          u8641 DE8A                                            u8650 E7D8  
                                          u8651 E7D4                                            _UEIE 000F37  
                                          u8660 E7F0                                            u8900 BC1C  
                                          u8661 E7EC                                            u8901 BC18  
                                          u8670 AAB0                                            u8830 ED64  
                                          u8671 AAAC                                            u8831 ED60  
                                          u8680 AAF6                                            u8681 AAF2  
                                          u8690 AB5A                                            u8850 D972  
                                          u8691 AB56                                            u8851 D96E  
                                          u8860 D99C                                            u8861 D998  
                                          u8870 BBDE                                            u8871 BBDA  
                                          u8880 BBF8                                            _UCON 000F65  
                                          _UEIR 000F63                                            u8881 BBF4  
                                          u8890 BC0C                                            u8891 BC08  
                       ?_lmp91000_set_GainRLoad 001A                                   _i2c_readBytes CDD0  
                               _CDCDataInHandle 015C                      _Kalman_updateEstimate$7080 00C5  
                    _Kalman_updateEstimate$7079 00C9          USBStdFeatureReqHandler@current_ep_data 0027  
                  __end_of_GasSensor_Zerofilter 855E                                            _crc8 DE2A  
                                          _pDst 0160                                            _fabs E8F0  
                           ?_sht3x_measure_read 00BF                          ??_sens_ZeroCalibration 0041  
                        ??_tes0902_data_receive 0016                                            _main E980  
                        ??_tes0902_data_parsing 00CD                                __end_of_I2C_Read E544  
                            __size_of_CRC_check 00B8                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                   _BaudRateGen 024C                                            indf2 000FDF  
                                          fsr1l 000FE1                                            fsr2l 000FD9  
                                          btemp 0051                                _g_usedtime_count 014A  
                                          exp@x 00BF                                            log@x 00AE  
                              __end_of_I2C_Stop EF0E                              Calculate_CRC16@crc 000F  
                                          pow@x 00CA                                            pow@y 00CE  
                          i2c_writeBytes_to@len 001F                              Calculate_CRC16@ret 001E  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 2080                                 ___fldiv@new_exp 00B7  
                             ??_sensor_gas_mode 002D                 __size_of_sht3x_clear_status_reg 0020  
                    __end_of_USBCheckStdRequest BAD2                                    _sprintf$7090 00B2  
                        ??_USBCtrlTrfOutHandler 0011                                    ___param_bank 000000  
                                ?_years_to_days 001C                       ??_USBStdFeatureReqHandler 0023  
                      Kalman_updateEstimate@mea 00C1      _gasSensor_temperature_cmp_coefficient$7082 00E4  
    _gasSensor_temperature_cmp_coefficient$7083 00E8                          __size_of_usedtime_task 00EA  
                        __end_of_update_command 3F7E                       GasSensor_Zerofilter@chNum 001F  
                      ??_USBStdGetStatusHandler 000F                             _sht3x_measure_start EF9C  
                                         ??_exp 0041                                           ??_log 0041  
                                         ??_pow 0041                                  ?_USBDeviceInit 0001  
                        __end_of_build_response 32D0                        app_usb_task@numBytesRead 001E  
                                         l10110 D956                                           l10112 D958  
                                         l10120 D9A0                                           l10130 E060  
                                         l10114 D976                                           l10106 D94A  
                                         l10122 F01C                                           l10132 E07E  
                                         l10124 E02A                                           l10116 D982  
                                         l10108 D94E                                           l10140 BBE2  
                                         l10134 E088                                           l10126 E04C  
                                         l10150 BC20                                buffer_init@queue 000F  
                                         l10128 E056                                           l10152 BC28  
                                         l10144 BBFC                                           l10136 BBC8  
                                         l11120 C522                                           l10170 BC74  
                                         l10162 BC4C                                           l10154 BC30  
                                         l10146 BC0C                                           l11130 C54E  
                                         l11122 C526                                           l10164 BC5E  
                                         l10156 BC32                                           l11140 C57C  
                                         l11132 C556                                           l11124 C534  
                                         l10092 ED6A                                           l10084 ED40  
                                         l20100 E980                                           l10166 BC64  
                                         l10158 BC38                                           l10174 BC86  
                                         l11150 C5B6                                           l11142 C584  
                                         l11134 C55A                                           l11126 C53C  
                                         l10086 ED52                                           l20110 E99A  
                                         l20102 E984                                           l10168 BC6C  
                                         l11400 CC0E                                           l11160 C5DC  
                                         l11152 C5B8                                           l11144 C592  
                                         l11136 C562                                           l11128 C540  
                                         l13000 AE8A                                           l10088 ED64  
                                         l20120 E9AE                                           l20112 E99E  
                                         l20104 E98A                                           l11410 CC58  
                                         l11402 CC1E                                           l11154 C5BE  
                                         l11146 C598                                           l11138 C574  
                                         l11170 CC8C                                           l12210 EE74  
                                         l12202 EE52                                           l13010 AEBE  
                                         l13002 AE96                                           l20122 E9B2  
                                         l20114 E9A2                                           l20106 E98E  
                                         l11500 B552                                           l11420 BEC8  
                                         l11412 CC64                                           l11404 CC36  
                                         l11148 C5AE                                           l11156 C5C4  
                                         l11180 CCC0                                           l11172 CC90  
                                         l11164 CC72                                           l12204 EE62  
                                         l13020 AF12                                           l13012 AEE2  
                                         l13004 AEA8                                           l20124 E9B6  
                                         l20116 E9A6                                           l20108 E992  
                          ??_sht3x_measure_read 00C3                                           l11510 B5B4  
                                         l11502 B568                                           l11430 BEEE  
                                         l11414 BE8C                                           l11406 CC3E  
                                         l11158 C5D4                                           l11190 CCFA  
                                         l11182 CCC8                                           l11174 CC9E  
                                         l11166 CC76                                           l12206 EE6A  
                                         l12230 E18C                                           l13022 AF14  
                                         l13014 AEE4                                           l13030 AF2E  
                                         l20126 E9BA                                           l20118 E9AA  
                                         l11360 BAE4                                           l11520 6B58  
                                         l11512 B5BC                                           l11504 B57E  
                                         l11440 BF2E                                           l11432 BEFE  
                                         l11416 BE8E                                           l11408 CC42  
                                         l11184 CCD6                                           l11192 CD00  
                                         l11176 CCA6                                           l11168 CC84  
                                         l12208 EE6E                                           l12232 E19C  
                                         l12224 E156                                           l11352 EFFC  
                                         l13040 F16E                                           l13032 AF40  
                                         l13016 AEE6                                           l11370 BB2C  
                                         l11362 BAF8                                           l11530 6BA2  
                                         l11522 6B5A                                           l11514 B5BE  
                                         l11450 BF70                                           l11442 BF36  
                                         l11434 BF1A                                           l11426 BECC  
                                         l11418 BEC6                                           l11194 CD10  
                                         l11186 CCEC                                           l11178 CCB8  
                                         l12242 AF6A                                           l12226 E168  
                                         l12234 E1AC                                           l11354 F002  
                                         l13050 F16A                                           l13042 F174  
                                         l13034 AF64                                           l13018 AEEE  
                                         l11380 BB76                                           l11372 BB3C  
                                         l11364 BAFC                                           l10900 D11C  
                                         l11540 6C0C                                           l11532 6BB6  
                                         l11524 6B6C                                           l11516 6B32  
                                         l11460 AC0C                                           l11452 ABDC  
                                         l11508 B586                                           l11444 BF3A  
                                         l11436 BF1C                                           l11428 BEEC  
                                         l11700 A11C                                           l11196 CD18  
                                         l11188 CCF4                                           l12260 AFE2  
                                         l12252 AFA4                                           l12244 AF7C  
                                         l12228 E17A                                           l11356 F008  
                                         l13044 F176                                           l13052 E814  
                                         l13036 AF66                                           l13028 AF2A  
                                         l11390 BBB6                                           l11382 BB82  
                                         l11374 BB4C                                           l11366 BB10  
                                         l11358 BAD2                                           l10910 D140  
                                         l10902 D120                                           l11550 6C7C  
                                         l11542 6C28                                           l11534 6BCC  
                                         l11526 6B76                                           l11518 6B44  
                                         l11470 ACA0                                           l11462 AC1C  
                                         l11454 ABF0                                           l11446 BF4C  
                                         l11438 BF26                                           l11710 A148  
                                         l11702 A122                                           l12262 AFF2  
                                         l12270 B00A                                           l12254 AFB2  
                                         l12246 AF8E                                           l12238 E1B2  
                                         l13046 F160                                           l13062 E83C  
                                         l13054 E818                                           l11384 BB8E  
                                         l11376 BB52                                           l11368 BB20  
                                         l10904 D12A                                           l11560 6CE6  
                                         l11552 6C86                                           l11544 6C46  
                                         l11536 6BDE                                           l11528 6B8E  
                                         l11472 ACB0                                           l11464 AC38  
                                         l11456 ABF8                                           l11448 BF54  
                                         l11392 CBC0                                           l11720 A170  
                                         l11712 A152                                           l11704 A130  
                                         l12192 E6DE                                           l12272 B024  
                                         l12264 AFFE                                           l12256 AFC4  
                                         l12280 B06C                                           l12248 AF9E  
                                         l13048 F168                                           l13056 E826  
                                         l13064 E840                                           l11386 BB92  
                                         l11378 BB62                                           l10906 D134  
                                         l10914 D148                                           l11570 6D64  
                                         l11562 6CFC                                           l11554 6C94  
                                         l11546 6C5E                                           l11538 6BEE  
                                         l11474 ACCC                                           l11466 AC66  
                                         l11458 AC00                                           l11482 ACF8  
                                         l11490 B4E0                                           l10930 EB50  
                                         l11394 CBCA                                           l11810 D5DA  
                                         l11730 A46E                                           l11722 A17C  
                                         l11714 A15C                                           l12194 E6EA  
                                         l12282 B07E                                           l12258 AFD2  
                                         l12610 F150                                           l13066 E85A  
                                         l13058 E836                                           l10682 EB14  
                                         l10940 B0B2                                           l10932 B082  
                                         l11388 BBA2                                           l12700 A93A  
                                         l20196 D166                                           l10908 D138  
                                         l11580 6DBE                                           l11572 6D7A  
                                         l11564 6D0A                                           l11556 6CB6  
                                         l11548 6C6C                                           l11468 AC98  
                                         l11492 B4F0                                           l11484 B4BE  
                                         l10924 EB34                                           l11396 CBDE  
                                         l12620 A32A                                           l15100 8230  
                                         l11820 D62C                                           l11812 D5E6  
                                         l11740 A49A                                           l11724 A444  
                                         l11660 EC90                                           l12196 E6EE  
                                         l12612 F15A                                           l10950 B0E8  
                                         l10942 B0BA                                           l10934 B086  
                                         l20198 D1AC                                           l11590 6E30  
                                         l11582 6DC8                                           l11574 6D86  
                                         l11566 6D26                                           l11558 6CD4  
                                         l11494 B504                                           l10926 EB40  
                                         l11398 CC02                                           l12630 A36C  
                                         l12622 A32E                                           l12614 A2F2  
                                         l15110 8268                                           l15102 8240  
                                         l15030 80B4                                           l11814 D5F4  
                                         l11806 D5BC                                           l11750 A4CA  
                                         l11742 A4AC                                           l11726 A45A  
                                         l11670 A06C                                           l11662 ECA0  
                                         l12198 E71E                                           l12278 B064  
                                         l12606 F14A                                           l10678 EAFE  
                                         l10960 B132                                           l10952 B0F2  
                                         l10944 B0CA                                           l10936 B09C  
                                         l13600 B260                                           l12704 A948  
                                         l11592 6E3C                                           l11584 6DD6  
                                         l11576 6D92                                           l11568 6D5A  
                                         l11496 B512                                           l11488 B4CE  
                                         l10928 EB4C                                           l12720 BA10  
                                         l12712 B9F0                                           l12640 A3C6  
                                         l12632 A384                                           l12624 A334  
                                         l12616 A302                                           l15120 829A  
                                         l15112 826C                                           l15104 8256  
                                         l15040 80E2                                           l15032 80B8  
                                         l11816 D612                                           l11808 D5D2  
                                         l11760 A50E                                           l11752 A4D4  
                                         l11744 A4BC                                           l11736 A488  
                                         l11680 A0A8                                           l11664 ECA4  
                                         l11656 EC7C                                           l12800 BCEA  
                                         l12608 F14C                                           l10970 B17C  
                                         l10962 B138                                           l10938 B0A0  
                                         l10946 B0CE                                           l13602 B270  
                                         l12706 A958                                           l11586 6DFC  
                                         l11594 6E5C                                           l11578 6DB2  
                                         l11498 B534                                           l12730 BA2C  
                                         l12722 BA12                                           l12714 B9F8  
                                         l12650 A3F8                                           l12642 A3CA  
                                         l12634 A3A4                                           l12618 A312  
                                         l12626 A33C                                           l13530 D2EA  
                                         l15130 82DE                                           l15122 82A8  
                                         l15114 8278                                           l15050 810C  
                                         l15034 80C8                                           l15042 80E8  
                                         l15026 807A                                           l15018 807A  
                                         l11818 D622                                           l11770 A53A  
                                         l11762 A514                                           l11754 A4F2  
                                         l11746 A4C0                                           l11738 A48A  
                                         l11690 A0D8                                           l11682 A0AA  
                                         l11674 A080                                           l11658 EC80  
                                         l12810 BD32                                           l12802 BCFA  
                                         l16020 DDF8                                           l16012 DDC0  
                                         l13524 D674                                           l13516 D644  
                                         l10972 B182                                           l10956 B104  
                                         l10964 B13A                                           l10948 B0D6  
                                         l13604 B27C                                           l11596 6E68  
                                         l11588 6E18                                           l12740 BA52  
                                         l12724 BA16                                           l12716 BA00  
                                         l12708 B9D2                                           l12660 A42E  
                                         l12652 A40C                                           l12644 A3DA  
                                         l12636 A3BC                                           l12628 A360  
                                         l13540 D332                                           l13532 D306  
                                         l12900 E6A2                                           l13700 A27C  
                                         l15124 82B8                                           l15116 827A  
                                         l15060 8146                                           l15052 811A  
                                         l15044 80F6                                           l15036 80D6  
                                         l15028 808A                                           l15140 D28A  
                                         l15132 D254                                           l16100 CF56  
                                         l11780 A562                                           l11772 A544  
                                         l11764 A522                                           l11756 A502  
                                         l11748 A4C6                                           l11692 A0DE  
                                         l11684 A0B8                                           l11668 A048  
                                         l12820 BD80                                           l12812 BD50  
                                         l12804 BD10                                           l16030 DB4E  
                                         l16022 DB24                                           l16006 EEA0  
                                         l16014 DDD0                                           l13526 D6C8  
                                         l13518 D66E                                           l10966 B14E  
                                         l10958 B12E                                           l10974 B184  
                                         l12670 A846                                           l11598 6E7E  
                                         l12726 BA1C                                           l12718 BA08  
                                         l12654 A418                                           l12638 A3C0  
                                         l12646 A3E2                                           l13550 D358  
                                         l13542 D33E                                           l13534 D312  
                                         l12902 E6AE                                           l13710 A2B8  
                                         l13702 A28C                                           l15126 82C0  
                                         l15118 8288                                           l15070 8178  
                                         l15054 812E                                           l15062 8148  
                                         l15046 8106                                           l15038 80E0  
                                         l15150 D2D2                                           l15142 D29C  
                                         l16110 CFCE                                           l16102 CF66  
                                         l11782 A56E                                           l11774 A54E  
                                         l11758 A504                                           l11694 A0EC  
                                         l11686 A0C4                                           l12750 B3C4  
                                         l12822 BD90                                           l12814 BD60  
                                         l12806 BD18                                           l16040 DB82  
                                         l16032 DB5C                                           l16024 DB2C  
                                         l16008 EEBC                                           l16016 DDDE  
                                         l16120 C7C0                                           l17000 697E  
                                         l10968 B178                                           l13608 B29E  
                                         l12680 A874                                           l12672 A84E  
                                         l12664 A81A                                           l13560 D9DC  
                                         l12728 BA24                                           l12744 BA72  
                                         l12656 A424                                           l12648 A3E8  
                                         l13552 D35C                                           l13544 D342  
                                         l13536 D31C                                           l12904 E6B2  
                                         l13720 A2D2                                           l13712 A2BE  
                                         l13704 A29C                                           l15128 82DC  
                                         l15080 81BC                                           l15072 8188  
                                         l15064 8156                                           l15056 813E  
                                         l15048 8108                                           l15144 D2AC  
                                         l15152 D2E4                                           l16104 CF94  
                                         l11696 A106                                           l11688 A0D4  
                                         l12760 B3FA                                           l12752 B3D4  
                                         l12816 BD6A                                           l12808 BD24  
                                         l16050 E0B0                                           l16042 DB88  
                                         l16034 DB62                                           l16026 DB3E  
                                         l16018 DDEE                                           l16130 C818  
                                         l16122 C7CC                                           l16114 C76C  
                                         l16210 8B20                                           l16202 8A24  
                                         l17010 69C6                                           l17002 698E  
                                         l13570 B196                                           l12690 A8DE  
                                         l12682 A886                                           l12674 A856  
                                         l12666 A82A                                           l13562 D9F2  
                                         l12738 BA3E                                           l12658 A42A  
                                         l13554 D378                                           l13546 D34A  
                                         l13538 D328                                           l12906 E6BE  
                                         l13722 A2D8                                           l13714 A2C8  
                                         l13706 A29E                                           l15090 81F0  
                                         l15082 81BE                                           l15074 81A4  
                                         l15066 8166                                           l15058 8142  
                                         l13650 E758                                           l15146 D2B4  
                                         l15138 D27A                                           l16106 CFA4  
                                         l11698 A112                                           l12770 B442  
                                         l12762 B40A                                           l12754 B3D8  
                                         l12746 B3B2                                           l12818 BD70  
                                         l12930 D530                                           l15154 EF32  
                                         l16052 E0BE                                           l16044 E08E  
                                         l16060 D8CE                                           l16036 DB78  
                                         l16028 DB46                                           l16124 C7D4  
                                         l16116 C78C                                           l16212 8B84  
                                         l16204 8A50                                           l17020 6A06  
                                         l17012 69D4                                           l17004 69A0  
                                         l16300 5BD2                                           l16220 5A8C  
                                         l13580 B1DE                                           l13572 B1A8  
                                         l12692 A8EE                                           l12684 A898  
                                         l12676 A86E                                           l12668 A842  
                                         l13564 DA16                                           l13556 D9C0  
                                         l13548 D350                                           l12908 E6C2  
                                         l13724 A2E8                                           l13716 A2CC  
                                         l13708 A2AE                                           l13660 A1D0  
                                         l13652 A19E                                           l15092 81F4  
                                         l15084 81CE                                           l15076 81A6  
                                         l15068 816A                                           l14700 9A34  
                                         l15148 D2D0                                           l16108 CFC8  
                                         l12780 B486                                           l12772 B44C  
                                         l12764 B420                                           l12756 B3E6  
                                         l12748 B3B6                                           l12940 D568  
                                         l12932 D538                                           l13900 5752  
                                         l15156 EF44                                           l16140 DC22  
                                         l16054 E0D4                                           l16046 E0A0  
                                         l16070 D940                                           l16062 D8D2  
                                         l16038 DB80                                           l16118 C7A2  
                                         l16126 C7F6                                           l16214 8BE8  
                                         l16206 8A8A                                           l17030 6A78  
                                         l17022 6A34                                           l17006 69B6  
                                         l17014 69E6                                           l16310 5C4A  
                                         l16302 5BFC                                           l16230 5ACA  
                                         l16222 5A9A                                           l13590 B214  
                                         l13582 B1E6                                           l13574 B1B2  
                                         l12694 A8FA                                           l12686 A8BC  
                                         l12678 A872                                           l13566 DA22  
                                         l13558 D9D4                                           l13726 A2EC  
                                         l13718 A2D0                                           l13670 A1DC  
                                         l13662 A1D4                                           l13654 A1A0  
                                         l15094 8202                                           l15078 81AA  
                                         l15086 81D2                                           l14702 9A48  
                                         l13822 D7D4                                           l12774 B46A  
                                         l12766 B428                                           l12782 B48C  
                                         l12758 B3F6                                           l12790 BCB6  
                                         l12926 EDCA                                           l12950 D59E  
                                         l12942 D574                                           l12934 D54A  
                                         l13910 57AC                                           l13902 5764  
                                         l15158 EF4E                                           l16150 DC50  
                                         l16142 DC44                                           l16134 DC0A  
                                         l17110 B714                                           l17102 AA62  
                                         l18000 ECBE                                           l16056 E0DC  
                                         l16048 E0A8                                           l16064 D8F8  
                                         l16080 D066                                           l16128 C7FC  
                                         l16208 8AF2                                           l16216 8C48  
                                         l17200 E43E                                           l17040 6AF0  
                                         l17032 6AA2                                           l17016 69F4  
                                         l17008 69BC                                           l16400 5EDC  
                                         l16320 5C8A                                           l16312 5C4E  
                                         l16304 5C18                                           l16240 5AFA  
                                         l16232 5ADA                                           l16224 5AA8  
                                         l13592 B228                                           l13576 B1C4  
                                         l13584 B1EA                                           l12688 A8D2  
                                         l12696 A90A                                           l13568 DA32  
                                         l13680 A210                                           l13672 A1F4  
                                         l13664 A1D8                                           l13656 A1AE  
                                         l15096 8212                                           l15088 81E0  
                                         l14720 9AD4                                           l14712 9A8C  
                                         l13648 E72C                                           l13832 D804  
                                         l13824 D7D4                                           l12784 B49C  
                                         l12776 B47A                                           l12768 B434  
                                         l12792 BCBA                                           l12928 EDDA  
                                         l12960 CB10                                           l12952 D5A2  
                                         l12944 D578                                           l12936 D55C  
                                         l13920 57EE                                           l13912 57BE  
                                         l13904 5776                                           l13840 5574  
                                         l16160 CDD2                                           l16144 DC48  
                                         l16152 DC62                                           l16136 DC0E  
                                         l17112 B7A8                                           l17104 AA8C  
                                         l18002 F1AE                                           l16058 E0E2  
                                         l16066 D916                                           l16074 EBDC  
                                         l17210 E470                                           l17202 E446  
                                         l17050 6B26                                           l17042 6B0C  
                                         l17026 6A5E                                           l17034 6AA6  
                                         l17018 69F8                                           l16410 5F24  
                                         l16402 5EEC                                           l16330 5CCC  
                                         l16322 5C9A                                           l16314 5C5C  
                                         l16306 5C28                                           l16250 5B24  
                                         l16242 5B0C                                           l16234 5ADC  
                                         l16226 5AAA                                           l13594 B234  
                                         l13586 B1FC                                           l13578 B1CE  
                                         l12698 A92E                                           l13690 A226  
                                         l13682 A212                                           l13674 A1F6  
                                         l13658 A1CA                                           l15098 822C  
                                         l14722 9AE4                                           l14714 9A9E  
                                         l14706 9A62                                           l13834 D830  
                                         l13826 D7FE                                           l12786 B4AC  
                                         l12778 B47C                                           l12794 BCC8  
                                         l12970 CBAC                                           l12962 CB58  
                                         l12954 CB0C                                           l12946 D58E  
                                         l13930 5830                                           l13914 57D0  
                                         l13906 5788                                           l13922 57F4  
                                         l13850 55C0                                           l13842 557A  
                                         l18010 D38A                                           l16090 EF0E  
                                         l16170 CDF8                                           l16162 CDD6  
                                         l16154 DC72                                           l17122 E2AC  
                                         l17114 E27C                                           l16068 D93C  
                                         l17212 989C                                           l17044 6B10  
                                         l17036 6AC0                                           l17028 6A6A  
                                         l16500 61C4                                           l16412 5F26  
                                         l16404 5F0C                                           l16340 5CFA  
                                         l16332 5CDA                                           l16316 5C5E  
                                         l16308 5C3E                                           l16252 5B34  
                                         l16260 5B5E                                           l16244 5B0E  
                                         l16228 5ABA                                           l16236 5AE4  
                                         l17060 E94A                                           l13596 B244  
                                         l13588 B210                                           l13692 A234  
                                         l13684 A214                                           l13676 A208  
                                         l14820 EA12                                           l14732 9B16  
                                         l14740 9B34                                           l14724 9AF0  
                                         l14716 9ABC                                           l14708 9A74  
                                         l13836 D850                                           l12796 BCD8  
                                         l12980 D42A                                           l12972 CBBC  
                                         l12964 CBA4                                           l12948 D59A  
                                         l13932 5834                                           l13924 5806  
                                         l13916 57E2                                           l13908 579A  
                                         l13860 5608                                           l13852 55D2  
                                         l13844 5586                                           l18020 D3BE  
                                         l18012 D39A                                           l18004 D37E  
                                         l18100 A6EE                                           l16092 E4F0  
                                         l16084 EA52                                           l16180 CE4C  
                                         l16172 CE00                                           l16164 CDEE  
                                         l16156 DC76                                           l16148 DC4E  
                                         l17132 DB98                                           l17108 B6CA  
                                         l17300 957C                                           l17116 E2A2  
                                         l16078 CFD2                                           l17214 9A1E  
                                         l17206 E45A                                           l17046 6B1E  
                                         l17038 6AD6                                           l16510 621A  
                                         l16502 61D2                                           l16430 5F7C  
                                         l16422 5F4E                                           l16414 5F2C  
                                         l16406 5F10                                           l16350 5D66  
                                         l16342 5D04                                           l16334 5CE6  
                                         l16326 5CAE                                           l16318 5C68  
                                         l16270 5B96                                           l16262 5B6E  
                                         l16254 5B44                                           l16246 5B14  
                                         l16238 5AF4                                           l13598 B254  
                                         l13686 A218                                           l13678 A20E  
                                         l14830 EA48                                           l14822 EA2E  
                                         l14742 9B48                                           l14734 9B2A  
                                         l14750 9B66                                           l14726 9AFE  
                                         l14718 9AC4                                           l17230 802C  
                                         l12798 BCDC                                           l12982 D448  
                                         l13950 589A                                           l13942 5872  
                                         l13934 5844                                           l13926 5818  
                                         l13918 57EA                                           l13870 5660  
                                         l13862 5618                                           l13854 55E4  
                                         l13846 559E                                           l18030 D3FC  
                                         l18022 D3C0                                           l18014 D39C  
                                         l18006 D382                                           l18110 A736  
                                         l18102 A6FA                                           l12990 AE68  
                                         l16094 E516                                           l16086 EA62  
                                         l16182 CE60                                           l16166 CDF2  
                                         l17150 DBFA                                           l17142 DBCE  
                                         l17134 DB9C                                           l17310 964E  
                                         l17302 95AE                                           l17118 E2A6  
                                         l17400 ADFA                                           l18200 8D76  
                                         l16192 F104                                           l17208 E46C  
                                         l18040 C9AC                                           l17048 6B24  
                                         l16512 6228                                           l16504 61F0  
                                         l16440 5FB8                                           l16432 5F8C  
                                         l16424 5F5C                                           l16416 5F3A  
                                         l16408 5F1E                                           l16352 5D76  
                                         l16336 5CEA                                           l16328 5CBE  
                                         l16344 5D0A                                           l16280 5BAA  
                                         l16272 5B9A                                           l16264 5B80  
                                         l16256 5B54                                           l16248 5B22  
                                         l17064 EB6C                                           l16600 B668  
                                         l13688 A21E                                           l14840 ED1E  
                                         l14832 ED10                                           l14824 EA30  
                                         l14760 9BA4                                           l14744 9B5C  
                                         l14752 9B76                                           l14736 9B2E  
                                         l14728 9B02                                           l14680 C8FC  
                                         l17224 7F44                                           l17216 7DD8  
                                         l12984 D44C                                           l12976 D410  
                                         l19000 2ACC                                           l12968 CBAA  
                                         l13960 58F2                                           l13952 589E  
                                         l13944 5882                                           l13936 584A  
                                         l13928 5820                                           l13880 569E  
                                         l13872 5668                                           l13864 562A  
                                         l13856 55F6                                           l13848 55AE  
                                         l18032 D3FE                                           l18024 D3DA  
                                         l18016 D3AC                                           l18008 D388  
                                         l18120 A7E2                                           l18112 A754  
                                         l18104 A714                                           l16096 E526  
                                         l16088 EEEA                                           l16184 CE62  
                                         l16176 CE14                                           l17152 DC06  
                                         l17136 DBA2                                           l17080 A9EA  
                                         l17072 A95E                                           l17312 9682  
                                         l17128 E2D4                                           l17402 ADFC  
                                         l17410 AE2E                                           l18210 F0EA  
                                         l18202 8D8A                                           l16194 F112  
                                         l18050 C9F8                                           l18042 C9B0  
                                         l18034 C99C                                           l16522 6292  
                                         l16530 62DA                                           l16514 622C  
                                         l16506 61FA                                           l16450 5FEE  
                                         l16442 5FBE                                           l16434 5F9C  
                                         l16426 5F6A                                           l16418 5F3C  
                                         l16370 5DF8                                           l16362 5DD0  
                                         l16346 5D30                                           l16354 5D86  
                                         l16338 5CF8                                           l16290 5BBE  
                                         l16282 5BAE                                           l16274 5B9E  
                                         l16266 5B8E                                           l16258 5B56  
                                         l17058 E938                                           l17066 EB82  
                                         l16610 B698                                           l14770 C4AE  
                                         l14762 C45C                                           l12898 E68E  
                                         l13698 A24C                                           l14850 EC66  
                                         l14842 ED22                                           l14834 ED14  
                                         l14826 EA38                                           l14818 EA0C  
                                         l14754 9B86                                           l14746 9B60  
                                         l14738 9B32                                           l14690 C964  
                                         l14682 C912                                           l16098 CF28  
                                         l17226 7F54                                           l17218 7DEA  
                                         l17250 6568                                           l17234 637E  
                                         l12978 D418                                           l19010 2AFC  
                                         l13970 5978                                           l13962 591C  
                                         l13954 58B6                                           l13946 5886  
                                         l13938 585C                                           l13890 56F8  
                                         l13882 56B0                                           l13874 5670  
                                         l13866 563C                                           l13858 5606  
                                         l18026 D3EA                                           l18018 D3AE  
                                         l18130 8588                                           l18114 A7AE  
                                         l18106 A718                                           l12994 AE6E  
                                         l12986 AE44                                           l16178 CE48  
                                         l16186 CE74                                           l17138 DBC8  
                                         l17090 AA2A                                           l17074 A990  
                                         l17330 78DE                                           l17322 785A  
                                         l17306 95CE                                           l17162 9BEE  
                                         l18212 EE7A                                           l17420 D4D6  
                                         l17412 AE40                                           l17404 AE04  
                                         l17172 BF76                                           l18044 C9C4  
                                         l18052 CA0A                                           l18036 C9A4  
                                         l16540 634E                                           l16532 62F4  
                                         l16524 629E                                           l16516 623A  
                                         l16508 6208                                           l16452 5FFE  
                                         l16444 5FCC                                           l16436 5FA2  
                                         l16428 5F6C                                           l16372 5E00  
                                         l16364 5DDA                                           l16356 5DAC  
                                         l16348 5D64                                           l16380 5E24  
                                         l16292 5BC2                                           l16284 5BB2  
                                         l16276 5BA2                                           l16268 5B92  
                                         l17068 EB92                                           l16612 B6A8  
                                         l16620 91FE                                           l14780 C51E  
                                         l14772 C4C6                                           l14764 C468  
                                         l14852 EC76                                           l14844 EC46  
                                         l14860 E1FA                                           l14836 ED16  
                                         l14828 EA3A                                           l14756 9B98  
                                         l14748 9B64                                           l14692 C966  
                                         l14684 C930                                           l14676 C8E4  
                                         l17244 64BA                                           l17236 638E  
                                         l18220 E684                                           l19100 2ED0  
                                         l19012 2AFE                                           l13972 59BC  
                                         l13964 5938                                           l13956 58C4  
                                         l13892 570A                                           l13884 56C2  
                                         l13876 5682                                           l13868 564E  
                                         l18028 D3EC                                           l18140 85D4  
                                         l18132 8594                                           l18124 855E  
                                         l18116 A7B2                                           l18108 A71C  
                                         l12996 AE7E                                           l12988 AE56  
                                         l16188 CE78                                           l16700 E63A  
                                         l17148 DBF4                                           l17500 DF2A  
                                         l17092 AA3A                                           l17340 7948  
                                         l17324 788C                                           l17316 7812  
                                         l17308 9646                                           l17164 9CA2  
                                         l17156 9BC4                                           l17422 D4D8  
                                         l17406 AE1C                                           l18070 E882  
                                         l18206 8D9E                                           l17190 C00E  
                                         l17182 BFA0                                           l17174 BF7A  
                                         l16198 F118                                           l18062 CA50  
                                         l18054 CA24                                           l18046 C9CC  
                                         l18038 C9A8                                           l16542 635C  
                                         l16534 6308                                           l16526 62AC  
                                         l16518 6268                                           l16470 6080  
                                         l16462 6048                                           l16454 6004  
                                         l16446 5FCE                                           l16438 5FB2  
                                         l16390 5E76                                           l16382 5E28  
                                         l16374 5E04                                           l16366 5DE8  
                                         l16358 5DBC                                           l16294 5BC6  
                                         l16286 5BB6                                           l16278 5BA6  
                                         l16614 B6B8                                           l16606 B67C  
                                         l16630 927C                                           l16622 920C  
                                         l14774 C4EE                                           l14766 C490  
                                         l14870 C846                                           l14846 EC54  
                                         l14862 E206                                           l14854 E1B6  
                                         l14838 ED18                                           l14758 9BA0  
                                         l14694 C978                                           l14686 C940  
                                         l14678 C8EA                                           l17262 66BE  
                                         l17246 64CE                                           l17238 63A4  
                                         l17254 6594                                           l18214 E63E  
                                         l18230 9EF8                                           l19110 2F58  
                                         l19102 2ED2                                           l19030 2B7E  
                                         l19014 2B10                                           l13966 594C  
                                         l13958 58D0                                           l13894 571C  
                                         l13886 56D4                                           l13878 568E  
                                         l13990 5A3E                                           l18150 86A8  
                                         l18142 85F2                                           l18134 85AE  
                                         l18126 8578                                           l18118 A7CA  
                                         l12998 AE82                                           l17502 DF50  
                                         l17430 E9C8                                           l18302 C128  
                                         l17086 AA0A                                           l17078 A9A6  
                                         l17350 7A5C                                           l17342 797E  
                                         l17334 78FE                                           l17318 7844  
                                         l16710 B8D2                                           l17166 9CF8  
                                         l17158 9BE8                                           ?_crc8 000F  
                                         l18080 DD2C                                           l16704 EBA6  
                                         l16800 4C36                                           l17424 D4E4  
                                         l17416 D4A0                                           l17408 AE2A  
                                         l18208 8E1C                                           l17192 C01C  
                                         l17184 BFCA                                           l17176 BF82  
                                         l17600 CAD6                                           l17280 D0B2  
                                         l17272 D078                                           l18056 CA38  
                                         l18048 C9F6                                           l16544 635E  
                                         l16536 6322                                           l16528 62D6  
                                         l16480 60CA                                           l16472 6098  
                                         l16464 6054                                           l16456 6024  
                                         l16448 5FDE                                           l16392 5E82  
                                         l16384 5E36                                           l16376 5E14  
                                         l16368 5DEA                                           l16296 5BCA  
                                         l16288 5BBA                                           l16608 B688  
                                         l16640 92D0                                           l16632 9284  
                                         l16624 9252                                           l14776 C50A  
                                         l14768 C4AC                                           l14880 C8BA  
                                         l14872 C862                                           l14848 EC64  
                                         l14864 E212                                           l14856 E1C6  
                                         l14688 C948                                           l14696 C996  
                                         l16560 B84A                                           l16552 B7CE  
                                         l17264 66D2                                           l17256 65A8  
                                         l18216 E66C                                           l18232 9F06  
                                         l18240 9F4E                                           l18224 9ED8  
                                         l19120 2FE0                                           l19112 2F68  
                                         l19104 2EFC                                           l19040 2C0E  
                                         l19032 2B8E                                           l19016 2B20  
                                         l19008 2AEC                                           l13968 5964  
                                         l13976 5A00                                           l13984 5A38  
                                         l13896 572E                                           l13888 56E6  
                                         l13992 5A64                                           l18160 8708  
                                         l18144 860C                                           l18152 86AC  
                                         l18136 85B2                                           l18128 8580  
                                         l19200 E426                                           l17520 E558  
                                         l17512 E546                                           l17440 EA02  
                                         l17432 E9D0                                           l18320 C16E  
                                         l18304 C12C                                           l18312 C134  
                                         l17088 AA20                                           l17352 7A6E  
                                         l17344 79A2                                           l17336 7914  
                                         l17328 78AC                                           l16712 B8F4  
                                         l17168 9D4E                                           l18082 DD40  
                                         l18074 DCEA                                           l16810 4C66  
                                         l16802 4C3E                                           l17362 DF60  
                                         l17426 D4F6                                           l17418 D4A4  
                                         l17370 AD18                                           l18170 8C5A  
                                         l17194 C020                                           l17186 BFD6  
                                         l17178 BF8E                                           l17602 CAE6  
                                         l18066 F188                                           l17290 D0FA  
                                         l17282 D0C0                                           l17274 D088  
                                         l18058 CA4A                                           l16538 633E  
                                         l16546 6364                                           l16490 6120  
                                         l16482 60DA                                           l16474 60A4  
                                         l16466 605E                                           l16458 6034  
                                         l16394 5E90                                           l16386 5E4C  
                                         l16378 5E16                                           l16298 5BCE  
                                         l16650 9346                                           l16642 930C  
                                         l16634 9290                                           l16626 9268  
                                         l16618 91EE                                           l14778 C50C  
                                         l14882 C8C2                                           l14874 C86A  
                                         l14866 C82A                                           l14858 E1E0  
                                         l16570 B8CE                                           l16562 B858  
                                         l16554 B7FC                                           l18218 E67C  
                                         l18250 9FB0                                           l18242 9F5E  
                                         l18234 9F3A                                           l18226 9EE0  
                                         l19130 3082                                           l19122 300A  
                                         l19114 2F92                                           l19106 2F1E  
                                         l19050 2C4E                                           l19034 2B90  
                                         l19026 2B38                                           l19018 2B32  
                                         l13994 5A74                                           l13978 5A32  
                                         l13898 5740                                           l18162 8724  
                                         l18154 86C4                                           l18146 8618  
                                         l18138 85BA                                           l19202 E430  
                                         l17610 D6CE                                           l17530 E58E  
                                         l17522 E55C                                           l17514 E54A  
                                         l17506 DF56                                           l17442 EA08  
                                         l17434 E9D6                                           l18314 C152  
                                         l17098 AA4E                                           l17354 7AA0  
                                         l17346 79BE                                           l17338 7924  
                                         l18410 4FE2                                           l18402 4F44  
                                         l16730 B9CE                                           l16722 B922  
                                         l18076 DD04                                           l16708 EBBC  
                                         l16804 4C4A                                           l16812 4C72  
                                         l16820 4C9A                                           l16740 48C8  
                                         l17364 DF8E                                           l17428 D4F8  
                                         l17380 AD62                                           l17372 AD20  
                                         l18068 E85E                                           l18260 F078  
                                         l18180 8CAE                                           l18172 8C5E  
                                         l17196 C03C                                           l17188 BFF0  
                                         l17604 CAE8                                           l17292 D104  
                                         l17284 D0CA                                           l17276 D09E  
                                         l16548 6368                                           l16492 613C  
                                         l16484 60E6                                           l16476 60B0  
                                         l16468 6074                                           l16396 5ECA  
                                         l16580 B5EE                                           l16660 938E  
                                         l16652 934A                                           l16644 9318  
                                         l16636 92C2                                           l14876 C874  
                                         l14884 C8CA                                           l14868 C830  
                                         l16564 B86A                                           l16556 B80C  
                                         l17268 676C                                           l17700 403A  
                                         l18252 9FBC                                           l18244 9F92  
                                         l18236 9F46                                           l18228 9EE8  
                                         l19140 313C                                           l19132 3092  
                                         l19124 301C                                           l19116 2FA4  
                                         l19108 2F2E                                           l19036 2BC6  
                                         l19028 2B48                                           l19044 2C22  
                                         l13996 5A78                                           l18164 8758  
                                         l18156 86DC                                           l18148 86A2  
                                         l18092 EE2E                                           l18084 EE26  
                                         l19204 E436                                           l17612 D6D2  
                                         l17452 ED96                                           l17460 E33E  
                                         l17532 E594                                           l17524 E562  
                                         l17516 E550                                           l17508 DF5C  
                                         l17436 E9FC                                           l18332 C1AA  
                                         l18316 C168                                           l18500 8348  
                                         l16900 A5BE                                           l17348 7A0A  
                                         l18420 5160                                           l18412 5062  
                                         l18404 4F48                                           l19300 6F94  
                                         l19212 EAE8                                           l16716 B8FA  
                                         l18078 DD18                                           l16830 4CCA  
                                         l16822 4CA2                                           l16814 4C7A  
                                         l16806 4C52                                           l16750 498A  
                                         l16742 48E4                                           l17366 DF9A  
                                         l17382 AD7C                                           l17390 ADAA  
                                         l17374 AD30                                           l18190 8D12  
                                         l18182 8CC2                                           l18174 8C72  
                                         l16734 F0D0                                           l17606 CAF8  
                                         l17286 D0E8                                           l17278 D0A6  
                                         l16494 6148                                           l16486 60F6  
                                         l16478 60BE                                           l16398 5ECC  
                                         l18270 7D8E                                           l18262 7B02  
                                         l16590 B63C                                           l16582 B618  
                                         l16574 B5C4                                           l16654 936E  
                                         l16646 9326                                           l16638 92C4  
                                         l14886 C8DE                                           l14878 C892  
                                         l16566 B878                                           l16558 B83A  
                                         l17702 403E                                           l18254 9FF4  
                                         l18246 9F96                                           l18238 9F4A  
                                         l19142 3166                                           l19134 30C6  
                                         l19126 3046                                           l19118 2FCE  
                                         l19070 2CF2                                           l19062 2C94  
                                         l19054 2C6E                                           l19046 2C44  
                                         l19038 2BD8                                           l19150 328C  
                                         l13998 5A88                                           l18166 8774  
                                         l18158 86F6                                           l18094 EE3E  
                                         l18086 EE2A                                           l17614 D704  
                                         l17446 ED70                                           l17470 E358  
                                         l17462 E346                                           l17526 E588  
                                         l17518 E554                                           l18326 C188  
                                         l18350 DFDA                                           l19206 EEC6  
                                         l18510 8406                                           l18502 837A  
                                         l16902 A5CC                                           l16910 A5F4  
                                         l17358 7AB6                                           l17294 954C  
                                         l18430 5288                                           l18422 5192  
                                         l18406 4F7A                                           l18414 509C  
                                         l19310 709A                                           l19302 6FCC  
                                         l17550 E128                                           l17542 E0F2  
                                         l19230 C38E                                           l19222 C2E0  
                                         l16808 4C5E                                           l16816 4C86  
                                         l16824 4CAE                                           l16832 4CD6  
                                         l16760 4A16                                           l16840 4CFE  
                                         l16752 49A6                                           l16744 4958  
                                         l17368 DF9E                                           l17392 ADD8  
                                         l17384 AD88                                           l17376 AD44  
                                         l18600 C626                                           l18192 8D26  
                                         l18184 8CD6                                           l18176 8C86  
                                         l16736 F0D0                                           l17608 CAFA  
                                         l17288 D0F8                                           l16920 6796  
                                         l16496 6164                                           l16488 6110  
                                         l18272 7DB6                                           l18264 7B8A  
                                         l16584 B61A                                           l16576 B5DA  
                                         l16656 937E                                           l16648 9344  
                                         l16568 B8C8                                           l17800 44D0  
                                         l17720 40C6                                           l17712 4074  
                                         l17704 4060                                           l18256 A028  
                                         l18248 9F9A                                           l19160 32C2  
                                         l19152 329C                                           l19144 318E  
                                         l19136 30E8                                           l19128 3058  
                                         l19080 2D9A                                           l19072 2D04  
                                         l19064 2CBA                                           l19056 2C8A  
                                         l19048 2C46                                           l18096 EE40  
                                         l19240 B2CA                                           l17448 ED90  
                                         l17472 E37E                                           l17464 E34A  
                                         l17456 E336                                           l18344 C1F6  
                                         l17560 EFDC                                           l17536 EF9C  
                                         l18520 84E2                                           l18512 8438  
                                         l18504 838E                                           l16680 C44A  
                                         l16672 C3EA                                           l16664 C392  
                                         l16912 A60A                                           l17296 955C  
                                         l18440 5352                                           l18432 52C2  
                                         l18424 51C4                                           l18416 50CE  
                                         l18408 4FAC                                           l19320 71CC  
                                         l19312 70AC                                           l19304 6FDE  
                                         l17640 DECE                                           l17632 DE94  
                                         l19208 EAC6                                           l16728 B94A  
                                         l17544 E0FC                                           l19224 C306  
                                         l19216 C2C8                                     _writeBuffer 02B0  
                                         l18530 EA8C                                           l16850 4D2E  
                                         l16842 4D06                                           l16834 4CDE  
                                         l16826 4CB6                                           l16818 4C8E  
                                         l16770 4AA2                                           l16762 4A32  
                                         l16754 49C2                                           l16746 4962  
                                         l16738 48B6                                           l18290 E4D8  
                                         l18282 E49A                                           l17394 ADDA  
                                         l17386 AD8E                                           l17378 AD56  
                                         l18602 C668                                           l18194 8D3A  
                                         l18186 8CEA                                           l18178 8C9A  
                                         l16930 67D4                                           l16922 67A4  
                                         l16498 618E                                           l18266 7BFA  
                                         l16586 B62A                                           l16658 938C  
                                         l17810 4518                                           l17802 44E2  
                                         l17730 411E                                           l17722 40DE  
                                         l17714 409E                                           l17706 4068  
                                         l18258 DC7A                                           l19154 329E  
                                         l19138 3112                                           l19090 2E30  
                                         l19082 2DAA                                           l19074 2D2E  
                                         l19066 2CCA                                           l19058 2C8C  
                                         l18098 A6D6                                           l19170 DAEC  
                                         l19162 DAAE                                           l16690 E60C  
                                         l17618 D70A                                           l19242 B2EC  
                                         l17466 E34E                                           l17458 E33A  
                                         l17490 DF12                                           l17482 DEFC  
                                         l18338 C1D4                                           l17562 EFE4  
                                         l17538 EFA4                                           l18362 E00E  
                                         l18354 DFE0                                           l18522 84F6  
                                         l18514 846A                                           l18506 83C0  
                                         l16674 C430                                           l16666 C3C4  
                                         l16914 A61E                                           l16906 A5E0  
                                         l18450 5462                                           l18442 53B2  
                                         l18434 52D8                                           l18426 5224  
                                         l18418 5100                                           l19314 70BE  
                                         l19306 7006                                           l17634 DEA0  
                                         l18370 E8AE                                           l19330 F098  
                                         l19250 DD58                                           l17546 E122  
                                         l19226 C316                                           l19218 C2DA  
                                         ?_fabs 0013                                           l18540 EABC  
                                         l18532 EA90                                           l16860 4DAA  
                                         l16852 4D3A                                           l16780 4B2E  
                                         l16828 4CC2                                           l16772 4ABE  
                                         l16836 4CEA                                           l16764 4A4E  
                                         l16844 4D12                                           l16756 49DE  
                                         l16748 496E                                           l18292 E4DA  
                                         l18284 E4B6                                           l18276 E496  
                                         l17396 ADE6                                           l18612 C6A2  
                                         l18604 C66A                                           l18196 8D4E  
                                         l18188 8CFE                                           l17580 CA72  
                                         l17572 CA56                                           l18620 9716  
                                         l16940 6804                                           l16932 67E4  
                                         l16924 67B2                                           l18268 7D4C  
                                         l16596 B654                                           l16588 B62E  
                                         l17900 48AC                                           l17812 4564  
                                         l17804 4500                                           l17820 45AC  
                                         l17740 418A                                           l17732 4126  
                                         l17724 40E6                                           l17716 40B0  
                                         l17708 406E                                           l19156 32B0  
                                         l19092 2E42                                           l19084 2DE0  
                                         l19076 2D3E                                           l19068 2CCC  
                                         l19148 31B8                                           l18700 33FA  
                                         l19172 DAF4                                           l19164 DACA  
                                         l19180 E3AA                                           l19500 90D6  
                                         l16684 E5EE                                           l17660 D250  
                                         l17652 D1FA                                           l17644 D1BE  
                                         l17628 D74E                                           l19244 B37A  
                                         l17476 E384                                           l17468 E352  
                                         l17492 DF18                                           l17484 DF00  
                                         l18364 E024                                           l18356 DFF6  
                                         l18348 DFC6                                           l18524 8528  
                                         l18516 847E                                           l18508 83F2  
                                         l16676 C440                                           l16668 C3D4  
                                         l16916 A68A                                           l18452 54E2  
                                         l18444 53E4                                           l18436 530A  
                                         l18428 5256                                           l19316 7106  
                                         l19308 704E                                           l17636 DEA4  
                                         l18380 E8DC                                           l19252 DD5C  
                                         l19260 DD6C                                           l17556 E150  
                                         l19228 C34A                                           l18550 ECF0  
                                         l17670 E24E                                           l18542 EABE  
                                         l18534 EA98                                           l16870 4E36  
                                         l16854 4D56                                           l16862 4DD2  
                                         l16846 4D1A                                           l16838 4CF2  
                                         l16790 4BBA                                           l16782 4B4A  
                                         l16774 4ADA                                           l16766 4A6A  
                                         l16758 49FA                                           l18294 E4EA  
                                         l18286 E4D2                                           l17398 ADE8  
                                         l18606 C67E                                           l17910 F05A  
                                         l18198 8D62                                           l17590 CA98  
                                         l17582 CA74                                           l17574 CA5A  
                                         l18630 972C                                           l18622 971C  
                                         l18614 F0B2                                           l16950 683A  
                                         l16942 680A                                           l16934 67E6  
                                         l16926 67B4                                           l16598 B65E  
                                         l19342 C6C8                                           l19350 C748  
                                         l17822 45C2                                           l17830 45DC  
                                         l17814 4598                                           l17806 450C  
                                         l17750 4208                                           l17742 41A6  
                                         l17734 4158                                           l17726 40F4  
                                         l17718 40BE                                           l19158 32C0  
                                         l19094 2E78                                           l19086 2DF0  
                                         l19078 2D78                                           l18710 3440  
                                         l18702 340A                                           l19174 DAFA  
                                         l19166 DACE                                           l19190 E3DE  
                                         l19182 E3BA                                           l19510 9102  
                                         l19502 90DE                                           l16694 E612  
                                         l16686 E5F2                                           l17646 D1C2  
                                         l18390 EDBA                                           l19238 B2AA  
                                         l17478 E38A                                           l17494 DF1C  
                                         l17486 DF04                                           l17566 EFBC  
                                         l18518 84B0                                           l18462 74FE  
                                         l16678 C448                                           l18446 5416  
                                         l18438 533C                                           l19318 7118  
                                         l19270 6E90                                           l17638 DEC4  
                                         l18374 E8B6                                           l19262 DD8A  
                                         l18526 F134                                           l17672 E25A  
                                         l17664 E218                                           l18544 EAC0  
                                         l18536 EAA8                                           l18552 F19A  
                                         l16880 4EA6                                           l16872 4E3E  
                                         l16864 4DDA                                           l16856 4D70  
                                         l16792 4BD6                                           l16784 4B66  
                                         l16776 4AF6                                           l16768 4A86  
                                         l16848 4D26                                           l17912 F1A8  
                                         l18608 C682                                           l17592 CAA8  
                                         l17584 CA84                                           l17576 CA60  
                                         l18632 9730                                           l18624 9720  
                                         l18616 96F6                                           l18560 D866  
                                         l19440 D752                                           l16960 687A  
                                         l16952 684A                                           l16944 6818  
                                         l16928 67C4                                           l16936 67EE  
                                         l17904 E8F0                                           l19352 C768  
                                         l19344 C6EA                                           l19336 C6AE  
                                         l17840 4636                                           l17832 45F6  
                                         l17824 45CE                                           l17808 4510  
                                         l17760 429C                                           l17752 423A  
                                         l17744 41B6                                           l17736 4168  
                                         l17728 4118                                           l17680 3F94  
                                         l19096 2E88                                           l19088 2DF2  
                                         l18800 3D44                                           l18720 3498  
                                         l18712 344A                                           l18704 3412  
                                         l19192 E3E6                                           l19176 DB12  
                                         l19168 DAE0                                           l19184 E3CA  
                                         l19520 9144                                           l19504 90E4  
                                         l16688 E608                                           l17648 D1F4  
                                         l18384 ED9E                                           l17496 DF20  
                                         l17488 DF0A                                           l17568 EFC4  
                                         l18480 77E6                                           l18464 7590  
                                         l17920 882C                                           l18448 542C  
                                         l18456 551C                                           l19272 6EA2  
                                         l18368 E8AA                                           l19256 DD64  
                                         l19600 725A                                           l19360 9EB0  
                                         l18546 ECE0                                           l17674 E25E  
                                         l17666 E22A                                           l18538 EAB4  
                                         l18570 E5AE                                           l18298 F190  
                                         l16890 4F12                                           l16882 4EAE  
                                         l16874 4E4A                                           l16866 4DE2  
                                         l16858 4D7C                                           l16794 4BF2  
                                         l16786 4B82                                           l16778 4B12  
                                         l17594 CAAA                                           l17586 CA86  
                                         l17578 CA62                                           l18650 9848  
                                         l18634 9734                                           l18626 9724  
                                         l18618 9710                                           l18562 D868  
                                         l18554 D854                                           l19450 D76A  
                                         l19442 D758                                           l16962 688A  
                                         l16970 68AA                                           l16954 684C  
                                         l16946 681A                                           l16938 67FE  
                                         l17906 E8FE                                           l19346 C736  
                                         l19338 C6C2                                           l17850 46AC  
                                         l17842 4642                                           l17834 4612  
                                         l17826 45D2                                           l17770 436E  
                                         l17762 42D6                                           l17754 4246  
                                         l17746 41BC                                           l17738 416E  
                                         l17690 3FC6                                           l17682 3FA6  
                                         l19098 2E8A                                           l18810 3D9A  
                                         l18802 3D54                                           l18730 3528  
                                         l18722 34BC                                           l18714 3454  
                                         l18706 3428                                           l19194 E402  
                                         l19186 E3CE                                           l19178 E38E  
                                         l19530 9164                                           l19506 90F6  
                                         l18394 DA38                                           l17658 D22C  
                                         l18386 EDB4                                           l17498 DF24  
                                         l18466 75A0                                           l18474 7698  
                                         l17930 8894                                           l17914 87C2  
                                         l18458 553C                                           l19282 6EF2  
                                         l19274 6EB4                                           l19290 6F02  
                                         l18378 E8BE                                           l19266 DDAC  
                                         l19610 7282                                           l19602 726C  
                                         l19362 9EC0                                           l17668 E23C  
                                         l18660 F180                                           l18580 EDF8  
                                         l18572 E5CA                                           l16892 4F2E  
                                         l16884 4ECA                                           l16876 4E66  
                                         l16868 4DFE                                           l16796 4C0E  
                                         l16788 4B9E                                           l17596 CABA  
                                         l17588 CA96                                           l18652 986C  
                                         l18644 9740                                           l18636 9738  
                                         l18628 9728                                           l18564 D86A  
                                         l18556 D858                                           l19460 D776  
                                         l19444 D75A                                           l16980 68E8  
                                         l16972 68BA                                           l16964 6892  
                                         l16948 682A                                           l16956 6854  
                                         l17860 4744                                           l17852 46F8  
                                         l17844 4646                                           l17836 461E  
                                         l17828 45D6                                           l17772 43A0  
                                         l17764 42F4                                           l17756 4278  
                                         l17748 41D4                                           l17692 3FE2  
                                         l17684 3FB2                                           l17676 3F7E  
                                         l18900 2612                                           l18820 3E30  
                                         l18812 3DC2                                           l18804 3D6A  
                                         l18740 35A4                                           l18732 353A  
                                         l18724 34CE                                           l18716 3464  
                                         l18708 3438                                           l19196 E412  
                                         l19188 E3D8                                           l19532 916C  
                                         l19516 910C                                           l19508 90FE  
                                         l19540 9192                                           l18396 DA50  
                                         l18476 76A8                                           l18468 7684  
                                         l17940 8938                                           l17932 88A4  
                                         l17924 884C                                           l17916 87C8  
                                         l19292 6F20                                           l19276 6ED0  
                                         l19620 72AA                                           l19612 7294  
                                         l19604 7270                                           l19364 9EC4  
                                         l19356 9D52                                           l18582 EE04  
                                         l18574 E5CE                                           l16886 4F02  
                                         l16878 4E9E                                           l16798 4C2A  
                                         l18590 C5F8                                           l17598 CABC  
                                         l18654 986E                                           l18646 9800  
                                         l18638 973C                                           l18566 D8C8  
                                         l18558 D864                                           l19470 D7BC  
                                         l19462 D786                                           l19446 D760  
                                         l16990 6930                                           l16982 68F8  
                                         l16974 68BA                                           l16966 6896  
                                         l16958 6864                                           l19702 946A  
                                         l17870 47BC                                           l17854 472C  
                                         l17862 4790                                           l17846 464A  
                                         l17838 4626                                           l17782 4402  
                                         l17774 43AE                                           l17766 4326  
                                         l17758 427E                                           l17694 3FE8  
                                         l17686 3FB6                                           l17678 3F88  
                                         l18910 26CE                                           l18902 2662  
                                         l18822 3E34                                           l18814 3DE6  
                                         l18806 3D7A                                           l18750 36A4  
                                         l18742 35DC                                           l18734 355E  
                                         l18726 34F2                                           l18718 3488  
                                         l18670 3324                                           l18830 3E80  
                                         l18662 32D0                                           l19198 E422  
                                         l19526 914C                                           l19518 9128  
                                         l18398 DA9C                                           l18494 82F4  
                                         l18478 77B0                                           l18486 77FA  
                                         l17950 89EA                                           l17934 8910  
                                         l17942 895C                                           l17926 887E  
                                         l17918 87FA                                           l19294 6F3E  
                                         l19286 6EFA                                           l19278 6EEC  
                                         l19622 72B2                                           l19614 7298  
                                         l19606 7274                                           l19366 9ED4  
                                         l19358 9D82                                           l19550 C07A  
                                         l19542 C050                                           l18584 EE14  
                                         l18576 E5D2                                           l18568 E598  
                                         l16888 4F0A                                           l18592 C614  
                                         l18656 987E                                           l18648 9824  
                                         l19472 D7C0                                           l19464 D79E  
                                         l19456 D76E                                           l19448 D766  
                                         l16992 6944                                           l16984 6908  
                                         l19720 94FA                                           l19712 94B0  
                                         l19704 947E                                           l17880 4804  
                                         l17864 47A8                                           l17872 47C2  
                                         l17856 473C                                           l17848 4660  
                                         l17776 43B8                                           l17768 4350  
                                         l17784 4418                                           l17696 3FF4  
                                         l17688 3FBE                                           l18920 2712  
                                         l18904 269C                                           l18840 23AC  
                                         l18824 3E40                                           l18816 3E0A  
                                         l18808 3D8A                                           l18760 3864  
                                         l18752 36E6                                           l18744 3672  
                                         l18736 3570                                           l18728 3504  
                                         l18680 335C                                           l18832 3F22  
                                         l18664 32F8                                           l19536 9174  
                                         l19528 915C                                           l19480 9014  
                                         l18496 8304                                           l16896 A590  
                                         l17944 8980                                           l19296 6F5E  
                                         l19640 730C                                           l19632 72D8  
                                         l19624 72BA                                           l19608 727C  
                                         l19560 C0CE                                           l19552 C080  
                                         l19544 C062                                           l18658 F17A  
                                         l18578 E5D8                                           l18594 C620  
                                         l18586 C5E6                                           l19474 D7C4  
                                         l19466 D7A4                                           l19458 D774  
                                         l16994 6952                                           l16986 6918  
                                         l16978 68CE                                           l19706 9490  
                                         l19730 9512                                           l17890 486E  
                                         l17882 4828                                           l17866 47B4  
                                         l17858 4740                                           l17794 4494  
                                         l17786 4486                                           l17778 43CE  
                                         l17874 47D8                                           l17698 4010  
                                         l18930 2788                                           l18922 2716  
                                         l18906 26BC                                           l18914 26D4  
                                         l18850 2402                                           l18842 23C8  
                                         l18834 3F40                                           l18826 3E60  
                                         l18818 3E20                                           l18762 3896  
                                         l18754 3788                                           l18746 3682  
                                         l18738 3594                                           l18682 3360  
                                         l18674 332C                                           l18666 3314  
                                         l19802 8FDA                                           l19490 9080  
                                         l19482 9018                                           l17970 C244  
                                         l17962 C220                                           l17954 C1FC  
                                         l18498 8316                                           l16898 A5AE  
                                         l17946 89B4                                           l17938 8930  
                                         l19298 6F70                                           l19650 7344  
                                         l19634 72F4                                           l19626 72CC  
                                         l19618 72A0                                           l19562 C0E2  
                                         l19554 C092                                           l19570 C114  
                                         l19810 BDD8                                           l18588 C5F2  
                                         l19476 D7C8                                           l19468 D7B0  
                                         l16996 695E                                           l16988 6920  
                                         l19724 9504                                           l19716 94DC  
                                         l19708 94A6                                           l17884 482C  
                                         l17876 47EA                                           l17868 47B8  
                                         l17788 4490                                           l18932 279A  
                                         l18940 2848                                           l18908 26CC  
                                         l18860 245C                                           l18852 2404  
                                         l18844 23D0                                           l18836 3F5C  
                                         l18780 3BB4                                           l18772 392E  
                                         l18764 38C6                                           l18756 384C  
                                         l18748 3692                                           l18692 3398  
                                         l18684 338A                                           l18668 331C  
                                         l19740 8E70                                           l19732 8E3A  
                                         l19492 9098                                           l19484 9034  
                                         l17980 C27C                                           l17972 C256  
                                         l17964 C230                                           l17956 C20C  
                                         l17948 89D8                                           l19660 7404  
                                         l19652 734C                                           l19644 7314  
                                         l19636 72F6                                           l19628 72D0  
                                         l19580 71EA                                           l19564 C0EC  
                                         l19556 C09A                                           l19548 C076  
                                         l19820 BE4C                                           l19812 BDF6  
                                         l19804 BDA2                                           l19478 D7CC  
                                         l16998 697C                                           l19718 94E6  
                                         l17886 4850                                           l17878 4800  
                                         l17798 44CE                                           l18942 2868  
                                         l18934 27AC                                           l18950 2880  
                                         l18926 272A                                           l18918 26EA  
                                         l18870 24CC                                           l18862 245E  
                                         l18854 2420                                           l18846 23D4  
                                         l18838 2384                                           l18790 3C18  
                                         l18774 3A22                                           l18766 38D6  
                                         l18758 3854                                           l18694 33C0  
                                         l18686 338E                                           l18678 3334  
                                         l19750 8EC6                                           l19742 8E80  
                                         l19734 8E52                                           l19494 90B4  
                                         l19486 9046                                           l19670 7488  
                                         l19662 741C                                           l19654 73B4  
                                         l19646 7324                                           l19638 7308  
                                         l19590 723C                                           l19582 71F2  
                                         l19574 71D0                                           l19558 C0B6  
                                         l19822 BE68                                           l19814 BE06  
                                         l19806 BDB4                                   ___fltol@sign1 0025  
                                         l17888 4850                                           l17896 487E  
                                         l18960 28EC                                           l18952 2892  
                                         l18944 2878                                           l18936 27BE  
                                         l18928 2746                                           l18880 253C  
                                         l18872 24CE                                           l18864 2474  
                                         l18856 243C                                           l18848 23F2  
                                         l18792 3C28                                           l18784 3BC8  
                                         l18776 3A54                                           l18768 38E8  
                                         l18696 33C4                                           l19752 8EC8  
                                         l19760 8EEA                                           l19744 8E92  
                                         l19736 8E56                                           l19496 90B8  
                                         l19488 9066                                           l17992 C2B6  
                                         l19664 7430                                           l19656 73C4  
                                         l19648 7334                                           l19592 7240  
                                         l19584 720C                                           l19576 71D4  
                                         l19568 C0F6                                           l19824 BE86  
                                         l19816 BE22                                           l19808 BDD0  
                                         l19682 93CC                                           l17898 48A0  
                                         l18970 2954                                           l18962 28FE  
                                         l18954 28BA                                           l18946 287A  
                                         l18938 280E                                           l18890 257E  
                                         l18882 253E                                           l18874 24F4  
                                         l18866 2496                                           l18858 244C  
                                         l18794 3C3A                                           l18786 3BD8  
                                         l18778 3ADE                                           l18698 33E4  
                                         l19770 8F2C                                           l19762 8EEE  
                                         l19754 8ECC                                           l19746 8EA4  
                                         l19738 8E60                                           l19498 90CA  
                                         l17986 C290                                           l17978 C26A  
                                         l19666 743E                                           l19658 73FC  
                                         l19594 7244                                           l19586 7224  
                                         l19578 71D8                                           l19674 7490  
                                         l19818 BE30                                 __end_of___aldiv B4BE  
                                         l17996 ECAE                                           l19692 9420  
                                         l19684 93E0                                           l19676 93A0  
                                         l18980 29C6                                           l18972 2964  
                                         l18964 290E                                           l18956 28DA  
                                         l18892 259A                                           l18884 2566  
                                         l18876 2506                                           l18868 24BC  
                                         l18788 3C08                                           l19780 8F80  
                                         l19772 8F32                                           l19756 8ED0  
                                         l19748 8EB6                                           l19764 8F06  
                                         l17988 C2A2                                           l19668 7476  
                                         l19596 724C                                           l19588 722A  
                                         l19694 9434                                           l19686 93EE  
                                         l19678 93A4                                           l18990 2A40  
                                         l18982 29D6                                           l18974 2966  
                                         l18966 291E                                           l18958 28EA  
                                         l18894 25DC                                           l18886 256A  
                                         l18878 252C                                           l18798 3C80  
                                         l19774 8F56                                           l19782 8F88  
                                         l19766 8F18                                           l19758 8EE2  
                                         l19598 7254                                           l19688 93F8  
                                         l18992 2A50                                           l18984 29E6  
                                         l18968 292C                                           l18976 2990  
                                         l18896 25EE                                           l19792 8FBC  
                                         l19784 8F92                                           l19776 8F68  
                                         l19768 8F1C                                           l19698 9442  
                                         l18994 2A52                                           l18986 29F4  
                                         l18978 29B4                                           l18898 2600  
                                         l19794 8FCE                                           l19786 8FA0  
                                         l19778 8F76                                           l18996 2A7C  
                                         l18988 2A20                                           l19796 8FD2  
                                         l19788 8FAA                                           l18998 2AA4  
                               __end_of___almod BDA2                                 __end_of___fladd 5F4E  
                                         ?_main 0001                          __size_of_ymd_to_scalar 00BE  
                               __end_of___fldiv 6B32                                 __end_of___awdiv C5E6  
                               __end_of___flneg EBA4                                           STR_10 237D  
                                         STR_11 2377                                           STR_20 2358  
                                         STR_12 2377                                           STR_21 2358  
                                         STR_13 237D                                           STR_30 2358  
                                         STR_22 2358                                           STR_14 2358  
                                         STR_31 2358                                           STR_23 2358  
                                         STR_15 2358                                           STR_40 2358  
                                         STR_32 2358                                           STR_24 2358  
                                         STR_16 2358                                           STR_41 2358  
                                         STR_33 2358                                           STR_25 2358  
                                         STR_17 2358                                           STR_42 2358  
                                         STR_34 2358                                           STR_26 2358  
                                         STR_18 2358                                           STR_50 236E  
                                         STR_43 2358                                           STR_35 2358  
                                         STR_27 2358                                           STR_19 2358  
                                         STR_51 236E                                           STR_44 2358  
                                         STR_36 2358                                           STR_28 2358  
                                         STR_52 236E                                 __end_of___awmod CD22  
                                         STR_45 2358                                           STR_37 2358  
                                         STR_29 2358                                           STR_53 236E  
                                         STR_46 2358                                           STR_38 2358  
                                         STR_54 236E                                           STR_47 2358  
                                         STR_39 2358                                           STR_55 236E  
                                         STR_56 236E                                           STR_48 236E  
                                         STR_49 236E                                 __end_of___flmul 637A  
             __size_of_USBCtrlEPServiceComplete 0152                                 __end_of___flsub E980  
                               __end_of___fltol B6CA                                 __end_of___lldiv D11C  
                                         u10200 B0CA                                           u11000 B5B4  
                                         u10201 B0C6                                           u11001 B5B0  
                                         u10210 B100                                           u11010 6B44  
                                         u10211 B0FC                                           u11011 6B40  
                                         u10220 B12C                                           u11100 6C6C  
                                         u11020 6B58                                           u11101 6C68  
                                         u11021 6B54                                           u10230 B14A  
                                         u11110 6C94                                           u11030 6B6C  
                                         u10231 B146                                           u11111 6C90  
                                         u11031 6B68                                           u10240 B176  
                                         u11120 6CE6                                           u11040 6B8E  
                                         u12000 AFE2                                           u20000 75A0  
                                         u11121 6CE2                                           u11041 6B8A  
                                         u12001 AFDE                                           u20001 759C  
                                         u10250 B194                                           u11130 6CFC  
                                         u11050 6BA2                                           u10170 EB6A  
                                         u12010 AFF2                                           u20010 76A8  
                                         u10251 B190                                           u10227 B122  
                                         u11131 6CF8                                           u11051 6B9E  
                                         u10171 EB66                                           u12011 AFEE  
                                         u20011 76A4                                           u10180 B09C  
                                         u11140 6D0A                                           u11060 6BB6  
                                         u10500 C54E                                           u12020 B024  
                                         u20100 846A                                           u20020 780C  
                                         u10181 B098                                           u11141 6D06  
                                         u11061 6BB2                                           u11301 A090  
                                         u10501 C54A                                           u12021 B020  
                                         u20101 8466                                           u20021 7808  
                                         u10190 B0B2                                           u11150 6D7A  
                                         u11070 6BCC                                           u11310 A0A4  
                                         u10510 C574                                           u12030 B060  
                                         u20110 84B0                                           u20030 8304  
                                         u10247 B16C                                           u10191 B0AE  
                                         u11151 6D76                                           u11071 6BC8  
                                         u11311 A0A0                                           u10511 C570  
                                         u12031 B05C                                           u20111 84AC  
                                         u20031 8300                                           u20200 987E  
                                         u11160 6DD6                                           u11080 6BDE  
                                         u11400 A522                                           u11320 A106  
                                         u10520 C592                                           u10600 CD10  
                                         u12040 B07E                                           u20120 84E2  
                                         u20040 8316                                           u21000 6EB4  
                                         u20201 987A                                           u11161 6DD2  
                                         u11081 6BDA                                           u11401 A51E  
                                         u11321 A102                                           u10521 C58E  
                                         u10601 CD0C                                           u12041 B07A  
                                         u20121 84DE                                           u20041 8312  
                                         u21001 6EB0                                           u11170 6DEC  
                                         u11090 6BEE                                           u11410 A536  
                                         u11330 A130                                           u10530 C5AE  
                                         u20210 32F8                                           u20130 8528  
                                         u20050 8348                                           u21010 6ED0  
                                         u11171 6DE8                                           u11091 6BEA  
                                         u11411 A532                                           u11331 A12C  
                                         u10531 C5AA                                           u20211 32F4  
                                         u20131 8524                                           u20051 8344  
                                         u21011 6ECC                                           u20140 EAA8  
                                         u11180 6DFC                                           u11420 A55E  
                                         u11340 A144                                           u11260 EC90  
                                         u10540 C5D4                                           u20300 3504  
                                         u20220 3358                                           u20060 837A  
                                         u21020 6EEC                                 ___awdiv@divisor 0017  
                                         u20141 EAA4                                           u11181 6DF8  
                                         u11421 A55A                                           u11341 A140  
                                         u11261 EC8C                                           u10541 C5D0  
                                         u20301 3500                                           u20221 3354  
                                         u20061 8376                                           u21021 6EE8  
                                         u11430 A57E                                           u11350 A16C  
                                         u11270 ECA0                                           u10550 CC84  
                                         u20310 353A                                           u20230 338A  
                                         u20070 83C0                                           u21030 6F3E  
                                         u11431 A57A                                           u11351 A168  
                                         u11271 EC9C                                           u10551 CC80  
                                         u20311 3536                                           u20231 3386  
                                         u20071 83BC                                           u21031 6F3A  
                                         u20160 E5CA                                           u11360 A18C  
                                         u10560 CC9E                                           u14000 579A  
                                         u10800 F01A                                           u20400 38E8  
                                         u20320 3570                                           u20240 33E0  
                                         u20080 83F2                                           u21040 6F70  
                                         u21200 C0B6                                           u20161 E5C6  
                               __end_of___llmod D644                                           u11361 A188  
                                         u11281 A058                                           u10561 CC9A  
                                         u14001 5796                                           u10801 F016  
                                         u20401 38E4                                           u20321 356C  
                                         u20241 33DC                                           u20081 83EE  
                                         u21041 6F6C                                           u21201 C0B2  
                                         u20170 C614                                           u21130 D786  
                                         u10810 BAE4                          __end_of_USBDeviceTasks 82F2  
                                         u11370 A45A                                           u11290 A06C  
                                         u10490 C534                                           u10570 CCB8  
                                         u14010 57AC                                           u20410 392A  
                                         u20330 35A4                                           u20250 340A  
                                         u20090 8438                                           u21050 6FDE  
                                         u21210 C0E2                                           u20171 C610  
                                         u20155 D88C                                           u21131 D782  
                                         u10811 BAE0                                           u11371 A456  
                                         u11291 A068                                           u10491 C530  
                                         u10571 CCB4                                           u14011 57A8  
                                         u20411 3926                                           u20331 35A0  
                                         u20251 3406                                           u20091 8434  
                                         u21051 6FDA                                           u21211 C0DE  
                                         u20180 C67A                                           u21300 93E0  
                                         u10820 BAF8                                           u10900 AC1C  
                                         u12500 A32A                                           u11380 A484  
                                         u10580 CCD6                                           u14100 5882  
                                         u14020 57BE                                           u20500 3D8A  
                                         u20420 3A54                                           u20340 35DC  
                                         u20260 3438                                           u21140 9046  
                                         u21060 70AC                                           u21220 720C  
                                         u20181 C676                                           u21301 93DC  
                                         u10821 BAF4                                           u10901 AC18  
                                         u12501 A326                                           u11381 A480  
                                         u10581 CCD2                                           u14101 587E  
                                         u14021 57BA                                           u20501 3D86  
                                         u20421 3A50                                           u20341 35D8  
                                         u20261 3434                                           u21141 9042  
                                         u21061 70A8                                           u21221 7208  
                                         u20190 C69E                                           u21310 941C  
                                         u10830 BB10                                           u10910 AC64  
                                         u12510 A3A4                                           u11470 D5D2  
                                         u11390 A4F2                                           u10590 CCEC  
                                         u14110 58C4                                           u14030 57D0  
                                         u20510 3E30                                           u20430 3ADE  
                                         u20350 3692                                           u20270 3464  
                                         u21150 9080                                           u21070 70BE  
                                         u21230 7324                                           u20191 C69A  
                                         u21311 9418                                           u10831 BB0C  
                                         u12511 A3A0                                           u11471 D5CE  
                                         u11391 A4EE                                           u10591 CCE8  
                                         u14111 58C0                                           u14031 57CC  
                                         u20511 3E2C                                           u20431 3ADA  
                                         u20351 368E                                           u20271 3460  
                                         u21151 907C                                           u21071 70BA  
                                         u21231 7320                                           u21320 9434  
                                         u10840 BB4C                                           u10920 AC92  
                                         u12600 B9EA                                           u12520 A3BC  
                                         u11480 D5F4                                           u20600 25EE  
                                         u14120 59A6                                           u14040 57E2  
                                         u20520 3F40                                           u20440 3BD8  
                                         u20360 36A4                                           u20280 3498  
                                         u21400 8E80                                           u21160 90CA  
                                         u21080 7118                                           u21240 7334  
                                         u21321 9430                                           u10841 BB48  
                                         u12601 B9E6                                           u12521 A3B8  
                                         u11481 D5F0                                           u20601 25EA  
                                         u14121 599E                                           u14041 57DE  
                                         u20521 3F3C                                           u20441 3BD4  
                                         u20361 36A0                                           u20281 3494  
                                         u21401 8E7C                                           u21161 90C6  
                                         u21081 7114                                           u21241 7330  
                                         u21090 C6C2                                           u21330 9466  
                                         u10930 ACB0                                           u10850 CBDE  
                                         u12530 A3DA                                           u11490 D612  
                                         u12610 B3C4                                           u20610 2600  
                                         u14050 5806                                           u20530 3F5C  
                                         u20450 3C28                                           u20370 36E6  
                                         u20290 34CE                                           u21410 8E92  
                                         u21170 915C                                           u21250 7344  
                                         u21091 C6BE                                           u21331 9462  
                                         u10931 ACAC                                           u10851 CBDA  
                                         u12531 A3D6                                           u11491 D60E  
                                         u12611 B3C0                                           u20611 25FC  
                                         u14051 5802                                           u20531 3F58  
                                         u20451 3C24                                           u20371 36E2  
                                         u20291 34CA                                           u21411 8E8E  
                                         u21171 9158                                           u21251 7340  
                                         u21340 947E                                           u10940 ACEC  
                                         u10860 CC36                                           u12540 A43E  
                                         u15100 9A48                                           u12620 B3E6  
                                         u12700 BD32                                           u20700 2892  
                                         u20620 2612                                           u20540 23AC  
                                         u14140 59EA                                           u14060 5818  
                                         u20460 3C3A                                           u20380 3864  
                                         u21420 8EA4                                           u21260 73C4  
                                         u21180 C062                                           u21500 BDD0  
                                         u21341 947A                                           u10917 AC5A  
                                         u10861 CC32                                           u12541 A43A  
                                         u15101 9A44                                           u12621 B3E2  
                                         u12701 BD2E                                           u20701 288E  
                                         u20621 260E                                           u20541 23A8  
                                         u14141 59E2                                           u14061 5814  
                                         u20461 3C36                                           u20381 3860  
                                         u21421 8EA0                                           u21261 73C0  
                                         u21181 C05E                                           u21501 BDCC  
                                         u21350 9490                                           u12550 A842  
                                         u10950 B4E0                                           u10870 BEFE  
                                         u15110 9A5E                                           u12630 B420  
                                         u12710 BD50                                           u20710 28FE  
                                         u20630 26E6                                           u20550 2420  
                                         u11910 E168                                           u14070 5830  
                                         u20470 3C7C                                           u20390 38D6  
                                         u21430 8EB6                                           u21270 7430  
                                         u21190 C072                                           u21510 BDF6  
                                         u21351 948C                                           u12551 A83E  
                                         u10927 AC88                                           u10951 B4DC  
                                         u10871 BEFA                                           u15111 9A5A  
                                         u12631 B41C                                           u12711 BD4C  
                                         u20711 28FA                                           u20631 26E2  
                                         u20551 241C                                           u11911 E164  
                                         u14071 582C                                           u20471 3C78  
                                         u20391 38D2                                           u21431 8EB2  
                                         u21271 742C                                           u21191 C06E  
                                         u21511 BDF2                                           u21360 94A2  
                                         u13600 B228                                           u12560 A886  
                                         u10960 B504                                           u10880 BF4C  
                                         u12480 A302                                           u15200 9B86  
                                         u15120 9A74                                           u12640 B442  
                                         u12720 BD80                                           u11840 E70E  
                                         u20800 2F2E                                           u20720 291E  
                                         u20640 2726                                           u20560 243C  
                                         u11920 E17A                                           u12800 D55C  
                                         u14160 5A74                                           u14080 585C  
                                         u20480 3D54                                           u21440 8EE2  
                                         u21280 7476                                           u21520 BE4C  
                                         u21361 949E                                           u13601 B224  
                                         u12561 A882                                           u10961 B500  
                                         u10881 BF48                                           u12481 A2FE  
                                         u15201 9B82                                           u15121 9A70  
                                         u12641 B43E                                           u12721 BD7C  
                                         u20801 2F2A                                           u20721 291A  
                                         u20641 2722                                           u20561 2438  
                                         u11921 E176                                           u12801 D558  
                                         u14161 5A70                                           u14081 5858  
                                         u20481 3D50                                           u21441 8EDE  
                                         u21281 7472                                           u21521 BE48  
                                         u21370 94D4                                           u21290 93C8  
                                         u13610 B254                                           u12570 A898  
                                         u10890 ABF0                                           u10970 B512  
                                         u12490 A312                                           u15210 9B98  
                                         u15130 9A88                                           u12650 B46A  
                                         u11850 E71E                                           u20810 2F68  
                                         u20730 29C6                                           u20650 2746  
                                         u20570 257A                                           u11930 E18C  
                                         u12810 D58E                                           u14170 5A88  
                                         u14138 59A8                                           u14090 586E  
                                         u20490 3D7A                                           u21450 8F18  
                                         u21530 BE86                                           u21371 94D0  
                                         u21291 93C4                                           u13611 B250  
                                         u12571 A894                                           u10947 ACE2  
                                         u10891 ABEC                                           u10971 B50E  
                                         u12491 A30E                                           u15211 9B94  
                                         u15131 9A84                                           u12651 B466  
                                         u11851 E71A                                           u20811 2F64  
                                         u20731 29C2                                           u20651 2742  
                                         u20571 2576                                           u11931 E188  
                                         u12811 D58A                                           u14171 5A84  
                                         u14091 586A                                           u20491 3D76  
                                         u21451 8F14                                           u21531 BE82  
                                         u13540 D66E                                           u15220 C490  
                                         u21380 94FA                                           u13620 B29C  
                                         u12580 A8D2                                           u10980 B568  
                                         u15300 E1C6                                           u15140 9A9E  
                                         u15060 C8FC                                           u12660 B49C  
                                         u11860 EE62                                           u20820 2FA4  
                                         u20740 29E6                                           u20660 2788  
                                         u20580 259A                                           u11940 E19C  
                                         u12820 D5B2                                           u12900 AE56  
                                         u21460 8F56                                           u20900 DB10  
                                         u13541 D66A                                           u15221 C48C  
                                         u21381 94F6                                           u13621 B298  
                                         u12581 A8CE                                           u10981 B564  
                                         u15301 E1C2                                           u15141 9A9A  
                                         u15061 C8F8                                           u12661 B498  
                                         u11861 EE5E                                           u20821 2FA0  
                                         u20741 29E2                                           u20661 2784  
                                         u20581 2596                                           u11941 E198  
                                         u12821 D5AE                                           u12901 AE52  
                                         u21461 8F52                                           u15230 C4C2  
                                         u12590 A958                                           u13550 D9D4  
                                         u10990 B57E                                           u15310 E1E0  
                                         u15150 9AD4                                           u15070 C912  
                                         u12670 BCC8                                           u20830 2FE0  
                                         u20750 2AE8                                           u20670 279A  
                                         u20590 25DC                                           u12830 CB58  
                                         u11950 E1AC                                           u14158 59EC  
                                         u12910 AE68                                           u21470 8F68  
                                         u21390 8E4E                                           u20910 E3AA  
                                         u15231 C4BE                                           u12591 A954  
                                         u13551 D9D0                                           u10991 B57A  
                                         u15311 E1DC                                           u15151 9AD0  
                                         u15071 C90E                                           u12671 BCC4  
                                         u11847 E704                                           u20831 2FDC  
                                         u20751 2AE4                                           u20671 2796  
                                         u20591 25D8                                           u12831 CB54  
                                         u11951 E1A8                                           u12911 AE64  
                                         u21471 8F64                                           u21391 8E4A  
                                         u20911 E3A6                                           u17000 5B0C  
                                         u15240 C4EE                                           u13560 D9F2  
                                         u15320 E1FA                                           u15160 9AE4  
                                         u15080 C930                                           u12680 BCEA  
                                         u20840 301C                                           u20760 2B48  
                                         u20680 27AC                                           u11960 AF7C  
                                         u12840 CBA4                                           u13800 5618  
                                         u12920 AEA8                                           u21480 8FCE  
                                         u20920 E3CA                                           u17001 5B08  
                                         u15241 C4EA                                           u13561 D9EE  
                                         u15321 E1F6                                           u15161 9AE0  
                                         u15081 C92C                                           u12681 BCE6  
                                         u20841 3018                                           u20761 2B44  
                                         u20681 27A8                                           u11961 AF78  
                                         u12841 CBA0                                           u13801 5614  
                                         u12921 AEA4                                           u21481 8FCA  
                                         u20921 E3C6                                           u17010 5B22  
                                         u15250 C51E                                           u13570 B1C4  
                                         u12770 E6DC                                           u15330 C846  
                                         u13650 A206                                           u15170 9B12  
                                         u15090 C978                                           u13730 D7FE  
                                         u12690 BD10                                           u20850 3058  
                                         u20770 2C6A                                           u20690 27BE  
                                         u11970 AF8E                                           u12850 CBBC  
                                         u13810 562A                                           u12930 AEBA  
                                         u20930 E402                                           u21490 BDB4  
                     ?_USBCtrlEPServiceComplete 0001                                           u17011 5B1E  
                                         u15251 C51A                                           u13571 B1C0  
                                         u12771 E6D8                                           u15331 C842  
                                         u13651 A202                                           u15171 9B0E  
                                         u15091 C974                                           u13731 D7FA  
                                         u12691 BD0C                                           u20851 3054  
                                         u20771 2C66                                           u20691 27BA  
                                         u11971 AF8A                                           u12851 CBB8  
                                         u13811 5626                                           u12931 AEB6  
                                         u20931 E3FE                                           u21491 BDB0  
                                         u17100 5C5C                                           u17020 5B34  
                                         u13580 B1DE                                           u15340 C892  
                                         u13660 A234                                           u15500 813E  
                                         u15420 808A                                           u15180 9B44  
                                         u12860 D42A                                           u12780 EDDA  
                                         u20860 3092                                           u20780 2D3E  
                                         u11980 AF9E                                           u13900 56E6  
                                         u13820 563C                                           u12940 AF26  
                                         u20940 E422                                           u17101 5C58  
                                         u17021 5B30                                           u13581 B1DA  
                                         u15341 C88E                                           u13661 A230  
                                         u15501 813A                                           u15421 8086  
                                         u15181 9B40                                           u12861 D426  
                                         u12781 EDD6                                           u20861 308E  
                                         u20781 2D3A                                           u11981 AF9A  
                                         u13901 56E2                                           u13821 5638  
                                         u13741 5580                                           u12941 AF22  
                                         u20941 E41E                                           u17110 5C7C  
                                         u17030 5B44                                           u13590 B1FC  
                                         u15350 C8DE                                           u13670 A2AE  
                                         u15270 EA48                                           u15510 8156  
                                         u15430 80B4                                           u15190 9B76  
                                         u12870 D43C                                           u20790 2DAA  
                                         u11990 AFC4                                           u12790 D54A  
                                         u13910 56F8                                           u13830 564E  
                                         u12950 AF40                                           u20870 DACA  
                                         u20950 EAE4                                           u17111 5C78  
                                         u17031 5B40                                           u13591 B1F8  
                                         u15351 C8DA                                           u13671 A2AA  
                                         u15271 EA44                                           u15511 8152  
                                         u15431 80B0                                           u15191 9B72  
                                         u12871 D438                                           u20791 2DA6  
                                         u11991 AFC0                                           u12791 D546  
                                         u13911 56F4                                           u13831 564A  
                                         u13751 558C                                           u12951 AF3C  
                                         u20871 DAC6                                           u20951 EAE0  
                                         u18000 4AF6                                           u17200 5DBC  
                                         u17120 5C8A                                           u17040 5B80  
                                         u15280 EC64                                           u15600 8212  
                                         u15520 8166                                           u15440 80C8  
                                         u12880 D484                                           u13920 570A  
                                         u13840 5660                                           u13760 55C0  
                                         u12960 E836                                           u20880 DAE0  
                                         u20960 C2DA                                           u18001 4AF2  
                                         u17201 5DB8                                           u17121 5C86  
                                         u17041 5B7C                                           u15281 EC60  
                                         u15601 820E                                           u15521 8162  
                                         u15441 80C4                                           u13921 5706  
                                         u13841 565C                                           u13761 55BC  
                                         u12961 E832                                           u20881 DADC  
                                         u20961 C2D6                                           u18010 4B12  
                                         u17210 5DE8                                           u17130 5C9A  
                                         u17050 5B8E                                           u15290 EC76  
                                         u15610 8240                                           u15530 8178  
                                         u15450 80D6                                           u12890 D496  
                                         u13930 571C                                           u13850 5682  
                                         u13770 55D2                                           u12970 E85A  
                                         u20890 DB0E                                           u20970 C306  
                                         u18011 4B0E                                           u17211 5DE4  
                                         u17131 5C96                                           u17051 5B8A  
                                         u15291 EC72                                           u15611 823C  
                                         u15531 8174                                           u15451 80D2  
                                         u12891 D492                                           u13931 5718  
                                         u13851 567E                                           u13771 55CE  
                                         u12971 E856                                           u20891 DB08  
                                         u20971 C302                                           u18100 4C0E  
                                         u18020 4B2E                                           u17300 5ECA  
                                         u17220 5DF8                                           u17140 5CCC  
                                         u17060 5BFC                                           u15620 8256  
                                         u15540 8188                                           u15460 80F6  
                                         u15700 D2AC                                           u13940 572E  
                                         u13860 569E                                           u13780 55E4  
                                         u20980 B2CA                                           u18101 4C0A  
                                         u18021 4B2A                                           u17301 5EC6  
                                         u17221 5DF4                                           u17141 5CC8  
                                         u17061 5BF8                                           u15621 8252  
                                         u15541 8184                                           u15461 80F2  
                                         u15701 D2A8                                           u13941 572A  
                                         u13861 569A                                           u13781 55E0  
                                         u20981 B2C6                                           u18110 4C2A  
                                         u18030 4B4A                                           u17310 5EDC  
                                         u17230 5E14                                           u17150 5CDA  
                                         u17070 5C14                                           u15630 8268  
                                         u15550 81BC                                           u15470 8106  
                                         u15710 D2E4                                           u13950 5740  
                                         u13870 56B0                                           u13790 55F6  
                                         u20990 DDA8                                           u18111 4C26  
                                         u18031 4B46                                           u17311 5ED8  
                                         u17231 5E10                                           u17151 5CD6  
                                         u17071 5C0E                                           u15631 8264  
                                         u15551 81B8                                           u15471 8102  
                                         u15711 D2E0                                           u12887 D47A  
                                         u13951 573C                                           u13871 56AC  
                                         u13791 55F2                                           u20991 DDA4  
                                         u16600 DE18                                           u18120 4D56  
                                         u18040 4B66                                           u17400 5FDE  
                                         u17320 5EEC                                           u17240 5E24  
                                         u17160 5CF8                                           u17080 5C16  
                                         u15640 8288                                           u15560 81CE  
                                         u15480 811A                                           u13960 5752  
                                         u13880 56C2                                           u15720 EF44  
                                         u18200 A68A                                           u19000 E122  
                                         u16601 DE14                                           u18121 4D52  
                                         u18041 4B62                                           u17401 5FDA  
                                         u17321 5EE8                                           u17241 5E20  
                                         u17161 5CF4                                           u15641 8284  
                                         u15561 81CA                                           u15481 8116  
                                         u13961 574E                                           u13881 56BE  
                                         u15721 EF40                                           u18201 A686  
                                         u19001 E11E                                           u16610 DB3E  
                                         u18130 4D70                                           u18050 4B82  
                                         u18210 67B2                                           u17410 5FEE  
                                         u17330 5F0C                                           u17250 5E36  
                                         u17170 5D30                                           u17090 5C3E  
                                         u15650 82B8                                           u15570 81E0  
                                         u15490 812E                                           u13970 5764  
                                         u13890 56D4                                           u19010 E14C  
                                         u16611 DB3A                                           u18131 4D6C  
                                         u18051 4B7E                                           u18211 67AE  
                                         u17411 5FEA                                           u17331 5F08  
                                         u17251 5E32                                           u17171 5D2C  
                                         u17091 5C3A                                           u15651 82B4  
                                         u15571 81DC                                           u15491 812A  
                                         u13971 5760                                           u13891 56D0  
                                         u21867 DFEA                                           u19011 E148  
                                         u19100 E278                                           u16620 DB5C  
                                         u18140 4DFE                                           u18060 4B9E  
                                         u18300 6952                                           u18220 67C4  
                                         u17500 6292                                           u17420 6024  
                                         u17340 5F1E                                           u17260 5E4C  
                                         u17180 5D76                                           u15660 82EE  
                                         u15580 81F0                                           u13980 5776  
                                         u16700 EA62                                           u19020 D704  
                                         u19101 E274                                           u16621 DB58  
                                         u18141 4DFA                                           u18061 4B9A  
                                         u18301 694E                                           u18221 67C0  
                                         u17501 628E                                           u17421 6020  
                                         u17341 5F1A                                           u17261 5E48  
                                         u17181 5D72                                           u15661 82EA  
                                         u15581 81EC                                           u13981 5772  
                                         u16701 EA5E                                           u19021 D700  
                                         u21877 E018                                           u16630 DB78  
                                         u18150 4E66                                           u18070 4BBA  
                                         u18310 697C                                           u18230 67D4  
                                         u17510 62AC                                           u17430 6034  
                                         u17350 5F3A                                           u17270 5E62  
                                         u17190 5DAC                                           u15590 8202  
                                         u15670 D264                                           u19110 3FA6  
                                         u13990 5788                                           u16710 EA74  
                                         u19030 D738                                           u16631 DB74  
                                         u18151 4E62                                           u18071 4BB6  
                                         u18311 6978                                           u18231 67D0  
                                         u17511 62A8                                           u17431 6030  
                                         u17351 5F36                                           u17271 5E5E  
                                         u17191 5DA8                                           u15591 81FE  
                                         u15671 D260                                           u19111 3FA2  
                                         u13991 5784                                           u16711 EA70  
                                         u19031 D734                                           u16640 E0A0  
                                         u18160 4ECA                                           u18080 4BD6  
                                         u18400 6A78                                           u18320 69A0  
                                         u18240 6818                                           u17520 62F4  
                                         u17440 61AE                                           u17360 5F6A  
                                         u17280 5E76                                           u17600 B5DA  
                                         u15680 D276                                           u19200 4278  
                                         u19120 3FE2                                           u16800 E540  
                                         u16720 EA86                                           u19040 D74A  
                                         u16641 E09C                                           u18161 4EC6  
                                         u18081 4BD2                                           u18401 6A74  
                                         u18321 699C                                           u18241 6814  
                                         u17521 62F0                                           u17361 5F66  
                                         u17281 5E72                                           u17601 B5D6  
                                         u15681 D272                                           u19201 4274  
                                         u19121 3FDE                                           u16801 E53C  
                                         u16721 EA80                                           u19041 D746  
                                         u16650 E0BE                                           u18090 4BF2  
                                         u18410 6AC0                                           u18330 69B6  
                                         u18250 682A                                           u17530 6322  
                                         u17450 6208                                           u17370 5F7C  
                                         u17290 5E90                                           u17610 B60E  
                                         u15690 D28A                                           u16810 CF56  
                                         u19210 429C                                           u19130 405C  
                                         u16730 EEFA                                           u19050 D1F4  
                                         u18170 A5BE                                           u16651 E0BA  
                                         u18091 4BEE                                           u18411 6ABC  
                                         u18331 69B2                                           u18251 6826  
                                         u17531 631E                                           u17451 6204  
                                         u17371 5F78                                           u17291 5E8C  
                                         u15691 D286                                           u16811 CF52  
                                         u19211 4298                                           u19131 4058  
                                         u16731 EEF6                                           u19051 D1F0  
                                         u18171 A5BA                                           u16660 E0D4  
                                         u18420 6AF0                                           u18340 69D4  
                                         u18260 683A                                           u17540 635C  
                                         u17460 6228                                           u17380 5F8C  
                                         u17620 B63C                                           u17700 92BE  
                                         u16820 CF94                                           u19300 45BE  
                                         u19220 42F4                                           u19140 40B0  
                                         u16740 EF0A                                           u16900 CDEE  
                                         u19060 D228                                           u18500 B7BC  
                                         u18180 A5CC                                           u16661 E0D0  
                                         u18421 6AEC                                           u18341 69D0  
                                         u18261 6836                                           u17541 6358  
                                         u17461 6224                                           u17445 61A4  
                                         u17381 5F88                                           u17621 B638  
                                         u17701 92BA                                           u16821 CF90  
                                         u19301 45BA                                           u19221 42F0  
                                         u19141 40AC                                           u16741 EF06  
                                         u16901 CDEA                                           u19061 D224  
                                         u18501 B7B8                                           u18181 A5C8  
                                         u19070 E22A                                           u16670 D8F8  
                                         u16590 DDDE                                           u18430 6B1E  
                                         u18350 69F4                                           u18270 687A  
                                         u17470 623A                                           u17390 5FCC  
                                         u17630 B650                                           u17710 9308  
                                         u16830 CFC8                                           u17550 B7FC  
                                         u19310 45F6                                           u19230 4326  
                                         u19150 40BE                                           u16750 EF1E  
                                         u16726 EA88                                           u16910 CE10  
                                         u18190 A60A                                           u18510 E2A2  
                                         u19071 E226                                           u16671 D8F4  
                                         u16591 DDDA                                           u18431 6B1A  
                                         u18351 69F0                                           u18271 6876  
                                         u17471 6236                                           u17391 5FC8  
                                         u17631 B64C                                           u17615 B604  
                                         u17711 9304                                           u16831 CFC4  
                                         u17551 B7F8                                           u19311 45F2  
                                         u19231 4322                                           u19151 40BA  
                                         u16751 EF1A                                           u16911 CE0C  
                                         u18191 A606                                           u18511 E29E  
                                         u19080 E23C                                           u16680 D916  
                                         u16840 C7A2                                           u18600 C03C  
                                         u18360 6A06                                           u18280 68BA  
                                         u17480 6268                                           u18440 EB82  
                                         u17640 B678                                           u17720 9326  
                                         u17560 B83A                                           u19400 486E  
                                         u19320 4612                                           u19240 4350  
                                         u19160 40F4                                           u16760 EF2E  
                                         u16920 CE48                                           u17800 E636  
                                         u18520 E2D0                                           u19081 E238  
                                         u16681 D912                                           u16841 C79E  
                                         u18601 C038                                           u18361 6A02  
                                         u18281 68B6                                           u17481 6264  
                                         u18441 EB7E                                           u17641 B674  
                                         u17721 9322                                           u17561 B836  
                                         u19401 486A                                           u19321 460E  
                                         u19241 434C                                           u19161 40F0  
                                         u16761 EF2A                                           u16921 CE44  
                                         u17801 E632                                           u18521 E2CC  
                                         u19090 E24A                                           u16690 D93C  
                                         u16850 C7C0                                           u18610 E456  
                                         u18370 6A34                                           u18290 6930  
                                         u17490 627E                                           u17650 B698  
                                         u17730 9336                                           u17570 B858  
                                         u19410 48A0                                           u19330 4636  
                                         u19250 436E                                           u19170 4158  
                                         u16770 E500                                           u16930 CE74  
                                         u18530 DBC8                                           u18450 A990  
                                         u17810 B8F4                                           u19091 E246  
                                         u16691 D938                                 __end_of___lwdiv DB98  
                                         u16851 C7BC                                           u18611 E452  
                                         u18371 6A30                                           u18291 692C  
                                         u17491 627A                                           u17651 B694  
                                         u17731 9332                                           u17571 B854  
                                         u19411 489C                                           u19331 4632  
                                         u19251 436A                                           u19171 4154  
                                         u16771 E4FC                                           u16931 CE70  
                                         u18531 DBC4                                           u18451 A98C  
                                         u17811 B8F0                                           u17900 49DE  
                                         u16940 F112                                           u18620 E494  
                                         u18700 D09E                                           u18380 6A4A  
                                         u19420 E8FE                                           u17660 B6A8  
                                         u17740 9344                                           u17580 B878  
                                         u19340 47A4                                           u19260 43A0  
                                         u19180 41B6                                           u19500 C230  
                                         u16780 E510                                           u16860 DC1E  
                                         u18540 DBF0                                           u18460 A9D0  
                                         u17820 B91E                                           u17901 49DA  
                                         u16941 F10E                                           u18621 E490  
                                         u18701 D09A                                           u18381 6A46  
                                         u19421 E8FA                                           u17661 B6A4  
                                         u17741 9340                                           u17581 B874  
                                         u19341 47A0                                           u19261 439C  
                                         u19181 41B2                                           u19501 C22C  
                                         u16781 E50C                                           u16861 DC1A  
                                         u18541 DBEC                                           u18461 A9C8  
                                         u17821 B91A                                           u16950 8A50  
                                         u17910 49FA                                           u18710 D0C0  
                                         u18390 6A5E                                           u17750 937E  
                                         u17670 91FE                                           u17590 B8C8  
                                         u18630 7DEA                                           u19350 47D4  
                                         u19270 44CA                                           u19190 423A  
                                         u19510 C256                                           u16790 E526  
                                         u16870 DC44                                           u18470 A9EA  
                                         u19430 87FA                                           u17830 B946  
                                         u18550 9BE8                                           u16951 8A4C  
                                         u17911 49F6                                           u18711 D0BC  
                                         u18391 6A5A                                           u17751 937A  
                                         u17671 91FA                                           u17591 B8C4  
                                         u18631 7DE6                                           u19351 47D0  
                                         u19271 44C6                                           u19191 4236  
                                         u19511 C252                                           u16791 E522  
                                         u16871 DC40                                           u18471 A9E6  
                                         u19431 87F6                                           u17831 B942  
                                         u18551 9BE4                                           u16960 8A7C  
                                         u17920 4A16                                           u17840 F0E4  
                                         u18720 D0E8                                           u17760 938C  
                                         u17680 920C                                           u18640 7F54  
                                         u19360 47EA                                           u19280 44E2  
                                         u19600 A736                                           u19520 C27C  
                                         u16880 DC62                                           u18480 AA20  
                                         u18800 7924                                           u19440 882C  
                                         u16961 8A78                                           u17921 4A12  
                                         u17841 F0E0                                           u18721 D0E4  
                                         u17761 9388                                           u17681 9208  
                                         u18641 7F50                                           u19361 47E6  
                                         u19281 44DE                                           u19601 A732  
                                         u19521 C278                                           u16881 DC5E  
                                         u18481 AA1C                                           u18801 7920  
                                         u19441 8828                                           u17930 4A32  
                                         u16970 5AA8                                           u17690 9268  
                                         u18650 638E                                           u19370 4800  
                                         u19290 4500                                           u19610 A750  
                                         u19530 C2A2                                           u16890 DC72  
                                         u17770 C3C4                                           u18490 AA3A  
                                         u18810 7A6E                                           u18730 955C  
                                         u19450 887E                                           u17931 4A2E  
                                         u17851 48C0                                           u16971 5AA4  
                                         u17691 9264                                           u18651 638A  
                                         u19371 47FC                                           u19291 44FC  
                                         u19611 A74C                                           u19531 C29E  
                                         u16891 DC6E                                           u17771 C3C0  
                                         u18491 AA36                                           u18811 7A6A  
                                         u18731 9558                                           u19451 887A  
                                         u17940 4A4E                                           u17860 48E4  
                                         u18900 AE2A                                           u18580 BF9C  
                                         u19540 C9C4                                           u16980 5ABA  
                                         u18660 63A4                                           u19380 4828  
                                         u19700 86F6                                           u19620 A7CA  
                                         u17780 C41C                                           u18468 A9D4  
                                         u18820 7AA0                                           u18740 95AE  
                                         u19460 88A4                                           u17941 4A4A  
                                         u17861 48E0                                           u18901 AE26  
                                         u18581 BF98                                           u19541 C9C0  
                                         u16981 5AB6                                           u18661 63A0  
                                         u19381 4824                                           u19701 86F2  
                                         u19621 A7C6                                           u17781 C414  
                                         u18821 7A9C                                           u18741 95AA  
                                         u19461 88A0                                           u18565 9C18  
                                         u17950 4A6A                                           u17870 498A  
                                         u18830 DFB8                                           u18910 AE40  
                                         u18590 BFF0                                           u19550 CA0A  
                                         u16990 5ACA                                           u18670 64CE  
                                         u19390 4850                                           u19710 8708  
                                         u19630 A7E2                                           u17790 E608  
                                         u18750 7844                                           u19470 8910  
                                         u18566 9C24                                           u17951 4A66  
                                         u17871 4986                                           u18831 DFB4  
                                         u18911 AE3C                                           u18591 BFEC  
                                         u19551 CA06                                           u16991 5AC6  
                                         u18671 64CA                                           u19391 484C  
                                         u19711 8704                                           u19631 A7DE  
                                         u17791 E604                                           u18751 7840  
                                         u19471 890C                                           u18575 9C76  
                                         u18567 9C34                                           u17960 4A86  
                                         u17880 49A6                                           u18920 D4D6  
                                         u19560 CA38                                           u18680 65A8  
                                         u19720 8774                                           u19640 85AE  
                                         u19800 C168                                           u18760 788C  
                                         u19480 89EA                                           u18576 9C82  
                                         u17961 4A82                                           u17881 49A2  
                                         u18921 D4D2                                           u19561 CA34  
                                         u18681 65A4                                           u19721 8770  
                                         u19641 85AA                                           u19801 C164  
                                         u18761 7888                                           u19481 89E6  
                                         u18577 9C92                                           u17970 4AA2  
                                         u17890 49C2                                           u18930 D4F6  
                                         u19570 CA4A                                           u18690 66D2  
                                         u19730 E67C                                           u19650 85D4  
                                         u19490 C20C                                           u19810 C184  
                                         u18770 78DE                                           u17971 4A9E  
                                         u17891 49BE                                           u18931 D4F2  
                                         u19571 CA46                                           u18691 66CE  
                                         u19731 E678                                           u19651 85D0  
                                         u19491 C208                                           u19811 C180  
                                         u18771 78DA                                           u17980 4ABE  
                                         u18940 D52E                                           u18860 ADA6  
                                         u19740 9F06                                           u19660 85EE  
                                         u19580 EE50                                           u19820 C1A6  
                                         u17788 C420                                           u18780 7910  
                                         u19900 50CE                                           u17981 4ABA  
                                         u18941 D52A                                           u18861 ADA2  
                                         u18845 AD34                                           u19741 9F02  
                                         u19661 85EA                                           u19581 EE4C  
                                         u19821 C1A2                                           u18781 790A  
                                         u19901 50CA                                           u17990 4ADA  
                                         u18870 ADBC                                           u19750 9FB0  
                                         u19670 860C                                           u19590 A714  
                                         u18950 E9FC                                           u19830 C1D0  
                                         u18790 7912                                           u19910 5100  
                                         u17991 4AD6                                           u18871 ADB8  
                                         u18855 AD46                                           u19751 9FAC  
                                         u19671 8608                                           u19591 A710  
                                         u18951 E9F8                                           u19831 C1CC  
                                         u19911 50FC                                           u18880 ADD8  
                                         u19760 A03E                                           u19680 86C4  
                                         u18960 ED90                                           u19840 C1F2  
                                         u19920 5192                                           u18881 ADD4  
                                         u19761 A03A                                           u19681 86C0  
                                         u18961 ED8C                                           u19841 C1EE  
                                         u19921 518E                                           u19770 E4B6  
                                         u18890 ADFA                                           u19690 86DC  
                                         u18970 E37E                                           u19850 DFDA  
                                         u19930 51C4                                           u19771 E4B2  
                                         u18891 ADF6                                           u19691 86D8  
                                         u18971 E37A                                           u19851 DFD6  
                                         u19931 51C0                                           u19780 E4D2  
                                         u18980 DF50                                           u19860 E00A  
                                         u19940 5256                                           u19781 E4CE  
                                         u18981 DF4C                                           u19861 E006  
                                         u19941 5252                                           u19790 E4EA  
                                         u19870 EDB4                                           u18990 E588  
                                         u19950 5288                                           u19791 E4E6  
                                         u19871 EDB0                                           u18991 E584  
                                         u19951 5284                                           u19960 530A  
                                         u19880 4F7A                                 __end_of___lwmod E0F2  
                                         u19961 5306                                           u19881 4F76  
                                         u19970 533C                                           u19890 4FAC  
                                         u19971 5338                                           u19891 4FA8  
                                         u19980 53E4                                           i1l613 2060  
                                         u19981 53E0                                           u19990 5416  
                                         u19991 5412                                           i1l464 F132  
                                         i1l467 EF94                                           i1l469 EF9A  
                                         _UADDR 000F38                                 ___awdiv@counter 0019  
                                         _TMR0L 000FD6                               _atcommand_compare AF6A  
                                         _USTAT 000F64                                           _TXREG 000FAE  
     gasSensor_temperature_cmp_coefficient@temp 00DF                         __end_of_sht3x_heaterOff EFDC  
                         I2C_Write@I2cWriteData 000F              __size_of_USBCtrlEPAllowStatusStage 00F6  
                           ___lmul@multiplicand 0013                               buffer_en_queue@ch 0011  
                       build_response@temp_2492 00DF                                   _CMP_temp_read B2A6  
                                  CRC_check@crc 0022                                ??_CMD_manual_cal 0020  
               __end_of_USBCtrlEPAllowDataStage CC72                                           _sd000 2344  
                                         _sd001 228A                                           _sd002 04C3  
                ?_USBIncrement1msInternalTimers 0001                  __size_of_sensor_adc_initialize 0048  
                               __end_of__strclr E27A                       Calculate_CRC16@polynomial 0016  
                               __end_of__strcpy D4A0                                 __end_of__strlen E72C  
                            ?_atcommand_compare 0013                                           __atof 855E  
                                         __atoi A6D6                   __end_of_sensor_adc_initialize E8F0  
                                         __ftoa E63E                                           __itoa 9ED8  
                          __size_of_check_param 0062                                           _g_nvm 0179  
                                         crc8@i 0012                                           crc8@j 0013  
                               __end_of_dpowers 230E                                           fabs@d 0013  
                       ?_lmp91000_set_Reference 001A                                           _floor A590  
                                         _ldexp A95E                                           _frexp C392  
                                         _errno 015A                  __end_of_lmp91000_set_GainRLoad E38E  
                                         _scale 637A                                 __end_of_isdigit ECAC  
                          ?_sht3x_measure_start 0001                         ?_ResetBootloaderCleanly 0001  
                                ?_i2c_readBytes 0011                               __end_of_I2C_Start EF32  
                        ?_sensor_lmp_initialize 0001                               __end_of_I2C_Write EA8A  
          __size_of_sht3x_measure_nonblock_read 0062                     __size_of_Sensors_initialize 0024  
                                 _i2c_writeData DC0A                                           tablat 000FF5  
                           Calculate_CRC16@code 0018                                ymd_to_scalar@day 002A  
                                         pow@yi 00DB                             __size_of_LED_Enable 0032  
                                         plusw1 000FE3                                           plusw2 000FDB  
                    __end_of_nvm_serialno_check E4EE                               __end_of_CDCInitEP E08E  
                           ??_atcommand_compare 001A                             lmp91000_unlock@buff 001A  
                                         ttemp5 0052                                           ttemp6 0055  
                                         ttemp7 0059                                           status 000FD8  
                                         wtemp8 0052                                 __end_of_sprintf 48B6  
                  __size_of_nvm_write_flash_all 004A                                 years_to_days@yr 001C  
                        ?_Kalman_updateEstimate 00BF                       flash_writeBytes@num_bytes 0015  
                              ??_CMD_set_ABC_on 0020                                     exp@exponent 00C7  
                            update_command@chno 00DC                                 _led_warmup$2567 0010  
                                   ldexp@newexp 00B2                                 putUSBUSART@data 0013  
                  __size_of_USBStdSetCfgHandler 00EA                                 __initialization CD22  
                                   log@exponent 00B2                                      _Last_value 0226  
                                  __end_of_crc8 DE92                                    __end_of_fabs E938  
                           CMD_set_ABC_on@value 0020                                    __end_of_main E9C6  
                                  __atof@dotpos 00CF                           ADCto_uVoltage@raw_adc 0081  
                               _g_moving_buffer 0300                           _control_signal_bitmap 0166  
                        _sensor_temp_fahrenheit DC7A                                ??_atcommand_init 0013  
                               update_command@i 00D9                                ??_atcommand_task 0041  
                               ?_update_command 00D3                       flash_writeBytes@startaddr 000F  
                       __size_of_gasSensor_read 0344                                __end_of_i2c_init EAC4  
                       ??_sensor_read_temp_humi 0041                                    build_time@tm 0094  
                                  ?_FSR_set_LSB 000F                                ?_tes0902_ABC_OFF 0001  
                            _CMP_temp_read$7084 00BF                                 ?_build_response 00D5  
                     __size_of_USBCtrlEPService 00BA                       __size_of_sensMeasure_init 01A6  
                               _Calculate_CRC16 BF76                                          ??_crc8 0012  
                     __size_of_sensMeasure_task 032A                                          ??_fabs 0017  
                         atcommand_compare@src1 0013                           atcommand_compare@src2 0015  
                     __end_of_atcommand_compare B082                                          ??_main 0041  
                    __size_of_lmp91000_pin_init 0008                      __size_of_sht3x_common_read 0100  
                          sensor_gas_mode@chNum 002E                      __size_of_lmp91000_set_Mode 0054  
                       __end_of_check_atcommand CBC0                               __end_of_CRC_check CA54  
                                 __activetblptr 000002                                 ?_USBDeviceTasks 0001  
                            flash_clear@endaddr 0013                                     ?_USBSuspend 0001  
                        _sht3x_clear_status_reg EFDC                                       ??_LED_Off 000F  
                          __size_of__tdiv_to_l_ 0156                      GasSensor_Zerofilter@retval 0020  
                                ?_CMP_temp_read 0001                       sensor_read_temp_humi@humi 00D4  
                     sensor_read_temp_humi@temp 00D2                                  _ADCto_uVoltage DA38  
                __end_of_lmp91000_set_Reference DF60                               ?_Co2_measure_task 0001  
                   lmp91000_set_GainRLoad@RLoad 001B                        ?_Kalman_setEstimateError 000F  
                                  _cdc_mem_type 0167                           lmp91000_disable@chNum 000F  
                               build_response@i 00E3                  __end_of_ResetBootloaderCleanly F16E  
                                        ?__atof 00BF                                          ?__atoi 001B  
                               _sensor_ADC_read ED9C                                          ?__ftoa 00CD  
                                        ?__itoa 0027                           Board_initialize@chNum 0040  
                         ??_sht3x_measure_start 001A                                _CDCDataOutHandle 015E  
                                 _usedtime_task BDA2                                          ?_floor 009E  
                                        ?_ldexp 00AE                                          ?_frexp 0060  
                   lmp91000_set_GainRLoad@chNum 001E                                ___llmod@dividend 000F  
                                        ?_scale 0081                                          _EECON2 000FA7  
                            ??_Co2_measure_task 0041                                          _ANCON0 000F48  
                                        _ANCON1 000F49                                ___awdiv@dividend 0015  
                         __end_of_ads1115_SetUp DEFA                                  ?_i2c_writeData 0010  
                               getsUSBUSART@len 001C                          SYSTEM_Initialize@state 0013  
                              ?_tempSensor_read 0001                         __size_of_WDT_initialize 0024  
                             ?_sensor_temp_mode 0001                           __size_of_CDCTxService 0190  
                                        i1l2332 E7C6                __size_of_USBDisableWithLongDelay 0016  
                                        i2l1534 E330                                          _LED_On ECAC  
                                        _TABLAT 000FF5                           __size_of_DelayRoutine 0020  
                                        _RCREG1 000FAF                                          _RCSTA1 000FAC  
                                        _OSCCON 000FD3      gasSensor_temperature_cmp_coefficient@chNum 00E3  
                                 CDCTxService@i 001A                                          _SPBRG1 000FB0  
                                 _ymd_to_scalar C76C                               ads1114_read@chNum 0024  
    gasSensor_temperature_cmp_coefficient@coeff 00EC                              __size_of_InitTimer 001E  
                            ??_sensor_temp_mode 002D                           __end_of_clear_command DD56  
                              __end_of___xxtofl 93A0                                          _TXSTA1 000FAD  
                              __end_of__isdigit E85E                               ads1114_read@rbuff 0022  
                   __end_of_lmp91000_get_status DC0A                       __size_of_Board_initialize 0082  
                             ads1114_read@wbuff 0021                                 ??_years_to_days 0020  
                       ads1114_read_ready@chNum 0020                                __end_of_gas_init F0B2  
                             _shortPacketStatus 0174                                          _gChNum 00FF  
                              __end_of__powers_ 20B9                            __size_of_flash_clear 0090  
                               USBDeviceTasks@i 002B                            __end_of_app_usb_init F03C  
                       ads1114_read_ready@rbuff 001D                            __end_of_app_usb_task D2EA  
                   USBStdFeatureReqHandler@pUEP 0025                                __end_of_led_fail E43E  
                      USBTransferOnePacket@data 0010                      USBCtrlTrfInHandler@lastDTS 0010  
                       ads1114_read_ready@wbuff 001F                                          ___flge B7CE  
                               ??_USBDeviceInit 0017                                          ___fleq CF28  
                              __end_of_led_init E5EC                                          ___lmul DDC0  
                              __end_of_led_task 91EC                                    ?_putUSBUSART 0013  
                                     ??___aldiv 0017                                       ??___almod 0017  
                                     ??___fladd 0096                                          ___wmul EEA0  
                                     ??___fldiv 00AE                             parse_command@cmdidx 0090  
                                     ??___awdiv 0019                                       ??___flneg 0013  
                                     ??___awmod 0013                                       ??___flmul 0070  
                                     ??___flsub 0041                                       ??___fltol 0021  
                                     ??___lldiv 0017                            __end_of_getsUSBUSART C99C  
                                     ??___llmod 0017                            __size_of_buffer_init 002E  
     SYSTEM_Initialize@pll_startup_counter_3440 0011                                       ??___lwdiv 0019  
                                     ??___lwmod 0013                       __size_of_flash_writeBytes 012C  
                             _USBEnableEndpoint E7C8                 __size_of_USBStdGetStatusHandler 0106  
                                  split_param@i 001D                                    split_param@m 0017  
                                  split_param@n 0018                                          _memcpy E68E  
                        buffer_de_queue_bool@ch 0011                                          _memset EB34  
                                        _fround 7DD4                                          _isleap D8CE  
                                        clear_0 CD68                                          clear_1 CD74  
                                        clear_2 CD80                                          clear_3 CD8C  
                                        clear_4 CD98                                          clear_5 CDA4  
                                        clear_6 CDB0                                          clear_7 CDBC  
                           parse_command@retval 0080                                ___awdiv@quotient 001B  
                                        _mktime 8A24                                 ___awmod@divisor 0011  
                                        isa$std 000001                             parse_command@status 002B  
                               ___awmod@counter 0013                              ?_USBEnableEndpoint 0017  
                                     ??__strclr 0013                                       ??__strcpy 0013  
                                     ??__strlen 0011                                          floor@i 00A2  
                                        floor@x 009E                            _GasSensor_Zerofilter 82F2  
                        __end_of_ADCto_uVoltage DAAE                   __size_of_USBTransferOnePacket 013E  
                               _led_zerocal_end E38E                                       ??_isdigit 000F  
                                     ?_I2C_Read 0001                                    _CDCTxService 9A34  
                                     ?_I2C_Stop 0001                                ?_sht3x_heaterOff 0001  
                                _i2c_writeBytes E5EC                                    _DelayRoutine EFFC  
                              __end_of_nvm_init C6AA                                    __mediumconst 2084  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                            Calculate_CRC16@shift 001A  
                              uart_getBuffer@ch 000E                            lmp91000_unlock@chNum 001C  
                           ??_USBEnableEndpoint 0018                                  ?_usedtime_task 0001  
                   __size_of_ResetDeviceCleanly 000C                                 ??_i2c_readBytes 0014  
                       __size_of_usart_rx_ready 0018                         sensor_gas_mode@adc_gain 002D  
                        i2c_writeBytes_to@wrptr 001D                         __size_of_usart_tx_empty 0018  
                                     ??_sprintf 00AE                        Co2_measure_task@rev_data 00D0  
                      __size_of_flash_readBytes 0066                                     _CtrlTrfData 000438  
                          _controlTransferState 00FE                                years_to_days@ret 0022  
                                    ___flge@ff1 000F                                      ___flge@ff2 0013  
                           i2c_readBytes@ackbit 001B                                    ___xxtofl@arg 0031  
                                ?_ymd_to_scalar 0026                                __end_ofexp@coeff 22E6  
                                  ___xxtofl@exp 0030                               _SYSTEM_Initialize D948  
                                  ___xxtofl@val 0027                                      ___fleq@ff1 0035  
                                    ___fleq@ff2 0039                                 FSR_set_LSB@gain 0013  
                              __end_oflog@coeff 2332                                     param_copy@i 0014  
                                    __accesstop 0060                         __end_of__initialization CDC2  
                                    ___flneg@f1 000F                  Kalman_setMeasurementError@pObj 000F  
                            check_atcommand@cmd 0022                              ?_SYSTEM_Initialize 0001  
                                  eval_poly@res 00AA                                   ___rparam_used 000001  
                           update_command@apply 00DB                        __size_of_USBStallHandler 0062  
                                    ___fltol@f1 001D                                    __isdigit@src 000F  
                             ?_get_product_desc 000F                                atcommand_task@ch 00EB  
                           __size_of_USBSuspend 0030                         __end_of_Calculate_CRC16 C050  
                   __size_of_ads1114_read_ready 0086                                  __pcstackCOMRAM 0001  
                     __end_of_USBEnableEndpoint E814                                 flash_clear@flag 0017  
                     __size_of_lmp91000_disable 0038                                   check_crc8@crc 0019  
                                 __end_of_sd000 2348                                   __end_of_sd001 22BE  
                            ??_get_product_desc 0011                      __end_of_nvm_read_flash_all EEA0  
                    sensor_lmp_initialize@chNum 0025                                    __pidataBANK1 F1A2  
                                  __pidataBANK4 EC12                             ??_SYSTEM_Initialize 000F  
                     __size_of_lmp91000_isReady 002E                                       LED_On@led 000F  
                                 __end_of__atof 87C2                                   __end_of__atoi A81A  
                             ?_usart_writeBytes 0010                                   __end_of__ftoa E68E  
                                 __end_of__itoa A048                __size_of_USBCtrlEPAllowDataStage 00B2  
                 __size_of_buffer_de_queue_bool 0088                                   __end_of_floor A6D6  
                                 __end_of_ldexp AA9E                           flash_clear@flash_addr 0018  
                                 __end_of_frexp C45C                                 _nvm_clear_flash 989C  
                                 __end_of_scale 6796                                    ??_LED_Enable 000F  
                 __size_of_USBConfigureEndpoint 00AC                                      _gTemp_volt 013E  
                   __end_of_USBCtrlTrfInHandler B2A6                        __size_of_gasSensor_calib 0318  
                            ??_usart_writeBytes 0013                                   build_time@F37 0350  
                             CMD_set_ABC_on@len 0021                                    _g_flash_temp 0640  
                                  ?_split_param 0013                                      __atof@sign 00C7  
                  tes0902_data_receive@data_len 0020                      __size_of_atcommand_compare 0118  
                         ?_GasSensor_Zerofilter 001B                         __end_of_sensor_ADC_read EDCA  
                                    __atoi@sign 0023                 __end_of_Kalman_setEstimateError F096  
                               ??_CMP_temp_read 0041                          __end_of_i2c_writeBytes E63E  
                             __end_of_InitTimer F05A                              sht3x_heaterOff@cmd 001A  
                               ?_ADCto_uVoltage 0081                                ?_check_atcommand 0022  
                        __size_of_write_command 002E                                      __div_to_l_ A444  
                                    ??_I2C_Read 000F                                      ??_I2C_Stop 000F  
                                    _cdc_notice 036D                                      _cdc_rx_len 0169  
                       __size_of_months_to_days 0036                                      _cdc_tx_len 0168  
                                  _g_led_status 0129                                 ??_i2c_writeData 0014  
                                       ??__atof 00C3                                         ??__atoi 001F  
                                       ??__ftoa 0041                                         ??__itoa 002D  
                      ??_USBCtrlTrfSetupHandler 002A                         _USBTicksSinceSuspendEnd 016A  
                               __div_to_l_@exp1 001C                                         ??_floor 0041  
                                       ??_ldexp 00B4                                 __div_to_l_@cntr 001B  
                     buffer_de_queue_bool@queue 000F                                 _sensor_gas_mode DD56  
                                       ??_frexp 0066                     __end_of_changeUsbState_task EF56  
                                       ??_scale 0041                       __end_of_SYSTEM_Initialize D9C0  
                               __div_to_l_@quot 0017                          _USBStdGetStatusHandler B4BE  
                                    __pbssBANK0 00F8                                      __pbssBANK1 0100  
                                    __pbssBANK2 0200                                      __pbssBANK3 0300  
                                    __pbssBANK4 0440                                      __pbssBANK5 0500  
                                    __pbssBANK6 0600                                      _check_crc8 ED40  
                                       ?_LED_On 0001                                check_atcommand@i 0028  
                             i1_buffer_en_queue E77A                              __size_of_eval_poly 0104  
                             _sensor_sht3x_init DFC6                                      __isdigit@n 0011  
                      __size_of_buffer_de_queue 0080                                       ?_i2c_init 0001  
                         lmp91000_isReady@chNum 0022                    tes0902_data_receive@rev_data 0016  
                            __end_of_LED_Enable ED10                           lmp91000_isReady@rBuff 0023  
                            ?i1_buffer_en_queue 0001                              ?_sensor_sht3x_init 0001  
                                 __div_to_l_@f1 000F                                   __div_to_l_@f2 0013  
                   __size_of_USBWakeFromSuspend 0044                                     _pBDTEntryIn 00F8  
                      __size_of_buffer_en_queue 004E                __end_of_USBCtrlEPServiceComplete A444  
                GasSensor_Zerofilter@gasConcent 001B                     __size_of_USBCheckCDCRequest 00EE  
                          USBCtrlTrfRxService@i 000F                                         ?___flge 000F  
                                       ?___fleq 0035                             ??i1_buffer_en_queue 0004  
                                       ?___lmul 000F                         DelayRoutine@DelayAmount 000F  
                                 LED_Enable@led 000F                             ??_sensor_sht3x_init 001C  
                                _gasSensor_read 6E8C                                         ?___wmul 000F  
                      __size_of_lmp91000_enable 0038                     __end_of_sens_ZeroCalib_init F0CE  
                       __end_of_led_zerocal_end E3E6                     __end_of_sens_ZeroCalib_task C126  
                            build_response@chno 00E7                                         ?_memcpy 000F  
                                       ?_memset 000F                              build_response@temp 00DB  
                                       ?_fround 0081                                         ?_isleap 0014  
                                ___lmul@product 0017                                      _device_dsc 2332  
                         __end_of_nvm_clear_all EE52                                         ?_mktime 0036  
                              _USBCtrlEPService C82A                                _sensMeasure_init 96F6  
                      __size_of_lmp91000_unlock 0046                                _sensMeasure_task 71D0  
                                    _ep_data_in 0157                           sensor_temp_mode@chNum 002D  
                       tes0902_data_parsing@cmd 00CF                             _nvm_write_flash_all E85E  
                          __size_of_FSR_set_LSB 00CE                     __end_of_USBCtrlTrfRxService A95E  
                                 i2c_init@speed 000F                                 ?_i2c_writeBytes 0015  
                            _USBCheckStdRequest B9D2                              __size_of_nvm_clear 0006  
                                 ?_ads1114_read 001D                               _configDescriptor1 2247  
                                       i1l15506 E77A                                         i1l15508 E7A6  
                                       i1l14960 F12A                                         i1l14970 EF7A  
                                       i1l14972 EF88                                         i1l14964 F130  
                                       i1l14974 EF98                                         i1l14958 F11C  
                                       i1l15790 2036                                         i1l14968 EF7A  
                                       i1l15792 204A                                         i1l15794 2050  
                                       i2l15830 E2EC                                         i2l15832 E2FC  
                                       i2l15824 E2D8                                         i2l15834 E32C  
                                       i2l15826 E2E6                                         i2l15828 E2E8  
                                       _LED_Off F1AE                                 ??_usedtime_task 0021  
                                     ?___xxtofl 0027                                       ?__isdigit 000F  
                   __end_of_USBCtrlTrfTxService B196                             _USBStdSetCfgHandler BE8C  
                                       _TBLPTRH 000FF7                                         _TBLPTRL 000FF6  
                                       _TBLPTRU 000FF8                         ??_sensor_lmp_initialize 0024  
                         usart_writeBytes@wrptr 0010                                         _SSP1ADD 000FC8  
                                     ?_gas_init 0001                                         _SSP1BUF 000FC9  
                     __end_ofi1_buffer_en_queue E7C8                             ?_USBCheckStdRequest 0001  
                     __end_of_sensor_sht3x_init E02A                    __size_of_USBStdGetDscHandler 013C  
                               ??_ymd_to_scalar 002C                                      __strlen@sc 0011  
                       _USBDisableWithLongDelay F14A                                         _UIEbits 000F36  
                                     ?_led_fail 0001                                      _build_time 48B6  
                                _WDT_initialize EF56                                       ?_led_init 0001  
                                     ?_led_task 0001                                         _UIRbits 000F62  
                                    _led_warmup DAAE                         ??_Kalman_updateEstimate 0041  
                                    ??_i2c_init 000F                        ??_Kalman_setProcessNoise 0015  
                                  _g_tick_count 0175                                 __size_of_LED_On 0032  
                                 _cdc_trf_state 004E                 _FlashSignatureWord_absconstaddr 002006  
                    Kalman_setProcessNoise@pObj 000F                          __size_of_parse_command 0518  
                                  _g_sens_calib 0164                            ?_nvm_write_flash_all 001F  
                         __size_of_app_usb_init 0020                           __size_of_app_usb_task 0096  
                                 _write_command EDCA                                       _I2C_Start EF0E  
                              _Board_initialize D752                            build_response@status 00D5  
                                     _I2C_Write EA50                               ??_flash_readBytes 0017  
                           _atcommand_task$2398 00E9                                ??_update_command 00D5  
                                       _pCDCDst 014E                   __size_of_sens_ZeroCalibration 0186  
                 __size_of_tes0902_data_receive 00C6                         __end_of_nvm_clear_flash 9A34  
                                       _pCDCSrc 0151                           __size_of_getsUSBUSART 00B8  
                 __size_of_tes0902_data_parsing 00C2                         ?_sensor_temp_fahrenheit 009E  
                             __end_of__npowers_ 20ED                                         __Hparam 0000  
               ??_USBIncrement1msInternalTimers 000F                            ?_USBStdSetCfgHandler 0001  
                                     _CDCInitEP E02A                               usart_writeBytes@i 0016  
                                    _scale$7089 0085                          __end_of_gasSensor_read 71D0  
                                       __Lparam 0000                       sht3x_clear_status_reg@cmd 001A  
                  ??_Kalman_setMeasurementError 0015                                ??_build_response 00D7  
                             _g_tes0902_measure 0178                      __size_of_USBEnableEndpoint 004C  
                              ?_Calculate_CRC16 000F                                       ?_nvm_init 0001  
                                    _readBuffer 06AC                            ??_USBCheckStdRequest 002A  
                                       ___aldiv B3B2                                 __size_of___flge 0104  
                               __size_of___fleq 00AA                                         ___almod BCB6  
                                       ___fladd 5A8C                   __size_of_USBCtrlTrfOutHandler 0078  
                                       ___fldiv 6796                                         ___awdiv C522  
                                       ___flneg EB6C                                 __size_of___lmul 006A  
                                       ___awmod CC72                                         ___flmul 5F4E  
                                       ___flsub E938                                         ___fltol B5C4  
           __end_of_sht3x_measure_nonblock_read E154                     _sht3x_measure_nonblock_read E0F2  
                                       ___lldiv D078                                ??_USBDeviceTasks 002B  
                               __size_of___wmul 0026                                         ___llmod D5BC  
                              _flash_writeBytes AD18                                         ___lwdiv DB24  
                             ??_USBStallHandler 000F                              _nvm_serialno_check E496  
                                       ___lwmod E08E                                         __atof@p 00D1  
                                       _g_Wbuff 01E6                                         __atoi@p 0029  
                       lmp91000_get_status@preg 001D   __end_of_gasSensor_temperature_cmp_coefficient 5574  
__size_of_gasSensor_temperature_cmp_coefficient 0634         ??_gasSensor_temperature_cmp_coefficient 0041  
        ?_gasSensor_temperature_cmp_coefficient 00DF           _gasSensor_temperature_cmp_coefficient 4F40  
                          sensor_ADC_read@chNum 0027                          ??_GasSensor_Zerofilter 001F  
                                       __itoa@n 0035                                         __itoa@p 0033  
                                       _e_level 0176                                   _g_rDataFormat 0100  
                          __size_of_putUSBUSART 0028                                         __pcinit CD22  
                            getsUSBUSART@buffer 001A                                 __size_of_memcpy 0050  
                       ?_sht3x_clear_status_reg 0001                               __end_of_eval_poly B7CE  
                               __size_of_memset 0038                                 __size_of_fround 02A6  
                               __size_of_isleap 007A                  __size_of_sensor_read_temp_humi 0016  
                     __end_of_configDescriptor1 228A                                         __ramtop 0F00  
                               __size_of_mktime 0236                   __end_of_sensor_read_temp_humi F14A  
                                       __ptext0 E980                                         __ptext1 BDA2  
                                       __ptext2 C050                                         __ptext3 9D52  
                                       __ptext4 71D0                                         __ptext5 C2C8  
                                       __ptext6 F134                                         __ptext7 E0F2  
                                       __ptext8 9BC4                                         __ptext9 B8D2  
                                       crc8@crc 0014                     __size_of_sht3x_measure_read 018E  
                                       _inPipes 0041                                         crc8@len 0011  
                                ??_ads1114_read 001F                                      _param_copy D530  
                   _USBDeferOUTDataStagePackets 016B                                check_param@param 000F  
                                     _T0CONbits 000FD5                                ?_sensor_ADC_read 0025  
                                       __strclr E218                                         __strcpy D410  
                                       __strlen E6DE                         __end_of_sensor_gas_mode DDC0  
                                   ?__div_to_l_ 000F                                         _dpowers 22E6  
                                 split_param@ch 001C                                    ??_USBSuspend 0023  
                           ?_nvm_serialno_check 000F                                   ??_check_param 000F  
                                  __size_of_exp 02F0                                    __size_of_log 01AA  
                                       _isdigit EC7A                                    __size_of_pow 0262  
                                    ??___xxtofl 002B                                      ??__isdigit 0013  
                              ___awmod@dividend 000F                                ___aldiv@dividend 000F  
                             ??_gasSensor_calib 0041                                   mktime@timeptr 0036  
                    flash_readBytes@flash_array 0013                          sht3x_measure_read@humi 00C1  
                        sht3x_measure_read@temp 00BF                                  _usart_rx_ready F11C  
                        __end_of_WDT_initialize EF7A                                       _CRC_check C99C  
                                    ??_gas_init 002F                 lmp91000_set_GainRLoad@user_gain 001A  
                                  _app_usb_init F01C                                  _usart_tx_empty F104  
                       __size_of_uart_getBuffer 0068                      __end_of_Sensors_initialize EEEA  
                                  _app_usb_task D254                              __end_of_USB_CD_Ptr 20F5  
                    __size_of_SYSTEM_Initialize 0078                                         _sprintf 3F7E  
               __size_of_USBCtrlTrfSetupHandler 0094              window_moving_average_recursion@avg 0132  
                                 _g_calib_count 013A                       lmp91000_set_Reference@reg 0021  
                                    ??_led_fail 0010                                  __pintcode_body E2D8  
                                    ??_led_init 0010                            end_of_initialization CDC2  
                                  _getsUSBUSART C8E4                                      ??_led_task 0012  
                         _sensor_adc_initialize E8A8                                     ?_check_crc8 0015  
                                       exp@sign 00C9                              __end_of_USB_SD_Ptr 20F3  
                   flash_writeBytes@flash_array 0013                                         memcpy@d 0015  
                                       memcpy@n 0013                                         memcpy@s 0017  
                         ??_nvm_write_flash_all 0021                             _pBDTEntryEP0OutNext 0047  
                                       memset@c 0011                                         memset@n 0013  
                                       memset@p 0015                                  ?_write_command 0016  
                                 __Lmediumconst 2084                                         int_func E2D8  
                               _USB1msTickCount 012E                 _dummy_encapsulated_cmd_response 02F0  
                                     i1u1540_20 EF88                                       i1u1540_21 EF84  
                                     i1u1539_20 F12A                                       i1u1539_21 F126  
                                     i1u1645_20 204A                                       i1u1645_21 2046  
                __end_of_sensor_temp_fahrenheit DCEA                        ?_USBStdFeatureReqHandler 0001  
                                    ?_I2C_Start 0001                            ??_nvm_serialno_check 0011  
                                    ?_I2C_Write 0001                               __end_of_nvm_clear F1AE  
                                     i2u1646_40 E2E6                                       i2u1646_41 E2E2  
                                     i2u1647_40 E2FC                                       i2u1647_41 E2F8  
                         ??_USBStdSetCfgHandler 0023                                 ___lldiv@divisor 0013  
              __size_of_Kalman_setEstimateError 001E         Set_KalmanFilter_Sensitivity@sensitivity 0018  
                     __size_of_Co2_measure_task 01AC                                      ?_CDCInitEP 0001  
                                       pow@sign 00DA                                 ___lldiv@counter 001B  
                           i1buffer_en_queue@ch 0003                                 ?_gasSensor_read 0001  
                           _update_command$2465 00D7                               ??_buffer_de_queue 0011  
                            __end_of_USBSuspend ED40                      lmp91000_set_Reference@IntZ 001B  
                       _USBCtrlEPAllowDataStage CBC0                                _lmp91000_disable EBA4  
                  Kalman_setEstimateError@est_e 0011                                      ??_nvm_init 00A6  
                              ___aldiv@quotient 0019                      lmp91000_set_Reference@bias 001D  
                               _g_large_counter 0142                                         postdec1 000FE5  
                                       postdec2 000FDD                      lmp91000_set_Reference@buff 001E  
                              _lmp91000_isReady ED6E                                      _sens_value 0200  
                       i2c_writeBytes_to@wraddr 001A                                         postinc0 000FEE  
                                       postinc1 000FE6                                         postinc2 000FDE  
                    lmp91000_set_Reference@sign 001C                                ?_led_zerocal_end 0001  
                __end_of_sht3x_clear_status_reg EFFC                       __size_of_sensor_temp_mode 0038  
                      _USBCtrlEPServiceComplete A2F2                                  __tdiv_to_l_@f1 000F  
                                __tdiv_to_l_@f2 0013                               ??_buffer_en_queue 0012  
                                 ??__tdiv_to_l_ 0017                             build_time@timestamp 006A  
                    _USBStatusStageEnabledFlag1 016E                      _USBStatusStageEnabledFlag2 016D  
                        sht3x_measure_start@cmd 001A                                   _parse_command 5574  
                            USBEnableEndpoint@p 0018                                    _kalmanFilter 0250  
                                  __strclr@dest 000F                     __end_of_sht3x_measure_start EFBC  
                             ??_lmp91000_enable 000F                               CMP_temp_read@volt 00C4  
                        __end_of_usart_rx_ready F134                                     ___fladd@grs 009D  
                         WDT_initialize@enabled 0010                              gasSensor_read@volt 05F9  
                          __size_of_split_param 0126                            i2c_readBytes@address 001A  
                        __end_of_usart_tx_empty F11C                                    __strcpy@dest 000F  
                                _months_to_days EBDC                                   ___xxtofl@sign 002F  
                     ??_USBDisableWithLongDelay 0011                                       _TRISBbits 000F93  
                                     _TRISCbits 000F94                       lmp91000_set_GainRLoad@reg 001F  
                              ads1115_SetUp@pga 0022                        __size_of_tes0902_ABC_OFF 000A  
                                  param_copy@ch 0016                               ??_lmp91000_unlock 001A  
                            _BothEP0OutUOWNsSet 0170                                      ?_CRC_check 0001  
                               ?_WDT_initialize 0001                               __size_of_I2C_Read 0056  
                                   ___fldiv@grs 00B9                                     ___fldiv@rem 00B2  
                             __size_of_I2C_Stop 0024                      __size_ofi1_buffer_en_queue 004E  
                    __size_of_sensor_sht3x_init 0064                       USBConfigureEndpoint@EPNum 0014  
                                   ?_build_time 0064                      ?_USBCtrlEPAllowStatusStage 0001  
               Kalman_setMeasurementError@mea_e 0011                             check_atcommand@chno 0024  
                           __end_of_check_param E1B6             USER_USB_CALLBACK_EVENT_HANDLER@size 001F  
                                     _USTATcopy 0050                                     ?_led_warmup 0001  
                                   ___flmul@grs 0076                 __size_of_Kalman_setProcessNoise 001E  
                  __end_of_USBTransferOnePacket ABDC                                  __end_of_LED_On ECDE  
                                 ??_flash_clear 0017                                      _usart_getc EF7A  
                                    CRC_check@i 002F                         __size_of_CMD_manual_cal 0092  
                                    _usart_init D854                            update_command@status 00D3  
                                    _usart_putc F0CE                             __size_of__div_to_l_ 014C  
                              ?_nvm_clear_flash 0001                                   ??_buffer_init 0011  
                             putUSBUSART@length 0015                        __size_of_tempSensor_read 00CA  
                                 __itoa@shifter 002F                           sensMeasure_init@chNum 0023  
                         __end_of_years_to_days D078                          _USBCtrlTrfSetupHandler D2EA  
                                check_crc8@data 0015                                ??_ADCto_uVoltage 0041  
                  __size_of_lmp91000_get_status 0072                                  __end_of___flge B8D2  
                                __end_of___fleq CFD2                           __end_of_USBDeviceInit A2F2  
         __end_of_USBIncrement1msInternalTimers EC7A          __size_of_USBIncrement1msInternalTimers 0034  
                 _USBIncrement1msInternalTimers EC46                 sht3x_measure_nonblock_read@humi 00CE  
                                __end_of___lmul DE2A                 sht3x_measure_nonblock_read@temp 00CC  
                                __end_of___wmul EEC6                                  ?_parse_command 0029  
                        __size_of_ads1115_SetUp 0068                             __size_of_check_crc8 002E  
                       __size_of_CMD_set_ABC_on 00B8                                  __end_of_memcpy E6DE  
                                   ?_param_copy 0010                                  __end_of_memset EB6C  
                                __end_of_fround 807A                                  __end_of_isleap D948  
                        __end_of_months_to_days EC12                                  __end_of_mktime 8C5A  
                                _g_sens_measure 010E                                      floor@expon 00A6  
                             _USBBusIsSuspended 0172                            lmp91000_enable@chNum 000F  
                      ??_lmp91000_set_GainRLoad 001C                                 ymd_to_scalar@mo 0028  
                              ?_sensor_gas_mode 0001                                 ymd_to_scalar@yr 0026  
                    __end_of_ResetDeviceCleanly F17A                                 ?_usart_rx_ready 0001  
                     __size_of_get_product_desc 000A                          __size_of_clear_command 006C  
                           start_initialization CD22                                 ?_usart_tx_empty 0001  
                       ?_USBStdGetStatusHandler 0001                              _nvm_read_flash_all EE7A  
                                    eval_poly@d 00A2                                      eval_poly@n 00A4  
                                    eval_poly@x 009E                         __size_of_atcommand_init 000C  
                 USBCtrlTrfRxService@byteToRead 0010                         __size_of_atcommand_task 01DA  
                                    ldexp@value 00AE                             __end_of__tdiv_to_l_ A19E  
                                     _InitTimer F03C                                     __end_of_exp 7B02  
                                   __end_of_log 96F6                                     __end_of_pow 8A24  
                          _gasSensor_calib$7081 00C7                       __size_of_usart_writeBytes 0058  
                  __end_of_buffer_de_queue_bool D6CC                                     _cdc_data_rx 03BA  
                                   _cdc_data_tx 0483                          ?_sensor_adc_initialize 0001  
                  __end_of_USBConfigureEndpoint CF28                      __end_of_FlashSignatureWord 2008  
                         __end_of_i2c_readBytes CE7C                 __end_of_USBStdFeatureReqHandler 6E8C  
                               ??_write_command 0018                             ?_nvm_read_flash_all 001F  
                                      ??_LED_On 000F               __end_of_USBCtrlEPAllowStatusStage BBC8  
                            parse_command@F6432 0362                              parse_command@F6434 0330  
                      __size_of_sht3x_heaterOff 0020                                      frexp@value 0060  
                      __end_of_USBCtrlEPService C8E4                      atcommand_compare@channelno 0018  
                      __end_of_sensMeasure_init 989C                        __end_of_sensMeasure_task 74FA  
                                 _g_led_counter 0146                      lmp91000_set_GainRLoad@buff 001C  
                               ___llmod@divisor 0013                                     ??_I2C_Start 000F  
                               ___llmod@counter 0017                             usart_writeBytes@len 0012  
                          __end_of_ads1114_read D254                                     ??_I2C_Write 000F  
                             __size_of_i2c_init 003A                      __end_of_ads1114_read_ready D752  
                     ??_USBCtrlEPAllowDataStage 0010              __end_of_Kalman_setMeasurementError F104  
                    _Kalman_setMeasurementError F0EA                                     ??_CDCInitEP 001B  
                                USBDeviceInit@i 0017                          _pBDTEntryEP0OutCurrent 0049  
                            usart_init@baudrate 001C                         USBTransferOnePacket@dir 000F  
                       USBTransferOnePacket@len 0012                                        ??___flge 0017  
                                      ??___fleq 003D                                        ??___lmul 0017  
                            parse_command@param 0060                                        ??___wmul 0013  
                           __end_of_flash_clear D530                             _USBStdGetDscHandler ABDC  
                              ??_i2c_writeBytes 0019                                     __pdataBANK1 01F8  
                                   __pdataBANK4 04C3                            ??_nvm_read_flash_all 0021  
                                      ??_memcpy 0015                                        ??_memset 0015  
                                      ??_fround 0041                             __size_of_build_time 068A  
                                      ??_isleap 0016                                        ??_mktime 003A  
                           __end_of_buffer_init EE26                          _Kalman_setProcessNoise F05A  
                      ??_lmp91000_set_Reference 001E                             __size_of_led_warmup 0076  
                           I2C_Read@I2CReadData 0010                                   sprintf@tmpval 00C2  
                      ??_ResetBootloaderCleanly 0011                                 ?_months_to_days 001C  
                                     ___fladd@a 0092                                       ___fladd@b 008E  
                        _USBActiveConfiguration 01F7                                      fround@prec 008D  
                __end_of_USBStdGetStatusHandler B5C4                        __end_of_Board_initialize D7D4  
                                     ___fldiv@a 00AA                                       ___fldiv@b 00A6  
                                      ?_LED_Off 0001                           __end_of_CMP_temp_read B3B2  
                                     ___flmul@a 006C                                       ___flmul@b 0068  
                                   __pbssCOMRAM 0041                              i2c_readBytes@rdptr 0011  
                                   _check_param E154                                       ___flsub@a 00A2  
                                     ___flsub@b 009E                                     __isdigit@ch 0013  
                                 __pcstackBANK0 0060                    __size_of_USBCtrlTrfInHandler 0110  
                                 __pcstackBANK5 05F2                                  _uart_getBuffer 2018  
                                    ?_InitTimer 0001                                     ??_CRC_check 0020  
                               _flash_readBytes DF60                           tes0902_ABC_OFF@status 0022  
                             __size_of___xxtofl 01B4                               __size_of__isdigit 004A  
                          ?_USBStdGetDscHandler 0001                                    _isdigit$6494 0010  
                                   _g_atcommand 0500                         nvm_read_flash_all@flash 001F  
                __size_of_sensor_lmp_initialize 00D4                                       __atof@cnt 00C9  
                 __end_of_sensor_lmp_initialize C1FA                                       __atof@ret 00CB  
                         __end_of_i2c_writeData DC7A                                       __atof@str 00BF  
                                     __atoi@ret 0025                        __end_of_flash_writeBytes AE44  
                      __size_of_check_atcommand 00B4                                       __atoi@str 001B  
                    flash_readBytes@tblptr_save 001B                               __size_of_gas_init 001C  
                                 _ads1115_SetUp DE92                      __end_of_USBWakeFromSuspend EA50  
                             ??_tes0902_ABC_OFF 0022                                       __ftoa@len 00D3  
                             __size_of_led_fail 0058                                     sprintf@ccnt 00B8  
                                   sprintf@flag 00BA                                       __ftoa@num 00CD  
                                   sprintf@eexp 00C0                                       __ftoa@str 00D1  
                                   sprintf@fval 00C8                               __size_of_led_init 0054  
                __size_of_Kalman_updateEstimate 02D2                                     sprintf@prec 00C6  
                             __size_of_led_task 01D8                                 _USBStallHandler E1B6  
                 __end_of_Kalman_updateEstimate 7DD4                                    _pBDTEntryOut 0123  
                            check_crc8@checksum 0018                         _Kalman_setEstimateError F078  
                    __end_of_USBCheckCDCRequest BCB6                                     ?_usart_getc 0001  
                                     __itoa@len 002D                                       __itoa@num 0027  
                                   ?_usart_init 001C                    __size_of_changeUsbState_task 0024  
                           __size_of_param_copy 008C                                       __itoa@str 002B  
                                 _clear_command DCEA                                     ?_usart_putc 0001  
                 gasSensor_calib@CalibrationGas 00D7            __end_of_Set_KalmanFilter_Sensitivity 8E3A  
         __size_of_Set_KalmanFilter_Sensitivity 01E0                    _Set_KalmanFilter_Sensitivity 8C5A  
                              _Co2_measure_task 93A0                                ___lwdiv@dividend 0015  
                                   usart_getc@c 0001                                     I2C_Read@ack 000F  
                                   usart_init@b 0024                                       __pintcode 2008  
                          flash_writeBytes@flag 001A                          sensor_ADC_read@raw_adc 0025  
                                 __pmediumconst 2084                                        ?___aldiv 000F  
                                      ?___almod 000F                                        ?___fladd 008E  
                             build_response@len 00E8                                 ??_parse_command 002D  
                                      ?___fldiv 00A6                                        ?___awdiv 0015  
                                     __ptext100 C8E4                                       __ptext101 E72C  
                                     __ptext110 C82A                                       __ptext102 9A34  
                                      ?___flneg 000F                                       __ptext111 E68E  
                                     __ptext103 EF56                                       __ptext120 6B32  
                                     __ptext112 D2EA                                       __ptext104 807A  
                                     __ptext121 D11C                                       __ptext113 A2F2  
                                     __ptext105 EA0C                                       __ptext130 A81A  
                                     __ptext122 F01C                                       __ptext114 CBC0  
                                     __ptext106 ED10                                       __ptext131 BAD2  
                                     __ptext123 BBC8                                       __ptext115 B9D2  
                                     __ptext107 E1B6                                       __ptext140 B5C4  
                                     __ptext132 B196                                       __ptext124 D948  
                                     __ptext116 BE8C                                       __ptext108 EC46  
                                     __ptext141 7B02                                       __ptext133 B082  
                                     __ptext125 E02A                                       __ptext117 EB34  
                                     __ptext109 A19E                                       __ptext150 D854  
                                     __ptext142 E8F0                                       __ptext134 F03C  
                                     __ptext126 AA9E                                       __ptext118 B4BE  
                                     __ptext151 D078                                       __ptext143 EB6C  
                                     __ptext135 93A0                                       __ptext127 E7C8  
                                     __ptext119 ABDC                                       __ptext160 8C5A  
                                     __ptext152 F0B2                                       __ptext144 E938  
                                     __ptext136 C45C                                       __ptext128 CE7C  
                                     __ptext161 F05A                                       __ptext153 96F6  
                                     __ptext145 5A8C                                       __ptext137 D644  
                                     __ptext129 D9C0                                       __ptext170 DF60  
                                     __ptext162 F0EA                                       __ptext154 F186  
                                     __ptext146 5F4E                                       __ptext138 C6AA  
                                     __ptext171 F1A8                                       __ptext163 F078  
                                     __ptext155 CA54                                       __ptext147 6796  
                                     __ptext139 91EC                                       __ptext180 DB24  
                                     __ptext172 989C                                       __ptext164 C5E6  
                                     __ptext156 E43E                                       __ptext148 C99C  
                                     __ptext181 D8CE                                       __ptext173 48B6  
                                     __ptext165 E85E                                       __ptext157 F0CE  
                                     __ptext149 D752                                       __ptext190 EDF8  
                                     __ptext182 E08E                                       __ptext174 8A24  
                                     __ptext166 AD18                                       __ptext158 F104  
                                     __ptext191 F17A                                       __ptext183 F190  
                                     __ptext175 C76C                                       __ptext167 D4A0  
                                     __ptext159 BF76                                       __ptext192 DCEA  
                                     __ptext184 F19A                                       __ptext176 CFD2  
                                     __ptext168 E496                                       __ptext193 E218  
                                     __ptext185 EBA4                                       __ptext177 DDC0  
                                     __ptext169 EE7A                                       __ptext194 ECDE  
                                     __ptext186 E598                                       __ptext178 EBDC  
                                     __ptext187 ECAC                                       __ptext179 EEA0  
                                      ?___awmod 000F                                       __ptext196 E77A  
                                     __ptext188 F1AE                                       __ptext197 F11C  
                                     __ptext189 EA8A                                       __ptext198 EF7A  
                                      ?___flmul 0068                                        ?___flsub 009E  
                                      ?___fltol 001D                                     usart_putc@c 000F  
                                      ?___lldiv 000F                                 _gasSensor_calib 74FA  
                                      ?___llmod 000F                                       __npowers_ 20B9  
                              _sensor_temp_mode EAC4                                        ?___lwdiv 0015  
                                      ?___lwmod 000F                                   ??_FSR_set_LSB 0013  
                             __size_of_nvm_init 00C4                                     __pintcodelo 2018  
                          check_crc8@nbrOfBytes 0017                             _build_response$2481 00D9  
                             ??_tempSensor_read 0041                                ___almod@dividend 000F  
                                   __tdiv_to_l_ A048                                       __strclr@n 0011  
                                     __strcpy@i 0015                                        ?__strclr 000F  
                                      ?__strcpy 000F                             build_response@chNum 00E5  
                                      ?__strlen 000F                    __end_of_sens_ZeroCalibration 9ED8  
                                  ??__div_to_l_ 0017                    __end_of_tes0902_data_receive C522  
                          _USBTransferOnePacket AA9E                    __end_of_tes0902_data_parsing C76C  
                        flash_writeBytes@retval 0018                    __size_of_sens_ZeroCalib_init 001C  
                                      _BAUDCON1 000F7E                          __end_of_uart_getBuffer 2080  
                  __size_of_sens_ZeroCalib_task 00D6                      sht3x_measure_read@raw_humi 00C8  
                                      ?_isdigit 0001                                        _I2C_Read E4EE  
               __size_of_lmp91000_set_GainRLoad 005A                      sht3x_measure_read@raw_temp 00C4  
                                     _eval_poly B6CA                                        _I2C_Stop EEEA  
                         nvm_serialno_check@sno 000F                           __end_of_usedtime_task BE8C  
                  __end_of_USBCtrlTrfOutHandler DA38                           ??_USBStdGetDscHandler 000F  
                      __end_of_lmp91000_disable EBDC                                  __size_of__atof 0264  
                                __size_of__atoi 0144                                     _ep_data_out 0154  
                                __size_of__ftoa 0050                                ___lwdiv@quotient 001A  
                                __size_of__itoa 0170                        __end_of_lmp91000_isReady ED9C  
                                      ?_sprintf 00A6                                  __size_of_floor 0146  
                                __size_of_ldexp 0140                                  __size_of_frexp 00CA  
                  __size_of_USBCtrlTrfRxService 0144                                  __size_of_scale 041C  
                 USBConfigureEndpoint@direction 000F                                  ?_ads1115_SetUp 0021  
                               _buffer_de_queue D7D4                                    ??_check_crc8 0019  
                          flash_clear@startaddr 000F                           __end_of_ymd_to_scalar C82A  
                                   _g_usb_queue 0440                                     _g_usb_state 0177  
                        i1buffer_en_queue@queue 0001                                 ___aldiv@divisor 0013  
                  __size_of_USBCtrlTrfTxService 0114                                ??_gasSensor_read 0041  
                               ___aldiv@counter 0017                                  ___wmul@product 0013  
                        __size_of_nvm_clear_all 002C                                        _LATBbits 000F8A  
                                      _LATCbits 000F8B                                  ?_clear_command 0001  
                                _CMD_manual_cal D37E                                 _buffer_en_queue E72C  
                       gasSensor_read@cmp_coeff 05F2                      flash_writeBytes@flash_addr 001B  
                      flash_readBytes@num_bytes 0015                      ??_USBCtrlEPServiceComplete 0010  
                                      _IPR1bits 000F9F                                     _flash_clear D4A0  
                                      _PIE1bits 000F9D                                        _PIE2bits 000FA0  
                                i2c_readBytes@i 001C                              _Sensors_initialize EEC6  
                     Kalman_updateEstimate@pObj 00BF                                        _PIR1bits 000F9E  
                            __end_of__div_to_l_ A590                                        _PIR2bits 000FA1  
                                   _buffer_init EDF8                               ??_sht3x_heaterOff 001A  
                               _lmp91000_enable EAFC                                        _RCONbits 000FD0  
                 ?_Set_KalmanFilter_Sensitivity 0015                                   ??_putUSBUSART 0016  
                                      _UEP0bits 000F26                                       _nvm_clear F1A8  
                    _USBDeferINDataStagePackets 016C                        flash_readBytes@startaddr 000F  
                                      _SSP1CON1 000FC6                                        _SSP1CON2 000FC5  
                   __size_of_USBCheckStdRequest 0100                            _buffer_de_queue_bool D644  
                                      _SSP1STAT 000FC7                                        _UCONbits 000F65  
                    sensor_temp_fahrenheit@temp 009E                      __end_of_sht3x_measure_read 9D52  
                              CMP_temp_read@raw 00C8                                 _lmp91000_unlock E9C6  
                          _USBConfigureEndpoint CE7C                             ?_Sensors_initialize 0001  
                             gasSensor_read@raw 05F7                            gasSensor_calib@chNum 00F3  
                                _CMD_set_ABC_on CA54                __size_of_USBStdFeatureReqHandler 035A  
               __size_of_lmp91000_set_Reference 0066                         __end_of_flash_readBytes DFC6  
                             ___wmul@multiplier 000F                              __end_of_check_crc8 ED6E  
                         ?_USBTransferOnePacket 000F                                ??_WDT_initialize 000F  
                 __size_of_GasSensor_Zerofilter 026C                 __size_of_ResetBootloaderCleanly 000E  
                      __size_of_Calculate_CRC16 00DA                               _SYS_InterruptHigh 2008  
                              _get_product_desc F190                           _sensor_read_temp_humi F134  
                                 ?_CDCTxService 0001                                 ?_uart_getBuffer 0001  
                           ads1114_read@raw_adc 001D                                      ?_eval_poly 009E  
                    gasSensor_calib@gas_percent 00C3                                   ?_DelayRoutine 000F  
                                _atcommand_init F17A                             __size_of_usart_getc 0022  
                                  _RemoteWakeup 0173                             __end_of_FSR_set_LSB C2C8  
                                _atcommand_task 8E3A                             __size_of_usart_init 007A  
                              Calculate_CRC16@i 001C                                  _atcommand_type 20F5  
                           __size_of_usart_putc 001C                                __size_of_LED_Off 0006  
              Set_KalmanFilter_Sensitivity@pObj 0015                      sensor_adc_initialize@chNum 002E  
                            ?_SYS_InterruptHigh 0001                                     ??_InitTimer 000F  
                   __end_of_nvm_write_flash_all E8A8                                _usart_writeBytes E43E  
                       __end_of_USBStallHandler E218                  sht3x_measure_nonblock_read@cmd 00D0  
                             ___lmul@multiplier 000F                                     _INTCON2bits 000FF1  
                      __size_of_sensor_ADC_read 002E                                    ??_build_time 0068  
                                     copy_data0 CD36                                       copy_data1 CD56  
                           _lmp91000_get_status DB98                           __size_of_ads1114_read 0098  
                          ??_Sensors_initialize 0026                     ??_USBCtrlEPAllowStatusStage 000F  
                                  ??_led_warmup 0010                       ??_Kalman_setEstimateError 0015  
                   __end_of_USBStdSetCfgHandler BF76                          __end_of_CMD_manual_cal D410  
                             write_command@buff 0016                                        _i2c_init EA8A  
                           ??_SYS_InterruptHigh 0001                             ADCto_uVoltage@uVolt 0085  
                          buffer_en_queue@queue 000F                              __end_of_device_dsc 2344  
                                     frexp@eptr 0064                                      _EECON1bits 000FA6  
                        _lmp91000_set_GainRLoad E334                         __end_of_gasSensor_calib 7812  
                   __size_of_nvm_serialno_check 0058                         ?_USBCtrlTrfSetupHandler 0001  
                             ??_check_atcommand 0026                                 CRC_check@crcLen 002E  
                       USBStdGetStatusHandler@p 0010                                        __Hrparam 0000  
                      nvm_write_flash_all@flash 001F                                       memcpy@tmp 0019  
                                      __Lrparam 0000                          USBTransferOnePacket@ep 0017  
                             parse_command@chno 008D                               parse_command@buff 0029  
                           i2c_writeData@isStop 0013                                   gas_init@chNum 0030  
                                      _SetupPkt 000430                                      ?_nvm_clear 0001  
                         ?_buffer_de_queue_bool 000F                          __end_of_CMD_set_ABC_on CB0C  
                          ?_lmp91000_get_status 001D                           ?_USBConfigureEndpoint 000F  
                              __size_of___aldiv 010C                                __size_of___almod 00EC  
                              __size_of___fladd 04C2                                __size_of___fldiv 039C  
                              __size_of___awdiv 00C4                                ??_usart_rx_ready 0001  
                              __size_of___flneg 0038                                __size_of___awmod 00B0  
                              __size_of___flmul 042C                                __size_of___flsub 0048  
                              __size_of___fltol 0106                                __size_of___lldiv 00A4  
                             split_param@params 0015                                __size_of___llmod 0088  
                              __size_of___lwdiv 0074                                  nvm_clear_all@i 0040  
                              __size_of___lwmod 0064                                ??_usart_tx_empty 000F  
                      lmp91000_get_status@chNum 001F                        lmp91000_get_status@rBuff 0021  
                                 ??_split_param 0019                              __end_of_build_time 4F40  
                     __end_of_SYS_InterruptHigh E334                         __size_of_update_command 0CAE  
                      lmp91000_get_status@wBuff 0020                                     _fround$7087 0089  
                                   _fround$7088 0085                                   _nvm_clear_all EE26  
                                  ??_param_copy 0014                          __end_of_atcommand_init F186  
                            __end_of_led_warmup DB24                             __end_of_putUSBUSART EE7A  
                        __end_of_atcommand_task 9014                                     _line_coding 01EE  
                        __end_of_atcommand_type 2247                                  ??_CDCTxService 001A  
                                   _isleap$6519 0018                         __size_of_build_response 0F4C  
                                ??_DelayRoutine 0011                                        _exp$7093 00C3  
                                  _ads1114_read D1BC                                __size_of__strclr 0062  
                              __size_of__strcpy 0090                                __size_of__strlen 004E  
                                    sprintf@val 00BC                         __end_of_buffer_de_queue D854  
                                      ___xxtofl 91EC                         ??_sensor_adc_initialize 002D  
                      __size_of_led_zerocal_end 0058                                        __isdigit E814  
                           _ADS1115_I2C_ADDRESS 01FB                                __size_of_isdigit 0032  
                       __size_of_USBDeviceTasks 0278                                 ___lwdiv@divisor 0017  
                               ??_ads1115_SetUp 0024                                 ___lwdiv@counter 0019  
                                      _gas_init F096                                        __ptext10 ED40  
                                      __ptext11 DE2A                                        __ptext20 87C2  
                                      __ptext12 EAC4                                        __ptext21 954C  
                                      __ptext13 DD56                                        __ptext30 DFC6  
                                      __ptext22 7812                                        __ptext14 F096  
                                      __ptext31 EF9C                                        __ptext23 A95E  
                                      __ptext15 E8A8                                        __ptext40 DB98  
                                      __ptext32 EFBC                                        __ptext24 A590  
                                      __ptext16 DE92                                        __ptext41 EAFC  
                                      __ptext33 EFDC                                        __ptext25 C392  
                                      __ptext17 E27A                                        __ptext50 EEEA  
                                      __ptext42 B2A6                                        __ptext34 C126  
                                      __ptext26 B6CA                                        __ptext18 6E8C  
                                      __ptext51 EF0E                                        __ptext43 ED9C  
                                      __ptext35 E9C6                                        __ptext27 74FA  
                                      __ptext19 4F40                                        __ptext60 8E3A  
                                      __ptext52 E4EE                                        __ptext44 D6CC  
                                      __ptext36 DEFA                                        __ptext28 82F2  
                                      __ptext61 32D0                                        __ptext53 DA38  
                                      __ptext45 D1BC                                        __ptext37 E544  
                                      __ptext29 EEC6                                        __ptext70 EFFC  
                                      __ptext62 AE44                                        __ptext54 C1FA  
                                      __ptext46 E5EC                                        __ptext38 E334  
                                      __ptext71 D37E                                        __ptext63 EE26  
                                      __ptext55 9014                                        __ptext47 DC0A  
                                      __ptext39 ED6E                                        __ptext80 E6DE  
                                      __ptext72 5574                                        __ptext64 E814  
                                      __ptext56 E38E                                        __ptext48 CDD0  
                                      __ptext81 DC7A                                        __ptext73 D530  
                                      __ptext65 A6D6                                        __ptext57 DAAE  
                                      __ptext49 EA50                                        __ptext90 C522  
                                      __ptext82 D410                                        __ptext74 E154  
                                      __ptext66 855E                                        __ptext58 E3E6  
                                      __ptext91 EC7A                                        __ptext83 9ED8  
                                      __ptext75 CB0C                                        __ptext67 F16E  
                                      __ptext59 EF32                                        __ptext92 7DD4  
                                      __ptext84 BCB6                                        __ptext76 AF6A  
                                      __ptext68 F160                                        __ptext93 A048  
                                      __ptext85 B3B2                                        __ptext77 2384  
                                      __ptext69 F14A                                        __ptext94 A444  
                                      __ptext86 E63E                                        __ptext78 EDCA  
                                      __ptext95 D5BC                                        __ptext87 3F7E  
                                      __ptext79 EE52                                        __ptext96 B7CE  
                                      __ptext88 637A                                        __ptext97 CF28  
                                      __ptext89 CC72                                        __ptext98 D7D4  
                                      __ptext99 D254                                        crc8@data 000F  
                                  _SSP1CON2bits 000FC5                         __end_of_buffer_en_queue E77A  
                                      __powers_ 2085                          gasSensor_read@adc_gain 05F6  
                                      _convData 004B                    __size_of_sht3x_measure_start 0020  
                                      _led_fail E3E6                               _i2c_writeBytes_to E27A  
                               ___almod@divisor 0013                                        _led_init E598  
                                      _pow$7091 00D2                                        _pow$7092 00D6  
                                      _led_task 9014                                __size_of_sprintf 0938  
                               ___almod@counter 0017                           parse_command@paramidx 008F  
                               ??_clear_command 0013                                      _DSCONHbits 000F4D  
                               ?_CMD_manual_cal 0001                          _lmp91000_set_Reference DEFA  
                                split_param@cnt 001E                              ?_i2c_writeBytes_to 001A  
                                split_param@len 001B                         __end_of_lmp91000_enable EB34  
                   tes0902_data_receive@crc_len 0021                                  split_param@src 0013  
                                 __size_of_crc8 0068                              _ResetDeviceCleanly F16E  
                                 __size_of_fabs 0048                  __end_of_USBCtrlTrfSetupHandler D37E  
                                 __size_of_main 0046                          _ResetBootloaderCleanly F160  
                             ?_USBCtrlEPService 0001                               ?_sensMeasure_init 0001  
                             ?_sensMeasure_task 0001                            _sens_ZeroCalibration 9D52  
                          _tes0902_data_receive C45C                              ??_USBCtrlEPService 002A  
                            __end_of_param_copy D5BC                         __end_of_lmp91000_unlock EA0C  
                            ??_sensMeasure_init 0023                            _tes0902_data_parsing C6AA  
                            ??_sensMeasure_task 00F4                     ?_Kalman_setMeasurementError 000F  
                   tes0902_data_receive@rev_crc 001E                             _USBCtrlTrfInHandler B196  
                           ??_i2c_writeBytes_to 0020                             ?_ResetDeviceCleanly 0001  
                            _FlashSignatureWord 2006                                        isa$xinst 000000  
                                      _nvm_init C5E6                                        _outPipes 011B  
                       ?_Kalman_setProcessNoise 000F                           ??_lmp91000_get_status 0020  
                          _USBCtrlTrfOutHandler D9C0                                       nvm_init@i 00AE  
                                      int$flags 0051                               CMD_manual_cal@len 0020  
                               ?_CMD_set_ABC_on 0001                                ??_months_to_days 001E  
                     _USBCtrlEPAllowStatusStage BAD2                             gasSensor_calib@span 00CB  
                                    _LED_Enable ECDE                                    _SSP1STATbits 000FC7  
                                   _FSR_set_LSB C1FA                     __p_FlashSignatureWord_const 2006  
                        ??_USBTransferOnePacket 0013                                  ?_nvm_clear_all 0001  
                      __size_of_nvm_clear_flash 0198                  ??_Set_KalmanFilter_Sensitivity 0018  
                            _ads1114_read_ready D6CC                        ?_USBDisableWithLongDelay 0001  
                                      exp@coeff 22BE                          ?_sensor_read_temp_humi 00D2  
                               ?_atcommand_init 0001                                ?_flash_readBytes 000F  
                                      log@coeff 230E                                 ?_atcommand_task 0001  
                            _ymd_to_scalar$6532 0030                              ADCto_uVoltage@gain 0083  
                     _USBDeferStatusStagePacket 004D                        CDCTxService@byte_to_send 001B  
                           _changeUsbState_task EF32                                   _g_usart_queue 0377  
                                   _OSCTUNEbits 000F9B                                      _INTCONbits 000FF2  
                               _tes0902_ABC_OFF F186                                     ??_eval_poly 00A6  
                                  ?_check_param 0001                               ?_Board_initialize 0001  
                      __end_of_Co2_measure_task 954C                    lmp91000_set_Reference@source 001A  
                          ?_USBCtrlTrfInHandler 0001             Set_KalmanFilter_Sensitivity@e_level 0017  
                                      memcpy@d1 000F                                        memcpy@s1 0011  
                          ??_ResetDeviceCleanly 0011                   USBCtrlTrfTxService@byteToSend 000F  
                              parse_command@cmd 0081                   sensor_adc_initialize@adc_gain 002D  
                           ?_ads1114_read_ready 0001                                parse_command@idx 008E  
                     __end_of_i2c_writeBytes_to E2D8                                parse_command@seq 008C  
                           __end_of_split_param AF6A                                        isdigit@c 0011  
                            ??_Board_initialize 0040                                        memset@p1 000F  
                                      scale@scl 0089                                ?_USBStallHandler 0001  
                      ??_sensor_temp_fahrenheit 0041                              i2c_writeData@wrptr 0010  
                      USBStdFeatureReqHandler@p 0028                                i2c_readBytes@len 0013  
                        __size_of_years_to_days 00A6                               ??_Calculate_CRC16 0013  
                                      isleap@yr 0014                        __end_of_sensor_temp_mode EAFC  
                    flash_writeBytes@write_byte 0019                        __size_of_sensor_gas_mode 006A  
                                      intlevel1 0000                                        intlevel2 0000  
                                     sprintf@ap 00B6                                __tdiv_to_l_@exp1 001F  
                              __tdiv_to_l_@cntr 001E                                       sprintf@sp 00A6  
                             ?_flash_writeBytes 000F                          __size_of_USBDeviceInit 0154  
                              __tdiv_to_l_@quot 001A         __end_of_USER_USB_CALLBACK_EVENT_HANDLER D1BC  
      __size_of_USER_USB_CALLBACK_EVENT_HANDLER 00A0               ??_USER_USB_CALLBACK_EVENT_HANDLER 0021  
              ?_USER_USB_CALLBACK_EVENT_HANDLER 001B                 _USER_USB_CALLBACK_EVENT_HANDLER D11C  
                      i2c_writeBytes_to@addrlen 001C                        i2c_writeBytes_to@address 0020  
                              ___lwmod@dividend 000F                           __end_of_write_command EDF8  
                     flash_readBytes@flash_addr 0017                                ___lldiv@dividend 000F  
                                      mktime@tt 0060                              ??_flash_writeBytes 0017  
          SYSTEM_Initialize@pll_startup_counter 000F                                    ??_usart_getc 0001  
                          ?_changeUsbState_task 0001                                    ??_usart_init 0020  
                         ?_sens_ZeroCalibration 0001                           ?_tes0902_data_receive 0001  
                           nvm_serialno_check@i 0012                                      _RCSTA1bits 000FAC  
                                  ??_usart_putc 000F                               ??_sensor_ADC_read 0027  
                           _sens_ZeroCalib_init F0B2                           ?_tes0902_data_parsing 0001  
                      ??_sht3x_clear_status_reg 001A                             _sens_ZeroCalib_task C050  
                               _tempSensor_read C2C8                                ?_gasSensor_calib 00BF  
                           ymd_to_scalar@scalar 0032                                    _prev_average 0136  
                                    _OSCCONbits 000FD3                  __end_of_Kalman_setProcessNoise F078  
                          ??_ads1114_read_ready 001D                          ??_buffer_de_queue_bool 0013  
                        ??_USBConfigureEndpoint 0010                           ?_USBCtrlTrfOutHandler 0001  
                                   ??_nvm_clear 0040                     Kalman_setEstimateError@pObj 000F  
                           tempSensor_read@humi 00DA                                     _putUSBUSART EE52  
                           tempSensor_read@temp 00D6                     lmp91000_set_Reference@chNum 0020  
                           _USBCtrlTrfRxService A81A                              _USBWakeFromSuspend EA0C  
                  ?_sht3x_measure_nonblock_read 00CC                         _USBStdFeatureReqHandler 6B32  
                             ADCto_uVoltage@lsb 0089                     __size_of_nvm_read_flash_all 0026  
                        __size_of_i2c_readBytes 00AC                              _USBCheckCDCRequest BBC8  
                        lmp91000_set_Mode@chNum 001F                             _USBCtrlTrfTxService B082  
                               parse_command@ch 0091                           sht3x_common_read@buff 0029  
                    __size_of_SYS_InterruptHigh C32C                                    ?__tdiv_to_l_ 000F  
                         sht3x_common_read@humi 001F                           sht3x_common_read@temp 001D  
                         ads1115_SetUp@adcInput 0026                       Calculate_CRC16@crc_length 0011  
                                      sprintf@c 00CC                                        sprintf@f 00A8  
                          ?_sens_ZeroCalib_init 0001                            ?_sens_ZeroCalib_task 0001  
                           ?_USBWakeFromSuspend 0001                                ___lldiv@quotient 0017  
                               ___lwmod@divisor 0011                           ??_USBCtrlTrfInHandler 0010  
                             _lmp91000_pin_init F19A                                ?_buffer_de_queue 000F  
                         _USBAlternateInterface 01F5                                 ___lwmod@counter 0013  
                             _sht3x_common_read B8D2                               _lmp91000_set_Mode E544  
                           ?_USBCheckCDCRequest 0001                                    ___aldiv@sign 0018  
                            __end_of_usart_getc EF9C                              __end_of_usart_init D8CE  
                       __size_of_ADCto_uVoltage 0076                           ads1115_SetUp@dataRate 0023  
                                 ?_app_usb_init 0001                              __end_of_usart_putc F0EA  
                                 ?_app_usb_task 0001                             USBEnableEndpoint@ep 001A  
                               _endpoint_number 0171                                      _WDTCONbits 000FC0  
                            ?_lmp91000_pin_init 0001                              ?_sht3x_common_read 001D  
                            ?_lmp91000_set_Mode 001A                            ?_USBCtrlTrfRxService 0001  
                             ?_lmp91000_disable 0001                                   nvm_init@pdesc 00AC  
                            CMP_temp_read@chNum 00C3                                ?_buffer_en_queue 000F  
                                 ___fladd@signs 009A                                i2c_writeData@len 0012  
                                 ?_getsUSBUSART 001A                           lmp91000_set_Mode@buff 001C  
                             ?_lmp91000_isReady 0001                           lmp91000_set_Mode@mode 001B  
                               _sht3x_heaterOff EFBC                   sensor_lmp_initialize@lmp_gain 0024  
                             ??_led_zerocal_end 0010                        ?_USBCtrlEPAllowDataStage 0001  
                           gasSensor_read@chNum 05FD                              ??_lmp91000_disable 000F  
                                  ___almod@sign 0018                            ?_USBCtrlTrfTxService 0001  
                            ??_lmp91000_isReady 0022                           _sensor_lmp_initialize C126  
                                  ___fladd@aexp 009B                                    ___fladd@bexp 009C  
                              ?_lmp91000_enable 0001                             ??_lmp91000_pin_init 000F  
                           ??_sht3x_common_read 0021                    _USBStatusStageTimeoutCounter 016F  
                           ??_lmp91000_set_Mode 001C                            lmp91000_set_Mode@fet 001A  
                         ??_changeUsbState_task 000F                               ads1115_SetUp@F158 01F8  
                          lmp91000_set_Mode@reg 001E                         gasSensor_calib@baseline 00E7  
                                  ?_flash_clear 000F                            ??_USBWakeFromSuspend 0023  
                                 _led_task$2572 0012                      USBTransferOnePacket@handle 0018  
                      __end_of_get_product_desc F19A                            __end_of_CDCTxService 9BC4  
                                i2c_writeData@i 0014                                  __strcpy@source 0011  
                            ads1115_SetUp@chNum 002C                            __end_of_DelayRoutine F01C  
                         _Kalman_updateEstimate 7B02                            ??_USBCheckCDCRequest 000F  
                              ?_lmp91000_unlock 0001                        gasSensor_calib@gas_uVolt 00BF  
                                    _USB_CD_Ptr 20F3                               ads1115_SetUp@buff 0029  
                                  ?_buffer_init 000F                          gasSensor_calib@gas_ppm 00E3  
                             ads1115_SetUp@mode 0021                                  __strlen@source 000F  
                        __size_of_CMP_temp_read 010C  
